(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   3062738,      57261]
NotebookOptionsPosition[   3053798,      57099]
NotebookOutlinePosition[   3054229,      57116]
CellTagsIndexPosition[   3054186,      57113]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["DatabaseReference[]", "Subsection",
 CellChangeTimes->{
  3.879249194535678*^9, {3.8792501664718437`*^9, 
   3.879250166647365*^9}},ExpressionUUID->"df39f796-e169-4843-a78b-\
44eb8a07cc3f"],

Cell["DatabaseReference - \:043f\:043e\:0434\:043a\:043b\:044e\:0447\:0435\
\:043d\:0438\:0435 \:043a \:0411\:0414", "Text",
 CellChangeTimes->{{3.87924920507347*^9, 3.879249211415821*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"b1f53f1e-f2b2-4a38-af4f-0c235c3126ee"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gp$ref", "=", 
  RowBox[{"DatabaseReference", "[", 
   RowBox[{"<|", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<Backend\>\"", "->", "\"\<PostgreSQL\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Name\>\"", "->", "\"\<st190333_dblab3\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Port\>\"", "->", "Automatic"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"\"\<Host\>\"", "->", "\"\<localhost\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Username\>\"", "->", "\"\<st190333_\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Password\>\"", "->", "\"\<1234\>\""}]}], 
    "\[IndentingNewLine]", "|>"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.879150523529326*^9, 3.8791505235298862`*^9}, {
  3.879150554629025*^9, 3.8791505578535357`*^9}, {3.879150837843474*^9, 
  3.879150850438796*^9}, {3.8791508883240013`*^9, 3.879150906049242*^9}, {
  3.879151311215502*^9, 3.879151361262486*^9}, {3.879250084906287*^9, 
  3.879250097642262*^9}, {3.8792502031645403`*^9, 3.8792502042190742`*^9}, {
  3.879256161767099*^9, 3.879256166626466*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[1]:=",ExpressionUUID->"b0d04fce-16b6-4a52-95e1-1d3e4a3de7ea"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["DatabaseReference",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.04], {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}}}, {{{21.0264, 18.2393}, {21.0264, 15.5973}, {17.2094, 
                13.456299999999999`}, {12.500399999999999`, 
                13.456299999999999`}, {7.791399999999999, 
                13.456299999999999`}, {3.973399999999998, 15.5973}, {
                3.973399999999998, 18.2393}, {3.973399999999998, 20.8813}, {
                7.791399999999999, 23.0213}, {12.500399999999999`, 23.0213}, {
                17.2094, 23.0213}, {21.0264, 20.8813}, {21.0264, 
                18.2393}}}]}, {
               FaceForm[{
                 RGBColor[0.537, 0.537, 0.537], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmJeKA0Bmg5x3ifYbbvNHNpeB+6Qc1WA82vsTeN2nRR0
kJh6hTNjkgmcv4H5eY+GrRGcz+Tbwut/Xh+ufyJ/ldnqe9oOMPNhfFuu64sL
7hrA+YobijIm9prA9cP4MPNhfJj9MP0w96G7H8a/JV2TaPRV00E2KsX6/nlZ
OB8iz+Pwa0H65leT9eB8mH0w/qqmQM+5BqZw/Zau7kU/683h5sP4lS/VDDl6
DFHlG0zh+mF8FPOBfJj9MP2o7kO4HwAEYoXy
                "]]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}}}, {{{12.5, 23.0215}, {
                7.7909999999999995`, 23.0215}, {3.974, 20.880499999999998`}, {
                3.974, 18.2395}, {3.974, 6.7605}, {3.974, 
                4.119500000000002}, {7.7909999999999995`, 
                1.9785000000000004`}, {12.5, 1.9785000000000004`}, {17.209, 
                1.9785000000000004`}, {21.026, 4.119500000000002}, {21.026, 
                6.7605}, {21.026, 18.2395}, {21.026, 20.880499999999998`}, {
                17.209, 23.0215}, {12.5, 23.0215}}}]}, {
               FaceForm[{
                 RGBColor[0.537, 0.537, 0.537], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
                 1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 
                 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
                 1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{20.552699999999998`, 10.5869}, {20.552699999999998`,
                  8.2539}, {16.8647, 6.2819}, {12.499699999999997`, 6.2819}, {
                 8.135699999999998, 6.2819}, {4.4476999999999975`, 8.2539}, {
                 4.4476999999999975`, 10.5869}, {4.4476999999999975`, 
                 12.0379}, {5.9087, 10.3139}, {8.926699999999999, 9.1519}, {
                 12.499699999999997`, 9.1519}, {16.073699999999995`, 
                 9.1519}, {19.0907, 10.3139}, {20.552699999999998`, 
                 12.0379}}, {{20.552699999999998`, 6.7609}, {
                 20.552699999999998`, 4.4279}, {16.8647, 
                 2.4559000000000015`}, {12.499699999999997`, 
                 2.4559000000000015`}, {8.135699999999998, 
                 2.4559000000000015`}, {4.4476999999999975`, 4.4279}, {
                 4.4476999999999975`, 6.7609}, {4.4476999999999975`, 
                 8.2119}, {5.9087, 6.4879}, {8.926699999999999, 5.3259}, {
                 12.499699999999997`, 5.3259}, {16.073699999999995`, 
                 5.3259}, {19.0907, 6.4879}, {20.552699999999998`, 
                 8.2119}}, CompressedData["
1:eJxTTMoPSmViYGBQBWIQPe/sqvNX2UwdUs7Eep/YbuTAFj/DR/SPCZxvLGhm
s5fJ1KE/uERler+RA0z9/NVrb8SnIfgbmJ/3aNgi+AqOH5PPrDV0UH3SPO/s
LRMH7xPstrNVDR1O13vsr+01cUj7/iRx4TIDOD+H8+eC9Ms6cP7sZ7LLX2ho
OLy4ueZXzF0DB4Eqs9V25ioOISCL/2vA+elKORVVrgpwvsPazHuFpwTh+mF8
mPkwPsz+G9I1iUZTBeDue/H6gKXyKX64+2F8mP9gfJj/OQrXdN9+wQ8PnwAD
rZXCAgLw8IOph/EzGlmO9m/khfMDatdtS/rP7RAC1P6/AcGH2Qfjc0rPi9Pk
lobzy+YsUt5Zw+dwbMbuaRPOyzpMANn//7s9LHxgfOWdf9q/dBvC+cDYCXtT
bwrXD+PDzIfxYfbD+DD3qfNzb13miUgv6OkHACYRDMY=
                 "]}]}, {
               FaceForm[{
                 RGBColor[0.8670000000000001, 0.067, 0.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 
                 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
                 1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}}, {CompressedData["
1:eJxTTMoPSmViYGAwBmIQ7fgx+UxstoGDtP5dFTZGXYdHx2fsniag4/AmcIdc
q7aBA1eGUk5FlIHDl79XKl6yYfIb1A61LS83dGBrnOrc/UbfYXbo/NVrdxjC
5bN8P/cFfzF0aBe7ee67sIHDPoOZWhKmxg5HFTYUZQgaEuQnx95xY7bQd/h0
yTdJIMLIIc+kYbvDIR2Hypdqhhw8xg5OazPvFXLpOjglPL2gZG3iwOjbwuuf
r+Ngc9+/d/o5UzhfFeTA06YORV19Tz7N13LY9hnoQE9TB6Durr4ULYfMiW9r
7E1NHW5J1yQaTdVwKN83X0p/r4lDHND6itPqDrd/1mXtKTF12Lj/zTybHHWH
DpB/Nps6LH/hofd/oRrE/GwzB7Hfp9+ddFZxKM4AGnjf1EHkgsuNDyVKDg+A
zsn7ZOIANI1bRUPR4fRC122f7xo7PPkkfyn/voIDKPhyjhs7uN748MVrpoKD
bFSK9f31xg4g63RCFByaD5xa6DrN2GG+jc6VWWoKDkIggVZjBzGPgD8Sn+Ud
RNe5P6wqMXZwWHJ/H98ceYdOR2CAJBk7aCzo3PDwpZzDGhmggfbGDmu2JdXf
tJVzAAXXbUljBy431VKmWbJQ9xk5eFU36/uoyToIRFhuOXHNyGEZyLjNMg7v
gKETt8vIIY0hv5HFVQYSPnONHBJCgtQXdEo6+JiDbDR04JCeF6fpLe6wt2Sy
BIuYocO71wcslb1EIe4LAaYH7W/T7woLOySBLHhh4PAGJH9K0IFJG5hC+gzh
fLD5tkZwPth9k0wc9h0UVwt2VYCEd7eZg8W1o7kmDJpw/uSVTYGedw3g/DJ/
ObGsXhO4fhgfZj6M/2H5MW/zlQYObEIi9sfuGDn0Tc8Tam7Qc0DPHwDu+047

                 "], {{12.500399999999999`, 20.349}, {13.1264, 20.689}, {
                 13.2204, 20.739}, {13.8234, 21.064}, {13.8704, 20.414}, {
                 13.8474, 20.076}, {13.776399999999999`, 
                 19.281000000000002`}, {13.4294, 19.478}, {
                 12.732399999999998`, 19.725}, {12.732399999999998`, 
                 19.725}, {12.732399999999998`, 19.725}, {12.593399999999999`,
                  20.18}, {12.500399999999999`, 20.349}}, CompressedData["
1:eJxTTMoPSmViYGCwAGIQ/UHMI+DPDAmHtteBO+Rc9R2u7HksIusp7fBNI6b/
kKmhQ9RloMBcOYcdcq2vA38YOQgu3XtQ/JmiQ9aekskSLcYOTY+Oz9gdpgyR
tzBxeDAHpELZocsx4ekFJ1OHePZzkoFRag429/17p58zdQhmXTzJilEdLp/a
kRx7h03DIeTx0tlHFEwc6np2ZnPu1HC487Mua88UYwcNkMBJbQe3bZ//Xtlh
5KDrLPP6kZmBQ+NU5+6c5YYOIvbH7mw9YujQfODUQlczQ4dTRkc26r0zdEgS
iLDcomHo8JP/5fb1ykYOb4Deaz1tgME3BirPazZ0eFdjbxoXZeBwZdYz2eUr
VB2qRda5P9xl4ABy/q1oVYdXaoYca/YYOJyYsXvaBH5VBzuu64sL9ho4/Dr9
7uThQypw/q5szp8LnivD+Tc+fPGKZFN28OJh0m7fZuDAXMGtovFP0QEkbbvK
wMF//ZTUjsVKDs8uKN3+KWfoALL+BYeKAzD0v2rUEOZDIkDJYZErMIC2GELD
X9FBHhgdO/YZOmwV/X36HaeSg+KGooyJbw0dGraDdCg5gIKzQtPI4drRXJOG
70oO6kDvyVgZOcwFaZ+u5LDq4yXfJAMjh4gVpmetz8k7zJoJBDeB4fvUfsl9
O3mI/ARDh43738yzeaPgAPKeWKWhw6V8YIzfVHRwAkavUjRhfk2iUahBloLD
L2B0l3w2cFj2wkPvv6KCQzHQtTX2mHxw+KarOJROlmAJyzNwmApKQHPUIe4J
MHDIAUlvVneYApTm8zVwkFsONGA/gh93x4254jSCDzL9b5kmJDw8DRwMtFYK
X2DRc3gATK55QToOoOD2yNNxSAalJw4dhwn8VWar92lBwveetoMFKAAZNOH8
eTY6wCSkDOdvePhy6qYeOYed4Pyh64Ce3wCDEYra
                 "], {{12.500399999999999`, 23.5}, {7.4533999999999985`, 
                 23.5}, {3.500399999999999, 21.189}, {3.500399999999999, 
                 18.239}, {3.500399999999999, 15.289000000000001`}, {
                 7.4533999999999985`, 12.979000000000001`}, {
                 12.500399999999999`, 12.979000000000001`}, {17.5464, 
                 12.979000000000001`}, {21.5004, 15.289000000000001`}, {
                 21.5004, 18.239}, {21.5004, 21.189}, {17.5464, 23.5}, {
                 12.500399999999999`, 23.5}}}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}}}, {{{14.2646, 17.915}, {13.7296, 18.136}, {13.1496, 
                18.369999999999997`}, {12.3616, 18.305999999999997`}, {
                12.2906, 18.188}, {12.2226, 18.096999999999998`}, {12.1756, 
                17.967}, {12.5466, 17.992}, {12.9416, 17.915}, {13.3826, 
                17.771}, {13.8006, 17.837}, {13.8476, 17.849999999999998`}, {
                14.2646, 17.915}}}]}}, {
             ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], AspectRatio -> Automatic, 
              ImageSize -> {25., 25.}, PlotRange -> {{0., 25.}, {0., 25.}}}], 
            
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"st190333_dblab3\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Backend: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"PostgreSQL\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.04], {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}}}, {{{21.0264, 18.2393}, {21.0264, 15.5973}, {17.2094, 
                13.456299999999999`}, {12.500399999999999`, 
                13.456299999999999`}, {7.791399999999999, 
                13.456299999999999`}, {3.973399999999998, 15.5973}, {
                3.973399999999998, 18.2393}, {3.973399999999998, 20.8813}, {
                7.791399999999999, 23.0213}, {12.500399999999999`, 23.0213}, {
                17.2094, 23.0213}, {21.0264, 20.8813}, {21.0264, 
                18.2393}}}]}, {
               FaceForm[{
                 RGBColor[0.537, 0.537, 0.537], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmJeKA0Bmg5x3ifYbbvNHNpeB+6Qc1WA82vsTeN2nRR0
kJh6hTNjkgmcv4H5eY+GrRGcz+Tbwut/Xh+ufyJ/ldnqe9oOMPNhfFuu64sL
7hrA+YobijIm9prA9cP4MPNhfJj9MP0w96G7H8a/JV2TaPRV00E2KsX6/nlZ
OB8iz+Pwa0H65leT9eB8mH0w/qqmQM+5BqZw/Zau7kU/683h5sP4lS/VDDl6
DFHlG0zh+mF8FPOBfJj9MP2o7kO4HwAEYoXy
                "]]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}}}, {{{12.5, 23.0215}, {
                7.7909999999999995`, 23.0215}, {3.974, 20.880499999999998`}, {
                3.974, 18.2395}, {3.974, 6.7605}, {3.974, 
                4.119500000000002}, {7.7909999999999995`, 
                1.9785000000000004`}, {12.5, 1.9785000000000004`}, {17.209, 
                1.9785000000000004`}, {21.026, 4.119500000000002}, {21.026, 
                6.7605}, {21.026, 18.2395}, {21.026, 20.880499999999998`}, {
                17.209, 23.0215}, {12.5, 23.0215}}}]}, {
               FaceForm[{
                 RGBColor[0.537, 0.537, 0.537], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
                 1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 
                 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
                 1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{20.552699999999998`, 10.5869}, {20.552699999999998`,
                  8.2539}, {16.8647, 6.2819}, {12.499699999999997`, 6.2819}, {
                 8.135699999999998, 6.2819}, {4.4476999999999975`, 8.2539}, {
                 4.4476999999999975`, 10.5869}, {4.4476999999999975`, 
                 12.0379}, {5.9087, 10.3139}, {8.926699999999999, 9.1519}, {
                 12.499699999999997`, 9.1519}, {16.073699999999995`, 
                 9.1519}, {19.0907, 10.3139}, {20.552699999999998`, 
                 12.0379}}, {{20.552699999999998`, 6.7609}, {
                 20.552699999999998`, 4.4279}, {16.8647, 
                 2.4559000000000015`}, {12.499699999999997`, 
                 2.4559000000000015`}, {8.135699999999998, 
                 2.4559000000000015`}, {4.4476999999999975`, 4.4279}, {
                 4.4476999999999975`, 6.7609}, {4.4476999999999975`, 
                 8.2119}, {5.9087, 6.4879}, {8.926699999999999, 5.3259}, {
                 12.499699999999997`, 5.3259}, {16.073699999999995`, 
                 5.3259}, {19.0907, 6.4879}, {20.552699999999998`, 
                 8.2119}}, CompressedData["
1:eJxTTMoPSmViYGBQBWIQPe/sqvNX2UwdUs7Eep/YbuTAFj/DR/SPCZxvLGhm
s5fJ1KE/uERler+RA0z9/NVrb8SnIfgbmJ/3aNgi+AqOH5PPrDV0UH3SPO/s
LRMH7xPstrNVDR1O13vsr+01cUj7/iRx4TIDOD+H8+eC9Ms6cP7sZ7LLX2ho
OLy4ueZXzF0DB4Eqs9V25ioOISCL/2vA+elKORVVrgpwvsPazHuFpwTh+mF8
mPkwPsz+G9I1iUZTBeDue/H6gKXyKX64+2F8mP9gfJj/OQrXdN9+wQ8PnwAD
rZXCAgLw8IOph/EzGlmO9m/khfMDatdtS/rP7RAC1P6/AcGH2Qfjc0rPi9Pk
lobzy+YsUt5Zw+dwbMbuaRPOyzpMANn//7s9LHxgfOWdf9q/dBvC+cDYCXtT
bwrXD+PDzIfxYfbD+DD3qfNzb13miUgv6OkHACYRDMY=
                 "]}]}, {
               FaceForm[{
                 RGBColor[0.8670000000000001, 0.067, 0.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 
                 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
                 1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}}, {CompressedData["
1:eJxTTMoPSmViYGAwBmIQ7fgx+UxstoGDtP5dFTZGXYdHx2fsniag4/AmcIdc
q7aBA1eGUk5FlIHDl79XKl6yYfIb1A61LS83dGBrnOrc/UbfYXbo/NVrdxjC
5bN8P/cFfzF0aBe7ee67sIHDPoOZWhKmxg5HFTYUZQgaEuQnx95xY7bQd/h0
yTdJIMLIIc+kYbvDIR2Hypdqhhw8xg5OazPvFXLpOjglPL2gZG3iwOjbwuuf
r+Ngc9+/d/o5UzhfFeTA06YORV19Tz7N13LY9hnoQE9TB6Durr4ULYfMiW9r
7E1NHW5J1yQaTdVwKN83X0p/r4lDHND6itPqDrd/1mXtKTF12Lj/zTybHHWH
DpB/Nps6LH/hofd/oRrE/GwzB7Hfp9+ddFZxKM4AGnjf1EHkgsuNDyVKDg+A
zsn7ZOIANI1bRUPR4fRC122f7xo7PPkkfyn/voIDKPhyjhs7uN748MVrpoKD
bFSK9f31xg4g63RCFByaD5xa6DrN2GG+jc6VWWoKDkIggVZjBzGPgD8Sn+Ud
RNe5P6wqMXZwWHJ/H98ceYdOR2CAJBk7aCzo3PDwpZzDGhmggfbGDmu2JdXf
tJVzAAXXbUljBy431VKmWbJQ9xk5eFU36/uoyToIRFhuOXHNyGEZyLjNMg7v
gKETt8vIIY0hv5HFVQYSPnONHBJCgtQXdEo6+JiDbDR04JCeF6fpLe6wt2Sy
BIuYocO71wcslb1EIe4LAaYH7W/T7woLOySBLHhh4PAGJH9K0IFJG5hC+gzh
fLD5tkZwPth9k0wc9h0UVwt2VYCEd7eZg8W1o7kmDJpw/uSVTYGedw3g/DJ/
ObGsXhO4fhgfZj6M/2H5MW/zlQYObEIi9sfuGDn0Tc8Tam7Qc0DPHwDu+047

                 "], {{12.500399999999999`, 20.349}, {13.1264, 20.689}, {
                 13.2204, 20.739}, {13.8234, 21.064}, {13.8704, 20.414}, {
                 13.8474, 20.076}, {13.776399999999999`, 
                 19.281000000000002`}, {13.4294, 19.478}, {
                 12.732399999999998`, 19.725}, {12.732399999999998`, 
                 19.725}, {12.732399999999998`, 19.725}, {12.593399999999999`,
                  20.18}, {12.500399999999999`, 20.349}}, CompressedData["
1:eJxTTMoPSmViYGCwAGIQ/UHMI+DPDAmHtteBO+Rc9R2u7HksIusp7fBNI6b/
kKmhQ9RloMBcOYcdcq2vA38YOQgu3XtQ/JmiQ9aekskSLcYOTY+Oz9gdpgyR
tzBxeDAHpELZocsx4ekFJ1OHePZzkoFRag429/17p58zdQhmXTzJilEdLp/a
kRx7h03DIeTx0tlHFEwc6np2ZnPu1HC487Mua88UYwcNkMBJbQe3bZ//Xtlh
5KDrLPP6kZmBQ+NU5+6c5YYOIvbH7mw9YujQfODUQlczQ4dTRkc26r0zdEgS
iLDcomHo8JP/5fb1ykYOb4Deaz1tgME3BirPazZ0eFdjbxoXZeBwZdYz2eUr
VB2qRda5P9xl4ABy/q1oVYdXaoYca/YYOJyYsXvaBH5VBzuu64sL9ho4/Dr9
7uThQypw/q5szp8LnivD+Tc+fPGKZFN28OJh0m7fZuDAXMGtovFP0QEkbbvK
wMF//ZTUjsVKDs8uKN3+KWfoALL+BYeKAzD0v2rUEOZDIkDJYZErMIC2GELD
X9FBHhgdO/YZOmwV/X36HaeSg+KGooyJbw0dGraDdCg5gIKzQtPI4drRXJOG
70oO6kDvyVgZOcwFaZ+u5LDq4yXfJAMjh4gVpmetz8k7zJoJBDeB4fvUfsl9
O3mI/ARDh43738yzeaPgAPKeWKWhw6V8YIzfVHRwAkavUjRhfk2iUahBloLD
L2B0l3w2cFj2wkPvv6KCQzHQtTX2mHxw+KarOJROlmAJyzNwmApKQHPUIe4J
MHDIAUlvVneYApTm8zVwkFsONGA/gh93x4254jSCDzL9b5kmJDw8DRwMtFYK
X2DRc3gATK55QToOoOD2yNNxSAalJw4dhwn8VWar92lBwveetoMFKAAZNOH8
eTY6wCSkDOdvePhy6qYeOYed4Pyh64Ce3wCDEYra
                 "], {{12.500399999999999`, 23.5}, {7.4533999999999985`, 
                 23.5}, {3.500399999999999, 21.189}, {3.500399999999999, 
                 18.239}, {3.500399999999999, 15.289000000000001`}, {
                 7.4533999999999985`, 12.979000000000001`}, {
                 12.500399999999999`, 12.979000000000001`}, {17.5464, 
                 12.979000000000001`}, {21.5004, 15.289000000000001`}, {
                 21.5004, 18.239}, {21.5004, 21.189}, {17.5464, 23.5}, {
                 12.500399999999999`, 23.5}}}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}}}, {{{14.2646, 17.915}, {13.7296, 18.136}, {13.1496, 
                18.369999999999997`}, {12.3616, 18.305999999999997`}, {
                12.2906, 18.188}, {12.2226, 18.096999999999998`}, {12.1756, 
                17.967}, {12.5466, 17.992}, {12.9416, 17.915}, {13.3826, 
                17.771}, {13.8006, 17.837}, {13.8476, 17.849999999999998`}, {
                14.2646, 17.915}}}]}}, {
             ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], AspectRatio -> Automatic, 
              ImageSize -> {25., 25.}, PlotRange -> {{0., 25.}, {0., 25.}}}], 
            
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"st190333_dblab3\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Backend: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"PostgreSQL\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Host: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"localhost\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"ID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"1hvdfw3sirsl\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Password: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"********\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Username: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"st190333_\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  DatabaseReference[<|
   "Backend" -> "PostgreSQL", "Name" -> "st190333_dblab3", "Port" -> 
    Automatic, "Host" -> "localhost", "Username" -> "st190333_", "Password" -> 
    "1234"|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.879150532134506*^9, 3.879150558654399*^9}, 
   3.879150588731045*^9, {3.879150841956934*^9, 3.879150851054442*^9}, 
   3.879150907527155*^9, {3.8791513196690893`*^9, 3.8791513617889633`*^9}, 
   3.879248979538372*^9, 3.879250102981159*^9, 3.879250208018454*^9, 
   3.879250717076377*^9, 3.879251378388486*^9, 3.879256169247966*^9, 
   3.8792604705751667`*^9, 3.879265991757412*^9, 3.879266109877585*^9, 
   3.8792665587818003`*^9, 3.8792954971984253`*^9, 3.879295801208392*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"2fa499fb-283c-4288-9656-757a6759404e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["DatabaseConnect[ref]", "Subsection",
 CellChangeTimes->{
  3.8792492263625174`*^9, {3.879250158361434*^9, 
   3.879250159588862*^9}},ExpressionUUID->"dcbd6a14-e461-4254-9cb8-\
0d7b5dc6ba4c"],

Cell["\<\
DatabaseConnect - \:043f\:0440\:043e\:0432\:0435\:0440\:043a\:0430 \:0443\
\:0441\:043f\:0435\:0448\:043d\:043e\:0441\:0442\:0438 \:043f\:043e\:0434\
\:043a\:043b\:044e\:0447\:0435\:043d\:0438\:044f \:043a \:0431\:0430\:0437\
\:0435 \:0434\:0430\:043d\:043d\:044b\:0445\
\>", "Text",
 CellChangeTimes->{{3.879249244793478*^9, 3.879249259440176*^9}, {
  3.879249290291151*^9, 3.8792492934297857`*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"88260de4-0e24-4766-a4aa-ab9cfe160e7e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DatabaseConnect", "[", "gp$ref", "]"}]], "Input",
 CellChangeTimes->{{3.8791505331979113`*^9, 3.879150544694994*^9}, 
   3.87915136658869*^9, 3.8792501091672277`*^9, 3.879250212045064*^9},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[2]:=",ExpressionUUID->"0ce54707-4929-4a15-bb49-9fe4bf9111c5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Success",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            FrameBox[
             StyleBox["\"\[Checkmark]\"", 
              Directive[
               RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
               25], StripOnInput -> False], ContentPadding -> False, 
             FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                 "\"Database connection was successful.\"", 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"DatabaseSuccess\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            FrameBox[
             StyleBox["\"\[Checkmark]\"", 
              Directive[
               RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
               25], StripOnInput -> False], ContentPadding -> False, 
             FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                 "\"Database connection was successful.\"", 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"DatabaseSuccess\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Success[
  "DatabaseSuccess", <|
   "MessageTemplate" :> MessageName[DatabaseReference, "conn"], 
    "MessageParameters" :> {}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8791505465755453`*^9, 3.8791505918142757`*^9}, {
   3.879150845388877*^9, 3.8791508556567507`*^9}, 3.87915091020324*^9, 
   3.879151367578497*^9, 3.879248982275118*^9, 3.879250110209464*^9, 
   3.879250212505747*^9, 3.8792507228633947`*^9, 3.879251382464718*^9, 
   3.8792561756285057`*^9, 3.879260473043336*^9, 3.879265996726589*^9, 
   3.879266112268095*^9, 3.87926656352136*^9, 3.879295499441292*^9, 
   3.879295804560182*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"9269b8cf-d4aa-4ad4-9bc3-3a1e3aeef618"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["ref[\[OpenCurlyDoubleQuote]Connected\[CloseCurlyDoubleQuote]]", \
"Subsection",
 CellChangeTimes->{{3.87924987931949*^9, 3.879249893456161*^9}, {
  3.879250148701228*^9, 
  3.879250151056642*^9}},ExpressionUUID->"c9dbd5ff-2f79-4e77-a2df-\
6fe23238cec9"],

Cell["\<\
DatabaseReference[][\"Connected\"] - \:0443\:0431\:0435\:0434\:0438\:0442\
\:044c\:0441\:044f, \:0447\:0442\:043e \:043f\:043e\:0434\:043a\:043b\:044e\
\:0447\:0435\:043d\:044b \:043a \:0411\:0414\
\>", "Text",
 CellChangeTimes->{{3.879249901056199*^9, 3.879249915688074*^9}, {
  3.879250127020773*^9, 3.879250135331355*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"b6703469-7c34-472f-8e15-eaf6c90c15a8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gp$ref", "[", "\"\<Connected\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.879150931555765*^9, 3.879150940275773*^9}, 
   3.879151372518202*^9, 3.879250123669437*^9, {3.879256188978238*^9, 
   3.879256190618401*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[3]:=",ExpressionUUID->"15b4bb63-0eb1-47e8-bb2e-66913b061d9b"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.8791509406504393`*^9, 3.879151373715255*^9, 3.879248983480247*^9, 
   3.8792501241782837`*^9, 3.879250727312502*^9, 3.8792513841420193`*^9, {
   3.879256179085641*^9, 3.879256191397277*^9}, 3.879260476085588*^9, 
   3.879266000019038*^9, 3.879266116494475*^9, 3.879266566061903*^9, 
   3.879295501552196*^9, 3.879295806868298*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"b2f58417-70c2-4f1c-a280-8b7269e0dff0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
ref[{\"Username\", \"Password\", \"Host\", \"Port\", \"Backend\", \"Name\"}]\
\>", "Subsection",
 CellChangeTimes->{{3.8792499266294127`*^9, 3.879249945399514*^9}, {
  3.879250170852687*^9, 
  3.879250171153018*^9}},ExpressionUUID->"355a043f-aaf2-4b92-b259-\
fe5ba87e7aa6"],

Cell["\<\
DatabaseReference[][{\"Username\", \"Password\", \"Host\", \"Port\", \
\"Backend\", \"Name\"}] - \:043f\:043e\:043b\:0443\:0447\:0438\:0442\:044c \
\:043e\:043f\:0440\:0435\:0434\:0435\:043b\:0435\:043d\:044b\:0435 \:0441\
\:0432\:043e\:0439\:0441\:0442\:0432\:0430 \:043f\:043e\:0434\:043a\:043b\
\:044e\:0447\:0435\:043d\:0438\:044f\
\>", "Text",
 CellChangeTimes->{{3.879249956726913*^9, 3.8792499567286367`*^9}, {
  3.879250001423917*^9, 3.879250016741493*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"6fe6f034-a7e4-44bd-a1d9-c828a63530b4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gp$ref", "[", 
  RowBox[{"{", 
   RowBox[{
   "\"\<Username\>\"", ",", " ", "\"\<Password\>\"", ",", "\"\<Host\>\"", ",",
     " ", "\"\<Port\>\"", ",", " ", "\"\<Backend\>\"", ",", " ", 
    "\"\<Name\>\""}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.879150951938592*^9, 3.879151009915263*^9}, {
   3.8791510563090343`*^9, 3.8791510598011513`*^9}, {3.879151111632661*^9, 
   3.8791511155810633`*^9}, {3.879151375552601*^9, 3.879151381954108*^9}, 
   3.8792501860014887`*^9, 3.879250217277995*^9},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[4]:=",ExpressionUUID->"19642b4b-37ba-4517-a938-a40983bab49e"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Username\"\>", "\[Rule]", "\<\"st190333_\"\>"}], ",", 
   RowBox[{"\<\"Password\"\>", "\[Rule]", "\<\"1234\"\>"}], ",", 
   RowBox[{"\<\"Host\"\>", "\[Rule]", "\<\"localhost\"\>"}], ",", 
   RowBox[{"\<\"Port\"\>", "\[Rule]", "None"}], ",", 
   RowBox[{"\<\"Backend\"\>", "\[Rule]", "\<\"PostgreSQL\"\>"}], ",", 
   RowBox[{"\<\"Name\"\>", "\[Rule]", "\<\"st190333_dblab3\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.879151060389131*^9, 3.879151116181219*^9, 
  3.879151382823235*^9, 3.879248985203991*^9, 3.879250186566272*^9, 
  3.879250217651594*^9, 3.879250731752047*^9, 3.87925138694459*^9, 
  3.879256195945664*^9, 3.879260482087414*^9, 3.8792660034446373`*^9, 
  3.8792661189405212`*^9, 3.879266570296969*^9, 3.879295505359932*^9, 
  3.879295810154907*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"f74c670e-0c44-45be-8e68-35ba2aab17d2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["RelationalDatabase[ref]", "Subsection",
 CellChangeTimes->{
  3.879249348282902*^9, {3.879250177940517*^9, 
   3.879250178927534*^9}},ExpressionUUID->"5acb18eb-ce9d-4cdb-b398-\
e9af229dd755"],

Cell["RelationalDatabase - \:043f\:043e\:0441\:043c\:043e\:0442\:0440\:0435\
\:0442\:044c \:043a\:0430\:043a\:0438\:0435 \:0442\:0430\:0431\:043b\:0438\
\:0446\:044b \:0435\:0441\:0442\:044c \:0432 \:0411\:0414", "Text",
 CellChangeTimes->{{3.8792493548612823`*^9, 3.879249366577034*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"156e29bc-3b0b-4814-b22f-dca48fb95ff3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RelationalDatabase", "[", "gp$ref", "]"}]], "Input",
 CellChangeTimes->{{3.879151387565991*^9, 3.879151427363307*^9}, {
  3.879250192471982*^9, 3.87925024550006*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[5]:=",ExpressionUUID->"d403b57f-b64a-4e42-a7ef-5827adbcd8d2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["RelationalDatabase",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.04], {
               FaceForm[{
                 RGBColor[0.651, 0.651, 0.651], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                 1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {0, 
                 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{20.5, 4.}, {20.5, 3.724}, {20.276, 3.5}, {20., 
                 3.5}, {6., 3.5}, {5.724, 3.5}, {5.5, 3.724}, {5.5, 4.}, {5.5,
                  21.}, {5.5, 21.276}, {5.724, 21.5}, {6., 21.5}, {20., 
                 21.5}, {20.276, 21.5}, {20.5, 21.276}, {20.5, 21.}}, {{20.5, 
                 22.5}, {5.5, 22.5}, {4.947999999999999, 22.5}, {4.5, 
                 22.053}, {4.5, 21.5}, {4.5, 3.5}, {4.5, 2.947}, {
                 4.947999999999999, 2.5}, {5.5, 2.5}, {20.5, 2.5}, {21.052, 
                 2.5}, {21.5, 2.947}, {21.5, 3.5}, {21.5, 21.5}, {21.5, 
                 22.053}, {21.052, 22.5}, {20.5, 22.5}}}]}, {
               FaceForm[{
                 RGBColor[0.8670000000000001, 0.067, 0.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1,
                 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
                3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3,
                 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
                0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{
                0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
                1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1,
                 0}, {1, 3, 3}}}, CompressedData["
1:eJxtj69Lg1EYhT80CZ84xjSM68VN5tjGfjnFYPksJkUwiRYRrQoGs2Ay2AUR
m1YRGVjEYBCrf4DJ7L/g2N05l/egMC7Pju/Zc0oHJ9tH40mSTAw+U4PPWII/
lw2f8+XwJjny9XH+4u1zUvI0az7d/j6sRw5v5K/Ng9zOy5LcL0k/2JGfP85e
74qzknv2ge3vefrYe+S6D9wTn574IsfeyOGNHPwW5X5R+sGObH2Re/bZvT0y
fOw9ct0H7opPV3yRY2/k8EYOfh2570g/2JGtL3LPPru3S4aPvUeu+0aczFuf
ARtf5mm2d7j6vXVVlr2R72/e5x5PS3Jfkn6wIxtf5p59dm+ZDB97D1/dB66K
T1V8kWPvguyNHPwqcl+RfrAjW1/knn127wIZPvYevroP3BCfhvgix9667I0c
/GpyX5N+sCNbX+SefXZvnQwfew9f3Qdui09bfJGn2e6wvyV7Iwe/ptw3pR/s
yNYXuWef3dsiw8few1f3gWfEZ0Z8kaej3mnZWyBvrFyu7f/k5T4v/WBHtr7I
Pfvs3gIZPvYevrrPy/foL8p9Uf4PnCPbfchT9oFtT5r1R79j7+GVE46e1s/z
7f/7vcv+AMXQVQk=
                "]]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{20.5, 4.}, {20.5, 
                3.724}, {20.276, 3.5}, {20., 3.5}, {6., 3.5}, {5.724, 3.5}, {
                5.5, 3.724}, {5.5, 4.}, {5.5, 21.}, {5.5, 21.276}, {5.724, 
                21.5}, {6., 21.5}, {20., 21.5}, {20.276, 21.5}, {20.5, 
                21.276}, {20.5, 21.}}}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}}}, {{{13., 18.}, {10.239, 18.}, {8., 
                17.015}, {8., 15.8}, {8., 9.2}, {8., 7.984999999999999}, {
                10.239, 7.}, {13., 7.}, {15.761, 7.}, {18., 
                7.984999999999999}, {18., 9.2}, {18., 15.8}, {18., 17.015}, {
                15.761, 18.}, {13., 18.}}}]}, {
               FaceForm[{
                 RGBColor[0.537, 0.537, 0.537], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                 0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
                 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                 0}, {1, 3, 3}}}, {{{13., 10.8633}, {10.314, 10.8633}, {8.6, 
                 11.833300000000001`}, {8.6, 12.500300000000001`}, {8.6, 
                 14.1133}, {9.586, 13.4603}, {11.151, 13.0463}, {13., 
                 13.0463}, {14.849, 13.0463}, {16.414, 13.4603}, {17.4, 
                 14.1133}, {17.4, 12.500300000000001`}, {17.4, 
                 11.833300000000001`}, {15.686, 10.8633}, {13., 10.8633}}, {{
                 17.4, 9.2273}, {17.4, 8.560300000000002}, {15.686, 7.5913}, {
                 13., 7.5913}, {10.314, 7.5913}, {8.6, 8.560300000000002}, {
                 8.6, 9.2273}, {8.6, 10.8413}, {9.586, 10.1873}, {11.151, 
                 9.772300000000001}, {13., 9.772300000000001}, {14.849, 
                 9.772300000000001}, {16.414, 10.1873}, {17.4, 10.8413}}, {{
                 13., 17.4093}, {15.686, 17.4093}, {17.4, 
                 16.439300000000003`}, {17.4, 15.772300000000001`}, {17.4, 
                 15.1053}, {15.686, 14.1363}, {13., 14.1363}, {10.314, 
                 14.1363}, {8.6, 15.1053}, {8.6, 15.772300000000001`}, {8.6, 
                 16.439300000000003`}, {10.314, 17.4093}, {13., 17.4093}}, {{
                 13., 18.5003}, {9.864, 18.5003}, {7.5, 17.3273}, {7.5, 
                 15.772300000000001`}, {7.5, 9.2273}, {7.5, 
                 7.673300000000001}, {9.864, 6.500300000000001}, {13., 
                 6.500300000000001}, {16.136, 6.500300000000001}, {18.5, 
                 7.673300000000001}, {18.5, 9.2273}, {18.5, 
                 15.772300000000001`}, {18.5, 17.3273}, {16.136, 18.5003}, {
                 13., 18.5003}}}]}}, {
             ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], AspectRatio -> Automatic, 
              ImageSize -> {25., 25.}, PlotRange -> {{0., 25.}, {0., 25.}}}], 
            
            GridBox[{{
               RowBox[{
                 TagBox["\"Table count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["11", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Backend: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"PostgreSQL\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.04], {
               FaceForm[{
                 RGBColor[0.651, 0.651, 0.651], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                 1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {0, 
                 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{20.5, 4.}, {20.5, 3.724}, {20.276, 3.5}, {20., 
                 3.5}, {6., 3.5}, {5.724, 3.5}, {5.5, 3.724}, {5.5, 4.}, {5.5,
                  21.}, {5.5, 21.276}, {5.724, 21.5}, {6., 21.5}, {20., 
                 21.5}, {20.276, 21.5}, {20.5, 21.276}, {20.5, 21.}}, {{20.5, 
                 22.5}, {5.5, 22.5}, {4.947999999999999, 22.5}, {4.5, 
                 22.053}, {4.5, 21.5}, {4.5, 3.5}, {4.5, 2.947}, {
                 4.947999999999999, 2.5}, {5.5, 2.5}, {20.5, 2.5}, {21.052, 
                 2.5}, {21.5, 2.947}, {21.5, 3.5}, {21.5, 21.5}, {21.5, 
                 22.053}, {21.052, 22.5}, {20.5, 22.5}}}]}, {
               FaceForm[{
                 RGBColor[0.8670000000000001, 0.067, 0.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1,
                 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
                3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3,
                 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
                0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{
                0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
                1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1,
                 0}, {1, 3, 3}}}, CompressedData["
1:eJxtj69Lg1EYhT80CZ84xjSM68VN5tjGfjnFYPksJkUwiRYRrQoGs2Ay2AUR
m1YRGVjEYBCrf4DJ7L/g2N05l/egMC7Pju/Zc0oHJ9tH40mSTAw+U4PPWII/
lw2f8+XwJjny9XH+4u1zUvI0az7d/j6sRw5v5K/Ng9zOy5LcL0k/2JGfP85e
74qzknv2ge3vefrYe+S6D9wTn574IsfeyOGNHPwW5X5R+sGObH2Re/bZvT0y
fOw9ct0H7opPV3yRY2/k8EYOfh2570g/2JGtL3LPPru3S4aPvUeu+0aczFuf
ARtf5mm2d7j6vXVVlr2R72/e5x5PS3Jfkn6wIxtf5p59dm+ZDB97D1/dB66K
T1V8kWPvguyNHPwqcl+RfrAjW1/knn127wIZPvYevroP3BCfhvgix9667I0c
/GpyX5N+sCNbX+SefXZvnQwfew9f3Qdui09bfJGn2e6wvyV7Iwe/ptw3pR/s
yNYXuWef3dsiw8few1f3gWfEZ0Z8kaej3mnZWyBvrFyu7f/k5T4v/WBHtr7I
Pfvs3gIZPvYevrrPy/foL8p9Uf4PnCPbfchT9oFtT5r1R79j7+GVE46e1s/z
7f/7vcv+AMXQVQk=
                "]]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{20.5, 4.}, {20.5, 
                3.724}, {20.276, 3.5}, {20., 3.5}, {6., 3.5}, {5.724, 3.5}, {
                5.5, 3.724}, {5.5, 4.}, {5.5, 21.}, {5.5, 21.276}, {5.724, 
                21.5}, {6., 21.5}, {20., 21.5}, {20.276, 21.5}, {20.5, 
                21.276}, {20.5, 21.}}}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}}}, {{{13., 18.}, {10.239, 18.}, {8., 
                17.015}, {8., 15.8}, {8., 9.2}, {8., 7.984999999999999}, {
                10.239, 7.}, {13., 7.}, {15.761, 7.}, {18., 
                7.984999999999999}, {18., 9.2}, {18., 15.8}, {18., 17.015}, {
                15.761, 18.}, {13., 18.}}}]}, {
               FaceForm[{
                 RGBColor[0.537, 0.537, 0.537], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                 0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
                 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                 0}, {1, 3, 3}}}, {{{13., 10.8633}, {10.314, 10.8633}, {8.6, 
                 11.833300000000001`}, {8.6, 12.500300000000001`}, {8.6, 
                 14.1133}, {9.586, 13.4603}, {11.151, 13.0463}, {13., 
                 13.0463}, {14.849, 13.0463}, {16.414, 13.4603}, {17.4, 
                 14.1133}, {17.4, 12.500300000000001`}, {17.4, 
                 11.833300000000001`}, {15.686, 10.8633}, {13., 10.8633}}, {{
                 17.4, 9.2273}, {17.4, 8.560300000000002}, {15.686, 7.5913}, {
                 13., 7.5913}, {10.314, 7.5913}, {8.6, 8.560300000000002}, {
                 8.6, 9.2273}, {8.6, 10.8413}, {9.586, 10.1873}, {11.151, 
                 9.772300000000001}, {13., 9.772300000000001}, {14.849, 
                 9.772300000000001}, {16.414, 10.1873}, {17.4, 10.8413}}, {{
                 13., 17.4093}, {15.686, 17.4093}, {17.4, 
                 16.439300000000003`}, {17.4, 15.772300000000001`}, {17.4, 
                 15.1053}, {15.686, 14.1363}, {13., 14.1363}, {10.314, 
                 14.1363}, {8.6, 15.1053}, {8.6, 15.772300000000001`}, {8.6, 
                 16.439300000000003`}, {10.314, 17.4093}, {13., 17.4093}}, {{
                 13., 18.5003}, {9.864, 18.5003}, {7.5, 17.3273}, {7.5, 
                 15.772300000000001`}, {7.5, 9.2273}, {7.5, 
                 7.673300000000001}, {9.864, 6.500300000000001}, {13., 
                 6.500300000000001}, {16.136, 6.500300000000001}, {18.5, 
                 7.673300000000001}, {18.5, 9.2273}, {18.5, 
                 15.772300000000001`}, {18.5, 17.3273}, {16.136, 18.5003}, {
                 13., 18.5003}}}]}}, {
             ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], AspectRatio -> Automatic, 
              ImageSize -> {25., 25.}, PlotRange -> {{0., 25.}, {0., 25.}}}], 
            
            GridBox[{{
               RowBox[{
                 TagBox["\"Table count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["11", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Backend: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"PostgreSQL\"", "SummaryItem"]}]}, {
               TagBox[
                TagBox[
                 GridBox[{{
                    TagBox["\"Tables: \"", "SummaryItemAnnotation"], 
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_patients\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_patients\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_surname\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_surname\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(32)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_surname\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_surname", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_surname"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(32)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"de_name\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_patronymic\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_patronymic\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(32)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_patronymic\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_patronymic", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_patronymic"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_birthday\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_birthday\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"DATE\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_birthday\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_birthday", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "DATE"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_birthday"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_address\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_address\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(128)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_address\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_address", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_address"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_genderid\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_genderid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_genderid\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_genderid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_genderid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_ctl_patients", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_surname", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_surname"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_patronymic", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_patronymic"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"de_birthday", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "DATE"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_birthday"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"de_address", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_address"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_genderid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_genderid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}]}]}, 
                    False]], DynamicModuleValues -> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_medicines\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_medicines\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(128)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(256)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"de_name\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(256)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_methodtaking\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_methodtaking\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(1024)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_methodtaking\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_methodtaking", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(1024)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_methodtaking"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_ctl_medicines", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(256)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_methodtaking", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(1024)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_methodtaking"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}]}]}, 
                    False]], DynamicModuleValues -> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_doc_inspection\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_doc_inspection\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(128)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_starttime\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_starttime\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"TIMESTAMP WITHOUT TIME ZONE\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_starttime\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_starttime", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "TIMESTAMP WITHOUT TIME ZONE"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_starttime"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_endtime\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_endtime\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"TIMESTAMP WITHOUT TIME ZONE\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_endtime\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_endtime", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "TIMESTAMP WITHOUT TIME ZONE"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_endtime"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_placeid\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_placeid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_placeid\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_placeid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_placeid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_diagnosisid\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_diagnosisid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_diagnosisid\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_diagnosisid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_diagnosisid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_patientid\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_patientid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_patientid\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_patientid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_patientid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_doctorid\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_doctorid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_doctorid\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_doctorid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_doctorid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_doc_inspection", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_starttime", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "TIMESTAMP WITHOUT TIME ZONE"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_starttime"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_endtime", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "TIMESTAMP WITHOUT TIME ZONE"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_endtime"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_placeid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_placeid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_diagnosisid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_diagnosisid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_patientid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_patientid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_doctorid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_doctorid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}]}]}, 
                    False]], DynamicModuleValues -> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_tab_inspectionmedicines\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_tab_inspectionmedicines\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_inspectionid\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_inspectionid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(128)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_inspectionid\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_inspectionid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_inspectionid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_medicineid\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_medicineid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(128)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_medicineid\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_medicineid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_medicineid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_tab_inspectionmedicines", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_inspectionid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_inspectionid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_medicineid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_medicineid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}]}]}, 
                    False]], DynamicModuleValues -> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_tab_inspectionsymptoms\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_tab_inspectionsymptoms\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_inspectionid\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_inspectionid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(128)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_inspectionid\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_inspectionid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_inspectionid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_symptomid\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_symptomid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_symptomid\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_symptomid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_symptomid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_tab_inspectionsymptoms", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_inspectionid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_inspectionid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_symptomid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_symptomid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}]}]}, 
                    False]], DynamicModuleValues -> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_genders\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_genders\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(32)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"de_name\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_ctl_genders", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}]}]}, 
                    False]], DynamicModuleValues -> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_doctors\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_doctors\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_region\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_region\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"de_region\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_region", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_region"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_office\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_office\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(16)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"de_office\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_office", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(16)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_office"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_surname\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_surname\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(32)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_surname\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_surname", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_surname"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(32)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"de_name\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_patronymic\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_patronymic\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(32)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_patronymic\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_patronymic", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_patronymic"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_ctl_doctors", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_region", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_region"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"de_office", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(16)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_office"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"de_surname", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_surname"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_patronymic", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_patronymic"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}]}]}, False]],
                     DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_symptoms\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_symptoms\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(32)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"de_name\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_ctl_symptoms", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}]}]}, 
                    False]], DynamicModuleValues -> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_diagnosis\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_diagnosis\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(16)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"de_name\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(16)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_description\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_description\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(1024)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_description\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_description", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(1024)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_description"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_ctl_diagnosis", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(16)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_description", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(1024)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_description"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}]}]}, False]],
                     DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_inspectionplaces\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_inspectionplaces\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(32)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"de_name\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_ctl_inspectionplaces", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}]}]}, 
                    False]], DynamicModuleValues -> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_tab_medicinesideeffects\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_tab_medicinesideeffects\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_medicineid\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_medicineid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(128)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_medicineid\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_medicineid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_medicineid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(32)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"de_name\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_tab_medicinesideeffects", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_medicineid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_medicineid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}]}]}, 
                    False]], DynamicModuleValues -> Automatic], 
                    Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]}}, GridBoxAlignment -> {"Rows" -> {{Top}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Grid"], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  RelationalDatabase[<|
   "Tables" -> <|
     "de_ctl_patients" -> <|
       "PrimaryKey" -> <|"ConstraintName" -> None, "Columns" -> {"id"}|>, 
        "ForeignKeys" -> {<|
          "ConstraintName" -> "de_ctl_genders_de_ctl_patients_fk", 
           "FromColumns" -> {"de_genderid"}, "ToColumns" -> {"id"}, "ToTable" -> 
           "de_ctl_genders", "OnUpdate" -> None, "OnDelete" -> None, 
           "Initially" -> None, "Deferrable" -> None|>}, 
        "UniquenessConstraints" -> {}, "Indexes" -> {}, 
        "Columns" -> <|
         "id" -> <|
           "Nullable" -> False, "BackendType" -> "Integer", 
            "NativeTypeString" -> "INTEGER"|>, 
          "de_surname" -> <|
           "Nullable" -> False, "BackendType" -> {"String", 32}, 
            "NativeTypeString" -> "VARCHAR(32)"|>, 
          "de_name" -> <|
           "Nullable" -> False, "BackendType" -> {"String", 32}, 
            "NativeTypeString" -> "VARCHAR(32)"|>, 
          "de_patronymic" -> <|
           "Nullable" -> True, "BackendType" -> {"String", 32}, 
            "NativeTypeString" -> "VARCHAR(32)"|>, 
          "de_birthday" -> <|
           "Nullable" -> True, "BackendType" -> "Date", "NativeTypeString" -> 
            "DATE"|>, 
          "de_address" -> <|
           "Nullable" -> False, "BackendType" -> {"String", 128}, 
            "NativeTypeString" -> "VARCHAR(128)"|>, 
          "de_genderid" -> <|
           "Nullable" -> False, "BackendType" -> "Integer", 
            "NativeTypeString" -> "INTEGER"|>|>, "Schema" -> "public"|>, 
      "de_ctl_medicines" -> <|
       "PrimaryKey" -> <|"ConstraintName" -> None, "Columns" -> {"id"}|>, 
        "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
        "Columns" -> <|
         "id" -> <|
           "Nullable" -> False, "BackendType" -> {"String", 128}, 
            "NativeTypeString" -> "VARCHAR(128)"|>, 
          "de_name" -> <|
           "Nullable" -> False, "BackendType" -> {"String", 256}, 
            "NativeTypeString" -> "VARCHAR(256)"|>, 
          "de_methodtaking" -> <|
           "Nullable" -> False, "BackendType" -> {"String", 1024}, 
            "NativeTypeString" -> "VARCHAR(1024)"|>|>, "Schema" -> "public"|>,
       "de_doc_inspection" -> <|
       "PrimaryKey" -> <|"ConstraintName" -> None, "Columns" -> {"id"}|>, 
        "ForeignKeys" -> {<|
          "ConstraintName" -> "de_ctl_diagnosis_de_doc_inspection_fk", 
           "FromColumns" -> {"de_diagnosisid"}, "ToColumns" -> {"id"}, 
           "ToTable" -> "de_ctl_diagnosis", "OnUpdate" -> None, "OnDelete" -> 
           None, "Initially" -> None, "Deferrable" -> None|>, <|
          "ConstraintName" -> "de_ctl_doctors_de_doc_inspection_fk", 
           "FromColumns" -> {"de_doctorid"}, "ToColumns" -> {"id"}, "ToTable" -> 
           "de_ctl_doctors", "OnUpdate" -> None, "OnDelete" -> None, 
           "Initially" -> None, "Deferrable" -> None|>, <|
          "ConstraintName" -> "de_ctl_patients_de_doc_inspection_fk", 
           "FromColumns" -> {"de_patientid"}, "ToColumns" -> {"id"}, 
           "ToTable" -> "de_ctl_patients", "OnUpdate" -> None, "OnDelete" -> 
           None, "Initially" -> None, "Deferrable" -> None|>, <|
          "ConstraintName" -> "de_ctl_inspectionplaces_de_doc_inspection_fk", 
           "FromColumns" -> {"de_placeid"}, "ToColumns" -> {"id"}, "ToTable" -> 
           "de_ctl_inspectionplaces", "OnUpdate" -> None, "OnDelete" -> None, 
           "Initially" -> None, "Deferrable" -> None|>}, 
        "UniquenessConstraints" -> {}, "Indexes" -> {}, 
        "Columns" -> <|
         "id" -> <|
           "Nullable" -> False, "BackendType" -> {"String", 128}, 
            "NativeTypeString" -> "VARCHAR(128)"|>, 
          "de_starttime" -> <|
           "Nullable" -> False, "BackendType" -> {"DateTime", False}, 
            "NativeTypeString" -> "TIMESTAMP WITHOUT TIME ZONE"|>, 
          "de_endtime" -> <|
           "Nullable" -> False, "BackendType" -> {"DateTime", False}, 
            "NativeTypeString" -> "TIMESTAMP WITHOUT TIME ZONE"|>, 
          "de_placeid" -> <|
           "Nullable" -> False, "BackendType" -> "Integer", 
            "NativeTypeString" -> "INTEGER"|>, 
          "de_diagnosisid" -> <|
           "Nullable" -> False, "BackendType" -> "Integer", 
            "NativeTypeString" -> "INTEGER"|>, 
          "de_patientid" -> <|
           "Nullable" -> False, "BackendType" -> "Integer", 
            "NativeTypeString" -> "INTEGER"|>, 
          "de_doctorid" -> <|
           "Nullable" -> False, "BackendType" -> "Integer", 
            "NativeTypeString" -> "INTEGER"|>|>, "Schema" -> "public"|>, 
      "de_tab_inspectionmedicines" -> <|
       "PrimaryKey" -> <|"ConstraintName" -> None, "Columns" -> {"id"}|>, 
        "ForeignKeys" -> {<|
          "ConstraintName" -> 
           "de_doc_inspection_de_tab_inspectionmedicine_fk", 
           "FromColumns" -> {"de_inspectionid"}, "ToColumns" -> {"id"}, 
           "ToTable" -> "de_doc_inspection", "OnUpdate" -> None, "OnDelete" -> 
           None, "Initially" -> None, "Deferrable" -> None|>, <|
          "ConstraintName" -> "de_ctl_medicine_de_tab_inspectionmedicine_fk", 
           "FromColumns" -> {"de_medicineid"}, "ToColumns" -> {"id"}, 
           "ToTable" -> "de_ctl_medicines", "OnUpdate" -> None, "OnDelete" -> 
           None, "Initially" -> None, "Deferrable" -> None|>}, 
        "UniquenessConstraints" -> {}, "Indexes" -> {}, 
        "Columns" -> <|
         "id" -> <|
           "Nullable" -> False, "BackendType" -> "Integer", 
            "NativeTypeString" -> "INTEGER"|>, 
          "de_inspectionid" -> <|
           "Nullable" -> False, "BackendType" -> {"String", 128}, 
            "NativeTypeString" -> "VARCHAR(128)"|>, 
          "de_medicineid" -> <|
           "Nullable" -> False, "BackendType" -> {"String", 128}, 
            "NativeTypeString" -> "VARCHAR(128)"|>|>, "Schema" -> "public"|>, 
      "de_tab_inspectionsymptoms" -> <|
       "PrimaryKey" -> <|"ConstraintName" -> None, "Columns" -> {"id"}|>, 
        "ForeignKeys" -> {<|
          "ConstraintName" -> 
           "de_doc_inspection_de_tab_inspectionsymptomes_fk", 
           "FromColumns" -> {"de_inspectionid"}, "ToColumns" -> {"id"}, 
           "ToTable" -> "de_doc_inspection", "OnUpdate" -> None, "OnDelete" -> 
           None, "Initially" -> None, "Deferrable" -> None|>, <|
          "ConstraintName" -> "de_ctl_symptoms_de_tab_inspectionsymptoms_fk", 
           "FromColumns" -> {"de_symptomid"}, "ToColumns" -> {"id"}, 
           "ToTable" -> "de_ctl_symptoms", "OnUpdate" -> None, "OnDelete" -> 
           None, "Initially" -> None, "Deferrable" -> None|>}, 
        "UniquenessConstraints" -> {}, "Indexes" -> {}, 
        "Columns" -> <|
         "id" -> <|
           "Nullable" -> False, "BackendType" -> "Integer", 
            "NativeTypeString" -> "INTEGER"|>, 
          "de_inspectionid" -> <|
           "Nullable" -> False, "BackendType" -> {"String", 128}, 
            "NativeTypeString" -> "VARCHAR(128)"|>, 
          "de_symptomid" -> <|
           "Nullable" -> False, "BackendType" -> "Integer", 
            "NativeTypeString" -> "INTEGER"|>|>, "Schema" -> "public"|>, 
      "de_ctl_genders" -> <|
       "PrimaryKey" -> <|"ConstraintName" -> None, "Columns" -> {"id"}|>, 
        "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
        "Columns" -> <|
         "id" -> <|
           "Nullable" -> False, "BackendType" -> "Integer", 
            "NativeTypeString" -> "INTEGER"|>, 
          "de_name" -> <|
           "Nullable" -> False, "BackendType" -> {"String", 32}, 
            "NativeTypeString" -> "VARCHAR(32)"|>|>, "Schema" -> "public"|>, 
      "de_ctl_doctors" -> <|
       "PrimaryKey" -> <|"ConstraintName" -> None, "Columns" -> {"id"}|>, 
        "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
        "Columns" -> <|
         "id" -> <|
           "Nullable" -> False, "BackendType" -> "Integer", 
            "NativeTypeString" -> "INTEGER"|>, 
          "de_region" -> <|
           "Nullable" -> True, "BackendType" -> "Integer", "NativeTypeString" -> 
            "INTEGER"|>, 
          "de_office" -> <|
           "Nullable" -> True, "BackendType" -> {"String", 16}, 
            "NativeTypeString" -> "VARCHAR(16)"|>, 
          "de_surname" -> <|
           "Nullable" -> False, "BackendType" -> {"String", 32}, 
            "NativeTypeString" -> "VARCHAR(32)"|>, 
          "de_name" -> <|
           "Nullable" -> False, "BackendType" -> {"String", 32}, 
            "NativeTypeString" -> "VARCHAR(32)"|>, 
          "de_patronymic" -> <|
           "Nullable" -> True, "BackendType" -> {"String", 32}, 
            "NativeTypeString" -> "VARCHAR(32)"|>|>, "Schema" -> "public"|>, 
      "de_ctl_symptoms" -> <|
       "PrimaryKey" -> <|"ConstraintName" -> None, "Columns" -> {"id"}|>, 
        "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
        "Columns" -> <|
         "id" -> <|
           "Nullable" -> False, "BackendType" -> "Integer", 
            "NativeTypeString" -> "INTEGER"|>, 
          "de_name" -> <|
           "Nullable" -> False, "BackendType" -> {"String", 32}, 
            "NativeTypeString" -> "VARCHAR(32)"|>|>, "Schema" -> "public"|>, 
      "de_ctl_diagnosis" -> <|
       "PrimaryKey" -> <|"ConstraintName" -> None, "Columns" -> {"id"}|>, 
        "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
        "Columns" -> <|
         "id" -> <|
           "Nullable" -> False, "BackendType" -> "Integer", 
            "NativeTypeString" -> "INTEGER"|>, 
          "de_name" -> <|
           "Nullable" -> False, "BackendType" -> {"String", 16}, 
            "NativeTypeString" -> "VARCHAR(16)"|>, 
          "de_description" -> <|
           "Nullable" -> True, "BackendType" -> {"String", 1024}, 
            "NativeTypeString" -> "VARCHAR(1024)"|>|>, "Schema" -> "public"|>,
       "de_ctl_inspectionplaces" -> <|
       "PrimaryKey" -> <|"ConstraintName" -> None, "Columns" -> {"id"}|>, 
        "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
        "Columns" -> <|
         "id" -> <|
           "Nullable" -> False, "BackendType" -> "Integer", 
            "NativeTypeString" -> "INTEGER"|>, 
          "de_name" -> <|
           "Nullable" -> False, "BackendType" -> {"String", 32}, 
            "NativeTypeString" -> "VARCHAR(32)"|>|>, "Schema" -> "public"|>, 
      "de_tab_medicinesideeffects" -> <|
       "PrimaryKey" -> <|"ConstraintName" -> None, "Columns" -> {"id"}|>, 
        "ForeignKeys" -> {<|
          "ConstraintName" -> "de_ctl_medicine_de_tab_medicinesideeffects_fk",
            "FromColumns" -> {"de_medicineid"}, "ToColumns" -> {"id"}, 
           "ToTable" -> "de_ctl_medicines", "OnUpdate" -> None, "OnDelete" -> 
           None, "Initially" -> None, "Deferrable" -> None|>}, 
        "UniquenessConstraints" -> {}, "Indexes" -> {}, 
        "Columns" -> <|
         "id" -> <|
           "Nullable" -> False, "BackendType" -> "Integer", 
            "NativeTypeString" -> "INTEGER"|>, 
          "de_medicineid" -> <|
           "Nullable" -> False, "BackendType" -> {"String", 128}, 
            "NativeTypeString" -> "VARCHAR(128)"|>, 
          "de_name" -> <|
           "Nullable" -> False, "BackendType" -> {"String", 32}, 
            "NativeTypeString" -> "VARCHAR(32)"|>|>, "Schema" -> "public"|>|>,
     "ID" -> "35fayyeldmx9"|>, 
   DatabaseReference[<|
    "Backend" -> "postgresql", "Username" -> "st190333_", "Password" -> 
     "1234", "Host" -> "localhost", "Port" -> None, "Name" -> 
     "st190333_dblab3", "Options" -> <||>|>]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8791514287024*^9, 3.879248990002586*^9, 
  3.879250194384479*^9, 3.879250246657423*^9, 3.879250735363305*^9, 
  3.879251390983624*^9, 3.879256201416444*^9, 3.879260486117814*^9, 
  3.879266005713108*^9, 3.8792661244586678`*^9, 3.87926657329601*^9, 
  3.8792955085887012`*^9, 3.87929581389261*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"15291ca5-50d6-4429-bff3-e6952e9c1ab2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["EntityStore[ref], EntityStores[]", "Subsection",
 CellChangeTimes->{{3.87925028137116*^9, 3.879250294593657*^9}, {
  3.879250643387841*^9, 
  3.879250648810865*^9}},ExpressionUUID->"aa64122c-4b86-4fd8-9d0d-\
6765620613a7"],

Cell["\<\
EntityStore[ref] - \:0441\:043e\:0437\:0434\:0430\:0435\:043c \:0445\:0440\
\:0430\:043d\:0438\:043b\:0438\:0449\:0435
EntityRegister[store] - \:0431\:0435\:0437 \:044d\:0442\:043e\:0439 \:0444\
\:0443\:043d\:043a\:0446\:0438\:0438 \:043d\:0435 \:0431\:0443\:0434\:0435\
\:0442 \:0440\:0430\:0431\:043e\:0442\:0430\:0442\:044c EntityValue
EntityStores[] - \:0432\:044b\:0432\:0435\:0441\:0442\:0438 \
\:0445\:0440\:0430\:043d\:0438\:043b\:0438\:0449\:0430\
\>", "Text",
 CellChangeTimes->{{3.879252038633707*^9, 3.879252103076295*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"ef703c23-e66d-4748-ac11-ea1a76814131"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gp$store", "=", 
  RowBox[{"EntityStore", "[", "gp$ref", "]"}]}]], "Input",
 CellChangeTimes->{{3.879151513592255*^9, 3.879151555142345*^9}, {
  3.879250259266819*^9, 3.879250267243264*^9}, {3.879250761991651*^9, 
  3.879250773013002*^9}, {3.879250815809721*^9, 3.879250817841976*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[6]:=",ExpressionUUID->"a304453a-830b-42a2-b470-6c996bff80b4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["EntityStore",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {10.385390625, {0., 10.385390625}}], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.04], {
               FaceForm[{
                 RGBColor[0.984, 0.969, 0.91], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{17., 10.}, {
                6., 10.}, {4.343, 10.}, {3., 11.343}, {3., 13.}, {3., 20.}, {
                3., 21.657}, {4.343, 23.}, {6., 23.}, {17., 23.}, {18.657, 
                23.}, {20., 21.657}, {20., 20.}, {20., 13.}, {20., 11.343}, {
                18.657, 10.}, {17., 10.}}}]}, {
               FaceForm[{
                 RGBColor[0.996, 0.506, 0.004], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                 1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {0, 
                 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{6., 22.5}, {4.622, 22.5}, {3.5, 21.379}, {3.5, 
                 20.}, {3.5, 13.}, {3.5, 11.620999999999999`}, {4.622, 
                 10.5}, {6., 10.5}, {17., 10.5}, {18.379, 10.5}, {19.5, 
                 11.620999999999999`}, {19.5, 13.}, {19.5, 20.}, {19.5, 
                 21.379}, {18.379, 22.5}, {17., 22.5}}, {{17., 9.5}, {6., 
                 9.5}, {4.07, 9.5}, {2.5, 11.07}, {2.5, 13.}, {2.5, 20.}, {
                 2.5, 21.93}, {4.07, 23.5}, {6., 23.5}, {17., 23.5}, {18.93, 
                 23.5}, {20.5, 21.93}, {20.5, 20.}, {20.5, 13.}, {20.5, 
                 11.07}, {18.93, 9.5}, {17., 9.5}}}]}, {
               FaceForm[{
                 RGBColor[0.012, 0.612, 0.996], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5, 12.5}, {14.5, 12.5}, {
                14.5, 14.5}, {12.5, 14.5}}, {{8.5, 14.5}, {10.5, 14.5}, {10.5,
                 12.5}, {8.5, 12.5}}}]}, {
               FaceForm[{
                 RGBColor[0.537, 0.537, 0.537], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAFdBwitD6EbDLDzGwwdUNRj8E2gfE0cfCM0
9UZo5hsRoE3Q1MPMl0LjC+HgG6Gph/FVobQ+qnvR+XD/qqLxpdDUK2Lno6vH
MM8ITT063wRNvYkDAOvQJ0o=
                "]]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}}}, {{{18., 12.}, {15.791, 12.}, {14., 
                11.104}, {14., 10.}, {14., 4.}, {14., 2.896000000000001}, {
                15.791, 2.}, {18., 2.}, {20.209, 2.}, {22., 
                2.896000000000001}, {22., 4.}, {22., 10.}, {22., 11.104}, {
                20.209, 12.}, {18., 12.}}}]}, {
               FaceForm[{
                 RGBColor[0.537, 0.537, 0.537], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                 0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
                 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                 0}, {1, 3, 3}}}, {{{18., 5.5}, {15.997, 5.5}, {14.5, 
                 6.292}, {14.5, 7.}, {14.5, 8.411}, {15.312, 7.853}, {16.547, 
                 7.5}, {18., 7.5}, {19.453, 7.5}, {20.688, 7.853}, {21.5, 
                 8.411}, {21.5, 7.}, {21.5, 6.292}, {20.003, 5.5}, {18., 
                 5.5}}, {{21.5, 4.}, {21.5, 3.292}, {20.003, 2.5}, {18., 
                 2.5}, {15.997, 2.5}, {14.5, 3.292}, {14.5, 4.}, {14.5, 
                 5.411}, {15.312, 4.853}, {16.547, 4.5}, {18., 4.5}, {19.453, 
                 4.5}, {20.688, 4.853}, {21.5, 5.411}}, {{18., 11.5}, {20.003,
                  11.5}, {21.5, 10.708}, {21.5, 10.}, {21.5, 9.292}, {20.003, 
                 8.5}, {18., 8.5}, {15.997, 8.5}, {14.5, 9.292}, {14.5, 
                 10.}, {14.5, 10.708}, {15.997, 11.5}, {18., 11.5}}, {{18., 
                 12.5}, {15.435, 12.5}, {13.5, 11.425}, {13.5, 10.}, {13.5, 
                 4.}, {13.5, 2.575}, {15.435, 1.5}, {18., 1.5}, {20.565, 
                 1.5}, {22.5, 2.575}, {22.5, 4.}, {22.5, 10.}, {22.5, 
                 11.425}, {20.565, 12.5}, {18., 12.5}}}]}}, AspectRatio -> 
             Automatic, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], PlotRange -> {{0., 25.}, {0., 25.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Type count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["11", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"RelationalDatabase: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"PostgreSQL\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"PostgreSQL\""}, {"", 
                    PaneBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["RelationalDatabase", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04], {
                    FaceForm[{
                    RGBColor[0.651, 0.651, 0.651], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{20.5, 4.}, {20.5, 3.724}, {20.276, 
                    3.5}, {20., 3.5}, {6., 3.5}, {5.724, 3.5}, {5.5, 3.724}, {
                    5.5, 4.}, {5.5, 21.}, {5.5, 21.276}, {5.724, 21.5}, {6., 
                    21.5}, {20., 21.5}, {20.276, 21.5}, {20.5, 21.276}, {20.5,
                     21.}}, {{20.5, 22.5}, {5.5, 22.5}, {4.947999999999999, 
                    22.5}, {4.5, 22.053}, {4.5, 21.5}, {4.5, 3.5}, {4.5, 
                    2.947}, {4.947999999999999, 2.5}, {5.5, 2.5}, {20.5, 
                    2.5}, {21.052, 2.5}, {21.5, 2.947}, {21.5, 3.5}, {21.5, 
                    21.5}, {21.5, 22.053}, {21.052, 22.5}, {20.5, 22.5}}}]}, {
                    
                    FaceForm[{
                    RGBColor[0.8670000000000001, 0.067, 0.], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, CompressedData["
1:eJxtj69Lg1EYhT80CZ84xjSM68VN5tjGfjnFYPksJkUwiRYRrQoGs2Ay2AUR
m1YRGVjEYBCrf4DJ7L/g2N05l/egMC7Pju/Zc0oHJ9tH40mSTAw+U4PPWII/
lw2f8+XwJjny9XH+4u1zUvI0az7d/j6sRw5v5K/Ng9zOy5LcL0k/2JGfP85e
74qzknv2ge3vefrYe+S6D9wTn574IsfeyOGNHPwW5X5R+sGObH2Re/bZvT0y
fOw9ct0H7opPV3yRY2/k8EYOfh2570g/2JGtL3LPPru3S4aPvUeu+0aczFuf
ARtf5mm2d7j6vXVVlr2R72/e5x5PS3Jfkn6wIxtf5p59dm+ZDB97D1/dB66K
T1V8kWPvguyNHPwqcl+RfrAjW1/knn127wIZPvYevroP3BCfhvgix9667I0c
/GpyX5N+sCNbX+SefXZvnQwfew9f3Qdui09bfJGn2e6wvyV7Iwe/ptw3pR/s
yNYXuWef3dsiw8few1f3gWfEZ0Z8kaej3mnZWyBvrFyu7f/k5T4v/WBHtr7I
Pfvs3gIZPvYevrrPy/foL8p9Uf4PnCPbfchT9oFtT5r1R79j7+GVE46e1s/z
7f/7vcv+AMXQVQk=
                    "]]}, {
                    FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{20.5, 4.}, {
                    20.5, 3.724}, {20.276, 3.5}, {20., 3.5}, {6., 3.5}, {
                    5.724, 3.5}, {5.5, 3.724}, {5.5, 4.}, {5.5, 21.}, {5.5, 
                    21.276}, {5.724, 21.5}, {6., 21.5}, {20., 21.5}, {20.276, 
                    21.5}, {20.5, 21.276}, {20.5, 21.}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}}}, {{{13., 18.}, {10.239, 18.}, {
                    8., 17.015}, {8., 15.8}, {8., 9.2}, {8., 
                    7.984999999999999}, {10.239, 7.}, {13., 7.}, {15.761, 
                    7.}, {18., 7.984999999999999}, {18., 9.2}, {18., 15.8}, {
                    18., 17.015}, {15.761, 18.}, {13., 18.}}}]}, {
                    FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}}}, {{{13., 10.8633}, {10.314, 
                    10.8633}, {8.6, 11.833300000000001`}, {8.6, 
                    12.500300000000001`}, {8.6, 14.1133}, {9.586, 13.4603}, {
                    11.151, 13.0463}, {13., 13.0463}, {14.849, 13.0463}, {
                    16.414, 13.4603}, {17.4, 14.1133}, {17.4, 
                    12.500300000000001`}, {17.4, 11.833300000000001`}, {
                    15.686, 10.8633}, {13., 10.8633}}, {{17.4, 9.2273}, {17.4,
                     8.560300000000002}, {15.686, 7.5913}, {13., 7.5913}, {
                    10.314, 7.5913}, {8.6, 8.560300000000002}, {8.6, 
                    9.2273}, {8.6, 10.8413}, {9.586, 10.1873}, {11.151, 
                    9.772300000000001}, {13., 9.772300000000001}, {14.849, 
                    9.772300000000001}, {16.414, 10.1873}, {17.4, 
                    10.8413}}, {{13., 17.4093}, {15.686, 17.4093}, {17.4, 
                    16.439300000000003`}, {17.4, 15.772300000000001`}, {17.4, 
                    15.1053}, {15.686, 14.1363}, {13., 14.1363}, {10.314, 
                    14.1363}, {8.6, 15.1053}, {8.6, 15.772300000000001`}, {
                    8.6, 16.439300000000003`}, {10.314, 17.4093}, {13., 
                    17.4093}}, {{13., 18.5003}, {9.864, 18.5003}, {7.5, 
                    17.3273}, {7.5, 15.772300000000001`}, {7.5, 9.2273}, {7.5,
                     7.673300000000001}, {9.864, 6.500300000000001}, {13., 
                    6.500300000000001}, {16.136, 6.500300000000001}, {18.5, 
                    7.673300000000001}, {18.5, 9.2273}, {18.5, 
                    15.772300000000001`}, {18.5, 17.3273}, {16.136, 
                    18.5003}, {13., 18.5003}}}]}}, {
                    ImageSize -> Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 25.}, {0., 25.}}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Table count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["11", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Backend: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"PostgreSQL\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04], {
                    FaceForm[{
                    RGBColor[0.651, 0.651, 0.651], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{20.5, 4.}, {20.5, 3.724}, {20.276, 
                    3.5}, {20., 3.5}, {6., 3.5}, {5.724, 3.5}, {5.5, 3.724}, {
                    5.5, 4.}, {5.5, 21.}, {5.5, 21.276}, {5.724, 21.5}, {6., 
                    21.5}, {20., 21.5}, {20.276, 21.5}, {20.5, 21.276}, {20.5,
                     21.}}, {{20.5, 22.5}, {5.5, 22.5}, {4.947999999999999, 
                    22.5}, {4.5, 22.053}, {4.5, 21.5}, {4.5, 3.5}, {4.5, 
                    2.947}, {4.947999999999999, 2.5}, {5.5, 2.5}, {20.5, 
                    2.5}, {21.052, 2.5}, {21.5, 2.947}, {21.5, 3.5}, {21.5, 
                    21.5}, {21.5, 22.053}, {21.052, 22.5}, {20.5, 22.5}}}]}, {
                    
                    FaceForm[{
                    RGBColor[0.8670000000000001, 0.067, 0.], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, CompressedData["
1:eJxtj69Lg1EYhT80CZ84xjSM68VN5tjGfjnFYPksJkUwiRYRrQoGs2Ay2AUR
m1YRGVjEYBCrf4DJ7L/g2N05l/egMC7Pju/Zc0oHJ9tH40mSTAw+U4PPWII/
lw2f8+XwJjny9XH+4u1zUvI0az7d/j6sRw5v5K/Ng9zOy5LcL0k/2JGfP85e
74qzknv2ge3vefrYe+S6D9wTn574IsfeyOGNHPwW5X5R+sGObH2Re/bZvT0y
fOw9ct0H7opPV3yRY2/k8EYOfh2570g/2JGtL3LPPru3S4aPvUeu+0aczFuf
ARtf5mm2d7j6vXVVlr2R72/e5x5PS3Jfkn6wIxtf5p59dm+ZDB97D1/dB66K
T1V8kWPvguyNHPwqcl+RfrAjW1/knn127wIZPvYevroP3BCfhvgix9667I0c
/GpyX5N+sCNbX+SefXZvnQwfew9f3Qdui09bfJGn2e6wvyV7Iwe/ptw3pR/s
yNYXuWef3dsiw8few1f3gWfEZ0Z8kaej3mnZWyBvrFyu7f/k5T4v/WBHtr7I
Pfvs3gIZPvYevrrPy/foL8p9Uf4PnCPbfchT9oFtT5r1R79j7+GVE46e1s/z
7f/7vcv+AMXQVQk=
                    "]]}, {
                    FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{20.5, 4.}, {
                    20.5, 3.724}, {20.276, 3.5}, {20., 3.5}, {6., 3.5}, {
                    5.724, 3.5}, {5.5, 3.724}, {5.5, 4.}, {5.5, 21.}, {5.5, 
                    21.276}, {5.724, 21.5}, {6., 21.5}, {20., 21.5}, {20.276, 
                    21.5}, {20.5, 21.276}, {20.5, 21.}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}}}, {{{13., 18.}, {10.239, 18.}, {
                    8., 17.015}, {8., 15.8}, {8., 9.2}, {8., 
                    7.984999999999999}, {10.239, 7.}, {13., 7.}, {15.761, 
                    7.}, {18., 7.984999999999999}, {18., 9.2}, {18., 15.8}, {
                    18., 17.015}, {15.761, 18.}, {13., 18.}}}]}, {
                    FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}}}, {{{13., 10.8633}, {10.314, 
                    10.8633}, {8.6, 11.833300000000001`}, {8.6, 
                    12.500300000000001`}, {8.6, 14.1133}, {9.586, 13.4603}, {
                    11.151, 13.0463}, {13., 13.0463}, {14.849, 13.0463}, {
                    16.414, 13.4603}, {17.4, 14.1133}, {17.4, 
                    12.500300000000001`}, {17.4, 11.833300000000001`}, {
                    15.686, 10.8633}, {13., 10.8633}}, {{17.4, 9.2273}, {17.4,
                     8.560300000000002}, {15.686, 7.5913}, {13., 7.5913}, {
                    10.314, 7.5913}, {8.6, 8.560300000000002}, {8.6, 
                    9.2273}, {8.6, 10.8413}, {9.586, 10.1873}, {11.151, 
                    9.772300000000001}, {13., 9.772300000000001}, {14.849, 
                    9.772300000000001}, {16.414, 10.1873}, {17.4, 
                    10.8413}}, {{13., 17.4093}, {15.686, 17.4093}, {17.4, 
                    16.439300000000003`}, {17.4, 15.772300000000001`}, {17.4, 
                    15.1053}, {15.686, 14.1363}, {13., 14.1363}, {10.314, 
                    14.1363}, {8.6, 15.1053}, {8.6, 15.772300000000001`}, {
                    8.6, 16.439300000000003`}, {10.314, 17.4093}, {13., 
                    17.4093}}, {{13., 18.5003}, {9.864, 18.5003}, {7.5, 
                    17.3273}, {7.5, 15.772300000000001`}, {7.5, 9.2273}, {7.5,
                     7.673300000000001}, {9.864, 6.500300000000001}, {13., 
                    6.500300000000001}, {16.136, 6.500300000000001}, {18.5, 
                    7.673300000000001}, {18.5, 9.2273}, {18.5, 
                    15.772300000000001`}, {18.5, 17.3273}, {16.136, 
                    18.5003}, {13., 18.5003}}}]}}, {
                    ImageSize -> Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 25.}, {0., 25.}}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Table count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["11", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Backend: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"PostgreSQL\"", "SummaryItem"]}]}, {
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox["\"Tables: \"", "SummaryItemAnnotation"], 
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_patients\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_patients\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_surname\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_surname\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(32)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_surname\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_surname", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_surname"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(32)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"de_name\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_patronymic\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_patronymic\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(32)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_patronymic\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_patronymic", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_patronymic"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_birthday\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_birthday\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"DATE\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_birthday\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_birthday", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "DATE"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_birthday"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_address\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_address\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(128)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_address\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_address", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_address"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_genderid\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_genderid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_genderid\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_genderid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_genderid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_ctl_patients", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_surname", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_surname"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_patronymic", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_patronymic"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"de_birthday", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "DATE"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_birthday"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"de_address", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_address"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_genderid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_genderid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}]}]}, 
                    False]], DynamicModuleValues -> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_medicines\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_medicines\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(128)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(256)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"de_name\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(256)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_methodtaking\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_methodtaking\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(1024)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_methodtaking\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_methodtaking", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(1024)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_methodtaking"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_ctl_medicines", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(256)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_methodtaking", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(1024)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_methodtaking"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}]}]}, 
                    False]], DynamicModuleValues -> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_doc_inspection\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_doc_inspection\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(128)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_starttime\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_starttime\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"TIMESTAMP WITHOUT TIME ZONE\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_starttime\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_starttime", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "TIMESTAMP WITHOUT TIME ZONE"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_starttime"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_endtime\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_endtime\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"TIMESTAMP WITHOUT TIME ZONE\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_endtime\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_endtime", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "TIMESTAMP WITHOUT TIME ZONE"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_endtime"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_placeid\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_placeid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_placeid\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_placeid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_placeid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_diagnosisid\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_diagnosisid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_diagnosisid\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_diagnosisid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_diagnosisid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_patientid\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_patientid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_patientid\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_patientid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_patientid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_doctorid\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_doctorid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_doctorid\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_doctorid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_doctorid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_doc_inspection", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_starttime", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "TIMESTAMP WITHOUT TIME ZONE"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_starttime"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_endtime", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "TIMESTAMP WITHOUT TIME ZONE"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_endtime"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_placeid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_placeid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_diagnosisid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_diagnosisid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_patientid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_patientid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_doctorid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_doctorid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}]}]}, 
                    False]], DynamicModuleValues -> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_tab_inspectionmedicines\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_tab_inspectionmedicines\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_inspectionid\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_inspectionid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(128)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_inspectionid\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_inspectionid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_inspectionid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_medicineid\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_medicineid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(128)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_medicineid\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_medicineid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_medicineid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_tab_inspectionmedicines", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_inspectionid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_inspectionid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_medicineid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_medicineid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}]}]}, 
                    False]], DynamicModuleValues -> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_tab_inspectionsymptoms\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_tab_inspectionsymptoms\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_inspectionid\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_inspectionid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(128)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_inspectionid\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_inspectionid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_inspectionid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_symptomid\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_symptomid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_symptomid\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_symptomid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_symptomid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_tab_inspectionsymptoms", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_inspectionid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_inspectionid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_symptomid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_symptomid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}]}]}, 
                    False]], DynamicModuleValues -> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_genders\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_genders\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(32)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"de_name\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_ctl_genders", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}]}]}, 
                    False]], DynamicModuleValues -> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_doctors\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_doctors\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_region\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_region\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"de_region\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_region", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_region"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_office\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_office\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(16)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"de_office\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_office", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(16)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_office"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_surname\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_surname\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(32)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_surname\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_surname", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_surname"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(32)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"de_name\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_patronymic\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_patronymic\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(32)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_patronymic\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_patronymic", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_patronymic"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_ctl_doctors", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_region", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_region"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"de_office", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(16)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_office"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"de_surname", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_surname"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_patronymic", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_patronymic"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}]}]}, False]],
                     DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_symptoms\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_symptoms\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(32)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"de_name\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_ctl_symptoms", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}]}]}, 
                    False]], DynamicModuleValues -> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_diagnosis\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_diagnosis\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(16)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"de_name\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(16)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_description\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_description\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(1024)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_description\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_description", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(1024)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_description"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_ctl_diagnosis", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(16)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_description", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(1024)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_description"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}]}]}, False]],
                     DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_inspectionplaces\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_inspectionplaces\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(32)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"de_name\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_ctl_inspectionplaces", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}]}]}, 
                    False]], DynamicModuleValues -> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_tab_medicinesideeffects\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_tab_medicinesideeffects\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_medicineid\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_medicineid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(128)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_medicineid\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_medicineid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_medicineid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(32)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"de_name\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_tab_medicinesideeffects", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_medicineid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_medicineid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}]}]}, 
                    False]], DynamicModuleValues -> Automatic], 
                    Setting[#, {0}]& ]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    
                    RelationalDatabase[<|
                    "Tables" -> <|"de_ctl_patients" -> <|
                    "PrimaryKey" -> <|"ConstraintName" -> None, 
                    "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {<|
                    "ConstraintName" -> "de_ctl_genders_de_ctl_patients_fk", 
                    "FromColumns" -> {"de_genderid"}, "ToColumns" -> {"id"}, 
                    "ToTable" -> "de_ctl_genders", "OnUpdate" -> None, 
                    "OnDelete" -> None, "Initially" -> None, "Deferrable" -> 
                    None|>}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|"id" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_surname" -> <|"Nullable" -> False, 
                    "BackendType" -> {"String", 32}, "NativeTypeString" -> 
                    "VARCHAR(32)"|>, "de_name" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>, 
                    "de_patronymic" -> <|
                    "Nullable" -> True, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>, 
                    "de_birthday" -> <|"Nullable" -> True, "BackendType" -> 
                    "Date", "NativeTypeString" -> "DATE"|>, 
                    "de_address" -> <|"Nullable" -> False, 
                    "BackendType" -> {"String", 128}, "NativeTypeString" -> 
                    "VARCHAR(128)"|>, "de_genderid" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>|>, "Schema" -> 
                    "public"|>, "de_ctl_medicines" -> <|
                    "PrimaryKey" -> <|"ConstraintName" -> None, 
                    "Columns" -> {"id"}|>, "ForeignKeys" -> {}, 
                    "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|"id" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 128}, 
                    "NativeTypeString" -> "VARCHAR(128)"|>, 
                    "de_name" -> <|"Nullable" -> False, 
                    "BackendType" -> {"String", 256}, "NativeTypeString" -> 
                    "VARCHAR(256)"|>, "de_methodtaking" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 1024}, 
                    "NativeTypeString" -> "VARCHAR(1024)"|>|>, "Schema" -> 
                    "public"|>, "de_doc_inspection" -> <|
                    "PrimaryKey" -> <|"ConstraintName" -> None, 
                    "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {<|
                    "ConstraintName" -> 
                    "de_ctl_patients_de_doc_inspection_fk", 
                    "FromColumns" -> {"de_patientid"}, "ToColumns" -> {"id"}, 
                    "ToTable" -> "de_ctl_patients", "OnUpdate" -> None, 
                    "OnDelete" -> None, "Initially" -> None, "Deferrable" -> 
                    None|>, <|"ConstraintName" -> 
                    "de_ctl_diagnosis_de_doc_inspection_fk", 
                    "FromColumns" -> {"de_diagnosisid"}, 
                    "ToColumns" -> {"id"}, "ToTable" -> "de_ctl_diagnosis", 
                    "OnUpdate" -> None, "OnDelete" -> None, "Initially" -> 
                    None, "Deferrable" -> None|>, <|
                    "ConstraintName" -> 
                    "de_ctl_inspectionplaces_de_doc_inspection_fk", 
                    "FromColumns" -> {"de_placeid"}, "ToColumns" -> {"id"}, 
                    "ToTable" -> "de_ctl_inspectionplaces", "OnUpdate" -> 
                    None, "OnDelete" -> None, "Initially" -> None, 
                    "Deferrable" -> None|>, <|
                    "ConstraintName" -> "de_ctl_doctors_de_doc_inspection_fk",
                     "FromColumns" -> {"de_doctorid"}, "ToColumns" -> {"id"}, 
                    "ToTable" -> "de_ctl_doctors", "OnUpdate" -> None, 
                    "OnDelete" -> None, "Initially" -> None, "Deferrable" -> 
                    None|>}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|"id" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 128}, 
                    "NativeTypeString" -> "VARCHAR(128)"|>, 
                    "de_starttime" -> <|"Nullable" -> False, 
                    "BackendType" -> {"DateTime", False}, "NativeTypeString" -> 
                    "TIMESTAMP WITHOUT TIME ZONE"|>, 
                    "de_endtime" -> <|"Nullable" -> False, 
                    "BackendType" -> {"DateTime", False}, "NativeTypeString" -> 
                    "TIMESTAMP WITHOUT TIME ZONE"|>, 
                    "de_placeid" -> <|"Nullable" -> False, "BackendType" -> 
                    "Integer", "NativeTypeString" -> "INTEGER"|>, 
                    "de_diagnosisid" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_patientid" -> <|"Nullable" -> False, "BackendType" -> 
                    "Integer", "NativeTypeString" -> "INTEGER"|>, 
                    "de_doctorid" -> <|"Nullable" -> False, "BackendType" -> 
                    "Integer", "NativeTypeString" -> "INTEGER"|>|>, "Schema" -> 
                    "public"|>, "de_tab_inspectionmedicines" -> <|
                    "PrimaryKey" -> <|"ConstraintName" -> None, 
                    "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {<|
                    "ConstraintName" -> 
                    "de_doc_inspection_de_tab_inspectionmedicine_fk", 
                    "FromColumns" -> {"de_inspectionid"}, 
                    "ToColumns" -> {"id"}, "ToTable" -> "de_doc_inspection", 
                    "OnUpdate" -> None, "OnDelete" -> None, "Initially" -> 
                    None, "Deferrable" -> None|>, <|
                    "ConstraintName" -> 
                    "de_ctl_medicine_de_tab_inspectionmedicine_fk", 
                    "FromColumns" -> {"de_medicineid"}, "ToColumns" -> {"id"},
                     "ToTable" -> "de_ctl_medicines", "OnUpdate" -> None, 
                    "OnDelete" -> None, "Initially" -> None, "Deferrable" -> 
                    None|>}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|"id" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_inspectionid" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 128}, 
                    "NativeTypeString" -> "VARCHAR(128)"|>, 
                    "de_medicineid" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 128}, 
                    "NativeTypeString" -> "VARCHAR(128)"|>|>, "Schema" -> 
                    "public"|>, "de_tab_inspectionsymptoms" -> <|
                    "PrimaryKey" -> <|"ConstraintName" -> None, 
                    "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {<|
                    "ConstraintName" -> 
                    "de_doc_inspection_de_tab_inspectionsymptomes_fk", 
                    "FromColumns" -> {"de_inspectionid"}, 
                    "ToColumns" -> {"id"}, "ToTable" -> "de_doc_inspection", 
                    "OnUpdate" -> None, "OnDelete" -> None, "Initially" -> 
                    None, "Deferrable" -> None|>, <|
                    "ConstraintName" -> 
                    "de_ctl_symptoms_de_tab_inspectionsymptoms_fk", 
                    "FromColumns" -> {"de_symptomid"}, "ToColumns" -> {"id"}, 
                    "ToTable" -> "de_ctl_symptoms", "OnUpdate" -> None, 
                    "OnDelete" -> None, "Initially" -> None, "Deferrable" -> 
                    None|>}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|"id" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_inspectionid" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 128}, 
                    "NativeTypeString" -> "VARCHAR(128)"|>, 
                    "de_symptomid" -> <|"Nullable" -> False, "BackendType" -> 
                    "Integer", "NativeTypeString" -> "INTEGER"|>|>, "Schema" -> 
                    "public"|>, "de_ctl_genders" -> <|
                    "PrimaryKey" -> <|"ConstraintName" -> None, 
                    "Columns" -> {"id"}|>, "ForeignKeys" -> {}, 
                    "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|"id" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_name" -> <|"Nullable" -> False, 
                    "BackendType" -> {"String", 32}, "NativeTypeString" -> 
                    "VARCHAR(32)"|>|>, "Schema" -> "public"|>, 
                    "de_ctl_doctors" -> <|
                    "PrimaryKey" -> <|"ConstraintName" -> None, 
                    "Columns" -> {"id"}|>, "ForeignKeys" -> {}, 
                    "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|"id" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_region" -> <|"Nullable" -> True, "BackendType" -> 
                    "Integer", "NativeTypeString" -> "INTEGER"|>, 
                    "de_office" -> <|"Nullable" -> True, 
                    "BackendType" -> {"String", 16}, "NativeTypeString" -> 
                    "VARCHAR(16)"|>, "de_surname" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>, 
                    "de_name" -> <|"Nullable" -> False, 
                    "BackendType" -> {"String", 32}, "NativeTypeString" -> 
                    "VARCHAR(32)"|>, "de_patronymic" -> <|
                    "Nullable" -> True, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>|>, "Schema" -> 
                    "public"|>, "de_ctl_symptoms" -> <|
                    "PrimaryKey" -> <|"ConstraintName" -> None, 
                    "Columns" -> {"id"}|>, "ForeignKeys" -> {}, 
                    "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|"id" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_name" -> <|"Nullable" -> False, 
                    "BackendType" -> {"String", 32}, "NativeTypeString" -> 
                    "VARCHAR(32)"|>|>, "Schema" -> "public"|>, 
                    "de_ctl_diagnosis" -> <|
                    "PrimaryKey" -> <|"ConstraintName" -> None, 
                    "Columns" -> {"id"}|>, "ForeignKeys" -> {}, 
                    "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|"id" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_name" -> <|"Nullable" -> False, 
                    "BackendType" -> {"String", 16}, "NativeTypeString" -> 
                    "VARCHAR(16)"|>, "de_description" -> <|
                    "Nullable" -> True, "BackendType" -> {"String", 1024}, 
                    "NativeTypeString" -> "VARCHAR(1024)"|>|>, "Schema" -> 
                    "public"|>, "de_ctl_inspectionplaces" -> <|
                    "PrimaryKey" -> <|"ConstraintName" -> None, 
                    "Columns" -> {"id"}|>, "ForeignKeys" -> {}, 
                    "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|"id" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_name" -> <|"Nullable" -> False, 
                    "BackendType" -> {"String", 32}, "NativeTypeString" -> 
                    "VARCHAR(32)"|>|>, "Schema" -> "public"|>, 
                    "de_tab_medicinesideeffects" -> <|
                    "PrimaryKey" -> <|"ConstraintName" -> None, 
                    "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {<|
                    "ConstraintName" -> 
                    "de_ctl_medicine_de_tab_medicinesideeffects_fk", 
                    "FromColumns" -> {"de_medicineid"}, "ToColumns" -> {"id"},
                     "ToTable" -> "de_ctl_medicines", "OnUpdate" -> None, 
                    "OnDelete" -> None, "Initially" -> None, "Deferrable" -> 
                    None|>}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|"id" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_medicineid" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 128}, 
                    "NativeTypeString" -> "VARCHAR(128)"|>, 
                    "de_name" -> <|"Nullable" -> False, 
                    "BackendType" -> {"String", 32}, "NativeTypeString" -> 
                    "VARCHAR(32)"|>|>, "Schema" -> "public"|>|>, "ID" -> 
                    "1bz6rjcncj0zs"|>, 
                    
                    DatabaseReference[<|
                    "Backend" -> "postgresql", "Username" -> "st190333_", 
                    "Password" -> "1234", "Host" -> "localhost", "Port" -> 
                    None, "Name" -> "st190333_dblab3", "Options" -> <||>|>]], 
                    Editable -> False, SelectWithContents -> True, Selectable -> 
                    False], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"PostgreSQL", 
                    
                    RelationalDatabase[<|
                    "Tables" -> <|
                    "de_ctl_patients" -> <|
                    "PrimaryKey" -> <|
                    "ConstraintName" -> None, "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {<|
                    "ConstraintName" -> "de_ctl_genders_de_ctl_patients_fk", 
                    "FromColumns" -> {"de_genderid"}, "ToColumns" -> {"id"}, 
                    "ToTable" -> "de_ctl_genders", "OnUpdate" -> None, 
                    "OnDelete" -> None, "Initially" -> None, "Deferrable" -> 
                    None|>}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|
                    "id" -> <|"Nullable" -> False, "BackendType" -> "Integer",
                     "NativeTypeString" -> "INTEGER"|>, 
                    "de_surname" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>, 
                    "de_name" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>, 
                    "de_patronymic" -> <|
                    "Nullable" -> True, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>, 
                    "de_birthday" -> <|
                    "Nullable" -> True, "BackendType" -> "Date", 
                    "NativeTypeString" -> "DATE"|>, 
                    "de_address" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 128}, 
                    "NativeTypeString" -> "VARCHAR(128)"|>, 
                    "de_genderid" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>|>, "Schema" -> 
                    "public"|>, 
                    "de_ctl_medicines" -> <|
                    "PrimaryKey" -> <|
                    "ConstraintName" -> None, "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, 
                    "Indexes" -> {}, 
                    "Columns" -> <|
                    "id" -> <|"Nullable" -> False, 
                    "BackendType" -> {"String", 128}, "NativeTypeString" -> 
                    "VARCHAR(128)"|>, 
                    "de_name" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 256}, 
                    "NativeTypeString" -> "VARCHAR(256)"|>, 
                    "de_methodtaking" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 1024}, 
                    "NativeTypeString" -> "VARCHAR(1024)"|>|>, "Schema" -> 
                    "public"|>, 
                    "de_doc_inspection" -> <|
                    "PrimaryKey" -> <|
                    "ConstraintName" -> None, "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {<|
                    "ConstraintName" -> 
                    "de_ctl_patients_de_doc_inspection_fk", 
                    "FromColumns" -> {"de_patientid"}, "ToColumns" -> {"id"}, 
                    "ToTable" -> "de_ctl_patients", "OnUpdate" -> None, 
                    "OnDelete" -> None, "Initially" -> None, "Deferrable" -> 
                    None|>, <|"ConstraintName" -> 
                    "de_ctl_diagnosis_de_doc_inspection_fk", 
                    "FromColumns" -> {"de_diagnosisid"}, 
                    "ToColumns" -> {"id"}, "ToTable" -> "de_ctl_diagnosis", 
                    "OnUpdate" -> None, "OnDelete" -> None, "Initially" -> 
                    None, "Deferrable" -> None|>, <|
                    "ConstraintName" -> 
                    "de_ctl_inspectionplaces_de_doc_inspection_fk", 
                    "FromColumns" -> {"de_placeid"}, "ToColumns" -> {"id"}, 
                    "ToTable" -> "de_ctl_inspectionplaces", "OnUpdate" -> 
                    None, "OnDelete" -> None, "Initially" -> None, 
                    "Deferrable" -> None|>, <|
                    "ConstraintName" -> "de_ctl_doctors_de_doc_inspection_fk",
                     "FromColumns" -> {"de_doctorid"}, "ToColumns" -> {"id"}, 
                    "ToTable" -> "de_ctl_doctors", "OnUpdate" -> None, 
                    "OnDelete" -> None, "Initially" -> None, "Deferrable" -> 
                    None|>}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|
                    "id" -> <|"Nullable" -> False, 
                    "BackendType" -> {"String", 128}, "NativeTypeString" -> 
                    "VARCHAR(128)"|>, 
                    "de_starttime" -> <|
                    "Nullable" -> False, "BackendType" -> {"DateTime", False},
                     "NativeTypeString" -> "TIMESTAMP WITHOUT TIME ZONE"|>, 
                    "de_endtime" -> <|
                    "Nullable" -> False, "BackendType" -> {"DateTime", False},
                     "NativeTypeString" -> "TIMESTAMP WITHOUT TIME ZONE"|>, 
                    "de_placeid" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_diagnosisid" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_patientid" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_doctorid" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>|>, "Schema" -> 
                    "public"|>, 
                    "de_tab_inspectionmedicines" -> <|
                    "PrimaryKey" -> <|
                    "ConstraintName" -> None, "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {<|
                    "ConstraintName" -> 
                    "de_doc_inspection_de_tab_inspectionmedicine_fk", 
                    "FromColumns" -> {"de_inspectionid"}, 
                    "ToColumns" -> {"id"}, "ToTable" -> "de_doc_inspection", 
                    "OnUpdate" -> None, "OnDelete" -> None, "Initially" -> 
                    None, "Deferrable" -> None|>, <|
                    "ConstraintName" -> 
                    "de_ctl_medicine_de_tab_inspectionmedicine_fk", 
                    "FromColumns" -> {"de_medicineid"}, "ToColumns" -> {"id"},
                     "ToTable" -> "de_ctl_medicines", "OnUpdate" -> None, 
                    "OnDelete" -> None, "Initially" -> None, "Deferrable" -> 
                    None|>}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|
                    "id" -> <|"Nullable" -> False, "BackendType" -> "Integer",
                     "NativeTypeString" -> "INTEGER"|>, 
                    "de_inspectionid" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 128}, 
                    "NativeTypeString" -> "VARCHAR(128)"|>, 
                    "de_medicineid" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 128}, 
                    "NativeTypeString" -> "VARCHAR(128)"|>|>, "Schema" -> 
                    "public"|>, 
                    "de_tab_inspectionsymptoms" -> <|
                    "PrimaryKey" -> <|
                    "ConstraintName" -> None, "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {<|
                    "ConstraintName" -> 
                    "de_doc_inspection_de_tab_inspectionsymptomes_fk", 
                    "FromColumns" -> {"de_inspectionid"}, 
                    "ToColumns" -> {"id"}, "ToTable" -> "de_doc_inspection", 
                    "OnUpdate" -> None, "OnDelete" -> None, "Initially" -> 
                    None, "Deferrable" -> None|>, <|
                    "ConstraintName" -> 
                    "de_ctl_symptoms_de_tab_inspectionsymptoms_fk", 
                    "FromColumns" -> {"de_symptomid"}, "ToColumns" -> {"id"}, 
                    "ToTable" -> "de_ctl_symptoms", "OnUpdate" -> None, 
                    "OnDelete" -> None, "Initially" -> None, "Deferrable" -> 
                    None|>}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|
                    "id" -> <|"Nullable" -> False, "BackendType" -> "Integer",
                     "NativeTypeString" -> "INTEGER"|>, 
                    "de_inspectionid" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 128}, 
                    "NativeTypeString" -> "VARCHAR(128)"|>, 
                    "de_symptomid" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>|>, "Schema" -> 
                    "public"|>, 
                    "de_ctl_genders" -> <|
                    "PrimaryKey" -> <|
                    "ConstraintName" -> None, "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, 
                    "Indexes" -> {}, 
                    "Columns" -> <|
                    "id" -> <|"Nullable" -> False, "BackendType" -> "Integer",
                     "NativeTypeString" -> "INTEGER"|>, 
                    "de_name" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>|>, "Schema" -> 
                    "public"|>, 
                    "de_ctl_doctors" -> <|
                    "PrimaryKey" -> <|
                    "ConstraintName" -> None, "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, 
                    "Indexes" -> {}, 
                    "Columns" -> <|
                    "id" -> <|"Nullable" -> False, "BackendType" -> "Integer",
                     "NativeTypeString" -> "INTEGER"|>, 
                    "de_region" -> <|
                    "Nullable" -> True, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_office" -> <|
                    "Nullable" -> True, "BackendType" -> {"String", 16}, 
                    "NativeTypeString" -> "VARCHAR(16)"|>, 
                    "de_surname" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>, 
                    "de_name" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>, 
                    "de_patronymic" -> <|
                    "Nullable" -> True, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>|>, "Schema" -> 
                    "public"|>, 
                    "de_ctl_symptoms" -> <|
                    "PrimaryKey" -> <|
                    "ConstraintName" -> None, "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, 
                    "Indexes" -> {}, 
                    "Columns" -> <|
                    "id" -> <|"Nullable" -> False, "BackendType" -> "Integer",
                     "NativeTypeString" -> "INTEGER"|>, 
                    "de_name" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>|>, "Schema" -> 
                    "public"|>, 
                    "de_ctl_diagnosis" -> <|
                    "PrimaryKey" -> <|
                    "ConstraintName" -> None, "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, 
                    "Indexes" -> {}, 
                    "Columns" -> <|
                    "id" -> <|"Nullable" -> False, "BackendType" -> "Integer",
                     "NativeTypeString" -> "INTEGER"|>, 
                    "de_name" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 16}, 
                    "NativeTypeString" -> "VARCHAR(16)"|>, 
                    "de_description" -> <|
                    "Nullable" -> True, "BackendType" -> {"String", 1024}, 
                    "NativeTypeString" -> "VARCHAR(1024)"|>|>, "Schema" -> 
                    "public"|>, 
                    "de_ctl_inspectionplaces" -> <|
                    "PrimaryKey" -> <|
                    "ConstraintName" -> None, "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, 
                    "Indexes" -> {}, 
                    "Columns" -> <|
                    "id" -> <|"Nullable" -> False, "BackendType" -> "Integer",
                     "NativeTypeString" -> "INTEGER"|>, 
                    "de_name" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>|>, "Schema" -> 
                    "public"|>, 
                    "de_tab_medicinesideeffects" -> <|
                    "PrimaryKey" -> <|
                    "ConstraintName" -> None, "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {<|
                    "ConstraintName" -> 
                    "de_ctl_medicine_de_tab_medicinesideeffects_fk", 
                    "FromColumns" -> {"de_medicineid"}, "ToColumns" -> {"id"},
                     "ToTable" -> "de_ctl_medicines", "OnUpdate" -> None, 
                    "OnDelete" -> None, "Initially" -> None, "Deferrable" -> 
                    None|>}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|
                    "id" -> <|"Nullable" -> False, "BackendType" -> "Integer",
                     "NativeTypeString" -> "INTEGER"|>, 
                    "de_medicineid" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 128}, 
                    "NativeTypeString" -> "VARCHAR(128)"|>, 
                    "de_name" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>|>, "Schema" -> 
                    "public"|>|>, "ID" -> "1bz6rjcncj0zs"|>, 
                    DatabaseReference[<|
                    "Backend" -> "postgresql", "Username" -> "st190333_", 
                    "Password" -> "1234", "Host" -> "localhost", "Port" -> 
                    None, "Name" -> "st190333_dblab3", "Options" -> <||>|>]]},
                     False]], DynamicModuleValues :> {}], Setting[#, {0}]& ], 
                  "SummaryItem"]}]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.04], {
               FaceForm[{
                 RGBColor[0.984, 0.969, 0.91], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{17., 10.}, {
                6., 10.}, {4.343, 10.}, {3., 11.343}, {3., 13.}, {3., 20.}, {
                3., 21.657}, {4.343, 23.}, {6., 23.}, {17., 23.}, {18.657, 
                23.}, {20., 21.657}, {20., 20.}, {20., 13.}, {20., 11.343}, {
                18.657, 10.}, {17., 10.}}}]}, {
               FaceForm[{
                 RGBColor[0.996, 0.506, 0.004], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                 1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {0, 
                 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{6., 22.5}, {4.622, 22.5}, {3.5, 21.379}, {3.5, 
                 20.}, {3.5, 13.}, {3.5, 11.620999999999999`}, {4.622, 
                 10.5}, {6., 10.5}, {17., 10.5}, {18.379, 10.5}, {19.5, 
                 11.620999999999999`}, {19.5, 13.}, {19.5, 20.}, {19.5, 
                 21.379}, {18.379, 22.5}, {17., 22.5}}, {{17., 9.5}, {6., 
                 9.5}, {4.07, 9.5}, {2.5, 11.07}, {2.5, 13.}, {2.5, 20.}, {
                 2.5, 21.93}, {4.07, 23.5}, {6., 23.5}, {17., 23.5}, {18.93, 
                 23.5}, {20.5, 21.93}, {20.5, 20.}, {20.5, 13.}, {20.5, 
                 11.07}, {18.93, 9.5}, {17., 9.5}}}]}, {
               FaceForm[{
                 RGBColor[0.012, 0.612, 0.996], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5, 12.5}, {14.5, 12.5}, {
                14.5, 14.5}, {12.5, 14.5}}, {{8.5, 14.5}, {10.5, 14.5}, {10.5,
                 12.5}, {8.5, 12.5}}}]}, {
               FaceForm[{
                 RGBColor[0.537, 0.537, 0.537], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAFdBwitD6EbDLDzGwwdUNRj8E2gfE0cfCM0
9UZo5hsRoE3Q1MPMl0LjC+HgG6Gph/FVobQ+qnvR+XD/qqLxpdDUK2Lno6vH
MM8ITT063wRNvYkDAOvQJ0o=
                "]]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}}}, {{{18., 12.}, {15.791, 12.}, {14., 
                11.104}, {14., 10.}, {14., 4.}, {14., 2.896000000000001}, {
                15.791, 2.}, {18., 2.}, {20.209, 2.}, {22., 
                2.896000000000001}, {22., 4.}, {22., 10.}, {22., 11.104}, {
                20.209, 12.}, {18., 12.}}}]}, {
               FaceForm[{
                 RGBColor[0.537, 0.537, 0.537], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                 0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
                 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                 0}, {1, 3, 3}}}, {{{18., 5.5}, {15.997, 5.5}, {14.5, 
                 6.292}, {14.5, 7.}, {14.5, 8.411}, {15.312, 7.853}, {16.547, 
                 7.5}, {18., 7.5}, {19.453, 7.5}, {20.688, 7.853}, {21.5, 
                 8.411}, {21.5, 7.}, {21.5, 6.292}, {20.003, 5.5}, {18., 
                 5.5}}, {{21.5, 4.}, {21.5, 3.292}, {20.003, 2.5}, {18., 
                 2.5}, {15.997, 2.5}, {14.5, 3.292}, {14.5, 4.}, {14.5, 
                 5.411}, {15.312, 4.853}, {16.547, 4.5}, {18., 4.5}, {19.453, 
                 4.5}, {20.688, 4.853}, {21.5, 5.411}}, {{18., 11.5}, {20.003,
                  11.5}, {21.5, 10.708}, {21.5, 10.}, {21.5, 9.292}, {20.003, 
                 8.5}, {18., 8.5}, {15.997, 8.5}, {14.5, 9.292}, {14.5, 
                 10.}, {14.5, 10.708}, {15.997, 11.5}, {18., 11.5}}, {{18., 
                 12.5}, {15.435, 12.5}, {13.5, 11.425}, {13.5, 10.}, {13.5, 
                 4.}, {13.5, 2.575}, {15.435, 1.5}, {18., 1.5}, {20.565, 
                 1.5}, {22.5, 2.575}, {22.5, 4.}, {22.5, 10.}, {22.5, 
                 11.425}, {20.565, 12.5}, {18., 12.5}}}]}}, AspectRatio -> 
             Automatic, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], PlotRange -> {{0., 25.}, {0., 25.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Type count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["11", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"RelationalDatabase: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"PostgreSQL\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"PostgreSQL\""}, {"", 
                    PaneBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["RelationalDatabase", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04], {
                    FaceForm[{
                    RGBColor[0.651, 0.651, 0.651], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{20.5, 4.}, {20.5, 3.724}, {20.276, 
                    3.5}, {20., 3.5}, {6., 3.5}, {5.724, 3.5}, {5.5, 3.724}, {
                    5.5, 4.}, {5.5, 21.}, {5.5, 21.276}, {5.724, 21.5}, {6., 
                    21.5}, {20., 21.5}, {20.276, 21.5}, {20.5, 21.276}, {20.5,
                     21.}}, {{20.5, 22.5}, {5.5, 22.5}, {4.947999999999999, 
                    22.5}, {4.5, 22.053}, {4.5, 21.5}, {4.5, 3.5}, {4.5, 
                    2.947}, {4.947999999999999, 2.5}, {5.5, 2.5}, {20.5, 
                    2.5}, {21.052, 2.5}, {21.5, 2.947}, {21.5, 3.5}, {21.5, 
                    21.5}, {21.5, 22.053}, {21.052, 22.5}, {20.5, 22.5}}}]}, {
                    
                    FaceForm[{
                    RGBColor[0.8670000000000001, 0.067, 0.], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, CompressedData["
1:eJxtj69Lg1EYhT80CZ84xjSM68VN5tjGfjnFYPksJkUwiRYRrQoGs2Ay2AUR
m1YRGVjEYBCrf4DJ7L/g2N05l/egMC7Pju/Zc0oHJ9tH40mSTAw+U4PPWII/
lw2f8+XwJjny9XH+4u1zUvI0az7d/j6sRw5v5K/Ng9zOy5LcL0k/2JGfP85e
74qzknv2ge3vefrYe+S6D9wTn574IsfeyOGNHPwW5X5R+sGObH2Re/bZvT0y
fOw9ct0H7opPV3yRY2/k8EYOfh2570g/2JGtL3LPPru3S4aPvUeu+0aczFuf
ARtf5mm2d7j6vXVVlr2R72/e5x5PS3Jfkn6wIxtf5p59dm+ZDB97D1/dB66K
T1V8kWPvguyNHPwqcl+RfrAjW1/knn127wIZPvYevroP3BCfhvgix9667I0c
/GpyX5N+sCNbX+SefXZvnQwfew9f3Qdui09bfJGn2e6wvyV7Iwe/ptw3pR/s
yNYXuWef3dsiw8few1f3gWfEZ0Z8kaej3mnZWyBvrFyu7f/k5T4v/WBHtr7I
Pfvs3gIZPvYevrrPy/foL8p9Uf4PnCPbfchT9oFtT5r1R79j7+GVE46e1s/z
7f/7vcv+AMXQVQk=
                    "]]}, {
                    FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{20.5, 4.}, {
                    20.5, 3.724}, {20.276, 3.5}, {20., 3.5}, {6., 3.5}, {
                    5.724, 3.5}, {5.5, 3.724}, {5.5, 4.}, {5.5, 21.}, {5.5, 
                    21.276}, {5.724, 21.5}, {6., 21.5}, {20., 21.5}, {20.276, 
                    21.5}, {20.5, 21.276}, {20.5, 21.}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}}}, {{{13., 18.}, {10.239, 18.}, {
                    8., 17.015}, {8., 15.8}, {8., 9.2}, {8., 
                    7.984999999999999}, {10.239, 7.}, {13., 7.}, {15.761, 
                    7.}, {18., 7.984999999999999}, {18., 9.2}, {18., 15.8}, {
                    18., 17.015}, {15.761, 18.}, {13., 18.}}}]}, {
                    FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}}}, {{{13., 10.8633}, {10.314, 
                    10.8633}, {8.6, 11.833300000000001`}, {8.6, 
                    12.500300000000001`}, {8.6, 14.1133}, {9.586, 13.4603}, {
                    11.151, 13.0463}, {13., 13.0463}, {14.849, 13.0463}, {
                    16.414, 13.4603}, {17.4, 14.1133}, {17.4, 
                    12.500300000000001`}, {17.4, 11.833300000000001`}, {
                    15.686, 10.8633}, {13., 10.8633}}, {{17.4, 9.2273}, {17.4,
                     8.560300000000002}, {15.686, 7.5913}, {13., 7.5913}, {
                    10.314, 7.5913}, {8.6, 8.560300000000002}, {8.6, 
                    9.2273}, {8.6, 10.8413}, {9.586, 10.1873}, {11.151, 
                    9.772300000000001}, {13., 9.772300000000001}, {14.849, 
                    9.772300000000001}, {16.414, 10.1873}, {17.4, 
                    10.8413}}, {{13., 17.4093}, {15.686, 17.4093}, {17.4, 
                    16.439300000000003`}, {17.4, 15.772300000000001`}, {17.4, 
                    15.1053}, {15.686, 14.1363}, {13., 14.1363}, {10.314, 
                    14.1363}, {8.6, 15.1053}, {8.6, 15.772300000000001`}, {
                    8.6, 16.439300000000003`}, {10.314, 17.4093}, {13., 
                    17.4093}}, {{13., 18.5003}, {9.864, 18.5003}, {7.5, 
                    17.3273}, {7.5, 15.772300000000001`}, {7.5, 9.2273}, {7.5,
                     7.673300000000001}, {9.864, 6.500300000000001}, {13., 
                    6.500300000000001}, {16.136, 6.500300000000001}, {18.5, 
                    7.673300000000001}, {18.5, 9.2273}, {18.5, 
                    15.772300000000001`}, {18.5, 17.3273}, {16.136, 
                    18.5003}, {13., 18.5003}}}]}}, {
                    ImageSize -> Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 25.}, {0., 25.}}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Table count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["11", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Backend: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"PostgreSQL\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04], {
                    FaceForm[{
                    RGBColor[0.651, 0.651, 0.651], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{20.5, 4.}, {20.5, 3.724}, {20.276, 
                    3.5}, {20., 3.5}, {6., 3.5}, {5.724, 3.5}, {5.5, 3.724}, {
                    5.5, 4.}, {5.5, 21.}, {5.5, 21.276}, {5.724, 21.5}, {6., 
                    21.5}, {20., 21.5}, {20.276, 21.5}, {20.5, 21.276}, {20.5,
                     21.}}, {{20.5, 22.5}, {5.5, 22.5}, {4.947999999999999, 
                    22.5}, {4.5, 22.053}, {4.5, 21.5}, {4.5, 3.5}, {4.5, 
                    2.947}, {4.947999999999999, 2.5}, {5.5, 2.5}, {20.5, 
                    2.5}, {21.052, 2.5}, {21.5, 2.947}, {21.5, 3.5}, {21.5, 
                    21.5}, {21.5, 22.053}, {21.052, 22.5}, {20.5, 22.5}}}]}, {
                    
                    FaceForm[{
                    RGBColor[0.8670000000000001, 0.067, 0.], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, CompressedData["
1:eJxtj69Lg1EYhT80CZ84xjSM68VN5tjGfjnFYPksJkUwiRYRrQoGs2Ay2AUR
m1YRGVjEYBCrf4DJ7L/g2N05l/egMC7Pju/Zc0oHJ9tH40mSTAw+U4PPWII/
lw2f8+XwJjny9XH+4u1zUvI0az7d/j6sRw5v5K/Ng9zOy5LcL0k/2JGfP85e
74qzknv2ge3vefrYe+S6D9wTn574IsfeyOGNHPwW5X5R+sGObH2Re/bZvT0y
fOw9ct0H7opPV3yRY2/k8EYOfh2570g/2JGtL3LPPru3S4aPvUeu+0aczFuf
ARtf5mm2d7j6vXVVlr2R72/e5x5PS3Jfkn6wIxtf5p59dm+ZDB97D1/dB66K
T1V8kWPvguyNHPwqcl+RfrAjW1/knn127wIZPvYevroP3BCfhvgix9667I0c
/GpyX5N+sCNbX+SefXZvnQwfew9f3Qdui09bfJGn2e6wvyV7Iwe/ptw3pR/s
yNYXuWef3dsiw8few1f3gWfEZ0Z8kaej3mnZWyBvrFyu7f/k5T4v/WBHtr7I
Pfvs3gIZPvYevrrPy/foL8p9Uf4PnCPbfchT9oFtT5r1R79j7+GVE46e1s/z
7f/7vcv+AMXQVQk=
                    "]]}, {
                    FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{20.5, 4.}, {
                    20.5, 3.724}, {20.276, 3.5}, {20., 3.5}, {6., 3.5}, {
                    5.724, 3.5}, {5.5, 3.724}, {5.5, 4.}, {5.5, 21.}, {5.5, 
                    21.276}, {5.724, 21.5}, {6., 21.5}, {20., 21.5}, {20.276, 
                    21.5}, {20.5, 21.276}, {20.5, 21.}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}}}, {{{13., 18.}, {10.239, 18.}, {
                    8., 17.015}, {8., 15.8}, {8., 9.2}, {8., 
                    7.984999999999999}, {10.239, 7.}, {13., 7.}, {15.761, 
                    7.}, {18., 7.984999999999999}, {18., 9.2}, {18., 15.8}, {
                    18., 17.015}, {15.761, 18.}, {13., 18.}}}]}, {
                    FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}}}, {{{13., 10.8633}, {10.314, 
                    10.8633}, {8.6, 11.833300000000001`}, {8.6, 
                    12.500300000000001`}, {8.6, 14.1133}, {9.586, 13.4603}, {
                    11.151, 13.0463}, {13., 13.0463}, {14.849, 13.0463}, {
                    16.414, 13.4603}, {17.4, 14.1133}, {17.4, 
                    12.500300000000001`}, {17.4, 11.833300000000001`}, {
                    15.686, 10.8633}, {13., 10.8633}}, {{17.4, 9.2273}, {17.4,
                     8.560300000000002}, {15.686, 7.5913}, {13., 7.5913}, {
                    10.314, 7.5913}, {8.6, 8.560300000000002}, {8.6, 
                    9.2273}, {8.6, 10.8413}, {9.586, 10.1873}, {11.151, 
                    9.772300000000001}, {13., 9.772300000000001}, {14.849, 
                    9.772300000000001}, {16.414, 10.1873}, {17.4, 
                    10.8413}}, {{13., 17.4093}, {15.686, 17.4093}, {17.4, 
                    16.439300000000003`}, {17.4, 15.772300000000001`}, {17.4, 
                    15.1053}, {15.686, 14.1363}, {13., 14.1363}, {10.314, 
                    14.1363}, {8.6, 15.1053}, {8.6, 15.772300000000001`}, {
                    8.6, 16.439300000000003`}, {10.314, 17.4093}, {13., 
                    17.4093}}, {{13., 18.5003}, {9.864, 18.5003}, {7.5, 
                    17.3273}, {7.5, 15.772300000000001`}, {7.5, 9.2273}, {7.5,
                     7.673300000000001}, {9.864, 6.500300000000001}, {13., 
                    6.500300000000001}, {16.136, 6.500300000000001}, {18.5, 
                    7.673300000000001}, {18.5, 9.2273}, {18.5, 
                    15.772300000000001`}, {18.5, 17.3273}, {16.136, 
                    18.5003}, {13., 18.5003}}}]}}, {
                    ImageSize -> Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 25.}, {0., 25.}}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Table count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["11", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Backend: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"PostgreSQL\"", "SummaryItem"]}]}, {
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox["\"Tables: \"", "SummaryItemAnnotation"], 
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_patients\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_patients\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_surname\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_surname\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(32)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_surname\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_surname", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_surname"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(32)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"de_name\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_patronymic\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_patronymic\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(32)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_patronymic\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_patronymic", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_patronymic"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_birthday\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_birthday\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"DATE\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_birthday\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_birthday", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "DATE"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_birthday"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_address\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_address\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(128)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_address\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_address", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_address"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_genderid\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_genderid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_genderid\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_genderid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_genderid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_ctl_patients", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_surname", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_surname"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_patronymic", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_patronymic"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"de_birthday", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "DATE"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_birthday"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"de_address", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_address"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_genderid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_genderid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}]}]}, 
                    False]], DynamicModuleValues -> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_medicines\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_medicines\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(128)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(256)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"de_name\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(256)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_methodtaking\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_methodtaking\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(1024)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_methodtaking\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_methodtaking", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(1024)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_methodtaking"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_ctl_medicines", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(256)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_methodtaking", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(1024)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_methodtaking"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}]}]}, 
                    False]], DynamicModuleValues -> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_doc_inspection\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_doc_inspection\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(128)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_starttime\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_starttime\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"TIMESTAMP WITHOUT TIME ZONE\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_starttime\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_starttime", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "TIMESTAMP WITHOUT TIME ZONE"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_starttime"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_endtime\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_endtime\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"TIMESTAMP WITHOUT TIME ZONE\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_endtime\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_endtime", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "TIMESTAMP WITHOUT TIME ZONE"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_endtime"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_placeid\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_placeid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_placeid\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_placeid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_placeid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_diagnosisid\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_diagnosisid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_diagnosisid\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_diagnosisid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_diagnosisid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_patientid\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_patientid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_patientid\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_patientid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_patientid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_doctorid\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_doctorid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_doctorid\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_doctorid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_doctorid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_doc_inspection", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_starttime", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "TIMESTAMP WITHOUT TIME ZONE"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_starttime"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_endtime", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "TIMESTAMP WITHOUT TIME ZONE"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_endtime"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_placeid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_placeid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_diagnosisid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_diagnosisid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_patientid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_patientid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_doctorid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_doctorid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}]}]}, 
                    False]], DynamicModuleValues -> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_tab_inspectionmedicines\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_tab_inspectionmedicines\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_inspectionid\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_inspectionid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(128)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_inspectionid\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_inspectionid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_inspectionid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_medicineid\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_medicineid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(128)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_medicineid\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_medicineid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_medicineid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_tab_inspectionmedicines", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_inspectionid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_inspectionid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_medicineid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_medicineid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}]}]}, 
                    False]], DynamicModuleValues -> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_tab_inspectionsymptoms\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_tab_inspectionsymptoms\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_inspectionid\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_inspectionid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(128)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_inspectionid\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_inspectionid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_inspectionid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_symptomid\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_symptomid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_symptomid\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_symptomid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_symptomid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_tab_inspectionsymptoms", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_inspectionid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_inspectionid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_symptomid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_symptomid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}]}]}, 
                    False]], DynamicModuleValues -> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_genders\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_genders\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(32)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"de_name\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_ctl_genders", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}]}]}, 
                    False]], DynamicModuleValues -> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_doctors\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_doctors\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_region\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_region\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"de_region\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_region", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_region"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_office\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_office\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(16)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"de_office\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_office", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(16)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_office"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_surname\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_surname\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(32)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_surname\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_surname", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_surname"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(32)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"de_name\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_patronymic\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_patronymic\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(32)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_patronymic\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_patronymic", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_patronymic"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_ctl_doctors", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_region", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_region"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"de_office", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(16)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_office"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"de_surname", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_surname"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_patronymic", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_patronymic"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}]}]}, False]],
                     DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_symptoms\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_symptoms\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(32)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"de_name\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_ctl_symptoms", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}]}]}, 
                    False]], DynamicModuleValues -> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_diagnosis\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_diagnosis\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(16)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"de_name\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(16)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_description\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_description\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(1024)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_description\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_description", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(1024)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_description"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_ctl_diagnosis", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(16)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_description", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(1024)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_description"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}]}]}, False]],
                     DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_inspectionplaces\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_inspectionplaces\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(32)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"de_name\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_ctl_inspectionplaces", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}]}]}, 
                    False]], DynamicModuleValues -> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_tab_medicinesideeffects\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_tab_medicinesideeffects\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_medicineid\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_medicineid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(128)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_medicineid\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_medicineid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_medicineid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(32)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"de_name\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_tab_medicinesideeffects", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_medicineid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_medicineid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}]}]}, 
                    False]], DynamicModuleValues -> Automatic], 
                    Setting[#, {0}]& ]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    
                    RelationalDatabase[<|
                    "Tables" -> <|"de_ctl_patients" -> <|
                    "PrimaryKey" -> <|"ConstraintName" -> None, 
                    "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {<|
                    "ConstraintName" -> "de_ctl_genders_de_ctl_patients_fk", 
                    "FromColumns" -> {"de_genderid"}, "ToColumns" -> {"id"}, 
                    "ToTable" -> "de_ctl_genders", "OnUpdate" -> None, 
                    "OnDelete" -> None, "Initially" -> None, "Deferrable" -> 
                    None|>}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|"id" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_surname" -> <|"Nullable" -> False, 
                    "BackendType" -> {"String", 32}, "NativeTypeString" -> 
                    "VARCHAR(32)"|>, "de_name" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>, 
                    "de_patronymic" -> <|
                    "Nullable" -> True, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>, 
                    "de_birthday" -> <|"Nullable" -> True, "BackendType" -> 
                    "Date", "NativeTypeString" -> "DATE"|>, 
                    "de_address" -> <|"Nullable" -> False, 
                    "BackendType" -> {"String", 128}, "NativeTypeString" -> 
                    "VARCHAR(128)"|>, "de_genderid" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>|>, "Schema" -> 
                    "public"|>, "de_ctl_medicines" -> <|
                    "PrimaryKey" -> <|"ConstraintName" -> None, 
                    "Columns" -> {"id"}|>, "ForeignKeys" -> {}, 
                    "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|"id" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 128}, 
                    "NativeTypeString" -> "VARCHAR(128)"|>, 
                    "de_name" -> <|"Nullable" -> False, 
                    "BackendType" -> {"String", 256}, "NativeTypeString" -> 
                    "VARCHAR(256)"|>, "de_methodtaking" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 1024}, 
                    "NativeTypeString" -> "VARCHAR(1024)"|>|>, "Schema" -> 
                    "public"|>, "de_doc_inspection" -> <|
                    "PrimaryKey" -> <|"ConstraintName" -> None, 
                    "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {<|
                    "ConstraintName" -> 
                    "de_ctl_patients_de_doc_inspection_fk", 
                    "FromColumns" -> {"de_patientid"}, "ToColumns" -> {"id"}, 
                    "ToTable" -> "de_ctl_patients", "OnUpdate" -> None, 
                    "OnDelete" -> None, "Initially" -> None, "Deferrable" -> 
                    None|>, <|"ConstraintName" -> 
                    "de_ctl_diagnosis_de_doc_inspection_fk", 
                    "FromColumns" -> {"de_diagnosisid"}, 
                    "ToColumns" -> {"id"}, "ToTable" -> "de_ctl_diagnosis", 
                    "OnUpdate" -> None, "OnDelete" -> None, "Initially" -> 
                    None, "Deferrable" -> None|>, <|
                    "ConstraintName" -> 
                    "de_ctl_inspectionplaces_de_doc_inspection_fk", 
                    "FromColumns" -> {"de_placeid"}, "ToColumns" -> {"id"}, 
                    "ToTable" -> "de_ctl_inspectionplaces", "OnUpdate" -> 
                    None, "OnDelete" -> None, "Initially" -> None, 
                    "Deferrable" -> None|>, <|
                    "ConstraintName" -> "de_ctl_doctors_de_doc_inspection_fk",
                     "FromColumns" -> {"de_doctorid"}, "ToColumns" -> {"id"}, 
                    "ToTable" -> "de_ctl_doctors", "OnUpdate" -> None, 
                    "OnDelete" -> None, "Initially" -> None, "Deferrable" -> 
                    None|>}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|"id" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 128}, 
                    "NativeTypeString" -> "VARCHAR(128)"|>, 
                    "de_starttime" -> <|"Nullable" -> False, 
                    "BackendType" -> {"DateTime", False}, "NativeTypeString" -> 
                    "TIMESTAMP WITHOUT TIME ZONE"|>, 
                    "de_endtime" -> <|"Nullable" -> False, 
                    "BackendType" -> {"DateTime", False}, "NativeTypeString" -> 
                    "TIMESTAMP WITHOUT TIME ZONE"|>, 
                    "de_placeid" -> <|"Nullable" -> False, "BackendType" -> 
                    "Integer", "NativeTypeString" -> "INTEGER"|>, 
                    "de_diagnosisid" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_patientid" -> <|"Nullable" -> False, "BackendType" -> 
                    "Integer", "NativeTypeString" -> "INTEGER"|>, 
                    "de_doctorid" -> <|"Nullable" -> False, "BackendType" -> 
                    "Integer", "NativeTypeString" -> "INTEGER"|>|>, "Schema" -> 
                    "public"|>, "de_tab_inspectionmedicines" -> <|
                    "PrimaryKey" -> <|"ConstraintName" -> None, 
                    "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {<|
                    "ConstraintName" -> 
                    "de_doc_inspection_de_tab_inspectionmedicine_fk", 
                    "FromColumns" -> {"de_inspectionid"}, 
                    "ToColumns" -> {"id"}, "ToTable" -> "de_doc_inspection", 
                    "OnUpdate" -> None, "OnDelete" -> None, "Initially" -> 
                    None, "Deferrable" -> None|>, <|
                    "ConstraintName" -> 
                    "de_ctl_medicine_de_tab_inspectionmedicine_fk", 
                    "FromColumns" -> {"de_medicineid"}, "ToColumns" -> {"id"},
                     "ToTable" -> "de_ctl_medicines", "OnUpdate" -> None, 
                    "OnDelete" -> None, "Initially" -> None, "Deferrable" -> 
                    None|>}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|"id" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_inspectionid" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 128}, 
                    "NativeTypeString" -> "VARCHAR(128)"|>, 
                    "de_medicineid" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 128}, 
                    "NativeTypeString" -> "VARCHAR(128)"|>|>, "Schema" -> 
                    "public"|>, "de_tab_inspectionsymptoms" -> <|
                    "PrimaryKey" -> <|"ConstraintName" -> None, 
                    "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {<|
                    "ConstraintName" -> 
                    "de_doc_inspection_de_tab_inspectionsymptomes_fk", 
                    "FromColumns" -> {"de_inspectionid"}, 
                    "ToColumns" -> {"id"}, "ToTable" -> "de_doc_inspection", 
                    "OnUpdate" -> None, "OnDelete" -> None, "Initially" -> 
                    None, "Deferrable" -> None|>, <|
                    "ConstraintName" -> 
                    "de_ctl_symptoms_de_tab_inspectionsymptoms_fk", 
                    "FromColumns" -> {"de_symptomid"}, "ToColumns" -> {"id"}, 
                    "ToTable" -> "de_ctl_symptoms", "OnUpdate" -> None, 
                    "OnDelete" -> None, "Initially" -> None, "Deferrable" -> 
                    None|>}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|"id" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_inspectionid" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 128}, 
                    "NativeTypeString" -> "VARCHAR(128)"|>, 
                    "de_symptomid" -> <|"Nullable" -> False, "BackendType" -> 
                    "Integer", "NativeTypeString" -> "INTEGER"|>|>, "Schema" -> 
                    "public"|>, "de_ctl_genders" -> <|
                    "PrimaryKey" -> <|"ConstraintName" -> None, 
                    "Columns" -> {"id"}|>, "ForeignKeys" -> {}, 
                    "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|"id" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_name" -> <|"Nullable" -> False, 
                    "BackendType" -> {"String", 32}, "NativeTypeString" -> 
                    "VARCHAR(32)"|>|>, "Schema" -> "public"|>, 
                    "de_ctl_doctors" -> <|
                    "PrimaryKey" -> <|"ConstraintName" -> None, 
                    "Columns" -> {"id"}|>, "ForeignKeys" -> {}, 
                    "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|"id" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_region" -> <|"Nullable" -> True, "BackendType" -> 
                    "Integer", "NativeTypeString" -> "INTEGER"|>, 
                    "de_office" -> <|"Nullable" -> True, 
                    "BackendType" -> {"String", 16}, "NativeTypeString" -> 
                    "VARCHAR(16)"|>, "de_surname" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>, 
                    "de_name" -> <|"Nullable" -> False, 
                    "BackendType" -> {"String", 32}, "NativeTypeString" -> 
                    "VARCHAR(32)"|>, "de_patronymic" -> <|
                    "Nullable" -> True, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>|>, "Schema" -> 
                    "public"|>, "de_ctl_symptoms" -> <|
                    "PrimaryKey" -> <|"ConstraintName" -> None, 
                    "Columns" -> {"id"}|>, "ForeignKeys" -> {}, 
                    "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|"id" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_name" -> <|"Nullable" -> False, 
                    "BackendType" -> {"String", 32}, "NativeTypeString" -> 
                    "VARCHAR(32)"|>|>, "Schema" -> "public"|>, 
                    "de_ctl_diagnosis" -> <|
                    "PrimaryKey" -> <|"ConstraintName" -> None, 
                    "Columns" -> {"id"}|>, "ForeignKeys" -> {}, 
                    "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|"id" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_name" -> <|"Nullable" -> False, 
                    "BackendType" -> {"String", 16}, "NativeTypeString" -> 
                    "VARCHAR(16)"|>, "de_description" -> <|
                    "Nullable" -> True, "BackendType" -> {"String", 1024}, 
                    "NativeTypeString" -> "VARCHAR(1024)"|>|>, "Schema" -> 
                    "public"|>, "de_ctl_inspectionplaces" -> <|
                    "PrimaryKey" -> <|"ConstraintName" -> None, 
                    "Columns" -> {"id"}|>, "ForeignKeys" -> {}, 
                    "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|"id" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_name" -> <|"Nullable" -> False, 
                    "BackendType" -> {"String", 32}, "NativeTypeString" -> 
                    "VARCHAR(32)"|>|>, "Schema" -> "public"|>, 
                    "de_tab_medicinesideeffects" -> <|
                    "PrimaryKey" -> <|"ConstraintName" -> None, 
                    "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {<|
                    "ConstraintName" -> 
                    "de_ctl_medicine_de_tab_medicinesideeffects_fk", 
                    "FromColumns" -> {"de_medicineid"}, "ToColumns" -> {"id"},
                     "ToTable" -> "de_ctl_medicines", "OnUpdate" -> None, 
                    "OnDelete" -> None, "Initially" -> None, "Deferrable" -> 
                    None|>}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|"id" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_medicineid" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 128}, 
                    "NativeTypeString" -> "VARCHAR(128)"|>, 
                    "de_name" -> <|"Nullable" -> False, 
                    "BackendType" -> {"String", 32}, "NativeTypeString" -> 
                    "VARCHAR(32)"|>|>, "Schema" -> "public"|>|>, "ID" -> 
                    "1bz6rjcncj0zs"|>, 
                    
                    DatabaseReference[<|
                    "Backend" -> "postgresql", "Username" -> "st190333_", 
                    "Password" -> "1234", "Host" -> "localhost", "Port" -> 
                    None, "Name" -> "st190333_dblab3", "Options" -> <||>|>]], 
                    Editable -> False, SelectWithContents -> True, Selectable -> 
                    False], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"PostgreSQL", 
                    
                    RelationalDatabase[<|
                    "Tables" -> <|
                    "de_ctl_patients" -> <|
                    "PrimaryKey" -> <|
                    "ConstraintName" -> None, "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {<|
                    "ConstraintName" -> "de_ctl_genders_de_ctl_patients_fk", 
                    "FromColumns" -> {"de_genderid"}, "ToColumns" -> {"id"}, 
                    "ToTable" -> "de_ctl_genders", "OnUpdate" -> None, 
                    "OnDelete" -> None, "Initially" -> None, "Deferrable" -> 
                    None|>}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|
                    "id" -> <|"Nullable" -> False, "BackendType" -> "Integer",
                     "NativeTypeString" -> "INTEGER"|>, 
                    "de_surname" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>, 
                    "de_name" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>, 
                    "de_patronymic" -> <|
                    "Nullable" -> True, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>, 
                    "de_birthday" -> <|
                    "Nullable" -> True, "BackendType" -> "Date", 
                    "NativeTypeString" -> "DATE"|>, 
                    "de_address" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 128}, 
                    "NativeTypeString" -> "VARCHAR(128)"|>, 
                    "de_genderid" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>|>, "Schema" -> 
                    "public"|>, 
                    "de_ctl_medicines" -> <|
                    "PrimaryKey" -> <|
                    "ConstraintName" -> None, "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, 
                    "Indexes" -> {}, 
                    "Columns" -> <|
                    "id" -> <|"Nullable" -> False, 
                    "BackendType" -> {"String", 128}, "NativeTypeString" -> 
                    "VARCHAR(128)"|>, 
                    "de_name" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 256}, 
                    "NativeTypeString" -> "VARCHAR(256)"|>, 
                    "de_methodtaking" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 1024}, 
                    "NativeTypeString" -> "VARCHAR(1024)"|>|>, "Schema" -> 
                    "public"|>, 
                    "de_doc_inspection" -> <|
                    "PrimaryKey" -> <|
                    "ConstraintName" -> None, "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {<|
                    "ConstraintName" -> 
                    "de_ctl_patients_de_doc_inspection_fk", 
                    "FromColumns" -> {"de_patientid"}, "ToColumns" -> {"id"}, 
                    "ToTable" -> "de_ctl_patients", "OnUpdate" -> None, 
                    "OnDelete" -> None, "Initially" -> None, "Deferrable" -> 
                    None|>, <|"ConstraintName" -> 
                    "de_ctl_diagnosis_de_doc_inspection_fk", 
                    "FromColumns" -> {"de_diagnosisid"}, 
                    "ToColumns" -> {"id"}, "ToTable" -> "de_ctl_diagnosis", 
                    "OnUpdate" -> None, "OnDelete" -> None, "Initially" -> 
                    None, "Deferrable" -> None|>, <|
                    "ConstraintName" -> 
                    "de_ctl_inspectionplaces_de_doc_inspection_fk", 
                    "FromColumns" -> {"de_placeid"}, "ToColumns" -> {"id"}, 
                    "ToTable" -> "de_ctl_inspectionplaces", "OnUpdate" -> 
                    None, "OnDelete" -> None, "Initially" -> None, 
                    "Deferrable" -> None|>, <|
                    "ConstraintName" -> "de_ctl_doctors_de_doc_inspection_fk",
                     "FromColumns" -> {"de_doctorid"}, "ToColumns" -> {"id"}, 
                    "ToTable" -> "de_ctl_doctors", "OnUpdate" -> None, 
                    "OnDelete" -> None, "Initially" -> None, "Deferrable" -> 
                    None|>}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|
                    "id" -> <|"Nullable" -> False, 
                    "BackendType" -> {"String", 128}, "NativeTypeString" -> 
                    "VARCHAR(128)"|>, 
                    "de_starttime" -> <|
                    "Nullable" -> False, "BackendType" -> {"DateTime", False},
                     "NativeTypeString" -> "TIMESTAMP WITHOUT TIME ZONE"|>, 
                    "de_endtime" -> <|
                    "Nullable" -> False, "BackendType" -> {"DateTime", False},
                     "NativeTypeString" -> "TIMESTAMP WITHOUT TIME ZONE"|>, 
                    "de_placeid" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_diagnosisid" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_patientid" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_doctorid" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>|>, "Schema" -> 
                    "public"|>, 
                    "de_tab_inspectionmedicines" -> <|
                    "PrimaryKey" -> <|
                    "ConstraintName" -> None, "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {<|
                    "ConstraintName" -> 
                    "de_doc_inspection_de_tab_inspectionmedicine_fk", 
                    "FromColumns" -> {"de_inspectionid"}, 
                    "ToColumns" -> {"id"}, "ToTable" -> "de_doc_inspection", 
                    "OnUpdate" -> None, "OnDelete" -> None, "Initially" -> 
                    None, "Deferrable" -> None|>, <|
                    "ConstraintName" -> 
                    "de_ctl_medicine_de_tab_inspectionmedicine_fk", 
                    "FromColumns" -> {"de_medicineid"}, "ToColumns" -> {"id"},
                     "ToTable" -> "de_ctl_medicines", "OnUpdate" -> None, 
                    "OnDelete" -> None, "Initially" -> None, "Deferrable" -> 
                    None|>}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|
                    "id" -> <|"Nullable" -> False, "BackendType" -> "Integer",
                     "NativeTypeString" -> "INTEGER"|>, 
                    "de_inspectionid" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 128}, 
                    "NativeTypeString" -> "VARCHAR(128)"|>, 
                    "de_medicineid" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 128}, 
                    "NativeTypeString" -> "VARCHAR(128)"|>|>, "Schema" -> 
                    "public"|>, 
                    "de_tab_inspectionsymptoms" -> <|
                    "PrimaryKey" -> <|
                    "ConstraintName" -> None, "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {<|
                    "ConstraintName" -> 
                    "de_doc_inspection_de_tab_inspectionsymptomes_fk", 
                    "FromColumns" -> {"de_inspectionid"}, 
                    "ToColumns" -> {"id"}, "ToTable" -> "de_doc_inspection", 
                    "OnUpdate" -> None, "OnDelete" -> None, "Initially" -> 
                    None, "Deferrable" -> None|>, <|
                    "ConstraintName" -> 
                    "de_ctl_symptoms_de_tab_inspectionsymptoms_fk", 
                    "FromColumns" -> {"de_symptomid"}, "ToColumns" -> {"id"}, 
                    "ToTable" -> "de_ctl_symptoms", "OnUpdate" -> None, 
                    "OnDelete" -> None, "Initially" -> None, "Deferrable" -> 
                    None|>}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|
                    "id" -> <|"Nullable" -> False, "BackendType" -> "Integer",
                     "NativeTypeString" -> "INTEGER"|>, 
                    "de_inspectionid" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 128}, 
                    "NativeTypeString" -> "VARCHAR(128)"|>, 
                    "de_symptomid" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>|>, "Schema" -> 
                    "public"|>, 
                    "de_ctl_genders" -> <|
                    "PrimaryKey" -> <|
                    "ConstraintName" -> None, "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, 
                    "Indexes" -> {}, 
                    "Columns" -> <|
                    "id" -> <|"Nullable" -> False, "BackendType" -> "Integer",
                     "NativeTypeString" -> "INTEGER"|>, 
                    "de_name" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>|>, "Schema" -> 
                    "public"|>, 
                    "de_ctl_doctors" -> <|
                    "PrimaryKey" -> <|
                    "ConstraintName" -> None, "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, 
                    "Indexes" -> {}, 
                    "Columns" -> <|
                    "id" -> <|"Nullable" -> False, "BackendType" -> "Integer",
                     "NativeTypeString" -> "INTEGER"|>, 
                    "de_region" -> <|
                    "Nullable" -> True, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_office" -> <|
                    "Nullable" -> True, "BackendType" -> {"String", 16}, 
                    "NativeTypeString" -> "VARCHAR(16)"|>, 
                    "de_surname" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>, 
                    "de_name" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>, 
                    "de_patronymic" -> <|
                    "Nullable" -> True, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>|>, "Schema" -> 
                    "public"|>, 
                    "de_ctl_symptoms" -> <|
                    "PrimaryKey" -> <|
                    "ConstraintName" -> None, "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, 
                    "Indexes" -> {}, 
                    "Columns" -> <|
                    "id" -> <|"Nullable" -> False, "BackendType" -> "Integer",
                     "NativeTypeString" -> "INTEGER"|>, 
                    "de_name" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>|>, "Schema" -> 
                    "public"|>, 
                    "de_ctl_diagnosis" -> <|
                    "PrimaryKey" -> <|
                    "ConstraintName" -> None, "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, 
                    "Indexes" -> {}, 
                    "Columns" -> <|
                    "id" -> <|"Nullable" -> False, "BackendType" -> "Integer",
                     "NativeTypeString" -> "INTEGER"|>, 
                    "de_name" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 16}, 
                    "NativeTypeString" -> "VARCHAR(16)"|>, 
                    "de_description" -> <|
                    "Nullable" -> True, "BackendType" -> {"String", 1024}, 
                    "NativeTypeString" -> "VARCHAR(1024)"|>|>, "Schema" -> 
                    "public"|>, 
                    "de_ctl_inspectionplaces" -> <|
                    "PrimaryKey" -> <|
                    "ConstraintName" -> None, "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, 
                    "Indexes" -> {}, 
                    "Columns" -> <|
                    "id" -> <|"Nullable" -> False, "BackendType" -> "Integer",
                     "NativeTypeString" -> "INTEGER"|>, 
                    "de_name" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>|>, "Schema" -> 
                    "public"|>, 
                    "de_tab_medicinesideeffects" -> <|
                    "PrimaryKey" -> <|
                    "ConstraintName" -> None, "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {<|
                    "ConstraintName" -> 
                    "de_ctl_medicine_de_tab_medicinesideeffects_fk", 
                    "FromColumns" -> {"de_medicineid"}, "ToColumns" -> {"id"},
                     "ToTable" -> "de_ctl_medicines", "OnUpdate" -> None, 
                    "OnDelete" -> None, "Initially" -> None, "Deferrable" -> 
                    None|>}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|
                    "id" -> <|"Nullable" -> False, "BackendType" -> "Integer",
                     "NativeTypeString" -> "INTEGER"|>, 
                    "de_medicineid" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 128}, 
                    "NativeTypeString" -> "VARCHAR(128)"|>, 
                    "de_name" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>|>, "Schema" -> 
                    "public"|>|>, "ID" -> "1bz6rjcncj0zs"|>, 
                    
                    DatabaseReference[<|
                    "Backend" -> "postgresql", "Username" -> "st190333_", 
                    "Password" -> "1234", "Host" -> "localhost", "Port" -> 
                    None, "Name" -> "st190333_dblab3", "Options" -> <||>|>]]},
                     False]], DynamicModuleValues :> Automatic], 
                   Setting[#, {0}]& ], "SummaryItem"]}]}, {
               TagBox[
                TagBox[
                 GridBox[{{
                    TagBox["\"Types: \"", "SummaryItemAnnotation"], 
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_ctl_patients\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_ctl_patients\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"id\"", StripOnInput -> False, FontWeight -> Bold]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"id\"", StripOnInput -> False, FontWeight -> Bold]}, {
                    "", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_patients\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "\"id\""}}, 
                    AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Style["id", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_patients"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id"}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_surname\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_surname\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_patients\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_surname\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_surname", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_patients"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_surname"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_name\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_patients\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_name\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_patients"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_name"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_patronymic\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_patronymic\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_patients\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_patronymic\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_patronymic", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_patients"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_patronymic"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_birthday\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_birthday\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_patients\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_birthday\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_birthday", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_patients"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_birthday"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_address\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_address\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_patients\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_address\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_address", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_patients"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_address"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_genderid\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_genderid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_patients\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_genderid\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_genderid", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_patients"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_genderid"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[RightArrow] \"", 
                    StyleBox[
                    "\"de_ctl_genders\"", Underlined, StripOnInput -> False]},
                     "RowDefault"]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[RightArrow] \"", 
                    StyleBox[
                    "\"de_ctl_genders\"", Underlined, StripOnInput -> False]},
                     "RowDefault"]}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Relation\""}, {
                    StyleBox[
                    "\"DestinationModel:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_genders\""}, {
                    StyleBox[
                    "\"ModelMapping:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    RowBox[{"{", 
                    RowBox[{"\"de_genderid\"", "\[Rule]", "\"id\""}], "}"}]}},
                     AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Row[{"\[RightArrow] ", 
                    Style["de_ctl_genders", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_ctl_genders"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"de_genderid" -> "id"}}}, Alignment -> 
                    Left]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[LeftArrow] \"", 
                    StyleBox[
                    "\"de_doc_inspection\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[LeftArrow] \"", 
                    StyleBox["\"de_doc_inspection\"", Underlined, 
                    StripOnInput -> False]}, "RowDefault"]}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Relation\""}, {
                    StyleBox[
                    "\"DestinationModel:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_doc_inspection\""}, {
                    StyleBox[
                    "\"ModelMapping:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    RowBox[{"{", 
                    RowBox[{"\"id\"", "\[Rule]", "\"de_patientid\""}], 
                    "}"}]}}, AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Row[{"\[LeftArrow] ", 
                    Style["de_doc_inspection", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_doc_inspection"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"id" -> "de_patientid"}}}, Alignment -> 
                    Left]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}}, DefaultBaseStyle -> "Column", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_ctl_patients", 
                    Column[{
                    OpenerView[{
                    Style["id", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_patients"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id"}}, Alignment -> Left]}], 
                    OpenerView[{"de_surname", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_patients"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_surname"}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_patients"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_name"}}, Alignment -> Left]}], 
                    OpenerView[{"de_patronymic", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_patients"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_patronymic"}}, Alignment -> Left]}], 
                    
                    OpenerView[{"de_birthday", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_patients"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_birthday"}}, Alignment -> Left]}], 
                    OpenerView[{"de_address", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_patients"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_address"}}, Alignment -> Left]}], 
                    OpenerView[{"de_genderid", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_patients"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_genderid"}}, Alignment -> Left]}], 
                    OpenerView[{
                    Row[{"\[RightArrow] ", 
                    Style["de_ctl_genders", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_ctl_genders"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"de_genderid" -> "id"}}}, Alignment -> 
                    Left]}], 
                    OpenerView[{
                    Row[{"\[LeftArrow] ", 
                    Style["de_doc_inspection", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_doc_inspection"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"id" -> "de_patientid"}}}, Alignment -> 
                    Left]}]}]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_ctl_medicines\""}}, AutoDelete -> False,
                     BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_ctl_medicines\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"id\"", StripOnInput -> False, FontWeight -> Bold]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"id\"", StripOnInput -> False, FontWeight -> Bold]}, {
                    "", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_medicines\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "\"id\""}}, 
                    AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Style["id", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_medicines"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id"}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_name\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_medicines\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_name\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_medicines"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_name"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_methodtaking\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_methodtaking\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_medicines\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_methodtaking\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_methodtaking", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_medicines"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_methodtaking"}}, Alignment -> Left]},
                     False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[LeftArrow] \"", 
                    StyleBox[
                    "\"de_tab_inspectionmedicines\"", Underlined, 
                    StripOnInput -> False]}, "RowDefault"]}}, AutoDelete -> 
                    False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[LeftArrow] \"", 
                    StyleBox[
                    "\"de_tab_inspectionmedicines\"", Underlined, 
                    StripOnInput -> False]}, "RowDefault"]}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Relation\""}, {
                    StyleBox[
                    "\"DestinationModel:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_tab_inspectionmedicines\""}, {
                    StyleBox[
                    "\"ModelMapping:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    RowBox[{"{", 
                    RowBox[{"\"id\"", "\[Rule]", "\"de_medicineid\""}], 
                    "}"}]}}, AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Row[{"\[LeftArrow] ", 
                    Style["de_tab_inspectionmedicines", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_tab_inspectionmedicines"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"id" -> "de_medicineid"}}}, Alignment -> 
                    Left]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[LeftArrow] \"", 
                    StyleBox[
                    "\"de_tab_medicinesideeffects\"", Underlined, 
                    StripOnInput -> False]}, "RowDefault"]}}, AutoDelete -> 
                    False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[LeftArrow] \"", 
                    StyleBox[
                    "\"de_tab_medicinesideeffects\"", Underlined, 
                    StripOnInput -> False]}, "RowDefault"]}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Relation\""}, {
                    StyleBox[
                    "\"DestinationModel:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_tab_medicinesideeffects\""}, {
                    StyleBox[
                    "\"ModelMapping:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    RowBox[{"{", 
                    RowBox[{"\"id\"", "\[Rule]", "\"de_medicineid\""}], 
                    "}"}]}}, AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Row[{"\[LeftArrow] ", 
                    Style["de_tab_medicinesideeffects", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_tab_medicinesideeffects"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"id" -> "de_medicineid"}}}, Alignment -> 
                    Left]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}}, DefaultBaseStyle -> "Column", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_ctl_medicines", 
                    Column[{
                    OpenerView[{
                    Style["id", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_medicines"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id"}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_medicines"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_name"}}, Alignment -> Left]}], 
                    OpenerView[{"de_methodtaking", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_medicines"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_methodtaking"}}, Alignment -> 
                    Left]}], 
                    OpenerView[{
                    Row[{"\[LeftArrow] ", 
                    Style["de_tab_inspectionmedicines", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_tab_inspectionmedicines"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"id" -> "de_medicineid"}}}, Alignment -> 
                    Left]}], 
                    OpenerView[{
                    Row[{"\[LeftArrow] ", 
                    Style["de_tab_medicinesideeffects", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_tab_medicinesideeffects"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"id" -> "de_medicineid"}}}, Alignment -> 
                    Left]}]}]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_doc_inspection\""}}, AutoDelete -> 
                    False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_doc_inspection\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"id\"", StripOnInput -> False, FontWeight -> Bold]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"id\"", StripOnInput -> False, FontWeight -> Bold]}, {
                    "", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_doc_inspection\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "\"id\""}}, 
                    AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Style["id", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_doc_inspection"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id"}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_starttime\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_starttime\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_doc_inspection\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_starttime\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_starttime", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_doc_inspection"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_starttime"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_endtime\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_endtime\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_doc_inspection\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_endtime\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_endtime", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_doc_inspection"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_endtime"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_placeid\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_placeid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_doc_inspection\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_placeid\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_placeid", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_doc_inspection"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_placeid"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_diagnosisid\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_diagnosisid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_doc_inspection\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_diagnosisid\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_diagnosisid", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_doc_inspection"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_diagnosisid"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_patientid\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_patientid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_doc_inspection\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_patientid\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_patientid", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_doc_inspection"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_patientid"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_doctorid\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_doctorid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_doc_inspection\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_doctorid\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_doctorid", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_doc_inspection"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_doctorid"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[RightArrow] \"", 
                    StyleBox[
                    "\"de_ctl_patients\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[RightArrow] \"", 
                    StyleBox[
                    "\"de_ctl_patients\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Relation\""}, {
                    StyleBox[
                    "\"DestinationModel:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_patients\""}, {
                    StyleBox[
                    "\"ModelMapping:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    RowBox[{"{", 
                    RowBox[{"\"de_patientid\"", "\[Rule]", "\"id\""}], 
                    "}"}]}}, AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Row[{"\[RightArrow] ", 
                    Style["de_ctl_patients", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_ctl_patients"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"de_patientid" -> "id"}}}, Alignment -> 
                    Left]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[RightArrow] \"", 
                    StyleBox[
                    "\"de_ctl_diagnosis\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[RightArrow] \"", 
                    StyleBox[
                    "\"de_ctl_diagnosis\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Relation\""}, {
                    StyleBox[
                    "\"DestinationModel:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_diagnosis\""}, {
                    StyleBox[
                    "\"ModelMapping:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    RowBox[{"{", 
                    RowBox[{"\"de_diagnosisid\"", "\[Rule]", "\"id\""}], 
                    "}"}]}}, AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Row[{"\[RightArrow] ", 
                    Style["de_ctl_diagnosis", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_ctl_diagnosis"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"de_diagnosisid" -> "id"}}}, Alignment -> 
                    Left]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[RightArrow] \"", 
                    StyleBox[
                    "\"de_ctl_inspectionplaces\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[RightArrow] \"", 
                    StyleBox[
                    "\"de_ctl_inspectionplaces\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Relation\""}, {
                    StyleBox[
                    "\"DestinationModel:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_inspectionplaces\""}, {
                    StyleBox[
                    "\"ModelMapping:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    RowBox[{"{", 
                    RowBox[{"\"de_placeid\"", "\[Rule]", "\"id\""}], "}"}]}}, 
                    AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Row[{"\[RightArrow] ", 
                    Style["de_ctl_inspectionplaces", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_ctl_inspectionplaces"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"de_placeid" -> "id"}}}, Alignment -> 
                    Left]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[RightArrow] \"", 
                    StyleBox[
                    "\"de_ctl_doctors\"", Underlined, StripOnInput -> False]},
                     "RowDefault"]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[RightArrow] \"", 
                    StyleBox[
                    "\"de_ctl_doctors\"", Underlined, StripOnInput -> False]},
                     "RowDefault"]}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Relation\""}, {
                    StyleBox[
                    "\"DestinationModel:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_doctors\""}, {
                    StyleBox[
                    "\"ModelMapping:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    RowBox[{"{", 
                    RowBox[{"\"de_doctorid\"", "\[Rule]", "\"id\""}], "}"}]}},
                     AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Row[{"\[RightArrow] ", 
                    Style["de_ctl_doctors", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_ctl_doctors"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"de_doctorid" -> "id"}}}, Alignment -> 
                    Left]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[LeftArrow] \"", 
                    StyleBox[
                    "\"de_tab_inspectionmedicines\"", Underlined, 
                    StripOnInput -> False]}, "RowDefault"]}}, AutoDelete -> 
                    False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[LeftArrow] \"", 
                    StyleBox[
                    "\"de_tab_inspectionmedicines\"", Underlined, 
                    StripOnInput -> False]}, "RowDefault"]}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Relation\""}, {
                    StyleBox[
                    "\"DestinationModel:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_tab_inspectionmedicines\""}, {
                    StyleBox[
                    "\"ModelMapping:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    RowBox[{"{", 
                    RowBox[{"\"id\"", "\[Rule]", "\"de_inspectionid\""}], 
                    "}"}]}}, AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Row[{"\[LeftArrow] ", 
                    Style["de_tab_inspectionmedicines", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_tab_inspectionmedicines"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"id" -> "de_inspectionid"}}}, Alignment -> 
                    Left]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[LeftArrow] \"", 
                    StyleBox[
                    "\"de_tab_inspectionsymptoms\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[LeftArrow] \"", 
                    StyleBox[
                    "\"de_tab_inspectionsymptoms\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Relation\""}, {
                    StyleBox[
                    "\"DestinationModel:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_tab_inspectionsymptoms\""}, {
                    StyleBox[
                    "\"ModelMapping:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    RowBox[{"{", 
                    RowBox[{"\"id\"", "\[Rule]", "\"de_inspectionid\""}], 
                    "}"}]}}, AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Row[{"\[LeftArrow] ", 
                    Style["de_tab_inspectionsymptoms", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_tab_inspectionsymptoms"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"id" -> "de_inspectionid"}}}, Alignment -> 
                    Left]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}}, DefaultBaseStyle -> "Column", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_doc_inspection", 
                    Column[{
                    OpenerView[{
                    Style["id", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_doc_inspection"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id"}}, Alignment -> Left]}], 
                    OpenerView[{"de_starttime", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_doc_inspection"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_starttime"}}, Alignment -> Left]}], 
                    OpenerView[{"de_endtime", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_doc_inspection"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_endtime"}}, Alignment -> Left]}], 
                    OpenerView[{"de_placeid", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_doc_inspection"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_placeid"}}, Alignment -> Left]}], 
                    OpenerView[{"de_diagnosisid", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_doc_inspection"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_diagnosisid"}}, Alignment -> Left]}], 
                    OpenerView[{"de_patientid", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_doc_inspection"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_patientid"}}, Alignment -> Left]}], 
                    OpenerView[{"de_doctorid", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_doc_inspection"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_doctorid"}}, Alignment -> Left]}], 
                    OpenerView[{
                    Row[{"\[RightArrow] ", 
                    Style["de_ctl_patients", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_ctl_patients"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"de_patientid" -> "id"}}}, Alignment -> 
                    Left]}], 
                    OpenerView[{
                    Row[{"\[RightArrow] ", 
                    Style["de_ctl_diagnosis", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_ctl_diagnosis"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"de_diagnosisid" -> "id"}}}, Alignment -> 
                    Left]}], 
                    OpenerView[{
                    Row[{"\[RightArrow] ", 
                    Style["de_ctl_inspectionplaces", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_ctl_inspectionplaces"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"de_placeid" -> "id"}}}, Alignment -> 
                    Left]}], 
                    OpenerView[{
                    Row[{"\[RightArrow] ", 
                    Style["de_ctl_doctors", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_ctl_doctors"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"de_doctorid" -> "id"}}}, Alignment -> 
                    Left]}], 
                    OpenerView[{
                    Row[{"\[LeftArrow] ", 
                    Style["de_tab_inspectionmedicines", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_tab_inspectionmedicines"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"id" -> "de_inspectionid"}}}, Alignment -> 
                    Left]}], 
                    OpenerView[{
                    Row[{"\[LeftArrow] ", 
                    Style["de_tab_inspectionsymptoms", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_tab_inspectionsymptoms"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"id" -> "de_inspectionid"}}}, Alignment -> 
                    Left]}]}]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_tab_inspectionmedicines\""}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_tab_inspectionmedicines\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"id\"", StripOnInput -> False, FontWeight -> Bold]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"id\"", StripOnInput -> False, FontWeight -> Bold]}, {
                    "", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_tab_inspectionmedicines\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "\"id\""}}, 
                    AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Style["id", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_tab_inspectionmedicines"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id"}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_inspectionid\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_inspectionid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_tab_inspectionmedicines\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_inspectionid\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_inspectionid", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_tab_inspectionmedicines"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_inspectionid"}}, Alignment -> Left]},
                     False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_medicineid\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_medicineid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_tab_inspectionmedicines\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_medicineid\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_medicineid", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_tab_inspectionmedicines"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_medicineid"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[RightArrow] \"", 
                    StyleBox[
                    "\"de_doc_inspection\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[RightArrow] \"", 
                    StyleBox[
                    "\"de_doc_inspection\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Relation\""}, {
                    StyleBox[
                    "\"DestinationModel:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_doc_inspection\""}, {
                    StyleBox[
                    "\"ModelMapping:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    RowBox[{"{", 
                    RowBox[{"\"de_inspectionid\"", "\[Rule]", "\"id\""}], 
                    "}"}]}}, AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Row[{"\[RightArrow] ", 
                    Style["de_doc_inspection", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_doc_inspection"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"de_inspectionid" -> "id"}}}, Alignment -> 
                    Left]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[RightArrow] \"", 
                    StyleBox[
                    "\"de_ctl_medicines\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[RightArrow] \"", 
                    StyleBox[
                    "\"de_ctl_medicines\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Relation\""}, {
                    StyleBox[
                    "\"DestinationModel:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_medicines\""}, {
                    StyleBox[
                    "\"ModelMapping:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    RowBox[{"{", 
                    RowBox[{"\"de_medicineid\"", "\[Rule]", "\"id\""}], 
                    "}"}]}}, AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Row[{"\[RightArrow] ", 
                    Style["de_ctl_medicines", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_ctl_medicines"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"de_medicineid" -> "id"}}}, Alignment -> 
                    Left]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}}, DefaultBaseStyle -> "Column", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_tab_inspectionmedicines", 
                    Column[{
                    OpenerView[{
                    Style["id", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_tab_inspectionmedicines"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id"}}, Alignment -> Left]}], 
                    OpenerView[{"de_inspectionid", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_tab_inspectionmedicines"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_inspectionid"}}, Alignment -> 
                    Left]}], 
                    OpenerView[{"de_medicineid", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_tab_inspectionmedicines"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_medicineid"}}, Alignment -> Left]}], 
                    
                    OpenerView[{
                    Row[{"\[RightArrow] ", 
                    Style["de_doc_inspection", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_doc_inspection"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"de_inspectionid" -> "id"}}}, Alignment -> 
                    Left]}], 
                    OpenerView[{
                    Row[{"\[RightArrow] ", 
                    Style["de_ctl_medicines", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_ctl_medicines"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"de_medicineid" -> "id"}}}, Alignment -> 
                    Left]}]}]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_tab_inspectionsymptoms\""}}, AutoDelete -> 
                    False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_tab_inspectionsymptoms\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"id\"", StripOnInput -> False, FontWeight -> Bold]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"id\"", StripOnInput -> False, FontWeight -> Bold]}, {
                    "", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_tab_inspectionsymptoms\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "\"id\""}}, 
                    AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Style["id", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_tab_inspectionsymptoms"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id"}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_inspectionid\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_inspectionid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_tab_inspectionsymptoms\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_inspectionid\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_inspectionid", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_tab_inspectionsymptoms"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_inspectionid"}}, Alignment -> Left]},
                     False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_symptomid\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_symptomid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_tab_inspectionsymptoms\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_symptomid\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_symptomid", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_tab_inspectionsymptoms"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_symptomid"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[RightArrow] \"", 
                    StyleBox[
                    "\"de_doc_inspection\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[RightArrow] \"", 
                    StyleBox[
                    "\"de_doc_inspection\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Relation\""}, {
                    StyleBox[
                    "\"DestinationModel:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_doc_inspection\""}, {
                    StyleBox[
                    "\"ModelMapping:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    RowBox[{"{", 
                    RowBox[{"\"de_inspectionid\"", "\[Rule]", "\"id\""}], 
                    "}"}]}}, AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Row[{"\[RightArrow] ", 
                    Style["de_doc_inspection", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_doc_inspection"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"de_inspectionid" -> "id"}}}, Alignment -> 
                    Left]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[RightArrow] \"", 
                    StyleBox[
                    "\"de_ctl_symptoms\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[RightArrow] \"", 
                    StyleBox[
                    "\"de_ctl_symptoms\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Relation\""}, {
                    StyleBox[
                    "\"DestinationModel:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_symptoms\""}, {
                    StyleBox[
                    "\"ModelMapping:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    RowBox[{"{", 
                    RowBox[{"\"de_symptomid\"", "\[Rule]", "\"id\""}], 
                    "}"}]}}, AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Row[{"\[RightArrow] ", 
                    Style["de_ctl_symptoms", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_ctl_symptoms"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"de_symptomid" -> "id"}}}, Alignment -> 
                    Left]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}}, DefaultBaseStyle -> "Column", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_tab_inspectionsymptoms", 
                    Column[{
                    OpenerView[{
                    Style["id", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_tab_inspectionsymptoms"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id"}}, Alignment -> Left]}], 
                    OpenerView[{"de_inspectionid", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_tab_inspectionsymptoms"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_inspectionid"}}, Alignment -> 
                    Left]}], 
                    OpenerView[{"de_symptomid", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_tab_inspectionsymptoms"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_symptomid"}}, Alignment -> Left]}], 
                    OpenerView[{
                    Row[{"\[RightArrow] ", 
                    Style["de_doc_inspection", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_doc_inspection"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"de_inspectionid" -> "id"}}}, Alignment -> 
                    Left]}], 
                    OpenerView[{
                    Row[{"\[RightArrow] ", 
                    Style["de_ctl_symptoms", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_ctl_symptoms"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"de_symptomid" -> "id"}}}, Alignment -> 
                    Left]}]}]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_ctl_genders\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_ctl_genders\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"id\"", StripOnInput -> False, FontWeight -> Bold]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"id\"", StripOnInput -> False, FontWeight -> Bold]}, {
                    "", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_genders\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "\"id\""}}, 
                    AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Style["id", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_genders"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id"}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_name\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_genders\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_name\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_genders"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_name"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[LeftArrow] \"", 
                    StyleBox[
                    "\"de_ctl_patients\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[LeftArrow] \"", 
                    StyleBox[
                    "\"de_ctl_patients\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Relation\""}, {
                    StyleBox[
                    "\"DestinationModel:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_patients\""}, {
                    StyleBox[
                    "\"ModelMapping:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    RowBox[{"{", 
                    RowBox[{"\"id\"", "\[Rule]", "\"de_genderid\""}], "}"}]}},
                     AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Row[{"\[LeftArrow] ", 
                    Style["de_ctl_patients", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_ctl_patients"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"id" -> "de_genderid"}}}, Alignment -> 
                    Left]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}}, DefaultBaseStyle -> "Column", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_ctl_genders", 
                    Column[{
                    OpenerView[{
                    Style["id", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_genders"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id"}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_genders"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_name"}}, Alignment -> Left]}], 
                    OpenerView[{
                    Row[{"\[LeftArrow] ", 
                    Style["de_ctl_patients", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_ctl_patients"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"id" -> "de_genderid"}}}, Alignment -> 
                    Left]}]}]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_ctl_doctors\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_ctl_doctors\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"id\"", StripOnInput -> False, FontWeight -> Bold]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"id\"", StripOnInput -> False, FontWeight -> Bold]}, {
                    "", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_doctors\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "\"id\""}}, 
                    AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Style["id", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_doctors"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id"}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_region\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_region\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_doctors\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_region\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_region", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_doctors"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_region"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_office\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_office\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_doctors\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_office\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_office", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_doctors"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_office"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_surname\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_surname\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_doctors\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_surname\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_surname", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_doctors"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_surname"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_name\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_doctors\""}, {
                    StyleBox["\"ColumnName:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"de_name\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_doctors"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_name"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_patronymic\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_patronymic\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_doctors\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_patronymic\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_patronymic", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_doctors"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_patronymic"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[LeftArrow] \"", 
                    StyleBox[
                    "\"de_doc_inspection\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[LeftArrow] \"", 
                    StyleBox[
                    "\"de_doc_inspection\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Relation\""}, {
                    StyleBox[
                    "\"DestinationModel:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_doc_inspection\""}, {
                    StyleBox[
                    "\"ModelMapping:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    RowBox[{"{", 
                    RowBox[{"\"id\"", "\[Rule]", "\"de_doctorid\""}], "}"}]}},
                     AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Row[{"\[LeftArrow] ", 
                    Style["de_doc_inspection", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_doc_inspection"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"id" -> "de_doctorid"}}}, Alignment -> 
                    Left]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}}, DefaultBaseStyle -> "Column", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_ctl_doctors", 
                    Column[{
                    OpenerView[{
                    Style["id", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_doctors"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id"}}, Alignment -> Left]}], 
                    OpenerView[{"de_region", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_doctors"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_region"}}, Alignment -> Left]}], 
                    OpenerView[{"de_office", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_doctors"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_office"}}, Alignment -> Left]}], 
                    OpenerView[{"de_surname", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_doctors"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_surname"}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_doctors"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_name"}}, Alignment -> Left]}], 
                    OpenerView[{"de_patronymic", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_doctors"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_patronymic"}}, Alignment -> Left]}], 
                    
                    OpenerView[{
                    Row[{"\[LeftArrow] ", 
                    Style["de_doc_inspection", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_doc_inspection"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"id" -> "de_doctorid"}}}, Alignment -> 
                    Left]}]}]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_ctl_symptoms\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_ctl_symptoms\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"id\"", StripOnInput -> False, FontWeight -> Bold]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"id\"", StripOnInput -> False, FontWeight -> Bold]}, {
                    "", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_symptoms\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "\"id\""}}, 
                    AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Style["id", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_symptoms"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id"}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_name\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_symptoms\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_name\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_symptoms"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_name"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[LeftArrow] \"", 
                    StyleBox[
                    "\"de_tab_inspectionsymptoms\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[LeftArrow] \"", 
                    StyleBox[
                    "\"de_tab_inspectionsymptoms\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Relation\""}, {
                    StyleBox[
                    "\"DestinationModel:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_tab_inspectionsymptoms\""}, {
                    StyleBox[
                    "\"ModelMapping:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    RowBox[{"{", 
                    RowBox[{"\"id\"", "\[Rule]", "\"de_symptomid\""}], 
                    "}"}]}}, AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Row[{"\[LeftArrow] ", 
                    Style["de_tab_inspectionsymptoms", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_tab_inspectionsymptoms"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"id" -> "de_symptomid"}}}, Alignment -> 
                    Left]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}}, DefaultBaseStyle -> "Column", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_ctl_symptoms", 
                    Column[{
                    OpenerView[{
                    Style["id", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_symptoms"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id"}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_symptoms"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_name"}}, Alignment -> Left]}], 
                    OpenerView[{
                    Row[{"\[LeftArrow] ", 
                    Style["de_tab_inspectionsymptoms", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_tab_inspectionsymptoms"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"id" -> "de_symptomid"}}}, Alignment -> 
                    Left]}]}]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_ctl_diagnosis\""}}, AutoDelete -> False,
                     BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_ctl_diagnosis\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"id\"", StripOnInput -> False, FontWeight -> Bold]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"id\"", StripOnInput -> False, FontWeight -> Bold]}, {
                    "", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_diagnosis\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "\"id\""}}, 
                    AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Style["id", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_diagnosis"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id"}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_name\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_diagnosis\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_name\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_diagnosis"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_name"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_description\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_description\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_diagnosis\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_description\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_description", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_diagnosis"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_description"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[LeftArrow] \"", 
                    StyleBox[
                    "\"de_doc_inspection\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[LeftArrow] \"", 
                    StyleBox[
                    "\"de_doc_inspection\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Relation\""}, {
                    StyleBox[
                    "\"DestinationModel:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_doc_inspection\""}, {
                    StyleBox[
                    "\"ModelMapping:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    RowBox[{"{", 
                    RowBox[{"\"id\"", "\[Rule]", "\"de_diagnosisid\""}], 
                    "}"}]}}, AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Row[{"\[LeftArrow] ", 
                    Style["de_doc_inspection", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_doc_inspection"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"id" -> "de_diagnosisid"}}}, Alignment -> 
                    Left]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}}, DefaultBaseStyle -> "Column", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_ctl_diagnosis", 
                    Column[{
                    OpenerView[{
                    Style["id", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_diagnosis"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id"}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_diagnosis"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_name"}}, Alignment -> Left]}], 
                    OpenerView[{"de_description", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_diagnosis"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_description"}}, Alignment -> Left]}], 
                    OpenerView[{
                    Row[{"\[LeftArrow] ", 
                    Style["de_doc_inspection", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_doc_inspection"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"id" -> "de_diagnosisid"}}}, Alignment -> 
                    Left]}]}]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_ctl_inspectionplaces\""}}, AutoDelete -> 
                    False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_ctl_inspectionplaces\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"id\"", StripOnInput -> False, FontWeight -> Bold]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"id\"", StripOnInput -> False, FontWeight -> Bold]}, {
                    "", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_inspectionplaces\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "\"id\""}}, 
                    AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Style["id", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_inspectionplaces"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id"}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_name\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_inspectionplaces\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_name\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_inspectionplaces"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_name"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[LeftArrow] \"", 
                    StyleBox[
                    "\"de_doc_inspection\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[LeftArrow] \"", 
                    StyleBox[
                    "\"de_doc_inspection\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Relation\""}, {
                    StyleBox[
                    "\"DestinationModel:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_doc_inspection\""}, {
                    StyleBox[
                    "\"ModelMapping:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    RowBox[{"{", 
                    RowBox[{"\"id\"", "\[Rule]", "\"de_placeid\""}], "}"}]}}, 
                    AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Row[{"\[LeftArrow] ", 
                    Style["de_doc_inspection", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_doc_inspection"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"id" -> "de_placeid"}}}, Alignment -> 
                    Left]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}}, DefaultBaseStyle -> "Column", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_ctl_inspectionplaces", 
                    Column[{
                    OpenerView[{
                    Style["id", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_inspectionplaces"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id"}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_inspectionplaces"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_name"}}, Alignment -> Left]}], 
                    OpenerView[{
                    Row[{"\[LeftArrow] ", 
                    Style["de_doc_inspection", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_doc_inspection"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"id" -> "de_placeid"}}}, Alignment -> 
                    Left]}]}]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_tab_medicinesideeffects\""}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_tab_medicinesideeffects\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox["\"id\"", StripOnInput -> False, FontWeight -> 
                    Bold]}}, AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"id\"", StripOnInput -> False, FontWeight -> Bold]}, {
                    "", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_tab_medicinesideeffects\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "\"id\""}}, 
                    AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Style["id", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_tab_medicinesideeffects"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id"}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_medicineid\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_medicineid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_tab_medicinesideeffects\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_medicineid\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_medicineid", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_tab_medicinesideeffects"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_medicineid"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_name\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_tab_medicinesideeffects\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_name\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_tab_medicinesideeffects"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_name"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[RightArrow] \"", 
                    StyleBox[
                    "\"de_ctl_medicines\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[RightArrow] \"", 
                    StyleBox[
                    "\"de_ctl_medicines\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Relation\""}, {
                    StyleBox[
                    "\"DestinationModel:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_medicines\""}, {
                    StyleBox[
                    "\"ModelMapping:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    RowBox[{"{", 
                    RowBox[{"\"de_medicineid\"", "\[Rule]", "\"id\""}], 
                    "}"}]}}, AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Row[{"\[RightArrow] ", 
                    Style["de_ctl_medicines", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_ctl_medicines"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"de_medicineid" -> "id"}}}, Alignment -> 
                    Left]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}}, DefaultBaseStyle -> "Column", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_tab_medicinesideeffects", 
                    Column[{
                    OpenerView[{
                    Style["id", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_tab_medicinesideeffects"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id"}}, Alignment -> Left]}], 
                    OpenerView[{"de_medicineid", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_tab_medicinesideeffects"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_medicineid"}}, Alignment -> Left]}], 
                    
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_tab_medicinesideeffects"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_name"}}, Alignment -> Left]}], 
                    OpenerView[{
                    Row[{"\[RightArrow] ", 
                    Style["de_ctl_medicines", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_ctl_medicines"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"de_medicineid" -> "id"}}}, Alignment -> 
                    Left]}]}]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}}, DefaultBaseStyle -> "Column", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]}}, AutoDelete -> False, 
                  GridBoxAlignment -> {"Rows" -> {{Top}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Grid"], "SummaryItem"]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  EntityStore[<|
   "Types" -> <|
     "de_ctl_patients" -> <|
       "EntityTypeExtractor" -> "de_ctl_patients", 
        "CanonicalNameProperties" -> {"id"}, 
        "Properties" -> <|
         "id" -> <|
           "ColumnPrefix" -> "de_ctl_patients", "ColumnName" -> "id"|>, 
          "de_surname" -> <|
           "ColumnPrefix" -> "de_ctl_patients", "ColumnName" -> 
            "de_surname"|>, 
          "de_name" -> <|
           "ColumnPrefix" -> "de_ctl_patients", "ColumnName" -> "de_name"|>, 
          "de_patronymic" -> <|
           "ColumnPrefix" -> "de_ctl_patients", "ColumnName" -> 
            "de_patronymic"|>, 
          "de_birthday" -> <|
           "ColumnPrefix" -> "de_ctl_patients", "ColumnName" -> 
            "de_birthday"|>, 
          "de_address" -> <|
           "ColumnPrefix" -> "de_ctl_patients", "ColumnName" -> 
            "de_address"|>, 
          "de_genderid" -> <|
           "ColumnPrefix" -> "de_ctl_patients", "ColumnName" -> 
            "de_genderid"|>, 
          "de_ctl_genders" -> <|
           "DestinationEntityType" -> "de_ctl_genders", 
            "EntityTypeMapping" -> {"de_genderid" -> "id"}|>, 
          "de_doc_inspection" -> <|
           "DestinationEntityType" -> "de_doc_inspection", 
            "EntityTypeMapping" -> {"id" -> "de_patientid"}|>|>|>, 
      "de_ctl_medicines" -> <|
       "EntityTypeExtractor" -> "de_ctl_medicines", 
        "CanonicalNameProperties" -> {"id"}, 
        "Properties" -> <|
         "id" -> <|
           "ColumnPrefix" -> "de_ctl_medicines", "ColumnName" -> "id"|>, 
          "de_name" -> <|
           "ColumnPrefix" -> "de_ctl_medicines", "ColumnName" -> "de_name"|>, 
          "de_methodtaking" -> <|
           "ColumnPrefix" -> "de_ctl_medicines", "ColumnName" -> 
            "de_methodtaking"|>, 
          "de_tab_inspectionmedicines" -> <|
           "DestinationEntityType" -> "de_tab_inspectionmedicines", 
            "EntityTypeMapping" -> {"id" -> "de_medicineid"}|>, 
          "de_tab_medicinesideeffects" -> <|
           "DestinationEntityType" -> "de_tab_medicinesideeffects", 
            "EntityTypeMapping" -> {"id" -> "de_medicineid"}|>|>|>, 
      "de_doc_inspection" -> <|
       "EntityTypeExtractor" -> "de_doc_inspection", 
        "CanonicalNameProperties" -> {"id"}, 
        "Properties" -> <|
         "id" -> <|
           "ColumnPrefix" -> "de_doc_inspection", "ColumnName" -> "id"|>, 
          "de_starttime" -> <|
           "ColumnPrefix" -> "de_doc_inspection", "ColumnName" -> 
            "de_starttime"|>, 
          "de_endtime" -> <|
           "ColumnPrefix" -> "de_doc_inspection", "ColumnName" -> 
            "de_endtime"|>, 
          "de_placeid" -> <|
           "ColumnPrefix" -> "de_doc_inspection", "ColumnName" -> 
            "de_placeid"|>, 
          "de_diagnosisid" -> <|
           "ColumnPrefix" -> "de_doc_inspection", "ColumnName" -> 
            "de_diagnosisid"|>, 
          "de_patientid" -> <|
           "ColumnPrefix" -> "de_doc_inspection", "ColumnName" -> 
            "de_patientid"|>, 
          "de_doctorid" -> <|
           "ColumnPrefix" -> "de_doc_inspection", "ColumnName" -> 
            "de_doctorid"|>, 
          "de_ctl_patients" -> <|
           "DestinationEntityType" -> "de_ctl_patients", 
            "EntityTypeMapping" -> {"de_patientid" -> "id"}|>, 
          "de_ctl_diagnosis" -> <|
           "DestinationEntityType" -> "de_ctl_diagnosis", 
            "EntityTypeMapping" -> {"de_diagnosisid" -> "id"}|>, 
          "de_ctl_inspectionplaces" -> <|
           "DestinationEntityType" -> "de_ctl_inspectionplaces", 
            "EntityTypeMapping" -> {"de_placeid" -> "id"}|>, 
          "de_ctl_doctors" -> <|
           "DestinationEntityType" -> "de_ctl_doctors", 
            "EntityTypeMapping" -> {"de_doctorid" -> "id"}|>, 
          "de_tab_inspectionmedicines" -> <|
           "DestinationEntityType" -> "de_tab_inspectionmedicines", 
            "EntityTypeMapping" -> {"id" -> "de_inspectionid"}|>, 
          "de_tab_inspectionsymptoms" -> <|
           "DestinationEntityType" -> "de_tab_inspectionsymptoms", 
            "EntityTypeMapping" -> {"id" -> "de_inspectionid"}|>|>|>, 
      "de_tab_inspectionmedicines" -> <|
       "EntityTypeExtractor" -> "de_tab_inspectionmedicines", 
        "CanonicalNameProperties" -> {"id"}, 
        "Properties" -> <|
         "id" -> <|
           "ColumnPrefix" -> "de_tab_inspectionmedicines", "ColumnName" -> 
            "id"|>, "de_inspectionid" -> <|
           "ColumnPrefix" -> "de_tab_inspectionmedicines", "ColumnName" -> 
            "de_inspectionid"|>, 
          "de_medicineid" -> <|
           "ColumnPrefix" -> "de_tab_inspectionmedicines", "ColumnName" -> 
            "de_medicineid"|>, 
          "de_doc_inspection" -> <|
           "DestinationEntityType" -> "de_doc_inspection", 
            "EntityTypeMapping" -> {"de_inspectionid" -> "id"}|>, 
          "de_ctl_medicines" -> <|
           "DestinationEntityType" -> "de_ctl_medicines", 
            "EntityTypeMapping" -> {"de_medicineid" -> "id"}|>|>|>, 
      "de_tab_inspectionsymptoms" -> <|
       "EntityTypeExtractor" -> "de_tab_inspectionsymptoms", 
        "CanonicalNameProperties" -> {"id"}, 
        "Properties" -> <|
         "id" -> <|
           "ColumnPrefix" -> "de_tab_inspectionsymptoms", "ColumnName" -> 
            "id"|>, "de_inspectionid" -> <|
           "ColumnPrefix" -> "de_tab_inspectionsymptoms", "ColumnName" -> 
            "de_inspectionid"|>, 
          "de_symptomid" -> <|
           "ColumnPrefix" -> "de_tab_inspectionsymptoms", "ColumnName" -> 
            "de_symptomid"|>, 
          "de_doc_inspection" -> <|
           "DestinationEntityType" -> "de_doc_inspection", 
            "EntityTypeMapping" -> {"de_inspectionid" -> "id"}|>, 
          "de_ctl_symptoms" -> <|
           "DestinationEntityType" -> "de_ctl_symptoms", 
            "EntityTypeMapping" -> {"de_symptomid" -> "id"}|>|>|>, 
      "de_ctl_genders" -> <|
       "EntityTypeExtractor" -> "de_ctl_genders", 
        "CanonicalNameProperties" -> {"id"}, 
        "Properties" -> <|
         "id" -> <|"ColumnPrefix" -> "de_ctl_genders", "ColumnName" -> "id"|>,
           "de_name" -> <|
           "ColumnPrefix" -> "de_ctl_genders", "ColumnName" -> "de_name"|>, 
          "de_ctl_patients" -> <|
           "DestinationEntityType" -> "de_ctl_patients", 
            "EntityTypeMapping" -> {"id" -> "de_genderid"}|>|>|>, 
      "de_ctl_doctors" -> <|
       "EntityTypeExtractor" -> "de_ctl_doctors", 
        "CanonicalNameProperties" -> {"id"}, 
        "Properties" -> <|
         "id" -> <|"ColumnPrefix" -> "de_ctl_doctors", "ColumnName" -> "id"|>,
           "de_region" -> <|
           "ColumnPrefix" -> "de_ctl_doctors", "ColumnName" -> "de_region"|>, 
          "de_office" -> <|
           "ColumnPrefix" -> "de_ctl_doctors", "ColumnName" -> "de_office"|>, 
          "de_surname" -> <|
           "ColumnPrefix" -> "de_ctl_doctors", "ColumnName" -> "de_surname"|>,
           "de_name" -> <|
           "ColumnPrefix" -> "de_ctl_doctors", "ColumnName" -> "de_name"|>, 
          "de_patronymic" -> <|
           "ColumnPrefix" -> "de_ctl_doctors", "ColumnName" -> 
            "de_patronymic"|>, 
          "de_doc_inspection" -> <|
           "DestinationEntityType" -> "de_doc_inspection", 
            "EntityTypeMapping" -> {"id" -> "de_doctorid"}|>|>|>, 
      "de_ctl_symptoms" -> <|
       "EntityTypeExtractor" -> "de_ctl_symptoms", 
        "CanonicalNameProperties" -> {"id"}, 
        "Properties" -> <|
         "id" -> <|
           "ColumnPrefix" -> "de_ctl_symptoms", "ColumnName" -> "id"|>, 
          "de_name" -> <|
           "ColumnPrefix" -> "de_ctl_symptoms", "ColumnName" -> "de_name"|>, 
          "de_tab_inspectionsymptoms" -> <|
           "DestinationEntityType" -> "de_tab_inspectionsymptoms", 
            "EntityTypeMapping" -> {"id" -> "de_symptomid"}|>|>|>, 
      "de_ctl_diagnosis" -> <|
       "EntityTypeExtractor" -> "de_ctl_diagnosis", 
        "CanonicalNameProperties" -> {"id"}, 
        "Properties" -> <|
         "id" -> <|
           "ColumnPrefix" -> "de_ctl_diagnosis", "ColumnName" -> "id"|>, 
          "de_name" -> <|
           "ColumnPrefix" -> "de_ctl_diagnosis", "ColumnName" -> "de_name"|>, 
          "de_description" -> <|
           "ColumnPrefix" -> "de_ctl_diagnosis", "ColumnName" -> 
            "de_description"|>, 
          "de_doc_inspection" -> <|
           "DestinationEntityType" -> "de_doc_inspection", 
            "EntityTypeMapping" -> {"id" -> "de_diagnosisid"}|>|>|>, 
      "de_ctl_inspectionplaces" -> <|
       "EntityTypeExtractor" -> "de_ctl_inspectionplaces", 
        "CanonicalNameProperties" -> {"id"}, 
        "Properties" -> <|
         "id" -> <|
           "ColumnPrefix" -> "de_ctl_inspectionplaces", "ColumnName" -> 
            "id"|>, "de_name" -> <|
           "ColumnPrefix" -> "de_ctl_inspectionplaces", "ColumnName" -> 
            "de_name"|>, 
          "de_doc_inspection" -> <|
           "DestinationEntityType" -> "de_doc_inspection", 
            "EntityTypeMapping" -> {"id" -> "de_placeid"}|>|>|>, 
      "de_tab_medicinesideeffects" -> <|
       "EntityTypeExtractor" -> "de_tab_medicinesideeffects", 
        "CanonicalNameProperties" -> {"id"}, 
        "Properties" -> <|
         "id" -> <|
           "ColumnPrefix" -> "de_tab_medicinesideeffects", "ColumnName" -> 
            "id"|>, "de_medicineid" -> <|
           "ColumnPrefix" -> "de_tab_medicinesideeffects", "ColumnName" -> 
            "de_medicineid"|>, 
          "de_name" -> <|
           "ColumnPrefix" -> "de_tab_medicinesideeffects", "ColumnName" -> 
            "de_name"|>, 
          "de_ctl_medicines" -> <|
           "DestinationEntityType" -> "de_ctl_medicines", 
            "EntityTypeMapping" -> {"de_medicineid" -> "id"}|>|>|>|>|>, 
   RelationalDatabase[<|
    "Tables" -> <|
      "de_ctl_patients" -> <|
        "PrimaryKey" -> <|"ConstraintName" -> None, "Columns" -> {"id"}|>, 
         "ForeignKeys" -> {<|
           "ConstraintName" -> "de_ctl_genders_de_ctl_patients_fk", 
            "FromColumns" -> {"de_genderid"}, "ToColumns" -> {"id"}, 
            "ToTable" -> "de_ctl_genders", "OnUpdate" -> None, "OnDelete" -> 
            None, "Initially" -> None, "Deferrable" -> None|>}, 
         "UniquenessConstraints" -> {}, "Indexes" -> {}, 
         "Columns" -> <|
          "id" -> <|
            "Nullable" -> False, "BackendType" -> "Integer", 
             "NativeTypeString" -> "INTEGER"|>, 
           "de_surname" -> <|
            "Nullable" -> False, "BackendType" -> {"String", 32}, 
             "NativeTypeString" -> "VARCHAR(32)"|>, 
           "de_name" -> <|
            "Nullable" -> False, "BackendType" -> {"String", 32}, 
             "NativeTypeString" -> "VARCHAR(32)"|>, 
           "de_patronymic" -> <|
            "Nullable" -> True, "BackendType" -> {"String", 32}, 
             "NativeTypeString" -> "VARCHAR(32)"|>, 
           "de_birthday" -> <|
            "Nullable" -> True, "BackendType" -> "Date", "NativeTypeString" -> 
             "DATE"|>, 
           "de_address" -> <|
            "Nullable" -> False, "BackendType" -> {"String", 128}, 
             "NativeTypeString" -> "VARCHAR(128)"|>, 
           "de_genderid" -> <|
            "Nullable" -> False, "BackendType" -> "Integer", 
             "NativeTypeString" -> "INTEGER"|>|>, "Schema" -> "public"|>, 
       "de_ctl_medicines" -> <|
        "PrimaryKey" -> <|"ConstraintName" -> None, "Columns" -> {"id"}|>, 
         "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
         "Columns" -> <|
          "id" -> <|
            "Nullable" -> False, "BackendType" -> {"String", 128}, 
             "NativeTypeString" -> "VARCHAR(128)"|>, 
           "de_name" -> <|
            "Nullable" -> False, "BackendType" -> {"String", 256}, 
             "NativeTypeString" -> "VARCHAR(256)"|>, 
           "de_methodtaking" -> <|
            "Nullable" -> False, "BackendType" -> {"String", 1024}, 
             "NativeTypeString" -> "VARCHAR(1024)"|>|>, "Schema" -> 
         "public"|>, 
       "de_doc_inspection" -> <|
        "PrimaryKey" -> <|"ConstraintName" -> None, "Columns" -> {"id"}|>, 
         "ForeignKeys" -> {<|
           "ConstraintName" -> "de_ctl_patients_de_doc_inspection_fk", 
            "FromColumns" -> {"de_patientid"}, "ToColumns" -> {"id"}, 
            "ToTable" -> "de_ctl_patients", "OnUpdate" -> None, "OnDelete" -> 
            None, "Initially" -> None, "Deferrable" -> None|>, <|
           "ConstraintName" -> "de_ctl_diagnosis_de_doc_inspection_fk", 
            "FromColumns" -> {"de_diagnosisid"}, "ToColumns" -> {"id"}, 
            "ToTable" -> "de_ctl_diagnosis", "OnUpdate" -> None, "OnDelete" -> 
            None, "Initially" -> None, "Deferrable" -> None|>, <|
           "ConstraintName" -> "de_ctl_inspectionplaces_de_doc_inspection_fk",
             "FromColumns" -> {"de_placeid"}, "ToColumns" -> {"id"}, 
            "ToTable" -> "de_ctl_inspectionplaces", "OnUpdate" -> None, 
            "OnDelete" -> None, "Initially" -> None, "Deferrable" -> None|>, <|
           "ConstraintName" -> "de_ctl_doctors_de_doc_inspection_fk", 
            "FromColumns" -> {"de_doctorid"}, "ToColumns" -> {"id"}, 
            "ToTable" -> "de_ctl_doctors", "OnUpdate" -> None, "OnDelete" -> 
            None, "Initially" -> None, "Deferrable" -> None|>}, 
         "UniquenessConstraints" -> {}, "Indexes" -> {}, 
         "Columns" -> <|
          "id" -> <|
            "Nullable" -> False, "BackendType" -> {"String", 128}, 
             "NativeTypeString" -> "VARCHAR(128)"|>, 
           "de_starttime" -> <|
            "Nullable" -> False, "BackendType" -> {"DateTime", False}, 
             "NativeTypeString" -> "TIMESTAMP WITHOUT TIME ZONE"|>, 
           "de_endtime" -> <|
            "Nullable" -> False, "BackendType" -> {"DateTime", False}, 
             "NativeTypeString" -> "TIMESTAMP WITHOUT TIME ZONE"|>, 
           "de_placeid" -> <|
            "Nullable" -> False, "BackendType" -> "Integer", 
             "NativeTypeString" -> "INTEGER"|>, 
           "de_diagnosisid" -> <|
            "Nullable" -> False, "BackendType" -> "Integer", 
             "NativeTypeString" -> "INTEGER"|>, 
           "de_patientid" -> <|
            "Nullable" -> False, "BackendType" -> "Integer", 
             "NativeTypeString" -> "INTEGER"|>, 
           "de_doctorid" -> <|
            "Nullable" -> False, "BackendType" -> "Integer", 
             "NativeTypeString" -> "INTEGER"|>|>, "Schema" -> "public"|>, 
       "de_tab_inspectionmedicines" -> <|
        "PrimaryKey" -> <|"ConstraintName" -> None, "Columns" -> {"id"}|>, 
         "ForeignKeys" -> {<|
           "ConstraintName" -> 
            "de_doc_inspection_de_tab_inspectionmedicine_fk", 
            "FromColumns" -> {"de_inspectionid"}, "ToColumns" -> {"id"}, 
            "ToTable" -> "de_doc_inspection", "OnUpdate" -> None, "OnDelete" -> 
            None, "Initially" -> None, "Deferrable" -> None|>, <|
           "ConstraintName" -> "de_ctl_medicine_de_tab_inspectionmedicine_fk",
             "FromColumns" -> {"de_medicineid"}, "ToColumns" -> {"id"}, 
            "ToTable" -> "de_ctl_medicines", "OnUpdate" -> None, "OnDelete" -> 
            None, "Initially" -> None, "Deferrable" -> None|>}, 
         "UniquenessConstraints" -> {}, "Indexes" -> {}, 
         "Columns" -> <|
          "id" -> <|
            "Nullable" -> False, "BackendType" -> "Integer", 
             "NativeTypeString" -> "INTEGER"|>, 
           "de_inspectionid" -> <|
            "Nullable" -> False, "BackendType" -> {"String", 128}, 
             "NativeTypeString" -> "VARCHAR(128)"|>, 
           "de_medicineid" -> <|
            "Nullable" -> False, "BackendType" -> {"String", 128}, 
             "NativeTypeString" -> "VARCHAR(128)"|>|>, "Schema" -> "public"|>,
        "de_tab_inspectionsymptoms" -> <|
        "PrimaryKey" -> <|"ConstraintName" -> None, "Columns" -> {"id"}|>, 
         "ForeignKeys" -> {<|
           "ConstraintName" -> 
            "de_doc_inspection_de_tab_inspectionsymptomes_fk", 
            "FromColumns" -> {"de_inspectionid"}, "ToColumns" -> {"id"}, 
            "ToTable" -> "de_doc_inspection", "OnUpdate" -> None, "OnDelete" -> 
            None, "Initially" -> None, "Deferrable" -> None|>, <|
           "ConstraintName" -> "de_ctl_symptoms_de_tab_inspectionsymptoms_fk",
             "FromColumns" -> {"de_symptomid"}, "ToColumns" -> {"id"}, 
            "ToTable" -> "de_ctl_symptoms", "OnUpdate" -> None, "OnDelete" -> 
            None, "Initially" -> None, "Deferrable" -> None|>}, 
         "UniquenessConstraints" -> {}, "Indexes" -> {}, 
         "Columns" -> <|
          "id" -> <|
            "Nullable" -> False, "BackendType" -> "Integer", 
             "NativeTypeString" -> "INTEGER"|>, 
           "de_inspectionid" -> <|
            "Nullable" -> False, "BackendType" -> {"String", 128}, 
             "NativeTypeString" -> "VARCHAR(128)"|>, 
           "de_symptomid" -> <|
            "Nullable" -> False, "BackendType" -> "Integer", 
             "NativeTypeString" -> "INTEGER"|>|>, "Schema" -> "public"|>, 
       "de_ctl_genders" -> <|
        "PrimaryKey" -> <|"ConstraintName" -> None, "Columns" -> {"id"}|>, 
         "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
         "Columns" -> <|
          "id" -> <|
            "Nullable" -> False, "BackendType" -> "Integer", 
             "NativeTypeString" -> "INTEGER"|>, 
           "de_name" -> <|
            "Nullable" -> False, "BackendType" -> {"String", 32}, 
             "NativeTypeString" -> "VARCHAR(32)"|>|>, "Schema" -> "public"|>, 
       "de_ctl_doctors" -> <|
        "PrimaryKey" -> <|"ConstraintName" -> None, "Columns" -> {"id"}|>, 
         "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
         "Columns" -> <|
          "id" -> <|
            "Nullable" -> False, "BackendType" -> "Integer", 
             "NativeTypeString" -> "INTEGER"|>, 
           "de_region" -> <|
            "Nullable" -> True, "BackendType" -> "Integer", 
             "NativeTypeString" -> "INTEGER"|>, 
           "de_office" -> <|
            "Nullable" -> True, "BackendType" -> {"String", 16}, 
             "NativeTypeString" -> "VARCHAR(16)"|>, 
           "de_surname" -> <|
            "Nullable" -> False, "BackendType" -> {"String", 32}, 
             "NativeTypeString" -> "VARCHAR(32)"|>, 
           "de_name" -> <|
            "Nullable" -> False, "BackendType" -> {"String", 32}, 
             "NativeTypeString" -> "VARCHAR(32)"|>, 
           "de_patronymic" -> <|
            "Nullable" -> True, "BackendType" -> {"String", 32}, 
             "NativeTypeString" -> "VARCHAR(32)"|>|>, "Schema" -> "public"|>, 
       "de_ctl_symptoms" -> <|
        "PrimaryKey" -> <|"ConstraintName" -> None, "Columns" -> {"id"}|>, 
         "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
         "Columns" -> <|
          "id" -> <|
            "Nullable" -> False, "BackendType" -> "Integer", 
             "NativeTypeString" -> "INTEGER"|>, 
           "de_name" -> <|
            "Nullable" -> False, "BackendType" -> {"String", 32}, 
             "NativeTypeString" -> "VARCHAR(32)"|>|>, "Schema" -> "public"|>, 
       "de_ctl_diagnosis" -> <|
        "PrimaryKey" -> <|"ConstraintName" -> None, "Columns" -> {"id"}|>, 
         "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
         "Columns" -> <|
          "id" -> <|
            "Nullable" -> False, "BackendType" -> "Integer", 
             "NativeTypeString" -> "INTEGER"|>, 
           "de_name" -> <|
            "Nullable" -> False, "BackendType" -> {"String", 16}, 
             "NativeTypeString" -> "VARCHAR(16)"|>, 
           "de_description" -> <|
            "Nullable" -> True, "BackendType" -> {"String", 1024}, 
             "NativeTypeString" -> "VARCHAR(1024)"|>|>, "Schema" -> 
         "public"|>, 
       "de_ctl_inspectionplaces" -> <|
        "PrimaryKey" -> <|"ConstraintName" -> None, "Columns" -> {"id"}|>, 
         "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
         "Columns" -> <|
          "id" -> <|
            "Nullable" -> False, "BackendType" -> "Integer", 
             "NativeTypeString" -> "INTEGER"|>, 
           "de_name" -> <|
            "Nullable" -> False, "BackendType" -> {"String", 32}, 
             "NativeTypeString" -> "VARCHAR(32)"|>|>, "Schema" -> "public"|>, 
       "de_tab_medicinesideeffects" -> <|
        "PrimaryKey" -> <|"ConstraintName" -> None, "Columns" -> {"id"}|>, 
         "ForeignKeys" -> {<|
           "ConstraintName" -> 
            "de_ctl_medicine_de_tab_medicinesideeffects_fk", 
            "FromColumns" -> {"de_medicineid"}, "ToColumns" -> {"id"}, 
            "ToTable" -> "de_ctl_medicines", "OnUpdate" -> None, "OnDelete" -> 
            None, "Initially" -> None, "Deferrable" -> None|>}, 
         "UniquenessConstraints" -> {}, "Indexes" -> {}, 
         "Columns" -> <|
          "id" -> <|
            "Nullable" -> False, "BackendType" -> "Integer", 
             "NativeTypeString" -> "INTEGER"|>, 
           "de_medicineid" -> <|
            "Nullable" -> False, "BackendType" -> {"String", 128}, 
             "NativeTypeString" -> "VARCHAR(128)"|>, 
           "de_name" -> <|
            "Nullable" -> False, "BackendType" -> {"String", 32}, 
             "NativeTypeString" -> "VARCHAR(32)"|>|>, "Schema" -> 
         "public"|>|>, "ID" -> "1bz6rjcncj0zs"|>, 
    DatabaseReference[<|
     "Backend" -> "postgresql", "Username" -> "st190333_", "Password" -> 
      "1234", "Host" -> "localhost", "Port" -> None, "Name" -> 
      "st190333_dblab3", "Options" -> <||>|>]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8791515496309633`*^9, 3.8791515672758293`*^9}, 
   3.8792489938202133`*^9, 3.8792502686964417`*^9, 3.879250739041547*^9, 
   3.879250822058847*^9, 3.879251395088698*^9, 3.87925620738509*^9, 
   3.879260489453866*^9, 3.879266010239045*^9, 3.879266132510063*^9, 
   3.879266577016718*^9, 3.8792955118949738`*^9, 3.87929581815836*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"3405ab7b-2692-4e21-981d-b8e0de5ca093"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lstTables", " ", "=", " ", 
  RowBox[{"EntityRegister", "[", "gp$store", "]"}]}]], "Input",
 CellChangeTimes->{{3.879251474521144*^9, 3.8792514868466053`*^9}, {
  3.879266186055396*^9, 3.8792661959135857`*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[7]:=",ExpressionUUID->"394ff2a0-b62c-4a74-8423-582d9e84a0c1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"de_ctl_patients\"\>", ",", "\<\"de_ctl_medicines\"\>", 
   ",", "\<\"de_doc_inspection\"\>", 
   ",", "\<\"de_tab_inspectionmedicines\"\>", 
   ",", "\<\"de_tab_inspectionsymptoms\"\>", ",", "\<\"de_ctl_genders\"\>", 
   ",", "\<\"de_ctl_doctors\"\>", ",", "\<\"de_ctl_symptoms\"\>", 
   ",", "\<\"de_ctl_diagnosis\"\>", ",", "\<\"de_ctl_inspectionplaces\"\>", 
   ",", "\<\"de_tab_medicinesideeffects\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.879251487493683*^9, 3.879256210405324*^9, 
  3.8792604913316307`*^9, 3.8792660180076942`*^9, 3.879266134148633*^9, 
  3.879266197812615*^9, 3.879266579711977*^9, 3.879295512590468*^9, 
  3.879295820724277*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"ebf5afc2-71ce-41da-a064-1c92072c92f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityStores", "[", "]"}]], "Input",
 CellChangeTimes->{{3.879250618351779*^9, 3.879250626504579*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[8]:=",ExpressionUUID->"be807407-2c8a-4a1d-b219-b05927a0e9f2"],

Cell[BoxData[
 RowBox[{"{", 
  InterpretationBox[
   RowBox[{
    TagBox["EntityStore",
     "SummaryHead"], "[", 
    DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
     TemplateBox[{
       PaneSelectorBox[{False -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
                ImageSizeCache -> {10.385390625, {0., 10.385390625}}], 
               Appearance -> None, BaseStyle -> {}, 
               ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[{
               Thickness[0.04], {
                FaceForm[{
                  RGBColor[0.984, 0.969, 0.91], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
                 0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{17., 10.}, {
                 6., 10.}, {4.343, 10.}, {3., 11.343}, {3., 13.}, {3., 20.}, {
                 3., 21.657}, {4.343, 23.}, {6., 23.}, {17., 23.}, {18.657, 
                 23.}, {20., 21.657}, {20., 20.}, {20., 13.}, {20., 11.343}, {
                 18.657, 10.}, {17., 10.}}}]}, {
                FaceForm[{
                  RGBColor[0.996, 0.506, 0.004], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {0, 
                  1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}}}, {{{6., 22.5}, {4.622, 22.5}, {3.5, 21.379}, {3.5, 
                  20.}, {3.5, 13.}, {3.5, 11.620999999999999`}, {4.622, 
                  10.5}, {6., 10.5}, {17., 10.5}, {18.379, 10.5}, {19.5, 
                  11.620999999999999`}, {19.5, 13.}, {19.5, 20.}, {19.5, 
                  21.379}, {18.379, 22.5}, {17., 22.5}}, {{17., 9.5}, {6., 
                  9.5}, {4.07, 9.5}, {2.5, 11.07}, {2.5, 13.}, {2.5, 20.}, {
                  2.5, 21.93}, {4.07, 23.5}, {6., 23.5}, {17., 23.5}, {18.93, 
                  23.5}, {20.5, 21.93}, {20.5, 20.}, {20.5, 13.}, {20.5, 
                  11.07}, {18.93, 9.5}, {17., 9.5}}}]}, {
                FaceForm[{
                  RGBColor[0.012, 0.612, 0.996], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5, 12.5}, {14.5, 12.5}, {
                 14.5, 14.5}, {12.5, 14.5}}, {{8.5, 14.5}, {10.5, 14.5}, {
                 10.5, 12.5}, {8.5, 12.5}}}]}, {
                FaceForm[{
                  RGBColor[0.537, 0.537, 0.537], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAFdBwitD6EbDLDzGwwdUNRj8E2gfE0cfCM0
9UZo5hsRoE3Q1MPMl0LjC+HgG6Gph/FVobQ+qnvR+XD/qqLxpdDUK2Lno6vH
MM8ITT063wRNvYkDAOvQJ0o=
                 "]]}, {
                FaceForm[{
                  RGBColor[1., 1., 1.], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                 0, 1, 0}, {1, 3, 3}}}, {{{18., 12.}, {15.791, 12.}, {14., 
                 11.104}, {14., 10.}, {14., 4.}, {14., 2.896000000000001}, {
                 15.791, 2.}, {18., 2.}, {20.209, 2.}, {22., 
                 2.896000000000001}, {22., 4.}, {22., 10.}, {22., 11.104}, {
                 20.209, 12.}, {18., 12.}}}]}, {
                FaceForm[{
                  RGBColor[0.537, 0.537, 0.537], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                  0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
                  3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                  0}, {1, 3, 3}}}, {{{18., 5.5}, {15.997, 5.5}, {14.5, 
                  6.292}, {14.5, 7.}, {14.5, 8.411}, {15.312, 7.853}, {16.547,
                   7.5}, {18., 7.5}, {19.453, 7.5}, {20.688, 7.853}, {21.5, 
                  8.411}, {21.5, 7.}, {21.5, 6.292}, {20.003, 5.5}, {18., 
                  5.5}}, {{21.5, 4.}, {21.5, 3.292}, {20.003, 2.5}, {18., 
                  2.5}, {15.997, 2.5}, {14.5, 3.292}, {14.5, 4.}, {14.5, 
                  5.411}, {15.312, 4.853}, {16.547, 4.5}, {18., 4.5}, {19.453,
                   4.5}, {20.688, 4.853}, {21.5, 5.411}}, {{18., 11.5}, {
                  20.003, 11.5}, {21.5, 10.708}, {21.5, 10.}, {21.5, 9.292}, {
                  20.003, 8.5}, {18., 8.5}, {15.997, 8.5}, {14.5, 9.292}, {
                  14.5, 10.}, {14.5, 10.708}, {15.997, 11.5}, {18., 11.5}}, {{
                  18., 12.5}, {15.435, 12.5}, {13.5, 11.425}, {13.5, 10.}, {
                  13.5, 4.}, {13.5, 2.575}, {15.435, 1.5}, {18., 1.5}, {
                  20.565, 1.5}, {22.5, 2.575}, {22.5, 4.}, {22.5, 10.}, {22.5,
                   11.425}, {20.565, 12.5}, {18., 12.5}}}]}}, AspectRatio -> 
              Automatic, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], PlotRange -> {{0., 25.}, {0., 25.}}], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Type count: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["11", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"RelationalDatabase: \"", "SummaryItemAnnotation"],
                   "\[InvisibleSpace]", 
                  TagBox[
                   TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"PostgreSQL\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"PostgreSQL\""}, {"", 
                    PaneBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["RelationalDatabase", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04], {
                    FaceForm[{
                    RGBColor[0.651, 0.651, 0.651], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{20.5, 4.}, {20.5, 3.724}, {20.276, 
                    3.5}, {20., 3.5}, {6., 3.5}, {5.724, 3.5}, {5.5, 3.724}, {
                    5.5, 4.}, {5.5, 21.}, {5.5, 21.276}, {5.724, 21.5}, {6., 
                    21.5}, {20., 21.5}, {20.276, 21.5}, {20.5, 21.276}, {20.5,
                     21.}}, {{20.5, 22.5}, {5.5, 22.5}, {4.947999999999999, 
                    22.5}, {4.5, 22.053}, {4.5, 21.5}, {4.5, 3.5}, {4.5, 
                    2.947}, {4.947999999999999, 2.5}, {5.5, 2.5}, {20.5, 
                    2.5}, {21.052, 2.5}, {21.5, 2.947}, {21.5, 3.5}, {21.5, 
                    21.5}, {21.5, 22.053}, {21.052, 22.5}, {20.5, 22.5}}}]}, {
                    
                    FaceForm[{
                    RGBColor[0.8670000000000001, 0.067, 0.], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, CompressedData["
1:eJxtj69Lg1EYhT80CZ84xjSM68VN5tjGfjnFYPksJkUwiRYRrQoGs2Ay2AUR
m1YRGVjEYBCrf4DJ7L/g2N05l/egMC7Pju/Zc0oHJ9tH40mSTAw+U4PPWII/
lw2f8+XwJjny9XH+4u1zUvI0az7d/j6sRw5v5K/Ng9zOy5LcL0k/2JGfP85e
74qzknv2ge3vefrYe+S6D9wTn574IsfeyOGNHPwW5X5R+sGObH2Re/bZvT0y
fOw9ct0H7opPV3yRY2/k8EYOfh2570g/2JGtL3LPPru3S4aPvUeu+0aczFuf
ARtf5mm2d7j6vXVVlr2R72/e5x5PS3Jfkn6wIxtf5p59dm+ZDB97D1/dB66K
T1V8kWPvguyNHPwqcl+RfrAjW1/knn127wIZPvYevroP3BCfhvgix9667I0c
/GpyX5N+sCNbX+SefXZvnQwfew9f3Qdui09bfJGn2e6wvyV7Iwe/ptw3pR/s
yNYXuWef3dsiw8few1f3gWfEZ0Z8kaej3mnZWyBvrFyu7f/k5T4v/WBHtr7I
Pfvs3gIZPvYevrrPy/foL8p9Uf4PnCPbfchT9oFtT5r1R79j7+GVE46e1s/z
7f/7vcv+AMXQVQk=
                    "]]}, {
                    FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{20.5, 4.}, {
                    20.5, 3.724}, {20.276, 3.5}, {20., 3.5}, {6., 3.5}, {
                    5.724, 3.5}, {5.5, 3.724}, {5.5, 4.}, {5.5, 21.}, {5.5, 
                    21.276}, {5.724, 21.5}, {6., 21.5}, {20., 21.5}, {20.276, 
                    21.5}, {20.5, 21.276}, {20.5, 21.}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}}}, {{{13., 18.}, {10.239, 18.}, {
                    8., 17.015}, {8., 15.8}, {8., 9.2}, {8., 
                    7.984999999999999}, {10.239, 7.}, {13., 7.}, {15.761, 
                    7.}, {18., 7.984999999999999}, {18., 9.2}, {18., 15.8}, {
                    18., 17.015}, {15.761, 18.}, {13., 18.}}}]}, {
                    FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}}}, {{{13., 10.8633}, {10.314, 
                    10.8633}, {8.6, 11.833300000000001`}, {8.6, 
                    12.500300000000001`}, {8.6, 14.1133}, {9.586, 13.4603}, {
                    11.151, 13.0463}, {13., 13.0463}, {14.849, 13.0463}, {
                    16.414, 13.4603}, {17.4, 14.1133}, {17.4, 
                    12.500300000000001`}, {17.4, 11.833300000000001`}, {
                    15.686, 10.8633}, {13., 10.8633}}, {{17.4, 9.2273}, {17.4,
                     8.560300000000002}, {15.686, 7.5913}, {13., 7.5913}, {
                    10.314, 7.5913}, {8.6, 8.560300000000002}, {8.6, 
                    9.2273}, {8.6, 10.8413}, {9.586, 10.1873}, {11.151, 
                    9.772300000000001}, {13., 9.772300000000001}, {14.849, 
                    9.772300000000001}, {16.414, 10.1873}, {17.4, 
                    10.8413}}, {{13., 17.4093}, {15.686, 17.4093}, {17.4, 
                    16.439300000000003`}, {17.4, 15.772300000000001`}, {17.4, 
                    15.1053}, {15.686, 14.1363}, {13., 14.1363}, {10.314, 
                    14.1363}, {8.6, 15.1053}, {8.6, 15.772300000000001`}, {
                    8.6, 16.439300000000003`}, {10.314, 17.4093}, {13., 
                    17.4093}}, {{13., 18.5003}, {9.864, 18.5003}, {7.5, 
                    17.3273}, {7.5, 15.772300000000001`}, {7.5, 9.2273}, {7.5,
                     7.673300000000001}, {9.864, 6.500300000000001}, {13., 
                    6.500300000000001}, {16.136, 6.500300000000001}, {18.5, 
                    7.673300000000001}, {18.5, 9.2273}, {18.5, 
                    15.772300000000001`}, {18.5, 17.3273}, {16.136, 
                    18.5003}, {13., 18.5003}}}]}}, {
                    ImageSize -> Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 25.}, {0., 25.}}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Table count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["11", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Backend: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"PostgreSQL\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04], {
                    FaceForm[{
                    RGBColor[0.651, 0.651, 0.651], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{20.5, 4.}, {20.5, 3.724}, {20.276, 
                    3.5}, {20., 3.5}, {6., 3.5}, {5.724, 3.5}, {5.5, 3.724}, {
                    5.5, 4.}, {5.5, 21.}, {5.5, 21.276}, {5.724, 21.5}, {6., 
                    21.5}, {20., 21.5}, {20.276, 21.5}, {20.5, 21.276}, {20.5,
                     21.}}, {{20.5, 22.5}, {5.5, 22.5}, {4.947999999999999, 
                    22.5}, {4.5, 22.053}, {4.5, 21.5}, {4.5, 3.5}, {4.5, 
                    2.947}, {4.947999999999999, 2.5}, {5.5, 2.5}, {20.5, 
                    2.5}, {21.052, 2.5}, {21.5, 2.947}, {21.5, 3.5}, {21.5, 
                    21.5}, {21.5, 22.053}, {21.052, 22.5}, {20.5, 22.5}}}]}, {
                    
                    FaceForm[{
                    RGBColor[0.8670000000000001, 0.067, 0.], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, CompressedData["
1:eJxtj69Lg1EYhT80CZ84xjSM68VN5tjGfjnFYPksJkUwiRYRrQoGs2Ay2AUR
m1YRGVjEYBCrf4DJ7L/g2N05l/egMC7Pju/Zc0oHJ9tH40mSTAw+U4PPWII/
lw2f8+XwJjny9XH+4u1zUvI0az7d/j6sRw5v5K/Ng9zOy5LcL0k/2JGfP85e
74qzknv2ge3vefrYe+S6D9wTn574IsfeyOGNHPwW5X5R+sGObH2Re/bZvT0y
fOw9ct0H7opPV3yRY2/k8EYOfh2570g/2JGtL3LPPru3S4aPvUeu+0aczFuf
ARtf5mm2d7j6vXVVlr2R72/e5x5PS3Jfkn6wIxtf5p59dm+ZDB97D1/dB66K
T1V8kWPvguyNHPwqcl+RfrAjW1/knn127wIZPvYevroP3BCfhvgix9667I0c
/GpyX5N+sCNbX+SefXZvnQwfew9f3Qdui09bfJGn2e6wvyV7Iwe/ptw3pR/s
yNYXuWef3dsiw8few1f3gWfEZ0Z8kaej3mnZWyBvrFyu7f/k5T4v/WBHtr7I
Pfvs3gIZPvYevrrPy/foL8p9Uf4PnCPbfchT9oFtT5r1R79j7+GVE46e1s/z
7f/7vcv+AMXQVQk=
                    "]]}, {
                    FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{20.5, 4.}, {
                    20.5, 3.724}, {20.276, 3.5}, {20., 3.5}, {6., 3.5}, {
                    5.724, 3.5}, {5.5, 3.724}, {5.5, 4.}, {5.5, 21.}, {5.5, 
                    21.276}, {5.724, 21.5}, {6., 21.5}, {20., 21.5}, {20.276, 
                    21.5}, {20.5, 21.276}, {20.5, 21.}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}}}, {{{13., 18.}, {10.239, 18.}, {
                    8., 17.015}, {8., 15.8}, {8., 9.2}, {8., 
                    7.984999999999999}, {10.239, 7.}, {13., 7.}, {15.761, 
                    7.}, {18., 7.984999999999999}, {18., 9.2}, {18., 15.8}, {
                    18., 17.015}, {15.761, 18.}, {13., 18.}}}]}, {
                    FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}}}, {{{13., 10.8633}, {10.314, 
                    10.8633}, {8.6, 11.833300000000001`}, {8.6, 
                    12.500300000000001`}, {8.6, 14.1133}, {9.586, 13.4603}, {
                    11.151, 13.0463}, {13., 13.0463}, {14.849, 13.0463}, {
                    16.414, 13.4603}, {17.4, 14.1133}, {17.4, 
                    12.500300000000001`}, {17.4, 11.833300000000001`}, {
                    15.686, 10.8633}, {13., 10.8633}}, {{17.4, 9.2273}, {17.4,
                     8.560300000000002}, {15.686, 7.5913}, {13., 7.5913}, {
                    10.314, 7.5913}, {8.6, 8.560300000000002}, {8.6, 
                    9.2273}, {8.6, 10.8413}, {9.586, 10.1873}, {11.151, 
                    9.772300000000001}, {13., 9.772300000000001}, {14.849, 
                    9.772300000000001}, {16.414, 10.1873}, {17.4, 
                    10.8413}}, {{13., 17.4093}, {15.686, 17.4093}, {17.4, 
                    16.439300000000003`}, {17.4, 15.772300000000001`}, {17.4, 
                    15.1053}, {15.686, 14.1363}, {13., 14.1363}, {10.314, 
                    14.1363}, {8.6, 15.1053}, {8.6, 15.772300000000001`}, {
                    8.6, 16.439300000000003`}, {10.314, 17.4093}, {13., 
                    17.4093}}, {{13., 18.5003}, {9.864, 18.5003}, {7.5, 
                    17.3273}, {7.5, 15.772300000000001`}, {7.5, 9.2273}, {7.5,
                     7.673300000000001}, {9.864, 6.500300000000001}, {13., 
                    6.500300000000001}, {16.136, 6.500300000000001}, {18.5, 
                    7.673300000000001}, {18.5, 9.2273}, {18.5, 
                    15.772300000000001`}, {18.5, 17.3273}, {16.136, 
                    18.5003}, {13., 18.5003}}}]}}, {
                    ImageSize -> Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 25.}, {0., 25.}}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Table count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["11", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Backend: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"PostgreSQL\"", "SummaryItem"]}]}, {
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox["\"Tables: \"", "SummaryItemAnnotation"], 
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_patients\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_patients\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_surname\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_surname\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(32)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_surname\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_surname", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_surname"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(32)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"de_name\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_patronymic\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_patronymic\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(32)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_patronymic\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_patronymic", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_patronymic"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_birthday\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_birthday\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"DATE\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_birthday\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_birthday", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "DATE"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_birthday"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_address\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_address\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(128)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_address\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_address", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_address"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_genderid\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_genderid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_genderid\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_genderid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_genderid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_ctl_patients", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_surname", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_surname"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_patronymic", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_patronymic"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"de_birthday", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "DATE"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_birthday"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"de_address", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_address"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_genderid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_genderid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}]}]}, 
                    False]], DynamicModuleValues -> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_medicines\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_medicines\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(128)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(256)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"de_name\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(256)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_methodtaking\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_methodtaking\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(1024)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_methodtaking\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_methodtaking", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(1024)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_methodtaking"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_ctl_medicines", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(256)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_methodtaking", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(1024)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_methodtaking"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}]}]}, 
                    False]], DynamicModuleValues -> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_doc_inspection\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_doc_inspection\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(128)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_starttime\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_starttime\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"TIMESTAMP WITHOUT TIME ZONE\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_starttime\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_starttime", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "TIMESTAMP WITHOUT TIME ZONE"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_starttime"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_endtime\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_endtime\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"TIMESTAMP WITHOUT TIME ZONE\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_endtime\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_endtime", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "TIMESTAMP WITHOUT TIME ZONE"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_endtime"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_placeid\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_placeid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_placeid\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_placeid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_placeid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_diagnosisid\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_diagnosisid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_diagnosisid\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_diagnosisid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_diagnosisid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_patientid\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_patientid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_patientid\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_patientid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_patientid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_doctorid\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_doctorid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_doctorid\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_doctorid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_doctorid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_doc_inspection", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_starttime", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "TIMESTAMP WITHOUT TIME ZONE"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_starttime"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_endtime", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "TIMESTAMP WITHOUT TIME ZONE"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_endtime"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_placeid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_placeid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_diagnosisid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_diagnosisid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_patientid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_patientid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_doctorid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_doctorid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}]}]}, 
                    False]], DynamicModuleValues -> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_tab_inspectionmedicines\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_tab_inspectionmedicines\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_inspectionid\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_inspectionid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(128)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_inspectionid\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_inspectionid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_inspectionid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_medicineid\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_medicineid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(128)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_medicineid\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_medicineid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_medicineid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_tab_inspectionmedicines", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_inspectionid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_inspectionid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_medicineid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_medicineid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}]}]}, 
                    False]], DynamicModuleValues -> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_tab_inspectionsymptoms\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_tab_inspectionsymptoms\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_inspectionid\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_inspectionid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(128)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_inspectionid\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_inspectionid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_inspectionid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_symptomid\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_symptomid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_symptomid\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_symptomid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_symptomid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_tab_inspectionsymptoms", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_inspectionid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_inspectionid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_symptomid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_symptomid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}]}]}, 
                    False]], DynamicModuleValues -> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_genders\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_genders\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(32)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"de_name\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_ctl_genders", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}]}]}, 
                    False]], DynamicModuleValues -> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_doctors\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_doctors\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_region\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_region\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"de_region\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_region", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_region"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_office\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_office\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(16)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"de_office\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_office", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(16)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_office"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_surname\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_surname\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(32)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_surname\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_surname", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_surname"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(32)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"de_name\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_patronymic\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_patronymic\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(32)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_patronymic\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_patronymic", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_patronymic"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_ctl_doctors", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_region", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_region"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"de_office", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(16)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_office"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"de_surname", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_surname"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_patronymic", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_patronymic"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}]}]}, False]],
                     DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_symptoms\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_symptoms\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(32)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"de_name\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_ctl_symptoms", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}]}]}, 
                    False]], DynamicModuleValues -> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_diagnosis\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_diagnosis\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(16)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"de_name\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(16)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_description\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_description\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(1024)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_description\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_description", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(1024)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_description"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_ctl_diagnosis", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(16)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_description", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(1024)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_description"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}]}]}, False]],
                     DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_inspectionplaces\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_inspectionplaces\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(32)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"de_name\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_ctl_inspectionplaces", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}]}]}, 
                    False]], DynamicModuleValues -> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_tab_medicinesideeffects\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_tab_medicinesideeffects\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_medicineid\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_medicineid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(128)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_medicineid\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_medicineid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_medicineid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(32)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"de_name\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_tab_medicinesideeffects", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_medicineid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_medicineid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}]}]}, 
                    False]], DynamicModuleValues -> Automatic], 
                    Setting[#, {0}]& ]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    
                    RelationalDatabase[<|
                    "Tables" -> <|"de_ctl_patients" -> <|
                    "PrimaryKey" -> <|"ConstraintName" -> None, 
                    "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {<|"ConstraintName" -> 
                    "de_ctl_genders_de_ctl_patients_fk", 
                    "FromColumns" -> {"de_genderid"}, "ToColumns" -> {"id"}, 
                    "ToTable" -> "de_ctl_genders", "OnUpdate" -> None, 
                    "OnDelete" -> None, "Initially" -> None, "Deferrable" -> 
                    None|>}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|"id" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_surname" -> <|"Nullable" -> False, 
                    "BackendType" -> {"String", 32}, "NativeTypeString" -> 
                    "VARCHAR(32)"|>, "de_name" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>, 
                    "de_patronymic" -> <|"Nullable" -> True, 
                    "BackendType" -> {"String", 32}, "NativeTypeString" -> 
                    "VARCHAR(32)"|>, "de_birthday" -> <|
                    "Nullable" -> True, "BackendType" -> "Date", 
                    "NativeTypeString" -> "DATE"|>, 
                    "de_address" -> <|"Nullable" -> False, 
                    "BackendType" -> {"String", 128}, "NativeTypeString" -> 
                    "VARCHAR(128)"|>, "de_genderid" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>|>, "Schema" -> 
                    "public"|>, "de_ctl_medicines" -> <|
                    "PrimaryKey" -> <|"ConstraintName" -> None, 
                    "Columns" -> {"id"}|>, "ForeignKeys" -> {}, 
                    "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|"id" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 128}, 
                    "NativeTypeString" -> "VARCHAR(128)"|>, 
                    "de_name" -> <|"Nullable" -> False, 
                    "BackendType" -> {"String", 256}, "NativeTypeString" -> 
                    "VARCHAR(256)"|>, "de_methodtaking" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 1024}, 
                    "NativeTypeString" -> "VARCHAR(1024)"|>|>, "Schema" -> 
                    "public"|>, "de_doc_inspection" -> <|
                    "PrimaryKey" -> <|"ConstraintName" -> None, 
                    "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {<|"ConstraintName" -> 
                    "de_ctl_patients_de_doc_inspection_fk", 
                    "FromColumns" -> {"de_patientid"}, "ToColumns" -> {"id"}, 
                    "ToTable" -> "de_ctl_patients", "OnUpdate" -> None, 
                    "OnDelete" -> None, "Initially" -> None, "Deferrable" -> 
                    None|>, <|"ConstraintName" -> 
                    "de_ctl_diagnosis_de_doc_inspection_fk", 
                    "FromColumns" -> {"de_diagnosisid"}, 
                    "ToColumns" -> {"id"}, "ToTable" -> "de_ctl_diagnosis", 
                    "OnUpdate" -> None, "OnDelete" -> None, "Initially" -> 
                    None, "Deferrable" -> None|>, <|
                    "ConstraintName" -> 
                    "de_ctl_inspectionplaces_de_doc_inspection_fk", 
                    "FromColumns" -> {"de_placeid"}, "ToColumns" -> {"id"}, 
                    "ToTable" -> "de_ctl_inspectionplaces", "OnUpdate" -> 
                    None, "OnDelete" -> None, "Initially" -> None, 
                    "Deferrable" -> None|>, <|
                    "ConstraintName" -> "de_ctl_doctors_de_doc_inspection_fk",
                     "FromColumns" -> {"de_doctorid"}, "ToColumns" -> {"id"}, 
                    "ToTable" -> "de_ctl_doctors", "OnUpdate" -> None, 
                    "OnDelete" -> None, "Initially" -> None, "Deferrable" -> 
                    None|>}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|"id" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 128}, 
                    "NativeTypeString" -> "VARCHAR(128)"|>, 
                    "de_starttime" -> <|"Nullable" -> False, 
                    "BackendType" -> {"DateTime", False}, "NativeTypeString" -> 
                    "TIMESTAMP WITHOUT TIME ZONE"|>, 
                    "de_endtime" -> <|"Nullable" -> False, 
                    "BackendType" -> {"DateTime", False}, "NativeTypeString" -> 
                    "TIMESTAMP WITHOUT TIME ZONE"|>, 
                    "de_placeid" -> <|"Nullable" -> False, "BackendType" -> 
                    "Integer", "NativeTypeString" -> "INTEGER"|>, 
                    "de_diagnosisid" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_patientid" -> <|"Nullable" -> False, "BackendType" -> 
                    "Integer", "NativeTypeString" -> "INTEGER"|>, 
                    "de_doctorid" -> <|"Nullable" -> False, "BackendType" -> 
                    "Integer", "NativeTypeString" -> "INTEGER"|>|>, "Schema" -> 
                    "public"|>, "de_tab_inspectionmedicines" -> <|
                    "PrimaryKey" -> <|"ConstraintName" -> None, 
                    "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {<|"ConstraintName" -> 
                    "de_doc_inspection_de_tab_inspectionmedicine_fk", 
                    "FromColumns" -> {"de_inspectionid"}, 
                    "ToColumns" -> {"id"}, "ToTable" -> "de_doc_inspection", 
                    "OnUpdate" -> None, "OnDelete" -> None, "Initially" -> 
                    None, "Deferrable" -> None|>, <|
                    "ConstraintName" -> 
                    "de_ctl_medicine_de_tab_inspectionmedicine_fk", 
                    "FromColumns" -> {"de_medicineid"}, "ToColumns" -> {"id"},
                     "ToTable" -> "de_ctl_medicines", "OnUpdate" -> None, 
                    "OnDelete" -> None, "Initially" -> None, "Deferrable" -> 
                    None|>}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|"id" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_inspectionid" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 128}, 
                    "NativeTypeString" -> "VARCHAR(128)"|>, 
                    "de_medicineid" -> <|"Nullable" -> False, 
                    "BackendType" -> {"String", 128}, "NativeTypeString" -> 
                    "VARCHAR(128)"|>|>, "Schema" -> "public"|>, 
                    "de_tab_inspectionsymptoms" -> <|
                    "PrimaryKey" -> <|"ConstraintName" -> None, 
                    "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {<|"ConstraintName" -> 
                    "de_doc_inspection_de_tab_inspectionsymptomes_fk", 
                    "FromColumns" -> {"de_inspectionid"}, 
                    "ToColumns" -> {"id"}, "ToTable" -> "de_doc_inspection", 
                    "OnUpdate" -> None, "OnDelete" -> None, "Initially" -> 
                    None, "Deferrable" -> None|>, <|
                    "ConstraintName" -> 
                    "de_ctl_symptoms_de_tab_inspectionsymptoms_fk", 
                    "FromColumns" -> {"de_symptomid"}, "ToColumns" -> {"id"}, 
                    "ToTable" -> "de_ctl_symptoms", "OnUpdate" -> None, 
                    "OnDelete" -> None, "Initially" -> None, "Deferrable" -> 
                    None|>}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|"id" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_inspectionid" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 128}, 
                    "NativeTypeString" -> "VARCHAR(128)"|>, 
                    "de_symptomid" -> <|"Nullable" -> False, "BackendType" -> 
                    "Integer", "NativeTypeString" -> "INTEGER"|>|>, "Schema" -> 
                    "public"|>, "de_ctl_genders" -> <|
                    "PrimaryKey" -> <|"ConstraintName" -> None, 
                    "Columns" -> {"id"}|>, "ForeignKeys" -> {}, 
                    "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|"id" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_name" -> <|"Nullable" -> False, 
                    "BackendType" -> {"String", 32}, "NativeTypeString" -> 
                    "VARCHAR(32)"|>|>, "Schema" -> "public"|>, 
                    "de_ctl_doctors" -> <|
                    "PrimaryKey" -> <|"ConstraintName" -> None, 
                    "Columns" -> {"id"}|>, "ForeignKeys" -> {}, 
                    "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|"id" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_region" -> <|"Nullable" -> True, "BackendType" -> 
                    "Integer", "NativeTypeString" -> "INTEGER"|>, 
                    "de_office" -> <|"Nullable" -> True, 
                    "BackendType" -> {"String", 16}, "NativeTypeString" -> 
                    "VARCHAR(16)"|>, "de_surname" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>, 
                    "de_name" -> <|"Nullable" -> False, 
                    "BackendType" -> {"String", 32}, "NativeTypeString" -> 
                    "VARCHAR(32)"|>, "de_patronymic" -> <|
                    "Nullable" -> True, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>|>, "Schema" -> 
                    "public"|>, "de_ctl_symptoms" -> <|
                    "PrimaryKey" -> <|"ConstraintName" -> None, 
                    "Columns" -> {"id"}|>, "ForeignKeys" -> {}, 
                    "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|"id" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_name" -> <|"Nullable" -> False, 
                    "BackendType" -> {"String", 32}, "NativeTypeString" -> 
                    "VARCHAR(32)"|>|>, "Schema" -> "public"|>, 
                    "de_ctl_diagnosis" -> <|
                    "PrimaryKey" -> <|"ConstraintName" -> None, 
                    "Columns" -> {"id"}|>, "ForeignKeys" -> {}, 
                    "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|"id" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_name" -> <|"Nullable" -> False, 
                    "BackendType" -> {"String", 16}, "NativeTypeString" -> 
                    "VARCHAR(16)"|>, "de_description" -> <|
                    "Nullable" -> True, "BackendType" -> {"String", 1024}, 
                    "NativeTypeString" -> "VARCHAR(1024)"|>|>, "Schema" -> 
                    "public"|>, "de_ctl_inspectionplaces" -> <|
                    "PrimaryKey" -> <|"ConstraintName" -> None, 
                    "Columns" -> {"id"}|>, "ForeignKeys" -> {}, 
                    "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|"id" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_name" -> <|"Nullable" -> False, 
                    "BackendType" -> {"String", 32}, "NativeTypeString" -> 
                    "VARCHAR(32)"|>|>, "Schema" -> "public"|>, 
                    "de_tab_medicinesideeffects" -> <|
                    "PrimaryKey" -> <|"ConstraintName" -> None, 
                    "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {<|"ConstraintName" -> 
                    "de_ctl_medicine_de_tab_medicinesideeffects_fk", 
                    "FromColumns" -> {"de_medicineid"}, "ToColumns" -> {"id"},
                     "ToTable" -> "de_ctl_medicines", "OnUpdate" -> None, 
                    "OnDelete" -> None, "Initially" -> None, "Deferrable" -> 
                    None|>}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|"id" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_medicineid" -> <|"Nullable" -> False, 
                    "BackendType" -> {"String", 128}, "NativeTypeString" -> 
                    "VARCHAR(128)"|>, "de_name" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>|>, "Schema" -> 
                    "public"|>|>, "ID" -> "1bz6rjcncj0zs"|>, 
                    
                    DatabaseReference[<|
                    "Backend" -> "postgresql", "Username" -> "st190333_", 
                    "Password" -> "1234", "Host" -> "localhost", "Port" -> 
                    None, "Name" -> "st190333_dblab3", "Options" -> <||>|>]], 
                    Editable -> False, SelectWithContents -> True, Selectable -> 
                    False], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"PostgreSQL", 
                    
                    RelationalDatabase[<|
                    "Tables" -> <|
                    "de_ctl_patients" -> <|
                    "PrimaryKey" -> <|
                    "ConstraintName" -> None, "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {<|
                    "ConstraintName" -> "de_ctl_genders_de_ctl_patients_fk", 
                    "FromColumns" -> {"de_genderid"}, "ToColumns" -> {"id"}, 
                    "ToTable" -> "de_ctl_genders", "OnUpdate" -> None, 
                    "OnDelete" -> None, "Initially" -> None, "Deferrable" -> 
                    None|>}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|
                    "id" -> <|"Nullable" -> False, "BackendType" -> "Integer",
                     "NativeTypeString" -> "INTEGER"|>, 
                    "de_surname" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>, 
                    "de_name" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>, 
                    "de_patronymic" -> <|
                    "Nullable" -> True, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>, 
                    "de_birthday" -> <|
                    "Nullable" -> True, "BackendType" -> "Date", 
                    "NativeTypeString" -> "DATE"|>, 
                    "de_address" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 128}, 
                    "NativeTypeString" -> "VARCHAR(128)"|>, 
                    "de_genderid" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>|>, "Schema" -> 
                    "public"|>, 
                    "de_ctl_medicines" -> <|
                    "PrimaryKey" -> <|
                    "ConstraintName" -> None, "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, 
                    "Indexes" -> {}, 
                    "Columns" -> <|
                    "id" -> <|"Nullable" -> False, 
                    "BackendType" -> {"String", 128}, "NativeTypeString" -> 
                    "VARCHAR(128)"|>, 
                    "de_name" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 256}, 
                    "NativeTypeString" -> "VARCHAR(256)"|>, 
                    "de_methodtaking" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 1024}, 
                    "NativeTypeString" -> "VARCHAR(1024)"|>|>, "Schema" -> 
                    "public"|>, 
                    "de_doc_inspection" -> <|
                    "PrimaryKey" -> <|
                    "ConstraintName" -> None, "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {<|
                    "ConstraintName" -> 
                    "de_ctl_patients_de_doc_inspection_fk", 
                    "FromColumns" -> {"de_patientid"}, "ToColumns" -> {"id"}, 
                    "ToTable" -> "de_ctl_patients", "OnUpdate" -> None, 
                    "OnDelete" -> None, "Initially" -> None, "Deferrable" -> 
                    None|>, <|"ConstraintName" -> 
                    "de_ctl_diagnosis_de_doc_inspection_fk", 
                    "FromColumns" -> {"de_diagnosisid"}, 
                    "ToColumns" -> {"id"}, "ToTable" -> "de_ctl_diagnosis", 
                    "OnUpdate" -> None, "OnDelete" -> None, "Initially" -> 
                    None, "Deferrable" -> None|>, <|
                    "ConstraintName" -> 
                    "de_ctl_inspectionplaces_de_doc_inspection_fk", 
                    "FromColumns" -> {"de_placeid"}, "ToColumns" -> {"id"}, 
                    "ToTable" -> "de_ctl_inspectionplaces", "OnUpdate" -> 
                    None, "OnDelete" -> None, "Initially" -> None, 
                    "Deferrable" -> None|>, <|
                    "ConstraintName" -> "de_ctl_doctors_de_doc_inspection_fk",
                     "FromColumns" -> {"de_doctorid"}, "ToColumns" -> {"id"}, 
                    "ToTable" -> "de_ctl_doctors", "OnUpdate" -> None, 
                    "OnDelete" -> None, "Initially" -> None, "Deferrable" -> 
                    None|>}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|
                    "id" -> <|"Nullable" -> False, 
                    "BackendType" -> {"String", 128}, "NativeTypeString" -> 
                    "VARCHAR(128)"|>, 
                    "de_starttime" -> <|
                    "Nullable" -> False, "BackendType" -> {"DateTime", False},
                     "NativeTypeString" -> "TIMESTAMP WITHOUT TIME ZONE"|>, 
                    "de_endtime" -> <|
                    "Nullable" -> False, "BackendType" -> {"DateTime", False},
                     "NativeTypeString" -> "TIMESTAMP WITHOUT TIME ZONE"|>, 
                    "de_placeid" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_diagnosisid" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_patientid" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_doctorid" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>|>, "Schema" -> 
                    "public"|>, 
                    "de_tab_inspectionmedicines" -> <|
                    "PrimaryKey" -> <|
                    "ConstraintName" -> None, "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {<|
                    "ConstraintName" -> 
                    "de_doc_inspection_de_tab_inspectionmedicine_fk", 
                    "FromColumns" -> {"de_inspectionid"}, 
                    "ToColumns" -> {"id"}, "ToTable" -> "de_doc_inspection", 
                    "OnUpdate" -> None, "OnDelete" -> None, "Initially" -> 
                    None, "Deferrable" -> None|>, <|
                    "ConstraintName" -> 
                    "de_ctl_medicine_de_tab_inspectionmedicine_fk", 
                    "FromColumns" -> {"de_medicineid"}, "ToColumns" -> {"id"},
                     "ToTable" -> "de_ctl_medicines", "OnUpdate" -> None, 
                    "OnDelete" -> None, "Initially" -> None, "Deferrable" -> 
                    None|>}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|
                    "id" -> <|"Nullable" -> False, "BackendType" -> "Integer",
                     "NativeTypeString" -> "INTEGER"|>, 
                    "de_inspectionid" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 128}, 
                    "NativeTypeString" -> "VARCHAR(128)"|>, 
                    "de_medicineid" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 128}, 
                    "NativeTypeString" -> "VARCHAR(128)"|>|>, "Schema" -> 
                    "public"|>, 
                    "de_tab_inspectionsymptoms" -> <|
                    "PrimaryKey" -> <|
                    "ConstraintName" -> None, "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {<|
                    "ConstraintName" -> 
                    "de_doc_inspection_de_tab_inspectionsymptomes_fk", 
                    "FromColumns" -> {"de_inspectionid"}, 
                    "ToColumns" -> {"id"}, "ToTable" -> "de_doc_inspection", 
                    "OnUpdate" -> None, "OnDelete" -> None, "Initially" -> 
                    None, "Deferrable" -> None|>, <|
                    "ConstraintName" -> 
                    "de_ctl_symptoms_de_tab_inspectionsymptoms_fk", 
                    "FromColumns" -> {"de_symptomid"}, "ToColumns" -> {"id"}, 
                    "ToTable" -> "de_ctl_symptoms", "OnUpdate" -> None, 
                    "OnDelete" -> None, "Initially" -> None, "Deferrable" -> 
                    None|>}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|
                    "id" -> <|"Nullable" -> False, "BackendType" -> "Integer",
                     "NativeTypeString" -> "INTEGER"|>, 
                    "de_inspectionid" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 128}, 
                    "NativeTypeString" -> "VARCHAR(128)"|>, 
                    "de_symptomid" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>|>, "Schema" -> 
                    "public"|>, 
                    "de_ctl_genders" -> <|
                    "PrimaryKey" -> <|
                    "ConstraintName" -> None, "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, 
                    "Indexes" -> {}, 
                    "Columns" -> <|
                    "id" -> <|"Nullable" -> False, "BackendType" -> "Integer",
                     "NativeTypeString" -> "INTEGER"|>, 
                    "de_name" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>|>, "Schema" -> 
                    "public"|>, 
                    "de_ctl_doctors" -> <|
                    "PrimaryKey" -> <|
                    "ConstraintName" -> None, "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, 
                    "Indexes" -> {}, 
                    "Columns" -> <|
                    "id" -> <|"Nullable" -> False, "BackendType" -> "Integer",
                     "NativeTypeString" -> "INTEGER"|>, 
                    "de_region" -> <|
                    "Nullable" -> True, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_office" -> <|
                    "Nullable" -> True, "BackendType" -> {"String", 16}, 
                    "NativeTypeString" -> "VARCHAR(16)"|>, 
                    "de_surname" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>, 
                    "de_name" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>, 
                    "de_patronymic" -> <|
                    "Nullable" -> True, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>|>, "Schema" -> 
                    "public"|>, 
                    "de_ctl_symptoms" -> <|
                    "PrimaryKey" -> <|
                    "ConstraintName" -> None, "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, 
                    "Indexes" -> {}, 
                    "Columns" -> <|
                    "id" -> <|"Nullable" -> False, "BackendType" -> "Integer",
                     "NativeTypeString" -> "INTEGER"|>, 
                    "de_name" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>|>, "Schema" -> 
                    "public"|>, 
                    "de_ctl_diagnosis" -> <|
                    "PrimaryKey" -> <|
                    "ConstraintName" -> None, "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, 
                    "Indexes" -> {}, 
                    "Columns" -> <|
                    "id" -> <|"Nullable" -> False, "BackendType" -> "Integer",
                     "NativeTypeString" -> "INTEGER"|>, 
                    "de_name" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 16}, 
                    "NativeTypeString" -> "VARCHAR(16)"|>, 
                    "de_description" -> <|
                    "Nullable" -> True, "BackendType" -> {"String", 1024}, 
                    "NativeTypeString" -> "VARCHAR(1024)"|>|>, "Schema" -> 
                    "public"|>, 
                    "de_ctl_inspectionplaces" -> <|
                    "PrimaryKey" -> <|
                    "ConstraintName" -> None, "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, 
                    "Indexes" -> {}, 
                    "Columns" -> <|
                    "id" -> <|"Nullable" -> False, "BackendType" -> "Integer",
                     "NativeTypeString" -> "INTEGER"|>, 
                    "de_name" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>|>, "Schema" -> 
                    "public"|>, 
                    "de_tab_medicinesideeffects" -> <|
                    "PrimaryKey" -> <|
                    "ConstraintName" -> None, "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {<|
                    "ConstraintName" -> 
                    "de_ctl_medicine_de_tab_medicinesideeffects_fk", 
                    "FromColumns" -> {"de_medicineid"}, "ToColumns" -> {"id"},
                     "ToTable" -> "de_ctl_medicines", "OnUpdate" -> None, 
                    "OnDelete" -> None, "Initially" -> None, "Deferrable" -> 
                    None|>}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|
                    "id" -> <|"Nullable" -> False, "BackendType" -> "Integer",
                     "NativeTypeString" -> "INTEGER"|>, 
                    "de_medicineid" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 128}, 
                    "NativeTypeString" -> "VARCHAR(128)"|>, 
                    "de_name" -> <|"Nullable" -> False, 
                    "BackendType" -> {"String", 32}, "NativeTypeString" -> 
                    "VARCHAR(32)"|>|>, "Schema" -> "public"|>|>, "ID" -> 
                    "1bz6rjcncj0zs"|>, 
                    
                    DatabaseReference[<|
                    "Backend" -> "postgresql", "Username" -> "st190333_", 
                    "Password" -> "1234", "Host" -> "localhost", "Port" -> 
                    None, "Name" -> "st190333_dblab3", "Options" -> <||>|>]]},
                     False]], DynamicModuleValues :> {}], Setting[#, {0}]& ], 
                   "SummaryItem"]}]}}, AutoDelete -> False, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
           False, BaselinePosition -> {1, 1}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
         GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
               Appearance -> None, BaseStyle -> {}, 
               ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[{
               Thickness[0.04], {
                FaceForm[{
                  RGBColor[0.984, 0.969, 0.91], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
                 0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{17., 10.}, {
                 6., 10.}, {4.343, 10.}, {3., 11.343}, {3., 13.}, {3., 20.}, {
                 3., 21.657}, {4.343, 23.}, {6., 23.}, {17., 23.}, {18.657, 
                 23.}, {20., 21.657}, {20., 20.}, {20., 13.}, {20., 11.343}, {
                 18.657, 10.}, {17., 10.}}}]}, {
                FaceForm[{
                  RGBColor[0.996, 0.506, 0.004], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {0, 
                  1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}}}, {{{6., 22.5}, {4.622, 22.5}, {3.5, 21.379}, {3.5, 
                  20.}, {3.5, 13.}, {3.5, 11.620999999999999`}, {4.622, 
                  10.5}, {6., 10.5}, {17., 10.5}, {18.379, 10.5}, {19.5, 
                  11.620999999999999`}, {19.5, 13.}, {19.5, 20.}, {19.5, 
                  21.379}, {18.379, 22.5}, {17., 22.5}}, {{17., 9.5}, {6., 
                  9.5}, {4.07, 9.5}, {2.5, 11.07}, {2.5, 13.}, {2.5, 20.}, {
                  2.5, 21.93}, {4.07, 23.5}, {6., 23.5}, {17., 23.5}, {18.93, 
                  23.5}, {20.5, 21.93}, {20.5, 20.}, {20.5, 13.}, {20.5, 
                  11.07}, {18.93, 9.5}, {17., 9.5}}}]}, {
                FaceForm[{
                  RGBColor[0.012, 0.612, 0.996], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5, 12.5}, {14.5, 12.5}, {
                 14.5, 14.5}, {12.5, 14.5}}, {{8.5, 14.5}, {10.5, 14.5}, {
                 10.5, 12.5}, {8.5, 12.5}}}]}, {
                FaceForm[{
                  RGBColor[0.537, 0.537, 0.537], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAFdBwitD6EbDLDzGwwdUNRj8E2gfE0cfCM0
9UZo5hsRoE3Q1MPMl0LjC+HgG6Gph/FVobQ+qnvR+XD/qqLxpdDUK2Lno6vH
MM8ITT063wRNvYkDAOvQJ0o=
                 "]]}, {
                FaceForm[{
                  RGBColor[1., 1., 1.], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                 0, 1, 0}, {1, 3, 3}}}, {{{18., 12.}, {15.791, 12.}, {14., 
                 11.104}, {14., 10.}, {14., 4.}, {14., 2.896000000000001}, {
                 15.791, 2.}, {18., 2.}, {20.209, 2.}, {22., 
                 2.896000000000001}, {22., 4.}, {22., 10.}, {22., 11.104}, {
                 20.209, 12.}, {18., 12.}}}]}, {
                FaceForm[{
                  RGBColor[0.537, 0.537, 0.537], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                  0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
                  3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                  0}, {1, 3, 3}}}, {{{18., 5.5}, {15.997, 5.5}, {14.5, 
                  6.292}, {14.5, 7.}, {14.5, 8.411}, {15.312, 7.853}, {16.547,
                   7.5}, {18., 7.5}, {19.453, 7.5}, {20.688, 7.853}, {21.5, 
                  8.411}, {21.5, 7.}, {21.5, 6.292}, {20.003, 5.5}, {18., 
                  5.5}}, {{21.5, 4.}, {21.5, 3.292}, {20.003, 2.5}, {18., 
                  2.5}, {15.997, 2.5}, {14.5, 3.292}, {14.5, 4.}, {14.5, 
                  5.411}, {15.312, 4.853}, {16.547, 4.5}, {18., 4.5}, {19.453,
                   4.5}, {20.688, 4.853}, {21.5, 5.411}}, {{18., 11.5}, {
                  20.003, 11.5}, {21.5, 10.708}, {21.5, 10.}, {21.5, 9.292}, {
                  20.003, 8.5}, {18., 8.5}, {15.997, 8.5}, {14.5, 9.292}, {
                  14.5, 10.}, {14.5, 10.708}, {15.997, 11.5}, {18., 11.5}}, {{
                  18., 12.5}, {15.435, 12.5}, {13.5, 11.425}, {13.5, 10.}, {
                  13.5, 4.}, {13.5, 2.575}, {15.435, 1.5}, {18., 1.5}, {
                  20.565, 1.5}, {22.5, 2.575}, {22.5, 4.}, {22.5, 10.}, {22.5,
                   11.425}, {20.565, 12.5}, {18., 12.5}}}]}}, AspectRatio -> 
              Automatic, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], PlotRange -> {{0., 25.}, {0., 25.}}], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Type count: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["11", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"RelationalDatabase: \"", "SummaryItemAnnotation"],
                   "\[InvisibleSpace]", 
                  TagBox[
                   TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"PostgreSQL\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"PostgreSQL\""}, {"", 
                    PaneBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["RelationalDatabase", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04], {
                    FaceForm[{
                    RGBColor[0.651, 0.651, 0.651], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{20.5, 4.}, {20.5, 3.724}, {20.276, 
                    3.5}, {20., 3.5}, {6., 3.5}, {5.724, 3.5}, {5.5, 3.724}, {
                    5.5, 4.}, {5.5, 21.}, {5.5, 21.276}, {5.724, 21.5}, {6., 
                    21.5}, {20., 21.5}, {20.276, 21.5}, {20.5, 21.276}, {20.5,
                     21.}}, {{20.5, 22.5}, {5.5, 22.5}, {4.947999999999999, 
                    22.5}, {4.5, 22.053}, {4.5, 21.5}, {4.5, 3.5}, {4.5, 
                    2.947}, {4.947999999999999, 2.5}, {5.5, 2.5}, {20.5, 
                    2.5}, {21.052, 2.5}, {21.5, 2.947}, {21.5, 3.5}, {21.5, 
                    21.5}, {21.5, 22.053}, {21.052, 22.5}, {20.5, 22.5}}}]}, {
                    
                    FaceForm[{
                    RGBColor[0.8670000000000001, 0.067, 0.], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, CompressedData["
1:eJxtj69Lg1EYhT80CZ84xjSM68VN5tjGfjnFYPksJkUwiRYRrQoGs2Ay2AUR
m1YRGVjEYBCrf4DJ7L/g2N05l/egMC7Pju/Zc0oHJ9tH40mSTAw+U4PPWII/
lw2f8+XwJjny9XH+4u1zUvI0az7d/j6sRw5v5K/Ng9zOy5LcL0k/2JGfP85e
74qzknv2ge3vefrYe+S6D9wTn574IsfeyOGNHPwW5X5R+sGObH2Re/bZvT0y
fOw9ct0H7opPV3yRY2/k8EYOfh2570g/2JGtL3LPPru3S4aPvUeu+0aczFuf
ARtf5mm2d7j6vXVVlr2R72/e5x5PS3Jfkn6wIxtf5p59dm+ZDB97D1/dB66K
T1V8kWPvguyNHPwqcl+RfrAjW1/knn127wIZPvYevroP3BCfhvgix9667I0c
/GpyX5N+sCNbX+SefXZvnQwfew9f3Qdui09bfJGn2e6wvyV7Iwe/ptw3pR/s
yNYXuWef3dsiw8few1f3gWfEZ0Z8kaej3mnZWyBvrFyu7f/k5T4v/WBHtr7I
Pfvs3gIZPvYevrrPy/foL8p9Uf4PnCPbfchT9oFtT5r1R79j7+GVE46e1s/z
7f/7vcv+AMXQVQk=
                    "]]}, {
                    FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{20.5, 4.}, {
                    20.5, 3.724}, {20.276, 3.5}, {20., 3.5}, {6., 3.5}, {
                    5.724, 3.5}, {5.5, 3.724}, {5.5, 4.}, {5.5, 21.}, {5.5, 
                    21.276}, {5.724, 21.5}, {6., 21.5}, {20., 21.5}, {20.276, 
                    21.5}, {20.5, 21.276}, {20.5, 21.}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}}}, {{{13., 18.}, {10.239, 18.}, {
                    8., 17.015}, {8., 15.8}, {8., 9.2}, {8., 
                    7.984999999999999}, {10.239, 7.}, {13., 7.}, {15.761, 
                    7.}, {18., 7.984999999999999}, {18., 9.2}, {18., 15.8}, {
                    18., 17.015}, {15.761, 18.}, {13., 18.}}}]}, {
                    FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}}}, {{{13., 10.8633}, {10.314, 
                    10.8633}, {8.6, 11.833300000000001`}, {8.6, 
                    12.500300000000001`}, {8.6, 14.1133}, {9.586, 13.4603}, {
                    11.151, 13.0463}, {13., 13.0463}, {14.849, 13.0463}, {
                    16.414, 13.4603}, {17.4, 14.1133}, {17.4, 
                    12.500300000000001`}, {17.4, 11.833300000000001`}, {
                    15.686, 10.8633}, {13., 10.8633}}, {{17.4, 9.2273}, {17.4,
                     8.560300000000002}, {15.686, 7.5913}, {13., 7.5913}, {
                    10.314, 7.5913}, {8.6, 8.560300000000002}, {8.6, 
                    9.2273}, {8.6, 10.8413}, {9.586, 10.1873}, {11.151, 
                    9.772300000000001}, {13., 9.772300000000001}, {14.849, 
                    9.772300000000001}, {16.414, 10.1873}, {17.4, 
                    10.8413}}, {{13., 17.4093}, {15.686, 17.4093}, {17.4, 
                    16.439300000000003`}, {17.4, 15.772300000000001`}, {17.4, 
                    15.1053}, {15.686, 14.1363}, {13., 14.1363}, {10.314, 
                    14.1363}, {8.6, 15.1053}, {8.6, 15.772300000000001`}, {
                    8.6, 16.439300000000003`}, {10.314, 17.4093}, {13., 
                    17.4093}}, {{13., 18.5003}, {9.864, 18.5003}, {7.5, 
                    17.3273}, {7.5, 15.772300000000001`}, {7.5, 9.2273}, {7.5,
                     7.673300000000001}, {9.864, 6.500300000000001}, {13., 
                    6.500300000000001}, {16.136, 6.500300000000001}, {18.5, 
                    7.673300000000001}, {18.5, 9.2273}, {18.5, 
                    15.772300000000001`}, {18.5, 17.3273}, {16.136, 
                    18.5003}, {13., 18.5003}}}]}}, {
                    ImageSize -> Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 25.}, {0., 25.}}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Table count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["11", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Backend: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"PostgreSQL\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04], {
                    FaceForm[{
                    RGBColor[0.651, 0.651, 0.651], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{20.5, 4.}, {20.5, 3.724}, {20.276, 
                    3.5}, {20., 3.5}, {6., 3.5}, {5.724, 3.5}, {5.5, 3.724}, {
                    5.5, 4.}, {5.5, 21.}, {5.5, 21.276}, {5.724, 21.5}, {6., 
                    21.5}, {20., 21.5}, {20.276, 21.5}, {20.5, 21.276}, {20.5,
                     21.}}, {{20.5, 22.5}, {5.5, 22.5}, {4.947999999999999, 
                    22.5}, {4.5, 22.053}, {4.5, 21.5}, {4.5, 3.5}, {4.5, 
                    2.947}, {4.947999999999999, 2.5}, {5.5, 2.5}, {20.5, 
                    2.5}, {21.052, 2.5}, {21.5, 2.947}, {21.5, 3.5}, {21.5, 
                    21.5}, {21.5, 22.053}, {21.052, 22.5}, {20.5, 22.5}}}]}, {
                    
                    FaceForm[{
                    RGBColor[0.8670000000000001, 0.067, 0.], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, CompressedData["
1:eJxtj69Lg1EYhT80CZ84xjSM68VN5tjGfjnFYPksJkUwiRYRrQoGs2Ay2AUR
m1YRGVjEYBCrf4DJ7L/g2N05l/egMC7Pju/Zc0oHJ9tH40mSTAw+U4PPWII/
lw2f8+XwJjny9XH+4u1zUvI0az7d/j6sRw5v5K/Ng9zOy5LcL0k/2JGfP85e
74qzknv2ge3vefrYe+S6D9wTn574IsfeyOGNHPwW5X5R+sGObH2Re/bZvT0y
fOw9ct0H7opPV3yRY2/k8EYOfh2570g/2JGtL3LPPru3S4aPvUeu+0aczFuf
ARtf5mm2d7j6vXVVlr2R72/e5x5PS3Jfkn6wIxtf5p59dm+ZDB97D1/dB66K
T1V8kWPvguyNHPwqcl+RfrAjW1/knn127wIZPvYevroP3BCfhvgix9667I0c
/GpyX5N+sCNbX+SefXZvnQwfew9f3Qdui09bfJGn2e6wvyV7Iwe/ptw3pR/s
yNYXuWef3dsiw8few1f3gWfEZ0Z8kaej3mnZWyBvrFyu7f/k5T4v/WBHtr7I
Pfvs3gIZPvYevrrPy/foL8p9Uf4PnCPbfchT9oFtT5r1R79j7+GVE46e1s/z
7f/7vcv+AMXQVQk=
                    "]]}, {
                    FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{20.5, 4.}, {
                    20.5, 3.724}, {20.276, 3.5}, {20., 3.5}, {6., 3.5}, {
                    5.724, 3.5}, {5.5, 3.724}, {5.5, 4.}, {5.5, 21.}, {5.5, 
                    21.276}, {5.724, 21.5}, {6., 21.5}, {20., 21.5}, {20.276, 
                    21.5}, {20.5, 21.276}, {20.5, 21.}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}}}, {{{13., 18.}, {10.239, 18.}, {
                    8., 17.015}, {8., 15.8}, {8., 9.2}, {8., 
                    7.984999999999999}, {10.239, 7.}, {13., 7.}, {15.761, 
                    7.}, {18., 7.984999999999999}, {18., 9.2}, {18., 15.8}, {
                    18., 17.015}, {15.761, 18.}, {13., 18.}}}]}, {
                    FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}}}, {{{13., 10.8633}, {10.314, 
                    10.8633}, {8.6, 11.833300000000001`}, {8.6, 
                    12.500300000000001`}, {8.6, 14.1133}, {9.586, 13.4603}, {
                    11.151, 13.0463}, {13., 13.0463}, {14.849, 13.0463}, {
                    16.414, 13.4603}, {17.4, 14.1133}, {17.4, 
                    12.500300000000001`}, {17.4, 11.833300000000001`}, {
                    15.686, 10.8633}, {13., 10.8633}}, {{17.4, 9.2273}, {17.4,
                     8.560300000000002}, {15.686, 7.5913}, {13., 7.5913}, {
                    10.314, 7.5913}, {8.6, 8.560300000000002}, {8.6, 
                    9.2273}, {8.6, 10.8413}, {9.586, 10.1873}, {11.151, 
                    9.772300000000001}, {13., 9.772300000000001}, {14.849, 
                    9.772300000000001}, {16.414, 10.1873}, {17.4, 
                    10.8413}}, {{13., 17.4093}, {15.686, 17.4093}, {17.4, 
                    16.439300000000003`}, {17.4, 15.772300000000001`}, {17.4, 
                    15.1053}, {15.686, 14.1363}, {13., 14.1363}, {10.314, 
                    14.1363}, {8.6, 15.1053}, {8.6, 15.772300000000001`}, {
                    8.6, 16.439300000000003`}, {10.314, 17.4093}, {13., 
                    17.4093}}, {{13., 18.5003}, {9.864, 18.5003}, {7.5, 
                    17.3273}, {7.5, 15.772300000000001`}, {7.5, 9.2273}, {7.5,
                     7.673300000000001}, {9.864, 6.500300000000001}, {13., 
                    6.500300000000001}, {16.136, 6.500300000000001}, {18.5, 
                    7.673300000000001}, {18.5, 9.2273}, {18.5, 
                    15.772300000000001`}, {18.5, 17.3273}, {16.136, 
                    18.5003}, {13., 18.5003}}}]}}, {
                    ImageSize -> Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 25.}, {0., 25.}}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Table count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["11", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Backend: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"PostgreSQL\"", "SummaryItem"]}]}, {
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox["\"Tables: \"", "SummaryItemAnnotation"], 
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_patients\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_patients\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_surname\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_surname\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(32)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_surname\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_surname", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_surname"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(32)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"de_name\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_patronymic\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_patronymic\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(32)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_patronymic\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_patronymic", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_patronymic"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_birthday\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_birthday\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"DATE\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_birthday\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_birthday", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "DATE"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_birthday"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_address\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_address\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(128)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_address\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_address", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_address"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_genderid\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_genderid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_genderid\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_genderid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_genderid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_ctl_patients", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_surname", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_surname"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_patronymic", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_patronymic"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"de_birthday", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "DATE"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_birthday"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"de_address", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_address"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_genderid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_genderid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}]}]}, 
                    False]], DynamicModuleValues -> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_medicines\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_medicines\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(128)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(256)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"de_name\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(256)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_methodtaking\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_methodtaking\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(1024)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_methodtaking\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_methodtaking", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(1024)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_methodtaking"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_ctl_medicines", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(256)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_methodtaking", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(1024)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_methodtaking"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}]}]}, 
                    False]], DynamicModuleValues -> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_doc_inspection\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_doc_inspection\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(128)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_starttime\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_starttime\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"TIMESTAMP WITHOUT TIME ZONE\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_starttime\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_starttime", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "TIMESTAMP WITHOUT TIME ZONE"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_starttime"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_endtime\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_endtime\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"TIMESTAMP WITHOUT TIME ZONE\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_endtime\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_endtime", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "TIMESTAMP WITHOUT TIME ZONE"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_endtime"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_placeid\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_placeid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_placeid\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_placeid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_placeid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_diagnosisid\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_diagnosisid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_diagnosisid\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_diagnosisid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_diagnosisid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_patientid\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_patientid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_patientid\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_patientid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_patientid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_doctorid\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_doctorid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_doctorid\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_doctorid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_doctorid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_doc_inspection", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_starttime", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "TIMESTAMP WITHOUT TIME ZONE"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_starttime"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_endtime", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "TIMESTAMP WITHOUT TIME ZONE"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_endtime"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_placeid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_placeid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_diagnosisid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_diagnosisid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_patientid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_patientid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_doctorid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_doctorid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}]}]}, 
                    False]], DynamicModuleValues -> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_tab_inspectionmedicines\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_tab_inspectionmedicines\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_inspectionid\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_inspectionid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(128)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_inspectionid\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_inspectionid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_inspectionid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_medicineid\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_medicineid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(128)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_medicineid\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_medicineid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_medicineid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_tab_inspectionmedicines", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_inspectionid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_inspectionid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_medicineid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_medicineid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}]}]}, 
                    False]], DynamicModuleValues -> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_tab_inspectionsymptoms\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_tab_inspectionsymptoms\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_inspectionid\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_inspectionid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(128)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_inspectionid\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_inspectionid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_inspectionid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_symptomid\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_symptomid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_symptomid\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_symptomid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_symptomid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_tab_inspectionsymptoms", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_inspectionid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_inspectionid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_symptomid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_symptomid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}]}]}, 
                    False]], DynamicModuleValues -> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_genders\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_genders\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(32)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"de_name\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_ctl_genders", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}]}]}, 
                    False]], DynamicModuleValues -> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_doctors\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_doctors\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_region\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_region\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"de_region\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_region", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_region"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_office\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_office\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(16)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"de_office\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_office", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(16)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_office"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_surname\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_surname\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(32)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_surname\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_surname", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_surname"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(32)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"de_name\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_patronymic\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_patronymic\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(32)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_patronymic\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_patronymic", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_patronymic"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_ctl_doctors", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_region", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_region"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"de_office", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(16)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_office"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"de_surname", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_surname"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_patronymic", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_patronymic"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}]}]}, False]],
                     DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_symptoms\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_symptoms\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(32)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"de_name\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_ctl_symptoms", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}]}]}, 
                    False]], DynamicModuleValues -> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_diagnosis\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_diagnosis\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(16)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"de_name\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(16)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_description\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_description\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(1024)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_description\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_description", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(1024)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_description"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_ctl_diagnosis", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(16)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_description", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(1024)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_description"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}]}]}, False]],
                     DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_inspectionplaces\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_ctl_inspectionplaces\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(32)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"de_name\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_ctl_inspectionplaces", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}]}]}, 
                    False]], DynamicModuleValues -> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_tab_medicinesideeffects\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_tab_medicinesideeffects\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"INTEGER\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_medicineid\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_medicineid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(128)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"de_medicineid\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_medicineid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_medicineid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(32)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"de_name\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"de_tab_medicinesideeffects", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_medicineid", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(128)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_medicineid"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "VARCHAR(32)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "de_name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}]}]}, 
                    False]], DynamicModuleValues -> Automatic], 
                    Setting[#, {0}]& ]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    
                    RelationalDatabase[<|
                    "Tables" -> <|"de_ctl_patients" -> <|
                    "PrimaryKey" -> <|"ConstraintName" -> None, 
                    "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {<|"ConstraintName" -> 
                    "de_ctl_genders_de_ctl_patients_fk", 
                    "FromColumns" -> {"de_genderid"}, "ToColumns" -> {"id"}, 
                    "ToTable" -> "de_ctl_genders", "OnUpdate" -> None, 
                    "OnDelete" -> None, "Initially" -> None, "Deferrable" -> 
                    None|>}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|"id" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_surname" -> <|"Nullable" -> False, 
                    "BackendType" -> {"String", 32}, "NativeTypeString" -> 
                    "VARCHAR(32)"|>, "de_name" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>, 
                    "de_patronymic" -> <|"Nullable" -> True, 
                    "BackendType" -> {"String", 32}, "NativeTypeString" -> 
                    "VARCHAR(32)"|>, "de_birthday" -> <|
                    "Nullable" -> True, "BackendType" -> "Date", 
                    "NativeTypeString" -> "DATE"|>, 
                    "de_address" -> <|"Nullable" -> False, 
                    "BackendType" -> {"String", 128}, "NativeTypeString" -> 
                    "VARCHAR(128)"|>, "de_genderid" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>|>, "Schema" -> 
                    "public"|>, "de_ctl_medicines" -> <|
                    "PrimaryKey" -> <|"ConstraintName" -> None, 
                    "Columns" -> {"id"}|>, "ForeignKeys" -> {}, 
                    "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|"id" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 128}, 
                    "NativeTypeString" -> "VARCHAR(128)"|>, 
                    "de_name" -> <|"Nullable" -> False, 
                    "BackendType" -> {"String", 256}, "NativeTypeString" -> 
                    "VARCHAR(256)"|>, "de_methodtaking" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 1024}, 
                    "NativeTypeString" -> "VARCHAR(1024)"|>|>, "Schema" -> 
                    "public"|>, "de_doc_inspection" -> <|
                    "PrimaryKey" -> <|"ConstraintName" -> None, 
                    "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {<|"ConstraintName" -> 
                    "de_ctl_patients_de_doc_inspection_fk", 
                    "FromColumns" -> {"de_patientid"}, "ToColumns" -> {"id"}, 
                    "ToTable" -> "de_ctl_patients", "OnUpdate" -> None, 
                    "OnDelete" -> None, "Initially" -> None, "Deferrable" -> 
                    None|>, <|"ConstraintName" -> 
                    "de_ctl_diagnosis_de_doc_inspection_fk", 
                    "FromColumns" -> {"de_diagnosisid"}, 
                    "ToColumns" -> {"id"}, "ToTable" -> "de_ctl_diagnosis", 
                    "OnUpdate" -> None, "OnDelete" -> None, "Initially" -> 
                    None, "Deferrable" -> None|>, <|
                    "ConstraintName" -> 
                    "de_ctl_inspectionplaces_de_doc_inspection_fk", 
                    "FromColumns" -> {"de_placeid"}, "ToColumns" -> {"id"}, 
                    "ToTable" -> "de_ctl_inspectionplaces", "OnUpdate" -> 
                    None, "OnDelete" -> None, "Initially" -> None, 
                    "Deferrable" -> None|>, <|
                    "ConstraintName" -> "de_ctl_doctors_de_doc_inspection_fk",
                     "FromColumns" -> {"de_doctorid"}, "ToColumns" -> {"id"}, 
                    "ToTable" -> "de_ctl_doctors", "OnUpdate" -> None, 
                    "OnDelete" -> None, "Initially" -> None, "Deferrable" -> 
                    None|>}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|"id" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 128}, 
                    "NativeTypeString" -> "VARCHAR(128)"|>, 
                    "de_starttime" -> <|"Nullable" -> False, 
                    "BackendType" -> {"DateTime", False}, "NativeTypeString" -> 
                    "TIMESTAMP WITHOUT TIME ZONE"|>, 
                    "de_endtime" -> <|"Nullable" -> False, 
                    "BackendType" -> {"DateTime", False}, "NativeTypeString" -> 
                    "TIMESTAMP WITHOUT TIME ZONE"|>, 
                    "de_placeid" -> <|"Nullable" -> False, "BackendType" -> 
                    "Integer", "NativeTypeString" -> "INTEGER"|>, 
                    "de_diagnosisid" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_patientid" -> <|"Nullable" -> False, "BackendType" -> 
                    "Integer", "NativeTypeString" -> "INTEGER"|>, 
                    "de_doctorid" -> <|"Nullable" -> False, "BackendType" -> 
                    "Integer", "NativeTypeString" -> "INTEGER"|>|>, "Schema" -> 
                    "public"|>, "de_tab_inspectionmedicines" -> <|
                    "PrimaryKey" -> <|"ConstraintName" -> None, 
                    "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {<|"ConstraintName" -> 
                    "de_doc_inspection_de_tab_inspectionmedicine_fk", 
                    "FromColumns" -> {"de_inspectionid"}, 
                    "ToColumns" -> {"id"}, "ToTable" -> "de_doc_inspection", 
                    "OnUpdate" -> None, "OnDelete" -> None, "Initially" -> 
                    None, "Deferrable" -> None|>, <|
                    "ConstraintName" -> 
                    "de_ctl_medicine_de_tab_inspectionmedicine_fk", 
                    "FromColumns" -> {"de_medicineid"}, "ToColumns" -> {"id"},
                     "ToTable" -> "de_ctl_medicines", "OnUpdate" -> None, 
                    "OnDelete" -> None, "Initially" -> None, "Deferrable" -> 
                    None|>}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|"id" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_inspectionid" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 128}, 
                    "NativeTypeString" -> "VARCHAR(128)"|>, 
                    "de_medicineid" -> <|"Nullable" -> False, 
                    "BackendType" -> {"String", 128}, "NativeTypeString" -> 
                    "VARCHAR(128)"|>|>, "Schema" -> "public"|>, 
                    "de_tab_inspectionsymptoms" -> <|
                    "PrimaryKey" -> <|"ConstraintName" -> None, 
                    "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {<|"ConstraintName" -> 
                    "de_doc_inspection_de_tab_inspectionsymptomes_fk", 
                    "FromColumns" -> {"de_inspectionid"}, 
                    "ToColumns" -> {"id"}, "ToTable" -> "de_doc_inspection", 
                    "OnUpdate" -> None, "OnDelete" -> None, "Initially" -> 
                    None, "Deferrable" -> None|>, <|
                    "ConstraintName" -> 
                    "de_ctl_symptoms_de_tab_inspectionsymptoms_fk", 
                    "FromColumns" -> {"de_symptomid"}, "ToColumns" -> {"id"}, 
                    "ToTable" -> "de_ctl_symptoms", "OnUpdate" -> None, 
                    "OnDelete" -> None, "Initially" -> None, "Deferrable" -> 
                    None|>}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|"id" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_inspectionid" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 128}, 
                    "NativeTypeString" -> "VARCHAR(128)"|>, 
                    "de_symptomid" -> <|"Nullable" -> False, "BackendType" -> 
                    "Integer", "NativeTypeString" -> "INTEGER"|>|>, "Schema" -> 
                    "public"|>, "de_ctl_genders" -> <|
                    "PrimaryKey" -> <|"ConstraintName" -> None, 
                    "Columns" -> {"id"}|>, "ForeignKeys" -> {}, 
                    "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|"id" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_name" -> <|"Nullable" -> False, 
                    "BackendType" -> {"String", 32}, "NativeTypeString" -> 
                    "VARCHAR(32)"|>|>, "Schema" -> "public"|>, 
                    "de_ctl_doctors" -> <|
                    "PrimaryKey" -> <|"ConstraintName" -> None, 
                    "Columns" -> {"id"}|>, "ForeignKeys" -> {}, 
                    "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|"id" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_region" -> <|"Nullable" -> True, "BackendType" -> 
                    "Integer", "NativeTypeString" -> "INTEGER"|>, 
                    "de_office" -> <|"Nullable" -> True, 
                    "BackendType" -> {"String", 16}, "NativeTypeString" -> 
                    "VARCHAR(16)"|>, "de_surname" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>, 
                    "de_name" -> <|"Nullable" -> False, 
                    "BackendType" -> {"String", 32}, "NativeTypeString" -> 
                    "VARCHAR(32)"|>, "de_patronymic" -> <|
                    "Nullable" -> True, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>|>, "Schema" -> 
                    "public"|>, "de_ctl_symptoms" -> <|
                    "PrimaryKey" -> <|"ConstraintName" -> None, 
                    "Columns" -> {"id"}|>, "ForeignKeys" -> {}, 
                    "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|"id" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_name" -> <|"Nullable" -> False, 
                    "BackendType" -> {"String", 32}, "NativeTypeString" -> 
                    "VARCHAR(32)"|>|>, "Schema" -> "public"|>, 
                    "de_ctl_diagnosis" -> <|
                    "PrimaryKey" -> <|"ConstraintName" -> None, 
                    "Columns" -> {"id"}|>, "ForeignKeys" -> {}, 
                    "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|"id" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_name" -> <|"Nullable" -> False, 
                    "BackendType" -> {"String", 16}, "NativeTypeString" -> 
                    "VARCHAR(16)"|>, "de_description" -> <|
                    "Nullable" -> True, "BackendType" -> {"String", 1024}, 
                    "NativeTypeString" -> "VARCHAR(1024)"|>|>, "Schema" -> 
                    "public"|>, "de_ctl_inspectionplaces" -> <|
                    "PrimaryKey" -> <|"ConstraintName" -> None, 
                    "Columns" -> {"id"}|>, "ForeignKeys" -> {}, 
                    "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|"id" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_name" -> <|"Nullable" -> False, 
                    "BackendType" -> {"String", 32}, "NativeTypeString" -> 
                    "VARCHAR(32)"|>|>, "Schema" -> "public"|>, 
                    "de_tab_medicinesideeffects" -> <|
                    "PrimaryKey" -> <|"ConstraintName" -> None, 
                    "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {<|"ConstraintName" -> 
                    "de_ctl_medicine_de_tab_medicinesideeffects_fk", 
                    "FromColumns" -> {"de_medicineid"}, "ToColumns" -> {"id"},
                     "ToTable" -> "de_ctl_medicines", "OnUpdate" -> None, 
                    "OnDelete" -> None, "Initially" -> None, "Deferrable" -> 
                    None|>}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|"id" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_medicineid" -> <|"Nullable" -> False, 
                    "BackendType" -> {"String", 128}, "NativeTypeString" -> 
                    "VARCHAR(128)"|>, "de_name" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>|>, "Schema" -> 
                    "public"|>|>, "ID" -> "1bz6rjcncj0zs"|>, 
                    
                    DatabaseReference[<|
                    "Backend" -> "postgresql", "Username" -> "st190333_", 
                    "Password" -> "1234", "Host" -> "localhost", "Port" -> 
                    None, "Name" -> "st190333_dblab3", "Options" -> <||>|>]], 
                    Editable -> False, SelectWithContents -> True, Selectable -> 
                    False], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"PostgreSQL", 
                    
                    RelationalDatabase[<|
                    "Tables" -> <|
                    "de_ctl_patients" -> <|
                    "PrimaryKey" -> <|
                    "ConstraintName" -> None, "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {<|
                    "ConstraintName" -> "de_ctl_genders_de_ctl_patients_fk", 
                    "FromColumns" -> {"de_genderid"}, "ToColumns" -> {"id"}, 
                    "ToTable" -> "de_ctl_genders", "OnUpdate" -> None, 
                    "OnDelete" -> None, "Initially" -> None, "Deferrable" -> 
                    None|>}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|
                    "id" -> <|"Nullable" -> False, "BackendType" -> "Integer",
                     "NativeTypeString" -> "INTEGER"|>, 
                    "de_surname" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>, 
                    "de_name" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>, 
                    "de_patronymic" -> <|
                    "Nullable" -> True, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>, 
                    "de_birthday" -> <|
                    "Nullable" -> True, "BackendType" -> "Date", 
                    "NativeTypeString" -> "DATE"|>, 
                    "de_address" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 128}, 
                    "NativeTypeString" -> "VARCHAR(128)"|>, 
                    "de_genderid" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>|>, "Schema" -> 
                    "public"|>, 
                    "de_ctl_medicines" -> <|
                    "PrimaryKey" -> <|
                    "ConstraintName" -> None, "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, 
                    "Indexes" -> {}, 
                    "Columns" -> <|
                    "id" -> <|"Nullable" -> False, 
                    "BackendType" -> {"String", 128}, "NativeTypeString" -> 
                    "VARCHAR(128)"|>, 
                    "de_name" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 256}, 
                    "NativeTypeString" -> "VARCHAR(256)"|>, 
                    "de_methodtaking" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 1024}, 
                    "NativeTypeString" -> "VARCHAR(1024)"|>|>, "Schema" -> 
                    "public"|>, 
                    "de_doc_inspection" -> <|
                    "PrimaryKey" -> <|
                    "ConstraintName" -> None, "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {<|
                    "ConstraintName" -> 
                    "de_ctl_patients_de_doc_inspection_fk", 
                    "FromColumns" -> {"de_patientid"}, "ToColumns" -> {"id"}, 
                    "ToTable" -> "de_ctl_patients", "OnUpdate" -> None, 
                    "OnDelete" -> None, "Initially" -> None, "Deferrable" -> 
                    None|>, <|"ConstraintName" -> 
                    "de_ctl_diagnosis_de_doc_inspection_fk", 
                    "FromColumns" -> {"de_diagnosisid"}, 
                    "ToColumns" -> {"id"}, "ToTable" -> "de_ctl_diagnosis", 
                    "OnUpdate" -> None, "OnDelete" -> None, "Initially" -> 
                    None, "Deferrable" -> None|>, <|
                    "ConstraintName" -> 
                    "de_ctl_inspectionplaces_de_doc_inspection_fk", 
                    "FromColumns" -> {"de_placeid"}, "ToColumns" -> {"id"}, 
                    "ToTable" -> "de_ctl_inspectionplaces", "OnUpdate" -> 
                    None, "OnDelete" -> None, "Initially" -> None, 
                    "Deferrable" -> None|>, <|
                    "ConstraintName" -> "de_ctl_doctors_de_doc_inspection_fk",
                     "FromColumns" -> {"de_doctorid"}, "ToColumns" -> {"id"}, 
                    "ToTable" -> "de_ctl_doctors", "OnUpdate" -> None, 
                    "OnDelete" -> None, "Initially" -> None, "Deferrable" -> 
                    None|>}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|
                    "id" -> <|"Nullable" -> False, 
                    "BackendType" -> {"String", 128}, "NativeTypeString" -> 
                    "VARCHAR(128)"|>, 
                    "de_starttime" -> <|
                    "Nullable" -> False, "BackendType" -> {"DateTime", False},
                     "NativeTypeString" -> "TIMESTAMP WITHOUT TIME ZONE"|>, 
                    "de_endtime" -> <|
                    "Nullable" -> False, "BackendType" -> {"DateTime", False},
                     "NativeTypeString" -> "TIMESTAMP WITHOUT TIME ZONE"|>, 
                    "de_placeid" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_diagnosisid" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_patientid" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_doctorid" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>|>, "Schema" -> 
                    "public"|>, 
                    "de_tab_inspectionmedicines" -> <|
                    "PrimaryKey" -> <|
                    "ConstraintName" -> None, "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {<|
                    "ConstraintName" -> 
                    "de_doc_inspection_de_tab_inspectionmedicine_fk", 
                    "FromColumns" -> {"de_inspectionid"}, 
                    "ToColumns" -> {"id"}, "ToTable" -> "de_doc_inspection", 
                    "OnUpdate" -> None, "OnDelete" -> None, "Initially" -> 
                    None, "Deferrable" -> None|>, <|
                    "ConstraintName" -> 
                    "de_ctl_medicine_de_tab_inspectionmedicine_fk", 
                    "FromColumns" -> {"de_medicineid"}, "ToColumns" -> {"id"},
                     "ToTable" -> "de_ctl_medicines", "OnUpdate" -> None, 
                    "OnDelete" -> None, "Initially" -> None, "Deferrable" -> 
                    None|>}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|
                    "id" -> <|"Nullable" -> False, "BackendType" -> "Integer",
                     "NativeTypeString" -> "INTEGER"|>, 
                    "de_inspectionid" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 128}, 
                    "NativeTypeString" -> "VARCHAR(128)"|>, 
                    "de_medicineid" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 128}, 
                    "NativeTypeString" -> "VARCHAR(128)"|>|>, "Schema" -> 
                    "public"|>, 
                    "de_tab_inspectionsymptoms" -> <|
                    "PrimaryKey" -> <|
                    "ConstraintName" -> None, "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {<|
                    "ConstraintName" -> 
                    "de_doc_inspection_de_tab_inspectionsymptomes_fk", 
                    "FromColumns" -> {"de_inspectionid"}, 
                    "ToColumns" -> {"id"}, "ToTable" -> "de_doc_inspection", 
                    "OnUpdate" -> None, "OnDelete" -> None, "Initially" -> 
                    None, "Deferrable" -> None|>, <|
                    "ConstraintName" -> 
                    "de_ctl_symptoms_de_tab_inspectionsymptoms_fk", 
                    "FromColumns" -> {"de_symptomid"}, "ToColumns" -> {"id"}, 
                    "ToTable" -> "de_ctl_symptoms", "OnUpdate" -> None, 
                    "OnDelete" -> None, "Initially" -> None, "Deferrable" -> 
                    None|>}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|
                    "id" -> <|"Nullable" -> False, "BackendType" -> "Integer",
                     "NativeTypeString" -> "INTEGER"|>, 
                    "de_inspectionid" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 128}, 
                    "NativeTypeString" -> "VARCHAR(128)"|>, 
                    "de_symptomid" -> <|
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>|>, "Schema" -> 
                    "public"|>, 
                    "de_ctl_genders" -> <|
                    "PrimaryKey" -> <|
                    "ConstraintName" -> None, "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, 
                    "Indexes" -> {}, 
                    "Columns" -> <|
                    "id" -> <|"Nullable" -> False, "BackendType" -> "Integer",
                     "NativeTypeString" -> "INTEGER"|>, 
                    "de_name" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>|>, "Schema" -> 
                    "public"|>, 
                    "de_ctl_doctors" -> <|
                    "PrimaryKey" -> <|
                    "ConstraintName" -> None, "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, 
                    "Indexes" -> {}, 
                    "Columns" -> <|
                    "id" -> <|"Nullable" -> False, "BackendType" -> "Integer",
                     "NativeTypeString" -> "INTEGER"|>, 
                    "de_region" -> <|
                    "Nullable" -> True, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER"|>, 
                    "de_office" -> <|
                    "Nullable" -> True, "BackendType" -> {"String", 16}, 
                    "NativeTypeString" -> "VARCHAR(16)"|>, 
                    "de_surname" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>, 
                    "de_name" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>, 
                    "de_patronymic" -> <|
                    "Nullable" -> True, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>|>, "Schema" -> 
                    "public"|>, 
                    "de_ctl_symptoms" -> <|
                    "PrimaryKey" -> <|
                    "ConstraintName" -> None, "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, 
                    "Indexes" -> {}, 
                    "Columns" -> <|
                    "id" -> <|"Nullable" -> False, "BackendType" -> "Integer",
                     "NativeTypeString" -> "INTEGER"|>, 
                    "de_name" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>|>, "Schema" -> 
                    "public"|>, 
                    "de_ctl_diagnosis" -> <|
                    "PrimaryKey" -> <|
                    "ConstraintName" -> None, "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, 
                    "Indexes" -> {}, 
                    "Columns" -> <|
                    "id" -> <|"Nullable" -> False, "BackendType" -> "Integer",
                     "NativeTypeString" -> "INTEGER"|>, 
                    "de_name" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 16}, 
                    "NativeTypeString" -> "VARCHAR(16)"|>, 
                    "de_description" -> <|
                    "Nullable" -> True, "BackendType" -> {"String", 1024}, 
                    "NativeTypeString" -> "VARCHAR(1024)"|>|>, "Schema" -> 
                    "public"|>, 
                    "de_ctl_inspectionplaces" -> <|
                    "PrimaryKey" -> <|
                    "ConstraintName" -> None, "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, 
                    "Indexes" -> {}, 
                    "Columns" -> <|
                    "id" -> <|"Nullable" -> False, "BackendType" -> "Integer",
                     "NativeTypeString" -> "INTEGER"|>, 
                    "de_name" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>|>, "Schema" -> 
                    "public"|>, 
                    "de_tab_medicinesideeffects" -> <|
                    "PrimaryKey" -> <|
                    "ConstraintName" -> None, "Columns" -> {"id"}|>, 
                    "ForeignKeys" -> {<|
                    "ConstraintName" -> 
                    "de_ctl_medicine_de_tab_medicinesideeffects_fk", 
                    "FromColumns" -> {"de_medicineid"}, "ToColumns" -> {"id"},
                     "ToTable" -> "de_ctl_medicines", "OnUpdate" -> None, 
                    "OnDelete" -> None, "Initially" -> None, "Deferrable" -> 
                    None|>}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
                    "Columns" -> <|
                    "id" -> <|"Nullable" -> False, "BackendType" -> "Integer",
                     "NativeTypeString" -> "INTEGER"|>, 
                    "de_medicineid" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 128}, 
                    "NativeTypeString" -> "VARCHAR(128)"|>, 
                    "de_name" -> <|
                    "Nullable" -> False, "BackendType" -> {"String", 32}, 
                    "NativeTypeString" -> "VARCHAR(32)"|>|>, "Schema" -> 
                    "public"|>|>, "ID" -> "1bz6rjcncj0zs"|>, 
                    
                    DatabaseReference[<|
                    "Backend" -> "postgresql", "Username" -> "st190333_", 
                    "Password" -> "1234", "Host" -> "localhost", "Port" -> 
                    None, "Name" -> "st190333_dblab3", "Options" -> <||>|>]]},
                     False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ], "SummaryItem"]}]}, {
                TagBox[
                 TagBox[
                  GridBox[{{
                    TagBox["\"Types: \"", "SummaryItemAnnotation"], 
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_ctl_patients\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_ctl_patients\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"id\"", StripOnInput -> False, FontWeight -> Bold]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"id\"", StripOnInput -> False, FontWeight -> Bold]}, {
                    "", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_patients\""}, {
                    StyleBox["\"ColumnName:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"id\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Style["id", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_patients"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id"}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_surname\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_surname\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_patients\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_surname\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_surname", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_patients"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_surname"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_name\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_patients\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_name\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_patients"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_name"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_patronymic\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_patronymic\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_patients\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_patronymic\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_patronymic", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_patients"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_patronymic"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_birthday\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_birthday\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_patients\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_birthday\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_birthday", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_patients"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_birthday"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_address\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_address\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_patients\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_address\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_address", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_patients"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_address"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_genderid\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_genderid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_patients\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_genderid\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_genderid", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_patients"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_genderid"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[RightArrow] \"", 
                    StyleBox[
                    "\"de_ctl_genders\"", Underlined, StripOnInput -> False]},
                     "RowDefault"]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[RightArrow] \"", 
                    StyleBox[
                    "\"de_ctl_genders\"", Underlined, StripOnInput -> False]},
                     "RowDefault"]}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Relation\""}, {
                    StyleBox[
                    "\"DestinationModel:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_genders\""}, {
                    StyleBox[
                    "\"ModelMapping:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    RowBox[{"{", 
                    RowBox[{"\"de_genderid\"", "\[Rule]", "\"id\""}], "}"}]}},
                     AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Row[{"\[RightArrow] ", 
                    Style["de_ctl_genders", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_ctl_genders"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"de_genderid" -> "id"}}}, Alignment -> 
                    Left]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[LeftArrow] \"", 
                    StyleBox[
                    "\"de_doc_inspection\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[LeftArrow] \"", 
                    StyleBox[
                    "\"de_doc_inspection\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Relation\""}, {
                    StyleBox[
                    "\"DestinationModel:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_doc_inspection\""}, {
                    StyleBox[
                    "\"ModelMapping:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    RowBox[{"{", 
                    RowBox[{"\"id\"", "\[Rule]", "\"de_patientid\""}], 
                    "}"}]}}, AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Row[{"\[LeftArrow] ", 
                    Style["de_doc_inspection", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_doc_inspection"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"id" -> "de_patientid"}}}, Alignment -> 
                    Left]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}}, DefaultBaseStyle -> "Column", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_ctl_patients", 
                    Column[{
                    OpenerView[{
                    Style["id", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_patients"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id"}}, Alignment -> Left]}], 
                    OpenerView[{"de_surname", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_patients"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_surname"}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_patients"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_name"}}, Alignment -> Left]}], 
                    OpenerView[{"de_patronymic", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_patients"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_patronymic"}}, Alignment -> Left]}], 
                    
                    OpenerView[{"de_birthday", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_patients"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_birthday"}}, Alignment -> Left]}], 
                    OpenerView[{"de_address", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_patients"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_address"}}, Alignment -> Left]}], 
                    OpenerView[{"de_genderid", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_patients"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_genderid"}}, Alignment -> Left]}], 
                    OpenerView[{
                    Row[{"\[RightArrow] ", 
                    Style["de_ctl_genders", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_ctl_genders"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"de_genderid" -> "id"}}}, Alignment -> 
                    Left]}], 
                    OpenerView[{
                    Row[{"\[LeftArrow] ", 
                    Style["de_doc_inspection", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_doc_inspection"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"id" -> "de_patientid"}}}, Alignment -> 
                    Left]}]}]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_ctl_medicines\""}}, AutoDelete -> False,
                     BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_ctl_medicines\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"id\"", StripOnInput -> False, FontWeight -> Bold]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"id\"", StripOnInput -> False, FontWeight -> Bold]}, {
                    "", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_medicines\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "\"id\""}}, 
                    AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Style["id", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_medicines"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id"}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_name\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_medicines\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_name\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_medicines"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_name"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_methodtaking\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_methodtaking\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox["\"ColumnPrefix:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"de_ctl_medicines\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_methodtaking\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_methodtaking", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_medicines"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_methodtaking"}}, Alignment -> Left]},
                     False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[LeftArrow] \"", 
                    StyleBox[
                    "\"de_tab_inspectionmedicines\"", Underlined, 
                    StripOnInput -> False]}, "RowDefault"]}}, AutoDelete -> 
                    False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[LeftArrow] \"", 
                    StyleBox[
                    "\"de_tab_inspectionmedicines\"", Underlined, 
                    StripOnInput -> False]}, "RowDefault"]}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Relation\""}, {
                    StyleBox[
                    "\"DestinationModel:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_tab_inspectionmedicines\""}, {
                    StyleBox[
                    "\"ModelMapping:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    RowBox[{"{", 
                    RowBox[{"\"id\"", "\[Rule]", "\"de_medicineid\""}], 
                    "}"}]}}, AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Row[{"\[LeftArrow] ", 
                    Style["de_tab_inspectionmedicines", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_tab_inspectionmedicines"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"id" -> "de_medicineid"}}}, Alignment -> 
                    Left]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[LeftArrow] \"", 
                    StyleBox[
                    "\"de_tab_medicinesideeffects\"", Underlined, 
                    StripOnInput -> False]}, "RowDefault"]}}, AutoDelete -> 
                    False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[LeftArrow] \"", 
                    StyleBox[
                    "\"de_tab_medicinesideeffects\"", Underlined, 
                    StripOnInput -> False]}, "RowDefault"]}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Relation\""}, {
                    StyleBox[
                    "\"DestinationModel:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_tab_medicinesideeffects\""}, {
                    StyleBox[
                    "\"ModelMapping:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    RowBox[{"{", 
                    RowBox[{"\"id\"", "\[Rule]", "\"de_medicineid\""}], 
                    "}"}]}}, AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Row[{"\[LeftArrow] ", 
                    Style["de_tab_medicinesideeffects", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_tab_medicinesideeffects"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"id" -> "de_medicineid"}}}, Alignment -> 
                    Left]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}}, DefaultBaseStyle -> "Column", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_ctl_medicines", 
                    Column[{
                    OpenerView[{
                    Style["id", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_medicines"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id"}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_medicines"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_name"}}, Alignment -> Left]}], 
                    OpenerView[{"de_methodtaking", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_medicines"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_methodtaking"}}, Alignment -> 
                    Left]}], 
                    OpenerView[{
                    Row[{"\[LeftArrow] ", 
                    Style["de_tab_inspectionmedicines", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_tab_inspectionmedicines"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"id" -> "de_medicineid"}}}, Alignment -> 
                    Left]}], 
                    OpenerView[{
                    Row[{"\[LeftArrow] ", 
                    Style["de_tab_medicinesideeffects", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_tab_medicinesideeffects"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"id" -> "de_medicineid"}}}, Alignment -> 
                    Left]}]}]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_doc_inspection\""}}, AutoDelete -> 
                    False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_doc_inspection\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"id\"", StripOnInput -> False, FontWeight -> Bold]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"id\"", StripOnInput -> False, FontWeight -> Bold]}, {
                    "", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_doc_inspection\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "\"id\""}}, 
                    AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Style["id", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_doc_inspection"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id"}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_starttime\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_starttime\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_doc_inspection\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_starttime\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_starttime", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_doc_inspection"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_starttime"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_endtime\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_endtime\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_doc_inspection\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_endtime\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_endtime", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_doc_inspection"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_endtime"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_placeid\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_placeid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_doc_inspection\""}, {
                    StyleBox["\"ColumnName:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"de_placeid\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_placeid", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_doc_inspection"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_placeid"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_diagnosisid\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_diagnosisid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_doc_inspection\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_diagnosisid\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_diagnosisid", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_doc_inspection"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_diagnosisid"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_patientid\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_patientid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_doc_inspection\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_patientid\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_patientid", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_doc_inspection"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_patientid"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_doctorid\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_doctorid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_doc_inspection\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_doctorid\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_doctorid", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_doc_inspection"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_doctorid"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[RightArrow] \"", 
                    StyleBox[
                    "\"de_ctl_patients\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[RightArrow] \"", 
                    StyleBox[
                    "\"de_ctl_patients\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Relation\""}, {
                    StyleBox[
                    "\"DestinationModel:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_patients\""}, {
                    StyleBox[
                    "\"ModelMapping:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    RowBox[{"{", 
                    RowBox[{"\"de_patientid\"", "\[Rule]", "\"id\""}], 
                    "}"}]}}, AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Row[{"\[RightArrow] ", 
                    Style["de_ctl_patients", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_ctl_patients"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"de_patientid" -> "id"}}}, Alignment -> 
                    Left]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[RightArrow] \"", 
                    StyleBox[
                    "\"de_ctl_diagnosis\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[RightArrow] \"", 
                    StyleBox[
                    "\"de_ctl_diagnosis\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Relation\""}, {
                    StyleBox[
                    "\"DestinationModel:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_diagnosis\""}, {
                    StyleBox["\"ModelMapping:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], 
                    RowBox[{"{", 
                    RowBox[{"\"de_diagnosisid\"", "\[Rule]", "\"id\""}], 
                    "}"}]}}, AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Row[{"\[RightArrow] ", 
                    Style["de_ctl_diagnosis", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_ctl_diagnosis"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"de_diagnosisid" -> "id"}}}, Alignment -> 
                    Left]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[RightArrow] \"", 
                    StyleBox[
                    "\"de_ctl_inspectionplaces\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[RightArrow] \"", 
                    StyleBox[
                    "\"de_ctl_inspectionplaces\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Relation\""}, {
                    StyleBox[
                    "\"DestinationModel:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_inspectionplaces\""}, {
                    StyleBox[
                    "\"ModelMapping:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    RowBox[{"{", 
                    RowBox[{"\"de_placeid\"", "\[Rule]", "\"id\""}], "}"}]}}, 
                    AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Row[{"\[RightArrow] ", 
                    Style["de_ctl_inspectionplaces", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_ctl_inspectionplaces"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"de_placeid" -> "id"}}}, Alignment -> 
                    Left]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[RightArrow] \"", 
                    StyleBox[
                    "\"de_ctl_doctors\"", Underlined, StripOnInput -> False]},
                     "RowDefault"]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[RightArrow] \"", 
                    StyleBox[
                    "\"de_ctl_doctors\"", Underlined, StripOnInput -> False]},
                     "RowDefault"]}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Relation\""}, {
                    StyleBox[
                    "\"DestinationModel:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_doctors\""}, {
                    StyleBox[
                    "\"ModelMapping:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    RowBox[{"{", 
                    RowBox[{"\"de_doctorid\"", "\[Rule]", "\"id\""}], "}"}]}},
                     AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Row[{"\[RightArrow] ", 
                    Style["de_ctl_doctors", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_ctl_doctors"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"de_doctorid" -> "id"}}}, Alignment -> 
                    Left]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[LeftArrow] \"", 
                    StyleBox[
                    "\"de_tab_inspectionmedicines\"", Underlined, 
                    StripOnInput -> False]}, "RowDefault"]}}, AutoDelete -> 
                    False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[LeftArrow] \"", 
                    StyleBox[
                    "\"de_tab_inspectionmedicines\"", Underlined, 
                    StripOnInput -> False]}, "RowDefault"]}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Relation\""}, {
                    StyleBox[
                    "\"DestinationModel:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_tab_inspectionmedicines\""}, {
                    StyleBox[
                    "\"ModelMapping:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    RowBox[{"{", 
                    RowBox[{"\"id\"", "\[Rule]", "\"de_inspectionid\""}], 
                    "}"}]}}, AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Row[{"\[LeftArrow] ", 
                    Style["de_tab_inspectionmedicines", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_tab_inspectionmedicines"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"id" -> "de_inspectionid"}}}, Alignment -> 
                    Left]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[LeftArrow] \"", 
                    StyleBox[
                    "\"de_tab_inspectionsymptoms\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[LeftArrow] \"", 
                    StyleBox[
                    "\"de_tab_inspectionsymptoms\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Relation\""}, {
                    StyleBox[
                    "\"DestinationModel:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_tab_inspectionsymptoms\""}, {
                    StyleBox[
                    "\"ModelMapping:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    RowBox[{"{", 
                    RowBox[{"\"id\"", "\[Rule]", "\"de_inspectionid\""}], 
                    "}"}]}}, AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Row[{"\[LeftArrow] ", 
                    Style["de_tab_inspectionsymptoms", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_tab_inspectionsymptoms"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"id" -> "de_inspectionid"}}}, Alignment -> 
                    Left]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}}, DefaultBaseStyle -> "Column", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_doc_inspection", 
                    Column[{
                    OpenerView[{
                    Style["id", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_doc_inspection"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id"}}, Alignment -> Left]}], 
                    OpenerView[{"de_starttime", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_doc_inspection"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_starttime"}}, Alignment -> Left]}], 
                    OpenerView[{"de_endtime", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_doc_inspection"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_endtime"}}, Alignment -> Left]}], 
                    OpenerView[{"de_placeid", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_doc_inspection"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_placeid"}}, Alignment -> Left]}], 
                    OpenerView[{"de_diagnosisid", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_doc_inspection"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_diagnosisid"}}, Alignment -> Left]}], 
                    OpenerView[{"de_patientid", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_doc_inspection"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_patientid"}}, Alignment -> Left]}], 
                    OpenerView[{"de_doctorid", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_doc_inspection"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_doctorid"}}, Alignment -> Left]}], 
                    OpenerView[{
                    Row[{"\[RightArrow] ", 
                    Style["de_ctl_patients", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_ctl_patients"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"de_patientid" -> "id"}}}, Alignment -> 
                    Left]}], 
                    OpenerView[{
                    Row[{"\[RightArrow] ", 
                    Style["de_ctl_diagnosis", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_ctl_diagnosis"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"de_diagnosisid" -> "id"}}}, Alignment -> 
                    Left]}], 
                    OpenerView[{
                    Row[{"\[RightArrow] ", 
                    Style["de_ctl_inspectionplaces", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_ctl_inspectionplaces"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"de_placeid" -> "id"}}}, Alignment -> 
                    Left]}], 
                    OpenerView[{
                    Row[{"\[RightArrow] ", 
                    Style["de_ctl_doctors", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_ctl_doctors"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"de_doctorid" -> "id"}}}, Alignment -> 
                    Left]}], 
                    OpenerView[{
                    Row[{"\[LeftArrow] ", 
                    Style["de_tab_inspectionmedicines", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_tab_inspectionmedicines"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"id" -> "de_inspectionid"}}}, Alignment -> 
                    Left]}], 
                    OpenerView[{
                    Row[{"\[LeftArrow] ", 
                    Style["de_tab_inspectionsymptoms", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_tab_inspectionsymptoms"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"id" -> "de_inspectionid"}}}, Alignment -> 
                    Left]}]}]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_tab_inspectionmedicines\""}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_tab_inspectionmedicines\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"id\"", StripOnInput -> False, FontWeight -> Bold]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"id\"", StripOnInput -> False, FontWeight -> Bold]}, {
                    "", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_tab_inspectionmedicines\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "\"id\""}}, 
                    AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Style["id", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_tab_inspectionmedicines"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id"}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_inspectionid\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_inspectionid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_tab_inspectionmedicines\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_inspectionid\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_inspectionid", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_tab_inspectionmedicines"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_inspectionid"}}, Alignment -> Left]},
                     False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_medicineid\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_medicineid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_tab_inspectionmedicines\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_medicineid\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_medicineid", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_tab_inspectionmedicines"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_medicineid"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[RightArrow] \"", 
                    StyleBox[
                    "\"de_doc_inspection\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[RightArrow] \"", 
                    StyleBox[
                    "\"de_doc_inspection\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Relation\""}, {
                    StyleBox[
                    "\"DestinationModel:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_doc_inspection\""}, {
                    StyleBox[
                    "\"ModelMapping:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    RowBox[{"{", 
                    RowBox[{"\"de_inspectionid\"", "\[Rule]", "\"id\""}], 
                    "}"}]}}, AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Row[{"\[RightArrow] ", 
                    Style["de_doc_inspection", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_doc_inspection"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"de_inspectionid" -> "id"}}}, Alignment -> 
                    Left]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[RightArrow] \"", 
                    StyleBox[
                    "\"de_ctl_medicines\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[RightArrow] \"", 
                    StyleBox[
                    "\"de_ctl_medicines\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Relation\""}, {
                    StyleBox[
                    "\"DestinationModel:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_medicines\""}, {
                    StyleBox[
                    "\"ModelMapping:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    RowBox[{"{", 
                    RowBox[{"\"de_medicineid\"", "\[Rule]", "\"id\""}], 
                    "}"}]}}, AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Row[{"\[RightArrow] ", 
                    Style["de_ctl_medicines", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_ctl_medicines"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"de_medicineid" -> "id"}}}, Alignment -> 
                    Left]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}}, DefaultBaseStyle -> "Column", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_tab_inspectionmedicines", 
                    Column[{
                    OpenerView[{
                    Style["id", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_tab_inspectionmedicines"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id"}}, Alignment -> Left]}], 
                    OpenerView[{"de_inspectionid", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_tab_inspectionmedicines"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_inspectionid"}}, Alignment -> 
                    Left]}], 
                    OpenerView[{"de_medicineid", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_tab_inspectionmedicines"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_medicineid"}}, Alignment -> Left]}], 
                    
                    OpenerView[{
                    Row[{"\[RightArrow] ", 
                    Style["de_doc_inspection", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_doc_inspection"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"de_inspectionid" -> "id"}}}, Alignment -> 
                    Left]}], 
                    OpenerView[{
                    Row[{"\[RightArrow] ", 
                    Style["de_ctl_medicines", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_ctl_medicines"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"de_medicineid" -> "id"}}}, Alignment -> 
                    Left]}]}]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_tab_inspectionsymptoms\""}}, AutoDelete -> 
                    False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_tab_inspectionsymptoms\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"id\"", StripOnInput -> False, FontWeight -> Bold]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"id\"", StripOnInput -> False, FontWeight -> Bold]}, {
                    "", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_tab_inspectionsymptoms\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "\"id\""}}, 
                    AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Style["id", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_tab_inspectionsymptoms"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id"}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_inspectionid\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_inspectionid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_tab_inspectionsymptoms\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_inspectionid\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_inspectionid", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_tab_inspectionsymptoms"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_inspectionid"}}, Alignment -> Left]},
                     False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_symptomid\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_symptomid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"PropertySourceType:\"", StripOnInput -> False,
                     LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_tab_inspectionsymptoms\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_symptomid\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_symptomid", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_tab_inspectionsymptoms"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_symptomid"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[RightArrow] \"", 
                    StyleBox[
                    "\"de_doc_inspection\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[RightArrow] \"", 
                    StyleBox[
                    "\"de_doc_inspection\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Relation\""}, {
                    StyleBox[
                    "\"DestinationModel:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_doc_inspection\""}, {
                    StyleBox[
                    "\"ModelMapping:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    RowBox[{"{", 
                    RowBox[{"\"de_inspectionid\"", "\[Rule]", "\"id\""}], 
                    "}"}]}}, AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Row[{"\[RightArrow] ", 
                    Style["de_doc_inspection", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_doc_inspection"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"de_inspectionid" -> "id"}}}, Alignment -> 
                    Left]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[RightArrow] \"", 
                    StyleBox[
                    "\"de_ctl_symptoms\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[RightArrow] \"", 
                    StyleBox[
                    "\"de_ctl_symptoms\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Relation\""}, {
                    StyleBox[
                    "\"DestinationModel:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_symptoms\""}, {
                    StyleBox[
                    "\"ModelMapping:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    RowBox[{"{", 
                    RowBox[{"\"de_symptomid\"", "\[Rule]", "\"id\""}], 
                    "}"}]}}, AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Row[{"\[RightArrow] ", 
                    Style["de_ctl_symptoms", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_ctl_symptoms"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"de_symptomid" -> "id"}}}, Alignment -> 
                    Left]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}}, DefaultBaseStyle -> "Column", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_tab_inspectionsymptoms", 
                    Column[{
                    OpenerView[{
                    Style["id", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_tab_inspectionsymptoms"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id"}}, Alignment -> Left]}], 
                    OpenerView[{"de_inspectionid", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_tab_inspectionsymptoms"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_inspectionid"}}, Alignment -> 
                    Left]}], 
                    OpenerView[{"de_symptomid", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_tab_inspectionsymptoms"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_symptomid"}}, Alignment -> Left]}], 
                    OpenerView[{
                    Row[{"\[RightArrow] ", 
                    Style["de_doc_inspection", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_doc_inspection"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"de_inspectionid" -> "id"}}}, Alignment -> 
                    Left]}], 
                    OpenerView[{
                    Row[{"\[RightArrow] ", 
                    Style["de_ctl_symptoms", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_ctl_symptoms"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"de_symptomid" -> "id"}}}, Alignment -> 
                    Left]}]}]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_ctl_genders\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_ctl_genders\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"id\"", StripOnInput -> False, FontWeight -> Bold]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"id\"", StripOnInput -> False, FontWeight -> Bold]}, {
                    "", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_genders\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "\"id\""}}, 
                    AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Style["id", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_genders"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id"}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_name\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_genders\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_name\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_genders"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_name"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[LeftArrow] \"", 
                    StyleBox["\"de_ctl_patients\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[LeftArrow] \"", 
                    StyleBox[
                    "\"de_ctl_patients\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Relation\""}, {
                    StyleBox[
                    "\"DestinationModel:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_patients\""}, {
                    StyleBox[
                    "\"ModelMapping:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    RowBox[{"{", 
                    RowBox[{"\"id\"", "\[Rule]", "\"de_genderid\""}], "}"}]}},
                     AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Row[{"\[LeftArrow] ", 
                    Style["de_ctl_patients", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_ctl_patients"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"id" -> "de_genderid"}}}, Alignment -> 
                    Left]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}}, DefaultBaseStyle -> "Column", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_ctl_genders", 
                    Column[{
                    OpenerView[{
                    Style["id", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_genders"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id"}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_genders"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_name"}}, Alignment -> Left]}], 
                    OpenerView[{
                    Row[{"\[LeftArrow] ", 
                    Style["de_ctl_patients", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_ctl_patients"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"id" -> "de_genderid"}}}, Alignment -> 
                    Left]}]}]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_ctl_doctors\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_ctl_doctors\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"id\"", StripOnInput -> False, FontWeight -> Bold]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"id\"", StripOnInput -> False, FontWeight -> Bold]}, {
                    "", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_doctors\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "\"id\""}}, 
                    AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Style["id", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_doctors"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id"}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_region\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_region\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_doctors\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_region\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_region", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_doctors"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_region"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_office\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_office\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_doctors\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_office\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_office", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_doctors"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_office"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_surname\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_surname\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_doctors\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_surname\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_surname", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_doctors"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_surname"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_name\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_doctors\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_name\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_doctors"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_name"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_patronymic\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_patronymic\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_doctors\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_patronymic\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_patronymic", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_doctors"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_patronymic"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[LeftArrow] \"", 
                    StyleBox[
                    "\"de_doc_inspection\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[LeftArrow] \"", 
                    StyleBox[
                    "\"de_doc_inspection\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Relation\""}, {
                    StyleBox[
                    "\"DestinationModel:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_doc_inspection\""}, {
                    StyleBox[
                    "\"ModelMapping:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    RowBox[{"{", 
                    RowBox[{"\"id\"", "\[Rule]", "\"de_doctorid\""}], "}"}]}},
                     AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Row[{"\[LeftArrow] ", 
                    Style["de_doc_inspection", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_doc_inspection"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"id" -> "de_doctorid"}}}, Alignment -> 
                    Left]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}}, DefaultBaseStyle -> "Column", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_ctl_doctors", 
                    Column[{
                    OpenerView[{
                    Style["id", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_doctors"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id"}}, Alignment -> Left]}], 
                    OpenerView[{"de_region", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_doctors"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_region"}}, Alignment -> Left]}], 
                    OpenerView[{"de_office", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_doctors"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_office"}}, Alignment -> Left]}], 
                    OpenerView[{"de_surname", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_doctors"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_surname"}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_doctors"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_name"}}, Alignment -> Left]}], 
                    OpenerView[{"de_patronymic", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_doctors"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_patronymic"}}, Alignment -> Left]}], 
                    
                    OpenerView[{
                    Row[{"\[LeftArrow] ", 
                    Style["de_doc_inspection", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_doc_inspection"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"id" -> "de_doctorid"}}}, Alignment -> 
                    Left]}]}]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_ctl_symptoms\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_ctl_symptoms\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"id\"", StripOnInput -> False, FontWeight -> Bold]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"id\"", StripOnInput -> False, FontWeight -> Bold]}, {
                    "", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_symptoms\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "\"id\""}}, 
                    AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Style["id", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_symptoms"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id"}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_name\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_symptoms\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_name\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_symptoms"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_name"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[LeftArrow] \"", 
                    StyleBox[
                    "\"de_tab_inspectionsymptoms\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[LeftArrow] \"", 
                    StyleBox[
                    "\"de_tab_inspectionsymptoms\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Relation\""}, {
                    StyleBox[
                    "\"DestinationModel:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_tab_inspectionsymptoms\""}, {
                    StyleBox[
                    "\"ModelMapping:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    RowBox[{"{", 
                    RowBox[{"\"id\"", "\[Rule]", "\"de_symptomid\""}], 
                    "}"}]}}, AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Row[{"\[LeftArrow] ", 
                    Style["de_tab_inspectionsymptoms", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_tab_inspectionsymptoms"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"id" -> "de_symptomid"}}}, Alignment -> 
                    Left]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}}, DefaultBaseStyle -> "Column", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_ctl_symptoms", 
                    Column[{
                    OpenerView[{
                    Style["id", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_symptoms"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id"}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_symptoms"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_name"}}, Alignment -> Left]}], 
                    OpenerView[{
                    Row[{"\[LeftArrow] ", 
                    Style["de_tab_inspectionsymptoms", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_tab_inspectionsymptoms"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"id" -> "de_symptomid"}}}, Alignment -> 
                    Left]}]}]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_ctl_diagnosis\""}}, AutoDelete -> False,
                     BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_ctl_diagnosis\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"id\"", StripOnInput -> False, FontWeight -> Bold]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"id\"", StripOnInput -> False, FontWeight -> Bold]}, {
                    "", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_diagnosis\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "\"id\""}}, 
                    AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Style["id", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_diagnosis"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id"}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_name\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_diagnosis\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_name\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_diagnosis"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_name"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_description\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_description\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_diagnosis\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_description\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_description", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_diagnosis"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_description"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[LeftArrow] \"", 
                    StyleBox[
                    "\"de_doc_inspection\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[LeftArrow] \"", 
                    StyleBox[
                    "\"de_doc_inspection\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Relation\""}, {
                    StyleBox[
                    "\"DestinationModel:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_doc_inspection\""}, {
                    StyleBox[
                    "\"ModelMapping:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    RowBox[{"{", 
                    RowBox[{"\"id\"", "\[Rule]", "\"de_diagnosisid\""}], 
                    "}"}]}}, AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Row[{"\[LeftArrow] ", 
                    Style["de_doc_inspection", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_doc_inspection"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"id" -> "de_diagnosisid"}}}, Alignment -> 
                    Left]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}}, DefaultBaseStyle -> "Column", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_ctl_diagnosis", 
                    Column[{
                    OpenerView[{
                    Style["id", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_diagnosis"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id"}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_diagnosis"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_name"}}, Alignment -> Left]}], 
                    OpenerView[{"de_description", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_diagnosis"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_description"}}, Alignment -> Left]}], 
                    OpenerView[{
                    Row[{"\[LeftArrow] ", 
                    Style["de_doc_inspection", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_doc_inspection"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"id" -> "de_diagnosisid"}}}, Alignment -> 
                    Left]}]}]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_ctl_inspectionplaces\""}}, AutoDelete -> 
                    False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_ctl_inspectionplaces\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"id\"", StripOnInput -> False, FontWeight -> Bold]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"id\"", StripOnInput -> False, FontWeight -> Bold]}, {
                    "", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_inspectionplaces\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "\"id\""}}, 
                    AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Style["id", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_inspectionplaces"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id"}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_name\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_inspectionplaces\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_name\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_inspectionplaces"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_name"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[LeftArrow] \"", 
                    StyleBox[
                    "\"de_doc_inspection\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[LeftArrow] \"", 
                    StyleBox[
                    "\"de_doc_inspection\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Relation\""}, {
                    StyleBox[
                    "\"DestinationModel:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_doc_inspection\""}, {
                    StyleBox[
                    "\"ModelMapping:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    RowBox[{"{", 
                    RowBox[{"\"id\"", "\[Rule]", "\"de_placeid\""}], "}"}]}}, 
                    AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Row[{"\[LeftArrow] ", 
                    Style["de_doc_inspection", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_doc_inspection"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"id" -> "de_placeid"}}}, Alignment -> 
                    Left]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}}, DefaultBaseStyle -> "Column", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_ctl_inspectionplaces", 
                    Column[{
                    OpenerView[{
                    Style["id", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_inspectionplaces"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id"}}, Alignment -> Left]}], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_ctl_inspectionplaces"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_name"}}, Alignment -> Left]}], 
                    OpenerView[{
                    Row[{"\[LeftArrow] ", 
                    Style["de_doc_inspection", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_doc_inspection"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"id" -> "de_placeid"}}}, Alignment -> 
                    Left]}]}]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_tab_medicinesideeffects\""}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_tab_medicinesideeffects\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox["\"id\"", StripOnInput -> False, FontWeight -> 
                    Bold]}}, AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"id\"", StripOnInput -> False, FontWeight -> Bold]}, {
                    "", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_tab_medicinesideeffects\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "\"id\""}}, 
                    AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Style["id", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_tab_medicinesideeffects"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id"}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_medicineid\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_medicineid\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_tab_medicinesideeffects\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_medicineid\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_medicineid", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_tab_medicinesideeffects"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_medicineid"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_name\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"de_name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_tab_medicinesideeffects\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_name\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_tab_medicinesideeffects"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_name"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[RightArrow] \"", 
                    StyleBox[
                    "\"de_ctl_medicines\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    TemplateBox[{"\"\[RightArrow] \"", 
                    StyleBox[
                    "\"de_ctl_medicines\"", Underlined, StripOnInput -> 
                    False]}, "RowDefault"]}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Relation\""}, {
                    StyleBox[
                    "\"DestinationModel:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"de_ctl_medicines\""}, {
                    StyleBox[
                    "\"ModelMapping:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    RowBox[{"{", 
                    RowBox[{"\"de_medicineid\"", "\[Rule]", "\"id\""}], 
                    "}"}]}}, AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Row[{"\[RightArrow] ", 
                    Style["de_ctl_medicines", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_ctl_medicines"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"de_medicineid" -> "id"}}}, Alignment -> 
                    Left]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}}, DefaultBaseStyle -> "Column", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"de_tab_medicinesideeffects", 
                    Column[{
                    OpenerView[{
                    Style["id", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_tab_medicinesideeffects"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id"}}, Alignment -> Left]}], 
                    OpenerView[{"de_medicineid", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_tab_medicinesideeffects"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_medicineid"}}, Alignment -> Left]}], 
                    
                    OpenerView[{"de_name", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "de_tab_medicinesideeffects"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "de_name"}}, Alignment -> Left]}], 
                    OpenerView[{
                    Row[{"\[RightArrow] ", 
                    Style["de_ctl_medicines", Underlined]}], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Relation"}, {
                    Style["DestinationModel:", 
                    GrayLevel[0.5]], "de_ctl_medicines"}, {
                    Style["ModelMapping:", 
                    GrayLevel[0.5]], {"de_medicineid" -> "id"}}}, Alignment -> 
                    Left]}]}]}, False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}}, DefaultBaseStyle -> "Column", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]}}, AutoDelete -> False, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Grid"], "SummaryItem"]}}, AutoDelete -> False, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
           False, BaselinePosition -> {1, 1}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
        Dynamic[Typeset`open$$], ImageSize -> Automatic]},
      "SummaryPanel"],
     DynamicModuleValues:>{}], "]"}],
   EntityStore[<|
    "Types" -> <|
      "de_ctl_patients" -> <|
        "EntityTypeExtractor" -> "de_ctl_patients", 
         "CanonicalNameProperties" -> {"id"}, 
         "Properties" -> <|
          "id" -> <|
            "ColumnPrefix" -> "de_ctl_patients", "ColumnName" -> "id"|>, 
           "de_surname" -> <|
            "ColumnPrefix" -> "de_ctl_patients", "ColumnName" -> 
             "de_surname"|>, 
           "de_name" -> <|
            "ColumnPrefix" -> "de_ctl_patients", "ColumnName" -> "de_name"|>, 
           "de_patronymic" -> <|
            "ColumnPrefix" -> "de_ctl_patients", "ColumnName" -> 
             "de_patronymic"|>, 
           "de_birthday" -> <|
            "ColumnPrefix" -> "de_ctl_patients", "ColumnName" -> 
             "de_birthday"|>, 
           "de_address" -> <|
            "ColumnPrefix" -> "de_ctl_patients", "ColumnName" -> 
             "de_address"|>, 
           "de_genderid" -> <|
            "ColumnPrefix" -> "de_ctl_patients", "ColumnName" -> 
             "de_genderid"|>, 
           "de_ctl_genders" -> <|
            "DestinationEntityType" -> "de_ctl_genders", 
             "EntityTypeMapping" -> {"de_genderid" -> "id"}|>, 
           "de_doc_inspection" -> <|
            "DestinationEntityType" -> "de_doc_inspection", 
             "EntityTypeMapping" -> {"id" -> "de_patientid"}|>|>|>, 
       "de_ctl_medicines" -> <|
        "EntityTypeExtractor" -> "de_ctl_medicines", 
         "CanonicalNameProperties" -> {"id"}, 
         "Properties" -> <|
          "id" -> <|
            "ColumnPrefix" -> "de_ctl_medicines", "ColumnName" -> "id"|>, 
           "de_name" -> <|
            "ColumnPrefix" -> "de_ctl_medicines", "ColumnName" -> "de_name"|>,
            "de_methodtaking" -> <|
            "ColumnPrefix" -> "de_ctl_medicines", "ColumnName" -> 
             "de_methodtaking"|>, 
           "de_tab_inspectionmedicines" -> <|
            "DestinationEntityType" -> "de_tab_inspectionmedicines", 
             "EntityTypeMapping" -> {"id" -> "de_medicineid"}|>, 
           "de_tab_medicinesideeffects" -> <|
            "DestinationEntityType" -> "de_tab_medicinesideeffects", 
             "EntityTypeMapping" -> {"id" -> "de_medicineid"}|>|>|>, 
       "de_doc_inspection" -> <|
        "EntityTypeExtractor" -> "de_doc_inspection", 
         "CanonicalNameProperties" -> {"id"}, 
         "Properties" -> <|
          "id" -> <|
            "ColumnPrefix" -> "de_doc_inspection", "ColumnName" -> "id"|>, 
           "de_starttime" -> <|
            "ColumnPrefix" -> "de_doc_inspection", "ColumnName" -> 
             "de_starttime"|>, 
           "de_endtime" -> <|
            "ColumnPrefix" -> "de_doc_inspection", "ColumnName" -> 
             "de_endtime"|>, 
           "de_placeid" -> <|
            "ColumnPrefix" -> "de_doc_inspection", "ColumnName" -> 
             "de_placeid"|>, 
           "de_diagnosisid" -> <|
            "ColumnPrefix" -> "de_doc_inspection", "ColumnName" -> 
             "de_diagnosisid"|>, 
           "de_patientid" -> <|
            "ColumnPrefix" -> "de_doc_inspection", "ColumnName" -> 
             "de_patientid"|>, 
           "de_doctorid" -> <|
            "ColumnPrefix" -> "de_doc_inspection", "ColumnName" -> 
             "de_doctorid"|>, 
           "de_ctl_patients" -> <|
            "DestinationEntityType" -> "de_ctl_patients", 
             "EntityTypeMapping" -> {"de_patientid" -> "id"}|>, 
           "de_ctl_diagnosis" -> <|
            "DestinationEntityType" -> "de_ctl_diagnosis", 
             "EntityTypeMapping" -> {"de_diagnosisid" -> "id"}|>, 
           "de_ctl_inspectionplaces" -> <|
            "DestinationEntityType" -> "de_ctl_inspectionplaces", 
             "EntityTypeMapping" -> {"de_placeid" -> "id"}|>, 
           "de_ctl_doctors" -> <|
            "DestinationEntityType" -> "de_ctl_doctors", 
             "EntityTypeMapping" -> {"de_doctorid" -> "id"}|>, 
           "de_tab_inspectionmedicines" -> <|
            "DestinationEntityType" -> "de_tab_inspectionmedicines", 
             "EntityTypeMapping" -> {"id" -> "de_inspectionid"}|>, 
           "de_tab_inspectionsymptoms" -> <|
            "DestinationEntityType" -> "de_tab_inspectionsymptoms", 
             "EntityTypeMapping" -> {"id" -> "de_inspectionid"}|>|>|>, 
       "de_tab_inspectionmedicines" -> <|
        "EntityTypeExtractor" -> "de_tab_inspectionmedicines", 
         "CanonicalNameProperties" -> {"id"}, 
         "Properties" -> <|
          "id" -> <|
            "ColumnPrefix" -> "de_tab_inspectionmedicines", "ColumnName" -> 
             "id"|>, "de_inspectionid" -> <|
            "ColumnPrefix" -> "de_tab_inspectionmedicines", "ColumnName" -> 
             "de_inspectionid"|>, 
           "de_medicineid" -> <|
            "ColumnPrefix" -> "de_tab_inspectionmedicines", "ColumnName" -> 
             "de_medicineid"|>, 
           "de_doc_inspection" -> <|
            "DestinationEntityType" -> "de_doc_inspection", 
             "EntityTypeMapping" -> {"de_inspectionid" -> "id"}|>, 
           "de_ctl_medicines" -> <|
            "DestinationEntityType" -> "de_ctl_medicines", 
             "EntityTypeMapping" -> {"de_medicineid" -> "id"}|>|>|>, 
       "de_tab_inspectionsymptoms" -> <|
        "EntityTypeExtractor" -> "de_tab_inspectionsymptoms", 
         "CanonicalNameProperties" -> {"id"}, 
         "Properties" -> <|
          "id" -> <|
            "ColumnPrefix" -> "de_tab_inspectionsymptoms", "ColumnName" -> 
             "id"|>, "de_inspectionid" -> <|
            "ColumnPrefix" -> "de_tab_inspectionsymptoms", "ColumnName" -> 
             "de_inspectionid"|>, 
           "de_symptomid" -> <|
            "ColumnPrefix" -> "de_tab_inspectionsymptoms", "ColumnName" -> 
             "de_symptomid"|>, 
           "de_doc_inspection" -> <|
            "DestinationEntityType" -> "de_doc_inspection", 
             "EntityTypeMapping" -> {"de_inspectionid" -> "id"}|>, 
           "de_ctl_symptoms" -> <|
            "DestinationEntityType" -> "de_ctl_symptoms", 
             "EntityTypeMapping" -> {"de_symptomid" -> "id"}|>|>|>, 
       "de_ctl_genders" -> <|
        "EntityTypeExtractor" -> "de_ctl_genders", 
         "CanonicalNameProperties" -> {"id"}, 
         "Properties" -> <|
          "id" -> <|
            "ColumnPrefix" -> "de_ctl_genders", "ColumnName" -> "id"|>, 
           "de_name" -> <|
            "ColumnPrefix" -> "de_ctl_genders", "ColumnName" -> "de_name"|>, 
           "de_ctl_patients" -> <|
            "DestinationEntityType" -> "de_ctl_patients", 
             "EntityTypeMapping" -> {"id" -> "de_genderid"}|>|>|>, 
       "de_ctl_doctors" -> <|
        "EntityTypeExtractor" -> "de_ctl_doctors", 
         "CanonicalNameProperties" -> {"id"}, 
         "Properties" -> <|
          "id" -> <|
            "ColumnPrefix" -> "de_ctl_doctors", "ColumnName" -> "id"|>, 
           "de_region" -> <|
            "ColumnPrefix" -> "de_ctl_doctors", "ColumnName" -> "de_region"|>,
            "de_office" -> <|
            "ColumnPrefix" -> "de_ctl_doctors", "ColumnName" -> "de_office"|>,
            "de_surname" -> <|
            "ColumnPrefix" -> "de_ctl_doctors", "ColumnName" -> 
             "de_surname"|>, 
           "de_name" -> <|
            "ColumnPrefix" -> "de_ctl_doctors", "ColumnName" -> "de_name"|>, 
           "de_patronymic" -> <|
            "ColumnPrefix" -> "de_ctl_doctors", "ColumnName" -> 
             "de_patronymic"|>, 
           "de_doc_inspection" -> <|
            "DestinationEntityType" -> "de_doc_inspection", 
             "EntityTypeMapping" -> {"id" -> "de_doctorid"}|>|>|>, 
       "de_ctl_symptoms" -> <|
        "EntityTypeExtractor" -> "de_ctl_symptoms", 
         "CanonicalNameProperties" -> {"id"}, 
         "Properties" -> <|
          "id" -> <|
            "ColumnPrefix" -> "de_ctl_symptoms", "ColumnName" -> "id"|>, 
           "de_name" -> <|
            "ColumnPrefix" -> "de_ctl_symptoms", "ColumnName" -> "de_name"|>, 
           "de_tab_inspectionsymptoms" -> <|
            "DestinationEntityType" -> "de_tab_inspectionsymptoms", 
             "EntityTypeMapping" -> {"id" -> "de_symptomid"}|>|>|>, 
       "de_ctl_diagnosis" -> <|
        "EntityTypeExtractor" -> "de_ctl_diagnosis", 
         "CanonicalNameProperties" -> {"id"}, 
         "Properties" -> <|
          "id" -> <|
            "ColumnPrefix" -> "de_ctl_diagnosis", "ColumnName" -> "id"|>, 
           "de_name" -> <|
            "ColumnPrefix" -> "de_ctl_diagnosis", "ColumnName" -> "de_name"|>,
            "de_description" -> <|
            "ColumnPrefix" -> "de_ctl_diagnosis", "ColumnName" -> 
             "de_description"|>, 
           "de_doc_inspection" -> <|
            "DestinationEntityType" -> "de_doc_inspection", 
             "EntityTypeMapping" -> {"id" -> "de_diagnosisid"}|>|>|>, 
       "de_ctl_inspectionplaces" -> <|
        "EntityTypeExtractor" -> "de_ctl_inspectionplaces", 
         "CanonicalNameProperties" -> {"id"}, 
         "Properties" -> <|
          "id" -> <|
            "ColumnPrefix" -> "de_ctl_inspectionplaces", "ColumnName" -> 
             "id"|>, "de_name" -> <|
            "ColumnPrefix" -> "de_ctl_inspectionplaces", "ColumnName" -> 
             "de_name"|>, 
           "de_doc_inspection" -> <|
            "DestinationEntityType" -> "de_doc_inspection", 
             "EntityTypeMapping" -> {"id" -> "de_placeid"}|>|>|>, 
       "de_tab_medicinesideeffects" -> <|
        "EntityTypeExtractor" -> "de_tab_medicinesideeffects", 
         "CanonicalNameProperties" -> {"id"}, 
         "Properties" -> <|
          "id" -> <|
            "ColumnPrefix" -> "de_tab_medicinesideeffects", "ColumnName" -> 
             "id"|>, "de_medicineid" -> <|
            "ColumnPrefix" -> "de_tab_medicinesideeffects", "ColumnName" -> 
             "de_medicineid"|>, 
           "de_name" -> <|
            "ColumnPrefix" -> "de_tab_medicinesideeffects", "ColumnName" -> 
             "de_name"|>, 
           "de_ctl_medicines" -> <|
            "DestinationEntityType" -> "de_ctl_medicines", 
             "EntityTypeMapping" -> {"de_medicineid" -> "id"}|>|>|>|>|>, 
    RelationalDatabase[<|
     "Tables" -> <|
       "de_ctl_patients" -> <|
         "PrimaryKey" -> <|"ConstraintName" -> None, "Columns" -> {"id"}|>, 
          "ForeignKeys" -> {<|
            "ConstraintName" -> "de_ctl_genders_de_ctl_patients_fk", 
             "FromColumns" -> {"de_genderid"}, "ToColumns" -> {"id"}, 
             "ToTable" -> "de_ctl_genders", "OnUpdate" -> None, "OnDelete" -> 
             None, "Initially" -> None, "Deferrable" -> None|>}, 
          "UniquenessConstraints" -> {}, "Indexes" -> {}, 
          "Columns" -> <|
           "id" -> <|
             "Nullable" -> False, "BackendType" -> "Integer", 
              "NativeTypeString" -> "INTEGER"|>, 
            "de_surname" -> <|
             "Nullable" -> False, "BackendType" -> {"String", 32}, 
              "NativeTypeString" -> "VARCHAR(32)"|>, 
            "de_name" -> <|
             "Nullable" -> False, "BackendType" -> {"String", 32}, 
              "NativeTypeString" -> "VARCHAR(32)"|>, 
            "de_patronymic" -> <|
             "Nullable" -> True, "BackendType" -> {"String", 32}, 
              "NativeTypeString" -> "VARCHAR(32)"|>, 
            "de_birthday" -> <|
             "Nullable" -> True, "BackendType" -> "Date", "NativeTypeString" -> 
              "DATE"|>, 
            "de_address" -> <|
             "Nullable" -> False, "BackendType" -> {"String", 128}, 
              "NativeTypeString" -> "VARCHAR(128)"|>, 
            "de_genderid" -> <|
             "Nullable" -> False, "BackendType" -> "Integer", 
              "NativeTypeString" -> "INTEGER"|>|>, "Schema" -> "public"|>, 
        "de_ctl_medicines" -> <|
         "PrimaryKey" -> <|"ConstraintName" -> None, "Columns" -> {"id"}|>, 
          "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, "Indexes" -> {},
           "Columns" -> <|
           "id" -> <|
             "Nullable" -> False, "BackendType" -> {"String", 128}, 
              "NativeTypeString" -> "VARCHAR(128)"|>, 
            "de_name" -> <|
             "Nullable" -> False, "BackendType" -> {"String", 256}, 
              "NativeTypeString" -> "VARCHAR(256)"|>, 
            "de_methodtaking" -> <|
             "Nullable" -> False, "BackendType" -> {"String", 1024}, 
              "NativeTypeString" -> "VARCHAR(1024)"|>|>, "Schema" -> 
          "public"|>, 
        "de_doc_inspection" -> <|
         "PrimaryKey" -> <|"ConstraintName" -> None, "Columns" -> {"id"}|>, 
          "ForeignKeys" -> {<|
            "ConstraintName" -> "de_ctl_patients_de_doc_inspection_fk", 
             "FromColumns" -> {"de_patientid"}, "ToColumns" -> {"id"}, 
             "ToTable" -> "de_ctl_patients", "OnUpdate" -> None, "OnDelete" -> 
             None, "Initially" -> None, "Deferrable" -> None|>, <|
            "ConstraintName" -> "de_ctl_diagnosis_de_doc_inspection_fk", 
             "FromColumns" -> {"de_diagnosisid"}, "ToColumns" -> {"id"}, 
             "ToTable" -> "de_ctl_diagnosis", "OnUpdate" -> None, "OnDelete" -> 
             None, "Initially" -> None, "Deferrable" -> None|>, <|
            "ConstraintName" -> 
             "de_ctl_inspectionplaces_de_doc_inspection_fk", 
             "FromColumns" -> {"de_placeid"}, "ToColumns" -> {"id"}, 
             "ToTable" -> "de_ctl_inspectionplaces", "OnUpdate" -> None, 
             "OnDelete" -> None, "Initially" -> None, "Deferrable" -> 
             None|>, <|
            "ConstraintName" -> "de_ctl_doctors_de_doc_inspection_fk", 
             "FromColumns" -> {"de_doctorid"}, "ToColumns" -> {"id"}, 
             "ToTable" -> "de_ctl_doctors", "OnUpdate" -> None, "OnDelete" -> 
             None, "Initially" -> None, "Deferrable" -> None|>}, 
          "UniquenessConstraints" -> {}, "Indexes" -> {}, 
          "Columns" -> <|
           "id" -> <|
             "Nullable" -> False, "BackendType" -> {"String", 128}, 
              "NativeTypeString" -> "VARCHAR(128)"|>, 
            "de_starttime" -> <|
             "Nullable" -> False, "BackendType" -> {"DateTime", False}, 
              "NativeTypeString" -> "TIMESTAMP WITHOUT TIME ZONE"|>, 
            "de_endtime" -> <|
             "Nullable" -> False, "BackendType" -> {"DateTime", False}, 
              "NativeTypeString" -> "TIMESTAMP WITHOUT TIME ZONE"|>, 
            "de_placeid" -> <|
             "Nullable" -> False, "BackendType" -> "Integer", 
              "NativeTypeString" -> "INTEGER"|>, 
            "de_diagnosisid" -> <|
             "Nullable" -> False, "BackendType" -> "Integer", 
              "NativeTypeString" -> "INTEGER"|>, 
            "de_patientid" -> <|
             "Nullable" -> False, "BackendType" -> "Integer", 
              "NativeTypeString" -> "INTEGER"|>, 
            "de_doctorid" -> <|
             "Nullable" -> False, "BackendType" -> "Integer", 
              "NativeTypeString" -> "INTEGER"|>|>, "Schema" -> "public"|>, 
        "de_tab_inspectionmedicines" -> <|
         "PrimaryKey" -> <|"ConstraintName" -> None, "Columns" -> {"id"}|>, 
          "ForeignKeys" -> {<|
            "ConstraintName" -> 
             "de_doc_inspection_de_tab_inspectionmedicine_fk", 
             "FromColumns" -> {"de_inspectionid"}, "ToColumns" -> {"id"}, 
             "ToTable" -> "de_doc_inspection", "OnUpdate" -> None, "OnDelete" -> 
             None, "Initially" -> None, "Deferrable" -> None|>, <|
            "ConstraintName" -> 
             "de_ctl_medicine_de_tab_inspectionmedicine_fk", 
             "FromColumns" -> {"de_medicineid"}, "ToColumns" -> {"id"}, 
             "ToTable" -> "de_ctl_medicines", "OnUpdate" -> None, "OnDelete" -> 
             None, "Initially" -> None, "Deferrable" -> None|>}, 
          "UniquenessConstraints" -> {}, "Indexes" -> {}, 
          "Columns" -> <|
           "id" -> <|
             "Nullable" -> False, "BackendType" -> "Integer", 
              "NativeTypeString" -> "INTEGER"|>, 
            "de_inspectionid" -> <|
             "Nullable" -> False, "BackendType" -> {"String", 128}, 
              "NativeTypeString" -> "VARCHAR(128)"|>, 
            "de_medicineid" -> <|
             "Nullable" -> False, "BackendType" -> {"String", 128}, 
              "NativeTypeString" -> "VARCHAR(128)"|>|>, "Schema" -> 
          "public"|>, 
        "de_tab_inspectionsymptoms" -> <|
         "PrimaryKey" -> <|"ConstraintName" -> None, "Columns" -> {"id"}|>, 
          "ForeignKeys" -> {<|
            "ConstraintName" -> 
             "de_doc_inspection_de_tab_inspectionsymptomes_fk", 
             "FromColumns" -> {"de_inspectionid"}, "ToColumns" -> {"id"}, 
             "ToTable" -> "de_doc_inspection", "OnUpdate" -> None, "OnDelete" -> 
             None, "Initially" -> None, "Deferrable" -> None|>, <|
            "ConstraintName" -> 
             "de_ctl_symptoms_de_tab_inspectionsymptoms_fk", 
             "FromColumns" -> {"de_symptomid"}, "ToColumns" -> {"id"}, 
             "ToTable" -> "de_ctl_symptoms", "OnUpdate" -> None, "OnDelete" -> 
             None, "Initially" -> None, "Deferrable" -> None|>}, 
          "UniquenessConstraints" -> {}, "Indexes" -> {}, 
          "Columns" -> <|
           "id" -> <|
             "Nullable" -> False, "BackendType" -> "Integer", 
              "NativeTypeString" -> "INTEGER"|>, 
            "de_inspectionid" -> <|
             "Nullable" -> False, "BackendType" -> {"String", 128}, 
              "NativeTypeString" -> "VARCHAR(128)"|>, 
            "de_symptomid" -> <|
             "Nullable" -> False, "BackendType" -> "Integer", 
              "NativeTypeString" -> "INTEGER"|>|>, "Schema" -> "public"|>, 
        "de_ctl_genders" -> <|
         "PrimaryKey" -> <|"ConstraintName" -> None, "Columns" -> {"id"}|>, 
          "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, "Indexes" -> {},
           "Columns" -> <|
           "id" -> <|
             "Nullable" -> False, "BackendType" -> "Integer", 
              "NativeTypeString" -> "INTEGER"|>, 
            "de_name" -> <|
             "Nullable" -> False, "BackendType" -> {"String", 32}, 
              "NativeTypeString" -> "VARCHAR(32)"|>|>, "Schema" -> "public"|>,
         "de_ctl_doctors" -> <|
         "PrimaryKey" -> <|"ConstraintName" -> None, "Columns" -> {"id"}|>, 
          "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, "Indexes" -> {},
           "Columns" -> <|
           "id" -> <|
             "Nullable" -> False, "BackendType" -> "Integer", 
              "NativeTypeString" -> "INTEGER"|>, 
            "de_region" -> <|
             "Nullable" -> True, "BackendType" -> "Integer", 
              "NativeTypeString" -> "INTEGER"|>, 
            "de_office" -> <|
             "Nullable" -> True, "BackendType" -> {"String", 16}, 
              "NativeTypeString" -> "VARCHAR(16)"|>, 
            "de_surname" -> <|
             "Nullable" -> False, "BackendType" -> {"String", 32}, 
              "NativeTypeString" -> "VARCHAR(32)"|>, 
            "de_name" -> <|
             "Nullable" -> False, "BackendType" -> {"String", 32}, 
              "NativeTypeString" -> "VARCHAR(32)"|>, 
            "de_patronymic" -> <|
             "Nullable" -> True, "BackendType" -> {"String", 32}, 
              "NativeTypeString" -> "VARCHAR(32)"|>|>, "Schema" -> "public"|>,
         "de_ctl_symptoms" -> <|
         "PrimaryKey" -> <|"ConstraintName" -> None, "Columns" -> {"id"}|>, 
          "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, "Indexes" -> {},
           "Columns" -> <|
           "id" -> <|
             "Nullable" -> False, "BackendType" -> "Integer", 
              "NativeTypeString" -> "INTEGER"|>, 
            "de_name" -> <|
             "Nullable" -> False, "BackendType" -> {"String", 32}, 
              "NativeTypeString" -> "VARCHAR(32)"|>|>, "Schema" -> "public"|>,
         "de_ctl_diagnosis" -> <|
         "PrimaryKey" -> <|"ConstraintName" -> None, "Columns" -> {"id"}|>, 
          "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, "Indexes" -> {},
           "Columns" -> <|
           "id" -> <|
             "Nullable" -> False, "BackendType" -> "Integer", 
              "NativeTypeString" -> "INTEGER"|>, 
            "de_name" -> <|
             "Nullable" -> False, "BackendType" -> {"String", 16}, 
              "NativeTypeString" -> "VARCHAR(16)"|>, 
            "de_description" -> <|
             "Nullable" -> True, "BackendType" -> {"String", 1024}, 
              "NativeTypeString" -> "VARCHAR(1024)"|>|>, "Schema" -> 
          "public"|>, 
        "de_ctl_inspectionplaces" -> <|
         "PrimaryKey" -> <|"ConstraintName" -> None, "Columns" -> {"id"}|>, 
          "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, "Indexes" -> {},
           "Columns" -> <|
           "id" -> <|
             "Nullable" -> False, "BackendType" -> "Integer", 
              "NativeTypeString" -> "INTEGER"|>, 
            "de_name" -> <|
             "Nullable" -> False, "BackendType" -> {"String", 32}, 
              "NativeTypeString" -> "VARCHAR(32)"|>|>, "Schema" -> "public"|>,
         "de_tab_medicinesideeffects" -> <|
         "PrimaryKey" -> <|"ConstraintName" -> None, "Columns" -> {"id"}|>, 
          "ForeignKeys" -> {<|
            "ConstraintName" -> 
             "de_ctl_medicine_de_tab_medicinesideeffects_fk", 
             "FromColumns" -> {"de_medicineid"}, "ToColumns" -> {"id"}, 
             "ToTable" -> "de_ctl_medicines", "OnUpdate" -> None, "OnDelete" -> 
             None, "Initially" -> None, "Deferrable" -> None|>}, 
          "UniquenessConstraints" -> {}, "Indexes" -> {}, 
          "Columns" -> <|
           "id" -> <|
             "Nullable" -> False, "BackendType" -> "Integer", 
              "NativeTypeString" -> "INTEGER"|>, 
            "de_medicineid" -> <|
             "Nullable" -> False, "BackendType" -> {"String", 128}, 
              "NativeTypeString" -> "VARCHAR(128)"|>, 
            "de_name" -> <|
             "Nullable" -> False, "BackendType" -> {"String", 32}, 
              "NativeTypeString" -> "VARCHAR(32)"|>|>, "Schema" -> 
          "public"|>|>, "ID" -> "1bz6rjcncj0zs"|>, 
     DatabaseReference[<|
      "Backend" -> "postgresql", "Username" -> "st190333_", "Password" -> 
       "1234", "Host" -> "localhost", "Port" -> None, "Name" -> 
       "st190333_dblab3", "Options" -> <||>|>]]],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "}"}]], "Output",
 CellChangeTimes->{
  3.879250633293507*^9, 3.879250742560546*^9, {3.8792508270480757`*^9, 
   3.8792508567537117`*^9}, {3.879251396894401*^9, 3.879251399181067*^9}, 
   3.879251490830303*^9, 3.879256213583654*^9, 3.879260493814344*^9, 
   3.879266020791751*^9, 3.879266139231289*^9, 3.879266179971097*^9, 
   3.879266583716115*^9, 3.879295514938305*^9, 3.879295823631975*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"0ed87184-c1ba-4be0-814b-abff8c0377d3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["EntityValue[\[OpenCurlyDoubleQuote]\:0442\:0430\:0431\:043b\:0438\:0446\
\:0430\[CloseCurlyDoubleQuote], \[OpenCurlyDoubleQuote]EntityCount\
\[CloseCurlyDoubleQuote]]", "Subsection",
 CellChangeTimes->{{3.879251212563924*^9, 3.879251219489874*^9}, {
  3.879251982150035*^9, 
  3.879251993037518*^9}},ExpressionUUID->"6d1308fc-e792-4629-b9cb-\
586d1353df05"],

Cell["\<\
EntityValue[\"\:0442\:0430\:0431\:043b\:0438\:0446\:0430\", \"EntityCount\"] \
- \:043e\:043f\:0440\:0435\:0434\:0435\:043b\:044f\:0435\:0442 \:043a\:043e\
\:043b\:0438\:0447\:0435\:0441\:0442\:0432\:043e \:0437\:0430\:043f\:0438\
\:0441\:0435\:0439 \:0432 \:0442\:0430\:0431\:043b\:0438\:0446\:0435\
\>", "Text",
 CellChangeTimes->{{3.879251997055328*^9, 3.879252011680533*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"036d079a-5d2c-4743-a287-12bd4a397ad5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"lst", "=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\:0422\:0430\:0431\:043b\:0438\:0446\:0430\>\"", ",", " ", 
      "\"\<\:041a\:043e\:043b\:0438\:0447\:0435\:0441\:0442\:0432\:043e \
\:0441\:0442\:0440\:043e\:043a\>\""}], "}"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", " ", 
    RowBox[{"i", "<", 
     RowBox[{"Length", "[", "lstTables", "]"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{"lst", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"lst", ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"lstTables", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"EntityValue", "[", 
           RowBox[{
            RowBox[{"lstTables", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<EntityCount\>\""}], 
           "]"}]}], "}"}], "}"}]}], " ", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"lst", ",", 
   RowBox[{"Frame", "->", "All"}], ",", 
   RowBox[{"Alignment", "->", "Left"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.879266154250389*^9, 3.879266157521001*^9}, {
  3.8792662064826717`*^9, 3.879266343403123*^9}, {3.879266383099608*^9, 
  3.879266450405177*^9}, {3.8792664843682737`*^9, 3.879266513483156*^9}, {
  3.879295839568646*^9, 3.879295839715563*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[12]:=",ExpressionUUID->"fdf446fe-b734-4ea9-88a9-9362f32fbe72"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"\:0422\:0430\:0431\:043b\:0438\:0446\:0430\"\>", "\<\"\:041a\:043e\
\:043b\:0438\:0447\:0435\:0441\:0442\:0432\:043e \:0441\:0442\:0440\:043e\
\:043a\"\>"},
    {"\<\"de_ctl_patients\"\>", "53568"},
    {"\<\"de_ctl_medicines\"\>", "2641"},
    {"\<\"de_doc_inspection\"\>", "348228"},
    {"\<\"de_tab_inspectionmedicines\"\>", "1044198"},
    {"\<\"de_tab_inspectionsymptoms\"\>", "1044722"},
    {"\<\"de_ctl_genders\"\>", "2"},
    {"\<\"de_ctl_doctors\"\>", "14"},
    {"\<\"de_ctl_symptoms\"\>", "200"},
    {"\<\"de_ctl_diagnosis\"\>", "14629"},
    {"\<\"de_ctl_inspectionplaces\"\>", "2"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.879266321709446*^9, 3.879266345247336*^9}, {
   3.879266389387463*^9, 3.879266452542982*^9}, {3.879266499726241*^9, 
   3.879266516259512*^9}, 3.879266589123526*^9, {3.879295830556183*^9, 
   3.87929584345273*^9}},
 CellLabel->"Out[14]=",ExpressionUUID->"5f1628df-a489-4ca1-81cf-92c4a9684721"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<\:0412\:0440\:0430\:0447\:0430\:043c\:0438 \:043f\:0440\:043e\:0432\
\:0435\:0434\:0435\:043d\:044b \:043e\:0441\:043c\:043e\:0442\:0440\:044b \
\:0432 \:043a\:043e\:043b\:0438\:0447\:0435\:0441\:0442\:0432\:0435 \>\"", 
   ",", " ", 
   RowBox[{"EntityValue", "[", 
    RowBox[{"\"\<de_doc_inspection\>\"", ",", " ", "\"\<EntityCount\>\""}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.879251516233404*^9, 3.879251546923667*^9}, {
  3.8792515854622602`*^9, 3.8792516410232973`*^9}, {3.879251675899013*^9, 
  3.879251687675357*^9}, {3.879265982381282*^9, 3.8792659836695967`*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[15]:=",ExpressionUUID->"9934bb1c-2754-486d-bdc4-39376f6c1f1d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\:0412\:0440\:0430\:0447\:0430\:043c\:0438 \:043f\:0440\:043e\
\:0432\:0435\:0434\:0435\:043d\:044b \:043e\:0441\:043c\:043e\:0442\:0440\
\:044b \:0432 \:043a\:043e\:043b\:0438\:0447\:0435\:0441\:0442\:0432\:0435 \"\
\>", "\[InvisibleSpace]", "348228"}],
  SequenceForm[
  "\:0412\:0440\:0430\:0447\:0430\:043c\:0438 \:043f\:0440\:043e\:0432\:0435\
\:0434\:0435\:043d\:044b \:043e\:0441\:043c\:043e\:0442\:0440\:044b \:0432 \
\:043a\:043e\:043b\:0438\:0447\:0435\:0441\:0442\:0432\:0435 ", 348228],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.879251587284218*^9, {3.879251619842053*^9, 3.879251642166012*^9}, 
   3.879251688586611*^9, 3.87925621820619*^9, 3.879260497346612*^9, 
   3.8792659848669367`*^9, 3.879266024682*^9, 3.879266598985301*^9, 
   3.879295848052288*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"9b2dc39e-ee54-4f19-92d5-97e8d2163136"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<\:041f\:0440\:0438 \:043e\:0441\:043c\:043e\:0442\:0440\:0435 \:0432\
\:044b\:044f\:0441\:043d\:044f\:044e\:0442\:0441\:044f \:0441\:0438\:043c\
\:043f\:0442\:043e\:043c\:044b. \:0412 \:0431\:0430\:0437\:0435 \:0434\:0430\
\:043d\:043d\:044b\:0445 \:043e\:043f\:0440\:0435\:0434\:0435\:043b\:0435\
\:043d\:044b \:0441\:0438\:043c\:043f\:0442\:043e\:043c\:044b \:0432 \:043a\
\:043e\:043b\:0438\:0447\:0435\:0441\:0442\:0432\:0435 \>\"", ",", " ", 
   RowBox[{"EntityValue", "[", 
    RowBox[{"\"\<de_ctl_symptoms\>\"", ",", " ", "\"\<EntityCount\>\""}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.879251671154455*^9, 3.879251781807872*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[16]:=",ExpressionUUID->"cb6f2aff-ae13-49f6-97de-d4f91decc999"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\:041f\:0440\:0438 \:043e\:0441\:043c\:043e\:0442\:0440\:0435 \
\:0432\:044b\:044f\:0441\:043d\:044f\:044e\:0442\:0441\:044f \:0441\:0438\
\:043c\:043f\:0442\:043e\:043c\:044b. \:0412 \:0431\:0430\:0437\:0435 \:0434\
\:0430\:043d\:043d\:044b\:0445 \:043e\:043f\:0440\:0435\:0434\:0435\:043b\
\:0435\:043d\:044b \:0441\:0438\:043c\:043f\:0442\:043e\:043c\:044b \:0432 \
\:043a\:043e\:043b\:0438\:0447\:0435\:0441\:0442\:0432\:0435 \"\>", 
   "\[InvisibleSpace]", "200"}],
  SequenceForm[
  "\:041f\:0440\:0438 \:043e\:0441\:043c\:043e\:0442\:0440\:0435 \:0432\:044b\
\:044f\:0441\:043d\:044f\:044e\:0442\:0441\:044f \:0441\:0438\:043c\:043f\
\:0442\:043e\:043c\:044b. \:0412 \:0431\:0430\:0437\:0435 \:0434\:0430\:043d\
\:043d\:044b\:0445 \:043e\:043f\:0440\:0435\:0434\:0435\:043b\:0435\:043d\
\:044b \:0441\:0438\:043c\:043f\:0442\:043e\:043c\:044b \:0432 \:043a\:043e\
\:043b\:0438\:0447\:0435\:0441\:0442\:0432\:0435 ", 200],
  Editable->False]], "Print",
 CellChangeTimes->{{3.879251759076703*^9, 3.879251782597232*^9}, 
   3.879256219760416*^9, 3.879260500031048*^9, 3.879266601564948*^9, 
   3.8792958498541613`*^9},
 CellLabel->
  "During evaluation of \
In[16]:=",ExpressionUUID->"48378cd0-20a6-4890-ba22-1f276e12b96a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<\:041f\:0440\:0438 \:043e\:0441\:043c\:043e\:0442\:0440\:0435 \:0441\
\:0442\:0430\:0432\:044f\:0442\:0441\:044f \:0434\:0438\:0430\:0433\:043d\
\:043e\:0437\:044b. \:0412 \:0431\:0430\:0437\:0435 \:0434\:0430\:043d\:043d\
\:044b\:0445 \:0441\:0443\:0437\:0435\:0441\:0442\:0432\:0443\:044e\:0442 \
\:0434\:0438\:0430\:0433\:043d\:043e\:0437\:044b \:0432 \:043a\:043e\:043b\
\:0438\:0447\:0435\:0441\:0442\:0432\:0435 \>\"", ",", " ", 
   RowBox[{"EntityValue", "[", 
    RowBox[{"\"\<de_ctl_diagnosis\>\"", ",", " ", "\"\<EntityCount\>\""}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.879251794089932*^9, 3.8792518252047977`*^9}, {
  3.8792562206652822`*^9, 3.8792562290599318`*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[17]:=",ExpressionUUID->"45843659-bcb6-4de5-919e-c1597f110860"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\:041f\:0440\:0438 \:043e\:0441\:043c\:043e\:0442\:0440\:0435 \
\:0441\:0442\:0430\:0432\:044f\:0442\:0441\:044f \:0434\:0438\:0430\:0433\
\:043d\:043e\:0437\:044b. \:0412 \:0431\:0430\:0437\:0435 \:0434\:0430\:043d\
\:043d\:044b\:0445 \:0441\:0443\:0437\:0435\:0441\:0442\:0432\:0443\:044e\
\:0442 \:0434\:0438\:0430\:0433\:043d\:043e\:0437\:044b \:0432 \:043a\:043e\
\:043b\:0438\:0447\:0435\:0441\:0442\:0432\:0435 \"\>", "\[InvisibleSpace]", 
   "14629"}],
  SequenceForm[
  "\:041f\:0440\:0438 \:043e\:0441\:043c\:043e\:0442\:0440\:0435 \:0441\:0442\
\:0430\:0432\:044f\:0442\:0441\:044f \:0434\:0438\:0430\:0433\:043d\:043e\
\:0437\:044b. \:0412 \:0431\:0430\:0437\:0435 \:0434\:0430\:043d\:043d\:044b\
\:0445 \:0441\:0443\:0437\:0435\:0441\:0442\:0432\:0443\:044e\:0442 \:0434\
\:0438\:0430\:0433\:043d\:043e\:0437\:044b \:0432 \:043a\:043e\:043b\:0438\
\:0447\:0435\:0441\:0442\:0432\:0435 ", 14629],
  Editable->False]], "Print",
 CellChangeTimes->{3.879251825806041*^9, 3.879256231895998*^9, 
  3.87926050213949*^9, 3.879266608015016*^9, 3.879295853079856*^9},
 CellLabel->
  "During evaluation of \
In[17]:=",ExpressionUUID->"0502795e-e252-4293-ba8f-32ee43383c6e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<\:0412 \:0431\:0430\:0437\:0435 \:0434\:0430\:043d\:043d\:044b\:0445 \
\:0441\:043e\:0434\:0435\:0440\:0436\:0438\:0442\:0441\:044f \:0438\:043d\
\:0444\:043e\:0440\:043c\:0430\:0446\:0438\:044f \:043e \:0432\:0440\:0430\
\:0447\:0430\:0445, \:043a\:043e\:0442\:043e\:0440\:044b\:0445 \>\"", ",", 
   " ", 
   RowBox[{"EntityValue", "[", 
    RowBox[{"\"\<de_ctl_doctors\>\"", ",", " ", "\"\<EntityCount\>\""}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.879251855658348*^9, 3.879251883317527*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[18]:=",ExpressionUUID->"578d9587-3c0e-49fc-be27-2714b419a7eb"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\:0412 \:0431\:0430\:0437\:0435 \:0434\:0430\:043d\:043d\:044b\
\:0445 \:0441\:043e\:0434\:0435\:0440\:0436\:0438\:0442\:0441\:044f \:0438\
\:043d\:0444\:043e\:0440\:043c\:0430\:0446\:0438\:044f \:043e \:0432\:0440\
\:0430\:0447\:0430\:0445, \:043a\:043e\:0442\:043e\:0440\:044b\:0445 \"\>", 
   "\[InvisibleSpace]", "14"}],
  SequenceForm[
  "\:0412 \:0431\:0430\:0437\:0435 \:0434\:0430\:043d\:043d\:044b\:0445 \
\:0441\:043e\:0434\:0435\:0440\:0436\:0438\:0442\:0441\:044f \:0438\:043d\
\:0444\:043e\:0440\:043c\:0430\:0446\:0438\:044f \:043e \:0432\:0440\:0430\
\:0447\:0430\:0445, \:043a\:043e\:0442\:043e\:0440\:044b\:0445 ", 14],
  Editable->False]], "Print",
 CellChangeTimes->{3.879251884094178*^9, 3.879256234202484*^9, 
  3.879260503941122*^9, 3.8792666103477383`*^9, 3.879295854907501*^9},
 CellLabel->
  "During evaluation of \
In[18]:=",ExpressionUUID->"b1a22e4f-2476-4b9d-aefd-bc0180954876"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<\:0412 \:0431\:0430\:0437\:0435 \:0434\:0430\:043d\:043d\:044b\:0445 \
\:0441\:043e\:0434\:0435\:0440\:0436\:0438\:0442\:0441\:044f \:0438\:043d\
\:0444\:043e\:0440\:043c\:0430\:0446\:0438\:044f \:043e \:043f\:0430\:0446\
\:0438\:0435\:043d\:0442\:0430\:0445, \:043a\:043e\:0442\:043e\:0440\:044b\
\:0445 \>\"", ",", " ", 
   RowBox[{"EntityValue", "[", 
    RowBox[{"\"\<de_ctl_patients\>\"", ",", " ", "\"\<EntityCount\>\""}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.879251898756728*^9, 3.879251909640623*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[19]:=",ExpressionUUID->"b53c9df6-1bd3-47f9-81af-2200f7e79aa3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\:0412 \:0431\:0430\:0437\:0435 \:0434\:0430\:043d\:043d\:044b\
\:0445 \:0441\:043e\:0434\:0435\:0440\:0436\:0438\:0442\:0441\:044f \:0438\
\:043d\:0444\:043e\:0440\:043c\:0430\:0446\:0438\:044f \:043e \:043f\:0430\
\:0446\:0438\:0435\:043d\:0442\:0430\:0445, \:043a\:043e\:0442\:043e\:0440\
\:044b\:0445 \"\>", "\[InvisibleSpace]", "53568"}],
  SequenceForm[
  "\:0412 \:0431\:0430\:0437\:0435 \:0434\:0430\:043d\:043d\:044b\:0445 \
\:0441\:043e\:0434\:0435\:0440\:0436\:0438\:0442\:0441\:044f \:0438\:043d\
\:0444\:043e\:0440\:043c\:0430\:0446\:0438\:044f \:043e \:043f\:0430\:0446\
\:0438\:0435\:043d\:0442\:0430\:0445, \:043a\:043e\:0442\:043e\:0440\:044b\
\:0445 ", 53568],
  Editable->False]], "Print",
 CellChangeTimes->{3.879251910450436*^9, 3.8792605060946198`*^9, 
  3.879266612564953*^9, 3.879295856773447*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"a1bc0da4-30ac-4f69-9708-7f6786e096ba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<\:041f\:0440\:0438 \:043e\:0441\:043c\:043e\:0442\:0440\:0435 \:0432\
\:044b\:0434\:0435\:043b\:044f\:044e\:0442\:0441\:044f \:043d\:0430 \:043b\
\:0435\:0447\:0435\:043d\:0438\:044f \:043b\:0435\:043a\:0430\:0440\:0441\
\:0442\:0432\:0430, \:043a\:043e\:0442\:043e\:0440\:044b\:0445 \:0432 \:0411\
\:0414 \>\"", ",", " ", 
   RowBox[{"EntityValue", "[", 
    RowBox[{"\"\<de_ctl_medicines\>\"", ",", " ", "\"\<EntityCount\>\""}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.879251946738674*^9, 3.8792519707681713`*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[20]:=",ExpressionUUID->"710eec1f-623f-4e19-bedb-89a962d0f78b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\:041f\:0440\:0438 \:043e\:0441\:043c\:043e\:0442\:0440\:0435 \
\:0432\:044b\:0434\:0435\:043b\:044f\:044e\:0442\:0441\:044f \:043d\:0430 \
\:043b\:0435\:0447\:0435\:043d\:0438\:044f \:043b\:0435\:043a\:0430\:0440\
\:0441\:0442\:0432\:0430, \:043a\:043e\:0442\:043e\:0440\:044b\:0445 \:0432 \
\:0411\:0414 \"\>", "\[InvisibleSpace]", "2641"}],
  SequenceForm[
  "\:041f\:0440\:0438 \:043e\:0441\:043c\:043e\:0442\:0440\:0435 \:0432\:044b\
\:0434\:0435\:043b\:044f\:044e\:0442\:0441\:044f \:043d\:0430 \:043b\:0435\
\:0447\:0435\:043d\:0438\:044f \:043b\:0435\:043a\:0430\:0440\:0441\:0442\
\:0432\:0430, \:043a\:043e\:0442\:043e\:0440\:044b\:0445 \:0432 \:0411\:0414 \
", 2641],
  Editable->False]], "Print",
 CellChangeTimes->{3.879251971520302*^9, 3.879256238957527*^9, 
  3.8792605146171513`*^9, 3.879266614821299*^9, 3.8792958586301403`*^9},
 CellLabel->
  "During evaluation of \
In[20]:=",ExpressionUUID->"8e7b6fbf-5454-4efe-8ea0-ed723bef0663"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["EntityValue[] --> \
\:0438\:0441\:043f\:043e\:043b\:044c\:0437\:0443\:044f SELECT - FROM - INNER \
JOIN ON ", "Subsection",
 CellChangeTimes->{{3.8792579842464314`*^9, 
  3.879258049488082*^9}},ExpressionUUID->"40034f79-08bb-4d04-8af5-\
f6367271ad42"],

Cell["\<\
\:041e\:0431\:044a\:0435\:0434\:0438\:043d\:0438\:0442\:044c \:0442\:0430\
\:0431\:043b\:0438\:0446\:0443 \:0413\:0435\:043d\:0434\:0435\:0440\:044b, \
\:041f\:0430\:0446\:0438\:0435\:043d\:0442\:044b \:0438 \:0432\:044b\:0432\
\:0435\:0441\:0442\:0438 \:043f\:043e\:043b\:044f \:0442\:0430\:0431\:043b\
\:0438\:0446 \:0432 \:0441\:043f\:0438\:0441\:043e\:043a Wolframe Mathematica\
\
\>", "Text",
 CellChangeTimes->{{3.879259768786981*^9, 3.879259858833246*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"df8c69c1-3234-40b5-b67e-8550f64a2e82"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SELECT", "\n", 
     RowBox[{"Patients", ".", "de_name"}]}], ",", 
    RowBox[{"Patients", ".", "de_surname"}], ",", 
    RowBox[{"Patients", ".", "de_patronymic"}], ",", 
    RowBox[{"Patients", ".", "de_birthday"}], ",", 
    RowBox[{"Patients", ".", "de_address"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Genders", ".", "de_name"}], "\n", "FROM", "\n", "DE_CTL", 
       "_Patients", " ", "AS", " ", "Patients", "\n", "INNER", " ", "JOIN", 
       " ", "DE_CTL", "_Genders", " ", "AS", " ", "Genders", " ", "ON", " ", 
       RowBox[{"Genders", ".", "id"}]}], "=", 
      RowBox[{
       RowBox[{"Patients", ".", "de_genderId"}], "\n", "LIMIT", " ", "10"}]}],
      ";"}]}], "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"EntityValue", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"CombinedEntityClass", "[", "\[IndentingNewLine]", 
      RowBox[{"\"\<de_ctl_genders\>\"", ",", 
       RowBox[{"(*", 
        RowBox[{"FROM", " ", "DE_CTL", "_Genders"}], "*)"}], 
       "\[IndentingNewLine]", "\"\<de_ctl_patients\>\"", ",", 
       RowBox[{"(*", 
        RowBox[{"FROM", " ", "DE_CTL", "_Patients"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"EntityFunction", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Genders", ",", " ", "Patients"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", "\[IndentingNewLine]", "  ", 
          RowBox[{
           RowBox[{
           "FROM", " ", "FROM", " ", "DE_CTL", "_Genders", " ", "AS", " ", 
            "Genders", "\[IndentingNewLine]", "INNER", " ", "JOIN", " ", 
            "DE_CTL", "_Patients", " ", "AS", " ", "Patients", " ", "ON", " ", 
            RowBox[{"Genders", ".", "id"}]}], " ", "==", " ", 
           RowBox[{"Patients", ".", "de_genderId"}]}], "\[IndentingNewLine]", 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Genders", "[", "\"\<id\>\"", "]"}], "==", 
          RowBox[{"Patients", "[", "\"\<de_genderid\>\"", "]"}]}]}], 
        "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"EntityProperty", "[", 
        RowBox[{"\"\<de_ctl_patients\>\"", ",", " ", "\"\<de_name\>\""}], 
        "]"}], ",", 
       RowBox[{"(*", 
        RowBox[{"SELECT", " ", "DE_CTL", 
         RowBox[{"_Patients", ".", "de_name"}]}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"EntityProperty", "[", 
        RowBox[{"\"\<de_ctl_patients\>\"", ",", " ", "\"\<de_surname\>\""}], 
        "]"}], ",", 
       RowBox[{"(*", 
        RowBox[{"SELECT", " ", "DE_CTL", 
         RowBox[{"_Patients", ".", "de_surname"}]}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"EntityProperty", "[", 
        RowBox[{
        "\"\<de_ctl_patients\>\"", ",", " ", "\"\<de_patronymic\>\""}], "]"}],
        ",", 
       RowBox[{"(*", 
        RowBox[{"SELECT", " ", "DE_CTL", 
         RowBox[{"_Patients", ".", "de_patronymic"}]}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"EntityProperty", "[", 
        RowBox[{"\"\<de_ctl_patients\>\"", ",", " ", "\"\<de_birthday\>\""}], 
        "]"}], ",", 
       RowBox[{"(*", 
        RowBox[{"SELECT", " ", "DE_CTL", 
         RowBox[{"_Patients", ".", "de_birthday"}]}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"EntityProperty", "[", 
        RowBox[{"\"\<de_ctl_patients\>\"", ",", " ", "\"\<de_address\>\""}], 
        "]"}], ",", 
       RowBox[{"(*", 
        RowBox[{"SELECT", " ", "DE_CTL", 
         RowBox[{"_Patients", ".", "de_birthday"}]}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"EntityProperty", "[", 
        RowBox[{"\"\<de_ctl_genders\>\"", ",", " ", "\"\<de_name\>\""}], 
        "]"}]}], " ", 
      RowBox[{"(*", 
       RowBox[{"SELECT", " ", "DE_CTL", 
        RowBox[{"_Genders", ".", "de_name"}]}], "*)"}], "\[IndentingNewLine]",
       "}"}]}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"1", ";;", "10"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.879252570914422*^9, 3.879252579281207*^9}, {
  3.879252614644908*^9, 3.879252755879718*^9}, {3.879253052610825*^9, 
  3.879253240882991*^9}, {3.879253317244484*^9, 3.879253328708715*^9}, {
  3.8792534157681303`*^9, 3.87925343731774*^9}, {3.879253470506406*^9, 
  3.879253485154763*^9}, {3.879253527820019*^9, 3.879253581500679*^9}, {
  3.879253634610128*^9, 3.879253644051409*^9}, {3.879253698649334*^9, 
  3.879253857295137*^9}, {3.879254046981474*^9, 3.879254080156123*^9}, {
  3.8792561284920263`*^9, 3.8792561527946167`*^9}, {3.879256263763598*^9, 
  3.879256289823597*^9}, {3.879256332693705*^9, 3.8792565480938187`*^9}, {
  3.8792567124825163`*^9, 3.8792567171400146`*^9}, {3.879256753072509*^9, 
  3.879256759906661*^9}, {3.879257816099738*^9, 3.879257823120864*^9}, {
  3.879257856893664*^9, 3.879257864598515*^9}, {3.879257907309284*^9, 
  3.8792579692249937`*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[21]:=",ExpressionUUID->"f2a49980-9fdb-4981-83ae-a765e922f0af"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"\:041d\:0438\:043a\:0438\:0442\:0430\"\>", 
     ",", "\<\"\:0411\:043e\:043b\:044c\:0448\:0430\:043a\:043e\:0432\"\>", 
     ",", "\<\"\:041c\:0430\:0442\:0432\:0435\:0435\:0432\:0438\:0447\"\>", 
     ",", 
     TemplateBox[{
       RowBox[{"\"Tue 15 Mar 1966\""}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"1966", ",", "3", ",", "15"}], "}"}], ",", "\"Day\""}], 
         "]"}]},
      "DateObject",
      Editable->False], 
     ",", "\<\"\:0443\:043b. \:0412\:043e\:043b\:0433\:043e\:0433\:0440\:0430\
\:0434\:0441\:043a\:0430\:044f \:0434. 28\"\>", 
     ",", "\<\"\:043c\:0443\:0436\:0441\:043a\:043e\:0439\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"\:041e\:043b\:044c\:0433\:0430\"\>", 
     ",", "\<\"\:041d\:0435\:043a\:0440\:0430\:0441\:043e\:0432\:0430\"\>", 
     ",", "\<\"\:041f\:0435\:0442\:0440\:043e\:0432\:043d\:0430\"\>", ",", 
     TemplateBox[{
       RowBox[{"\"Wed 25 Sep 1963\""}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"1963", ",", "9", ",", "25"}], "}"}], ",", "\"Day\""}], 
         "]"}]},
      "DateObject",
      Editable->False], 
     ",", "\<\"\:0443\:043b. \:0412\:043e\:043b\:0433\:043e\:0433\:0440\:0430\
\:0434\:0441\:043a\:0430\:044f \:0434. 28\"\>", 
     ",", "\<\"\:0436\:0435\:043d\:0441\:043a\:0438\:0439\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"\:0425\:043e\:0441\:0435\:043b\:0438\:0442\:043e\"\>", 
     ",", "\<\"\:041a\:043e\:043d\:0434\:0440\:0430\:0448\:043e\:0432\"\>", 
     ",", "\<\"\:0412\:0430\:0445\:0442\:0430\:043d\:0433\:043e\:0432\:0438\
\:0447\"\>", ",", 
     TemplateBox[{
       RowBox[{"\"Sat 13 Mar 1976\""}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"1976", ",", "3", ",", "13"}], "}"}], ",", "\"Day\""}], 
         "]"}]},
      "DateObject",
      Editable->False], 
     ",", "\<\"\:0443\:043b. \:0412\:043e\:043b\:0433\:043e\:0433\:0440\:0430\
\:0434\:0441\:043a\:0430\:044f \:0434. 28\"\>", 
     ",", "\<\"\:043c\:0443\:0436\:0441\:043a\:043e\:0439\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"\:0410\:043a\:0433\:044e\:043b\:044c\"\>", 
     ",", "\<\"\:0421\:043e\:0431\:044f\:043d\:0438\:043d\:0430\"\>", 
     ",", "\<\"\:041d\:0430\:0442\:0430\:043d\:043e\:0432\:043d\:0430\"\>", 
     ",", 
     TemplateBox[{
       RowBox[{"\"Thu 16 Dec 1926\""}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"1926", ",", "12", ",", "16"}], "}"}], ",", "\"Day\""}], 
         "]"}]},
      "DateObject",
      Editable->False], 
     ",", "\<\"\:0443\:043b. \:0412\:043e\:043b\:0433\:043e\:0433\:0440\:0430\
\:0434\:0441\:043a\:0430\:044f \:0434. 28\"\>", 
     ",", "\<\"\:0436\:0435\:043d\:0441\:043a\:0438\:0439\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"\:0410\:043d\:0434\:043e\:043a\:0438\:0434\"\>", 
     ",", "\<\"\:041b\:043e\:0431\:0430\:043d\:043e\:0432\"\>", 
     ",", "\<\"\:0410\:043d\:0442\:043e\:043d\:043e\:0432\:0438\:0447\"\>", 
     ",", 
     TemplateBox[{
       RowBox[{"\"Wed 9 Dec 1925\""}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"1925", ",", "12", ",", "9"}], "}"}], ",", "\"Day\""}], 
         "]"}]},
      "DateObject",
      Editable->False], 
     ",", "\<\"\:0443\:043b. \:0412\:043e\:043b\:0433\:043e\:0433\:0440\:0430\
\:0434\:0441\:043a\:0430\:044f \:0434. 28\"\>", 
     ",", "\<\"\:043c\:0443\:0436\:0441\:043a\:043e\:0439\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"\:0415\:043b\:0438\:043a\:043e\:043d\:0438\:0434\:0430\"\>", 
     ",", "\<\"\:0411\:0430\:0440\:0430\:043d\:043e\:0432\:0430\"\>", 
     ",", "\<\"\:041f\:0440\:043e\:0445\:043e\:0440\:043e\:0432\:043d\:0430\"\
\>", ",", 
     TemplateBox[{
       RowBox[{"\"Fri 10 May 1940\""}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"1940", ",", "5", ",", "10"}], "}"}], ",", "\"Day\""}], 
         "]"}]},
      "DateObject",
      Editable->False], 
     ",", "\<\"\:0443\:043b. \:0412\:043e\:043b\:0433\:043e\:0433\:0440\:0430\
\:0434\:0441\:043a\:0430\:044f \:0434. 28\"\>", 
     ",", "\<\"\:0436\:0435\:043d\:0441\:043a\:0438\:0439\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"\:0414\:0436\:0430\:0431\:0431\:0430\:0440\"\>", 
     ",", "\<\"\:0412\:0434\:043e\:0432\:0438\:043d\"\>", 
     ",", "\<\"\:0412\:043b\:0430\:0434\:0438\:043b\:0435\:043d\:043e\:0432\
\:0438\:0447\"\>", ",", 
     TemplateBox[{
       RowBox[{"\"Mon 13 Aug 1990\""}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"1990", ",", "8", ",", "13"}], "}"}], ",", "\"Day\""}], 
         "]"}]},
      "DateObject",
      Editable->False], 
     ",", "\<\"\:0443\:043b. \:0412\:043e\:043b\:0433\:043e\:0433\:0440\:0430\
\:0434\:0441\:043a\:0430\:044f \:0434. 28\"\>", 
     ",", "\<\"\:043c\:0443\:0436\:0441\:043a\:043e\:0439\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"\:042f\:043d\:0438\:043d\:0430\"\>", 
     ",", "\<\"\:042f\:0448\:0438\:043d\:0430\"\>", 
     ",", "\<\"\:0415\:0432\:0434\:043e\:043a\:0438\:043c\:043e\:0432\:043d\
\:0430\"\>", ",", 
     TemplateBox[{
       RowBox[{"\"Sat 11 May 2002\""}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2002", ",", "5", ",", "11"}], "}"}], ",", "\"Day\""}], 
         "]"}]},
      "DateObject",
      Editable->False], 
     ",", "\<\"\:0443\:043b. \:0412\:043e\:043b\:0433\:043e\:0433\:0440\:0430\
\:0434\:0441\:043a\:0430\:044f \:0434. 28\"\>", 
     ",", "\<\"\:0436\:0435\:043d\:0441\:043a\:0438\:0439\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"\:0414\:043e\:0441\:0438\:0444\:0435\:0439\"\>", 
     ",", "\<\"\:0413\:043e\:043b\:043e\:0432\:0430\:043d\:043e\:0432\"\>", 
     ",", "\<\"\:0413\:0430\:0434\:0436\:0438\:0435\:0432\:0438\:0447\"\>", 
     ",", 
     TemplateBox[{
       RowBox[{"\"Mon 7 Dec 1953\""}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"1953", ",", "12", ",", "7"}], "}"}], ",", "\"Day\""}], 
         "]"}]},
      "DateObject",
      Editable->False], 
     ",", "\<\"\:0443\:043b. \:0412\:043e\:043b\:0433\:043e\:0433\:0440\:0430\
\:0434\:0441\:043a\:0430\:044f \:0434. 28\"\>", 
     ",", "\<\"\:043c\:0443\:0436\:0441\:043a\:043e\:0439\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"\:042e\:043b\:0438\:044f\"\>", 
     ",", "\<\"\:0411\:0430\:0431\:0443\:0448\:043a\:0438\:043d\:0430\"\>", 
     ",", "\<\"\:0412\:0430\:0445\:0442\:0430\:043d\:0433\:043e\:0432\:043d\
\:0430\"\>", ",", 
     TemplateBox[{
       RowBox[{"\"Fri 25 Feb 1927\""}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"1927", ",", "2", ",", "25"}], "}"}], ",", "\"Day\""}], 
         "]"}]},
      "DateObject",
      Editable->False], 
     ",", "\<\"\:0443\:043b. \:0412\:043e\:043b\:0433\:043e\:0433\:0440\:0430\
\:0434\:0441\:043a\:0430\:044f \:0434. 28\"\>", 
     ",", "\<\"\:0436\:0435\:043d\:0441\:043a\:0438\:0439\"\>"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.879253808031809*^9, 3.879253814269867*^9}, 
   3.879256153813395*^9, 3.879256254275917*^9, 3.879256319403022*^9, 
   3.8792565755328493`*^9, 3.879256744066712*^9, 3.8792567977043743`*^9, {
   3.87925788737993*^9, 3.879257916464698*^9}, 3.879257977853261*^9, 
   3.879259864941519*^9, 3.879260520874003*^9, 3.8792666245675583`*^9, 
   3.87929586519314*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"248e1452-efe9-424a-a696-1ea7f0e20870"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["ExternalEvaluate \:0438 BarChart", "Subsection",
 CellChangeTimes->{
  3.879258175452059*^9, {3.8792599340672417`*^9, 
   3.879259935178461*^9}},ExpressionUUID->"4b1d7019-3eaf-4938-85c2-\
a2a7e5818b9b"],

Cell["\<\
ExternalEvaluate - \:0432\:044b\:043f\:043e\:043b\:043d\:044f\:0435\:043c SQL \
\:0437\:0430\:043f\:0440\:043e\:0441
BarChart - \:0440\:0438\:0441\:0443\:0435\:043c \
\:0441\:0442\:043e\:043b\:0431\:0447\:0430\:0442\:0443\:044e \:0434\:0438\
\:0430\:0433\:0440\:0430\:043c\:043c\:0443

\:041d\:0430\:0439\:0442\:0438 \:0432\:0440\:0430\:0447\:0435\:0439, \:043a\
\:043e\:0442\:043e\:0440\:044b\:0435 \:043f\:043e\:0441\:0442\:0430\:0432\
\:0438\:043b\:0438 \:0432\:0441\:0435 \:0434\:0438\:0430\:0433\:043d\:043e\
\:0437\:044b\
\>", "Text",
 CellChangeTimes->{{3.87925987899261*^9, 3.879259905218317*^9}, {
  3.879259937327589*^9, 3.879259962354785*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"130871f3-70d9-49fe-a5bf-b8a661bceff3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"gp$dataProcentDiagnosis", " ", "=", " ", 
   RowBox[{"ExternalEvaluate", "[", 
    RowBox[{
    "gp$ref", ",", "\[IndentingNewLine]", 
     "\"\<SELECT\n    -- = = = = = = = = = = = = = = = = \:041a\:043e\:043b\
\:043e\:043d\:043a\:0430 \\\"\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\
\:0430\:0447\:0430\\\"\n    CONCAT(\n        '\:0423\:0447\:0430\:0441\:0442\
\:043e\:043a \:2116',\n        Doctors.de_region,\n        ', \:043a\:0430\
\:0431\:0438\:043d\:0435\:0442 ',\n        Doctors.de_office,\n        ', ',\n\
        Doctors.de_surname,\n        ' ',\n        Doctors.de_name,\n        \
' ',\n        Doctors.de_patronymic\n    ) AS \:0414\:0430\:043d\:043d\:044b\
\:0435\:0412\:0440\:0430\:0447\:0430,\n    -- = = = = = = = = = = = = = = = = \
\:041a\:043e\:043b\:043e\:043d\:043a\:0430 \\\"\:041f\:0440\:043e\:0446\:0435\
\:043d\:0442\:041f\:043e\:0441\:0442\:0430\:0432\:0414\:0438\:0430\:0433\:043d\
\:041c\:0438\:0440\:0430\\\"\n    CAST( (\n            \
CAST(\:0423\:043d\:0438\:043a\:0414\:0438\:0430\:0433\:041f\:043e\:0441\:0442\
\:0430\:0432\:043b\:0435\:043d\:043e AS FLOAT) * 100 / \
CAST(\:0412\:0441\:0435\:0433\:043e\:0414\:0438\:0430\:0433\:043d\:043e\:0437\
\:043e\:0432\:041c\:0438\:0440\:0430 AS FLOAT)\n        ) AS NUMERIC(6, 3)\n  \
  ) AS \:041f\:0440\:043e\:0446\:0435\:043d\:0442\:041f\:043e\:0441\:0442\
\:0430\:0432\:0414\:0438\:0430\:0433\:043d\:041c\:0438\:0440\:0430,\n    -- = \
= = = = = = = = = = = = = = = \:041a\:043e\:043b\:043e\:043d\:043a\:0430 \\\"\
\:0421\:043e\:043e\:0431\:0449\:0435\:043d\:0438\:0435\\\"\n    CONCAT(\n     \
   '\:041f\:043e\:0441\:0442\:0430\:0432\:043b\:0435\:043d\:043e ',\n        \
\:0423\:043d\:0438\:043a\:0414\:0438\:0430\:0433\:041f\:043e\:0441\:0442\:0430\
\:0432\:043b\:0435\:043d\:043e,\n        ' \:0443\:043d\:0438\:043a\:0430\
\:043b\:044c\:043d\:044b\:0445 \:0434\:0438\:0430\:0433\:043d\:043e\:0437\
\:0430 \:0438\:0437 ',\n        \:0412\:0441\:0435\:0433\:043e\:0414\:0438\
\:0430\:0433\:043d\:043e\:0437\:043e\:0432\:041c\:0438\:0440\:0430\n    ) AS \
\:0421\:043e\:043e\:0431\:0449\:0435\:043d\:0438\:0435\nFROM (\n        \
SELECT\n            -- = = = = = = = = = = = = = = = = \:041a\:043e\:043b\
\:043e\:043d\:043a\:0430 \\\"\:0418\:0434\:0414\:043e\:043a\:0442\:043e\:0440\
\:0430\\\"\n            de_doctorId AS \:0418\:0434\:0414\:043e\:043a\:0442\
\:043e\:0440\:0430,\n            -- = = = = = = = = = = = = = = = = \:041a\
\:043e\:043b\:043e\:043d\:043a\:0430 \\\"\:0423\:043d\:0438\:043a\:0414\:0438\
\:0430\:0433\:041f\:043e\:0441\:0442\:0430\:0432\:043b\:0435\:043d\:043e\\\"\n\
            COUNT(DISTINCT de_diagnosisId) AS \:0423\:043d\:0438\:043a\:0414\
\:0438\:0430\:0433\:041f\:043e\:0441\:0442\:0430\:0432\:043b\:0435\:043d\:043e\
,\n            /* = = = = = = = = = = = = = = = = \:041a\:043e\:043b\:043e\
\:043d\:043a\:0430 \\\"\:0412\:0441\:0435\:0433\:043e\:0414\:0438\:0430\:0433\
\:043d\:043e\:0437\:043e\:0432\:041c\:0438\:0440\:0430\\\"*/ (\n              \
  SELECT\n                    COUNT(*)\n                FROM\n                \
    DE_CTL_Diagnosis\n            ) AS \:0412\:0441\:0435\:0433\:043e\:0414\
\:0438\:0430\:0433\:043d\:043e\:0437\:043e\:0432\:041c\:0438\:0440\:0430\n    \
    FROM\n            DE_DOC_Inspection\n        GROUP BY\n            \
de_doctorId\n    ) AS \:041f\:043e\:0434\:0437\:0430\:043f\:0440\:043e\:0441\n\
    INNER JOIN DE_CTL_Doctors AS Doctors ON \:041f\:043e\:0434\:0437\:0430\
\:043f\:0440\:043e\:0441.\:0418\:0434\:0414\:043e\:043a\:0442\:043e\:0440\
\:0430 = Doctors.id\n    /*\n     WHERE\n     CAST( (\n     CAST(\:0423\:043d\
\:0438\:043a\:0414\:0438\:0430\:0433\:041f\:043e\:0441\:0442\:0430\:0432\:043b\
\:0435\:043d\:043e AS FLOAT) * 100 / \
CAST(\:0412\:0441\:0435\:0433\:043e\:0414\:0438\:0430\:0433\:043d\:043e\:0437\
\:043e\:0432\:041c\:0438\:0440\:0430 AS FLOAT)\n     ) AS NUMERIC(6, 3)\n     \
) = 100.000\n     */\n/*ORDER BY\n    \:041f\:0440\:043e\:0446\:0435\:043d\
\:0442\:041f\:043e\:0441\:0442\:0430\:0432\:0414\:0438\:0430\:0433\:043d\:041c\
\:0438\:0440\:0430 DESC*/;\>\""}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gp$lst", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "0"}], ",", 
    RowBox[{"i", "<", 
     RowBox[{"Length", "[", "gp$dataProcentDiagnosis", "]"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{"gp$lst", " ", "=", " ", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"gp$dataProcentDiagnosis", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", "2", "]"}], "}"}], "}"}], ",",
        " ", "gp$lst"}], "]"}]}]}], "\[IndentingNewLine]", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"BarChart", "[", 
  RowBox[{"gp$lst", ",", 
   RowBox[{"ChartLegends", "->", 
    RowBox[{
    "{", "\"\<\:041f\:0440\:043e\:0446\:0435\:043d\:0442 \:043f\:043e\:0441\
\:0442\:0430\:0432\:043b\:0435\:043d\:043d\:044b\:0445 \:0434\:0438\:0430\
\:0433\:043d\:043e\:0437\:043e\:0432 \:043c\:0438\:0440\:0430 \:0432\:0440\
\:0430\:0447\:0430\:043c\:0438 \:043a\:0430\:0436\:0434\:043e\:0433\:043e \
\:0443\:0447\:0430\:0441\:0442\:043a\:0430\>\"", "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.879151914345374*^9, 3.879152019117234*^9}, 
   3.879152235846702*^9, {3.879152468976053*^9, 3.879152471341913*^9}, {
   3.879152779606208*^9, 3.879152863611334*^9}, {3.879258107383237*^9, 
   3.879258145982336*^9}, {3.879258605189794*^9, 3.8792586453629017`*^9}, {
   3.8792589416617947`*^9, 3.8792590008349257`*^9}, {3.87926053370597*^9, 
   3.87926053621821*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[22]:=",ExpressionUUID->"c00ad7fc-0d95-4e75-85df-68f55f6f4b21"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\:0430" -> 
        "\:0423\:0447\:0430\:0441\:0442\:043e\:043a \:21161, \:043a\:0430\
\:0431\:0438\:043d\:0435\:0442 309, \
\:041f\:0430\:0432\:043b\:043e\:0432\:0430 \:0412\:0438\:043a\:0442\:043e\
\:0440\:0438\:044f \:0421\:0435\:0440\:0433\:0435\:0435\:0432\:043d\:0430", 
        "\:041f\:0440\:043e\:0446\:0435\:043d\:0442\:041f\:043e\:0441\:0442\
\:0430\:0432\:0414\:0438\:0430\:0433\:043d\:041c\:0438\:0440\:0430" -> 72.848,
         "\:0421\:043e\:043e\:0431\:0449\:0435\:043d\:0438\:0435" -> 
        "\:041f\:043e\:0441\:0442\:0430\:0432\:043b\:0435\:043d\:043e 10657 \
\:0443\:043d\:0438\:043a\:0430\:043b\:044c\:043d\:044b\:0445 \:0434\:0438\
\:0430\:0433\:043d\:043e\:0437\:0430 \:0438\:0437 14629"|>, <|
       "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\:0430" -> 
        "\:0423\:0447\:0430\:0441\:0442\:043e\:043a \:21162, \:043a\:0430\
\:0431\:0438\:043d\:0435\:0442 344, \
\:0411\:0435\:0437\:0441\:0438\:043b\:043a\:043e \:0410\:043d\:0434\:0440\
\:0435\:0439 \:0412\:0438\:043a\:0442\:043e\:0440\:043e\:0432\:0438\:0447", 
        "\:041f\:0440\:043e\:0446\:0435\:043d\:0442\:041f\:043e\:0441\:0442\
\:0430\:0432\:0414\:0438\:0430\:0433\:043d\:041c\:0438\:0440\:0430" -> 82.159,
         "\:0421\:043e\:043e\:0431\:0449\:0435\:043d\:0438\:0435" -> 
        "\:041f\:043e\:0441\:0442\:0430\:0432\:043b\:0435\:043d\:043e 12019 \
\:0443\:043d\:0438\:043a\:0430\:043b\:044c\:043d\:044b\:0445 \:0434\:0438\
\:0430\:0433\:043d\:043e\:0437\:0430 \:0438\:0437 14629"|>, <|
       "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\:0430" -> 
        "\:0423\:0447\:0430\:0441\:0442\:043e\:043a \:21164, \:043a\:0430\
\:0431\:0438\:043d\:0435\:0442 307, \:0410\:0437\:0445\:0430\:0440\:0438 \
\:0410\:0445\:043c\:0430\:0434 \:041a\:0430\:0434\:0440\:0438 \:0421\:0430\
\:0444\:0444\:0430\:043d", 
        "\:041f\:0440\:043e\:0446\:0435\:043d\:0442\:041f\:043e\:0441\:0442\
\:0430\:0432\:0414\:0438\:0430\:0433\:043d\:041c\:0438\:0440\:0430" -> 82.289,
         "\:0421\:043e\:043e\:0431\:0449\:0435\:043d\:0438\:0435" -> 
        "\:041f\:043e\:0441\:0442\:0430\:0432\:043b\:0435\:043d\:043e 12038 \
\:0443\:043d\:0438\:043a\:0430\:043b\:044c\:043d\:044b\:0445 \:0434\:0438\
\:0430\:0433\:043d\:043e\:0437\:0430 \:0438\:0437 14629"|>, <|
       "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\:0430" -> 
        "\:0423\:0447\:0430\:0441\:0442\:043e\:043a \:21165, \:043a\:0430\
\:0431\:0438\:043d\:0435\:0442 321, \:0427\:0435\:0440\:043d\:044f\:043a \
\:041b\:044e\:0434\:043c\:0438\:043b\:0430 \:0418\:0432\:0430\:043d\:043e\
\:0432\:043d\:0430", 
        "\:041f\:0440\:043e\:0446\:0435\:043d\:0442\:041f\:043e\:0441\:0442\
\:0430\:0432\:0414\:0438\:0430\:0433\:043d\:041c\:0438\:0440\:0430" -> 82.753,
         "\:0421\:043e\:043e\:0431\:0449\:0435\:043d\:0438\:0435" -> 
        "\:041f\:043e\:0441\:0442\:0430\:0432\:043b\:0435\:043d\:043e 12106 \
\:0443\:043d\:0438\:043a\:0430\:043b\:044c\:043d\:044b\:0445 \:0434\:0438\
\:0430\:0433\:043d\:043e\:0437\:0430 \:0438\:0437 14629"|>, <|
       "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\:0430" -> 
        "\:0423\:0447\:0430\:0441\:0442\:043e\:043a \:21166, \:043a\:0430\
\:0431\:0438\:043d\:0435\:0442 336, \
\:041a\:043b\:044e\:0441\:043e\:0432\:0430 \:041d\:0430\:0442\:0430\:043b\
\:0438\:044f \:041d\:0438\:043a\:043e\:043b\:0430\:0435\:0432\:043d\:0430", 
        "\:041f\:0440\:043e\:0446\:0435\:043d\:0442\:041f\:043e\:0441\:0442\
\:0430\:0432\:0414\:0438\:0430\:0433\:043d\:041c\:0438\:0440\:0430" -> 72.712,
         "\:0421\:043e\:043e\:0431\:0449\:0435\:043d\:0438\:0435" -> 
        "\:041f\:043e\:0441\:0442\:0430\:0432\:043b\:0435\:043d\:043e 10637 \
\:0443\:043d\:0438\:043a\:0430\:043b\:044c\:043d\:044b\:0445 \:0434\:0438\
\:0430\:0433\:043d\:043e\:0437\:0430 \:0438\:0437 14629"|>, <|
       "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\:0430" -> 
        "\:0423\:0447\:0430\:0441\:0442\:043e\:043a \:21167, \:043a\:0430\
\:0431\:0438\:043d\:0435\:0442 319, \
\:0422\:043e\:043b\:043a\:0430\:043d\:0438\:0446\:0430 \:0412\:0438\:043a\
\:0442\:043e\:0440 \:0412\:0430\:0441\:0438\:043b\:044c\:0435\:0432\:0438\
\:0447", "\:041f\:0440\:043e\:0446\:0435\:043d\:0442\:041f\:043e\:0441\:0442\
\:0430\:0432\:0414\:0438\:0430\:0433\:043d\:041c\:0438\:0440\:0430" -> 81.899,
         "\:0421\:043e\:043e\:0431\:0449\:0435\:043d\:0438\:0435" -> 
        "\:041f\:043e\:0441\:0442\:0430\:0432\:043b\:0435\:043d\:043e 11981 \
\:0443\:043d\:0438\:043a\:0430\:043b\:044c\:043d\:044b\:0445 \:0434\:0438\
\:0430\:0433\:043d\:043e\:0437\:0430 \:0438\:0437 14629"|>, <|
       "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\:0430" -> 
        "\:0423\:0447\:0430\:0441\:0442\:043e\:043a \:21169, \:043a\:0430\
\:0431\:0438\:043d\:0435\:0442 348, \
\:0422\:0435\:043c\:043f\:0435\:0440\:0430\:043c\:0435\:043d\:0442\:043e\:0432\
\:0430-\:0410\:043d\:0434\:0440\:0435\:044e\:043a \:0412\:043b\:0430\:0434\
\:0430 \:042f\:0440\:043e\:0441\:043b\:0430\:0432\:043e\:0432\:043d\:0430", 
        "\:041f\:0440\:043e\:0446\:0435\:043d\:0442\:041f\:043e\:0441\:0442\
\:0430\:0432\:0414\:0438\:0430\:0433\:043d\:041c\:0438\:0440\:0430" -> 72.766,
         "\:0421\:043e\:043e\:0431\:0449\:0435\:043d\:0438\:0435" -> 
        "\:041f\:043e\:0441\:0442\:0430\:0432\:043b\:0435\:043d\:043e 10645 \
\:0443\:043d\:0438\:043a\:0430\:043b\:044c\:043d\:044b\:0445 \:0434\:0438\
\:0430\:0433\:043d\:043e\:0437\:0430 \:0438\:0437 14629"|>, <|
       "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\:0430" -> 
        "\:0423\:0447\:0430\:0441\:0442\:043e\:043a \:211613, \:043a\:0430\
\:0431\:0438\:043d\:0435\:0442 315, \:0415\:043b\:0430\:043a \:042e\:043b\
\:0438\:044f \:0412\:0430\:043b\:0435\:0440\:044c\:0435\:0432\:043d\:0430", 
        "\:041f\:0440\:043e\:0446\:0435\:043d\:0442\:041f\:043e\:0441\:0442\
\:0430\:0432\:0414\:0438\:0430\:0433\:043d\:041c\:0438\:0440\:0430" -> 82.521,
         "\:0421\:043e\:043e\:0431\:0449\:0435\:043d\:0438\:0435" -> 
        "\:041f\:043e\:0441\:0442\:0430\:0432\:043b\:0435\:043d\:043e 12072 \
\:0443\:043d\:0438\:043a\:0430\:043b\:044c\:043d\:044b\:0445 \:0434\:0438\
\:0430\:0433\:043d\:043e\:0437\:0430 \:0438\:0437 14629"|>, <|
       "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\:0430" -> 
        "\:0423\:0447\:0430\:0441\:0442\:043e\:043a \:211614, \:043a\:0430\
\:0431\:0438\:043d\:0435\:0442 313, \
\:041a\:0430\:0437\:0430\:043a\:0435\:0432\:0438\:0447 \:0412\:0430\:043b\
\:0435\:0440\:0438\:044f \:0412\:0430\:0434\:0438\:043c\:043e\:0432\:043d\
\:0430", "\:041f\:0440\:043e\:0446\:0435\:043d\:0442\:041f\:043e\:0441\:0442\
\:0430\:0432\:0414\:0438\:0430\:0433\:043d\:041c\:0438\:0440\:0430" -> 82.172,
         "\:0421\:043e\:043e\:0431\:0449\:0435\:043d\:0438\:0435" -> 
        "\:041f\:043e\:0441\:0442\:0430\:0432\:043b\:0435\:043d\:043e 12021 \
\:0443\:043d\:0438\:043a\:0430\:043b\:044c\:043d\:044b\:0445 \:0434\:0438\
\:0430\:0433\:043d\:043e\:0437\:0430 \:0438\:0437 14629"|>, <|
       "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\:0430" -> 
        "\:0423\:0447\:0430\:0441\:0442\:043e\:043a \:211615, \:043a\:0430\
\:0431\:0438\:043d\:0435\:0442 309, \:041a\:043e\:0437\:0435\:043b \:0421\
\:0432\:0435\:0442\:043b\:0430\:043d\:0430 \:0410\:043d\:0434\:0440\:0435\
\:0435\:0432\:043d\:0430", 
        "\:041f\:0440\:043e\:0446\:0435\:043d\:0442\:041f\:043e\:0441\:0442\
\:0430\:0432\:0414\:0438\:0430\:0433\:043d\:041c\:0438\:0440\:0430" -> 88.523,
         "\:0421\:043e\:043e\:0431\:0449\:0435\:043d\:0438\:0435" -> 
        "\:041f\:043e\:0441\:0442\:0430\:0432\:043b\:0435\:043d\:043e 12950 \
\:0443\:043d\:0438\:043a\:0430\:043b\:044c\:043d\:044b\:0445 \:0434\:0438\
\:0430\:0433\:043d\:043e\:0437\:0430 \:0438\:0437 14629"|>, <|
       "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\:0430" -> 
        "\:0423\:0447\:0430\:0441\:0442\:043e\:043a \:211616, \:043a\:0430\
\:0431\:0438\:043d\:0435\:0442 311, \:0420\:0430\:043a \:0412\:0430\:043b\
\:0435\:043d\:0442\:0438\:043d\:0430 \:0410\:043b\:0435\:043a\:0441\:0430\
\:043d\:0434\:0440\:043e\:0432\:043d\:0430", 
        "\:041f\:0440\:043e\:0446\:0435\:043d\:0442\:041f\:043e\:0441\:0442\
\:0430\:0432\:0414\:0438\:0430\:0433\:043d\:041c\:0438\:0440\:0430" -> 88.646,
         "\:0421\:043e\:043e\:0431\:0449\:0435\:043d\:0438\:0435" -> 
        "\:041f\:043e\:0441\:0442\:0430\:0432\:043b\:0435\:043d\:043e 12968 \
\:0443\:043d\:0438\:043a\:0430\:043b\:044c\:043d\:044b\:0445 \:0434\:0438\
\:0430\:0433\:043d\:043e\:0437\:0430 \:0438\:0437 14629"|>, <|
       "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\:0430" -> 
        "\:0423\:0447\:0430\:0441\:0442\:043e\:043a \:211617, \:043a\:0430\
\:0431\:0438\:043d\:0435\:0442 341, \
\:041c\:0438\:0445\:043e\:0432\:0438\:0447 \:0410\:043b\:0435\:043a\:0441\
\:0435\:0439 \:041f\:0430\:0432\:043b\:043e\:0432\:0438\:0447", 
        "\:041f\:0440\:043e\:0446\:0435\:043d\:0442\:041f\:043e\:0441\:0442\
\:0430\:0432\:0414\:0438\:0430\:0433\:043d\:041c\:0438\:0440\:0430" -> 82.48, 
        "\:0421\:043e\:043e\:0431\:0449\:0435\:043d\:0438\:0435" -> 
        "\:041f\:043e\:0441\:0442\:0430\:0432\:043b\:0435\:043d\:043e 12066 \
\:0443\:043d\:0438\:043a\:0430\:043b\:044c\:043d\:044b\:0445 \:0434\:0438\
\:0430\:0433\:043d\:043e\:0437\:0430 \:0438\:0437 14629"|>, <|
       "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\:0430" -> 
        "\:0423\:0447\:0430\:0441\:0442\:043e\:043a \:211618, \:043a\:0430\
\:0431\:0438\:043d\:0435\:0442 344, \
\:041d\:0435\:0441\:0442\:0435\:0440\:0443\:043a \:042f\:043d\:0438\:043d\
\:0430 \:0412\:043b\:0430\:0434\:0438\:043c\:0438\:0440\:043e\:0432\:043d\
\:0430", "\:041f\:0440\:043e\:0446\:0435\:043d\:0442\:041f\:043e\:0441\:0442\
\:0430\:0432\:0414\:0438\:0430\:0433\:043d\:041c\:0438\:0440\:0430" -> 82.097,
         "\:0421\:043e\:043e\:0431\:0449\:0435\:043d\:0438\:0435" -> 
        "\:041f\:043e\:0441\:0442\:0430\:0432\:043b\:0435\:043d\:043e 12010 \
\:0443\:043d\:0438\:043a\:0430\:043b\:044c\:043d\:044b\:0445 \:0434\:0438\
\:0430\:0433\:043d\:043e\:0437\:0430 \:0438\:0437 14629"|>, <|
       "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\:0430" -> 
        "\:0423\:0447\:0430\:0441\:0442\:043e\:043a \:211619, \:043a\:0430\
\:0431\:0438\:043d\:0435\:0442 344, \
\:041a\:043e\:0432\:0437\:043e\:043b\:043e\:0432\:0438\:0447 \:0410\:043b\
\:0438\:043d\:0430 \:0410\:043b\:0435\:043a\:0441\:0430\:043d\:0434\:0440\
\:043e\:0432\:043d\:0430", 
        "\:041f\:0440\:043e\:0446\:0435\:043d\:0442\:041f\:043e\:0441\:0442\
\:0430\:0432\:0414\:0438\:0430\:0433\:043d\:041c\:0438\:0440\:0430" -> 82.323,
         "\:0421\:043e\:043e\:0431\:0449\:0435\:043d\:0438\:0435" -> 
        "\:041f\:043e\:0441\:0442\:0430\:0432\:043b\:0435\:043d\:043e 12043 \
\:0443\:043d\:0438\:043a\:0430\:043b\:044c\:043d\:044b\:0445 \:0434\:0438\
\:0430\:0433\:043d\:043e\:0437\:0430 \:0438\:0437 14629"|>}, "AllowEmbedding" -> 
     True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{
         All, "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\
\:0430"} -> 1, {
         All, "\:041f\:0440\:043e\:0446\:0435\:043d\:0442\:041f\:043e\:0441\
\:0442\:0430\:0432\:0414\:0438\:0430\:0433\:043d\:041c\:0438\:0440\:0430"} -> 
        1, {All, "\:0421\:043e\:043e\:0431\:0449\:0435\:043d\:0438\:0435"} -> 
        1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\:0430\
" -> TypeSystem`PackageScope`AtomShape[560.], 
            "\:041f\:0440\:043e\:0446\:0435\:043d\:0442\:041f\:043e\:0441\
\:0442\:0430\:0432\:0414\:0438\:0430\:0433\:043d\:041c\:0438\:0440\:0430" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "\:0421\:043e\:043e\:0431\:0449\:0435\:043d\:0438\:0435" -> 
            TypeSystem`PackageScope`AtomShape[504.00000000000006`]|>], 
          DirectedInfinity[1], 3, {All}]], 14, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\:0430", 
         "\:041f\:0440\:043e\:0446\:0435\:043d\:0442\:041f\:043e\:0441\:0442\
\:0430\:0432\:0414\:0438\:0430\:0433\:043d\:041c\:0438\:0440\:0430", 
         "\:0421\:043e\:043e\:0431\:0449\:0435\:043d\:0438\:0435"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[String]}], 14], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{
         All, "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\
\:0430"} -> 1, {
         All, "\:041f\:0440\:043e\:0446\:0435\:043d\:0442\:041f\:043e\:0441\
\:0442\:0430\:0432\:0414\:0438\:0430\:0433\:043d\:041c\:0438\:0440\:0430"} -> 
        1, {All, "\:0421\:043e\:043e\:0431\:0449\:0435\:043d\:0438\:0435"} -> 
        1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\:0430\
" -> TypeSystem`PackageScope`AtomShape[560.], 
            "\:041f\:0440\:043e\:0446\:0435\:043d\:0442\:041f\:043e\:0441\
\:0442\:0430\:0432\:0414\:0438\:0430\:0433\:043d\:041c\:0438\:0440\:0430" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "\:0421\:043e\:043e\:0431\:0449\:0435\:043d\:0438\:0435" -> 
            TypeSystem`PackageScope`AtomShape[504.00000000000006`]|>], 
          DirectedInfinity[1], 3, {All}]], 14, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\:0430", 
         "\:041f\:0440\:043e\:0446\:0435\:043d\:0442\:041f\:043e\:0441\:0442\
\:0430\:0432\:0414\:0438\:0430\:0433\:043d\:041c\:0438\:0440\:0430", 
         "\:0421\:043e\:043e\:0431\:0449\:0435\:043d\:0438\:0435"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[String]}], 14], "Path" -> {}, "DisplayedRowCount" -> 
     14, "DisplayedColumnCount" -> 3, "DataRowCount" -> 14, "DataColumnCount" -> 
     3, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                 "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\
\:0430", 
                  Style[
                  "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\
\:0447\:0430", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\
\:0430\:0447\:0430"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\
\:0447\:0430"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                 "\:041f\:0440\:043e\:0446\:0435\:043d\:0442\:041f\:043e\:0441\
\:0442\:0430\:0432\:0414\:0438\:0430\:0433\:043d\:041c\:0438\:0440\:0430", 
                  Style[
                  "\:041f\:0440\:043e\:0446\:0435\:043d\:0442\:041f\:043e\
\:0441\:0442\:0430\:0432\:0414\:0438\:0430\:0433\:043d\:041c\:0438\:0440\:0430\
", FontColor -> RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "\:041f\:0440\:043e\:0446\:0435\:043d\:0442\:041f\
\:043e\:0441\:0442\:0430\:0432\:0414\:0438\:0430\:0433\:043d\:041c\:0438\:0440\
\:0430"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "\:041f\:0440\:043e\:0446\:0435\:043d\:0442\:041f\:043e\
\:0441\:0442\:0430\:0432\:0414\:0438\:0430\:0433\:043d\:041c\:0438\:0440\:0430\
"}, "ColumnHeader", True], "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                 "\:0421\:043e\:043e\:0431\:0449\:0435\:043d\:0438\:0435", 
                  Style[
                  "\:0421\:043e\:043e\:0431\:0449\:0435\:043d\:0438\:0435", 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "\:0421\:043e\:043e\:0431\:0449\:0435\:043d\:0438\
\:0435"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "\:0421\:043e\:043e\:0431\:0449\:0435\:043d\:0438\:0435"}\
, "ColumnHeader", True], "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
              "\:0423\:0447\:0430\:0441\:0442\:043e\:043a \:21161, \:043a\
\:0430\:0431\:0438\:043d\:0435\:0442 309, \
\:041f\:0430\:0432\:043b\:043e\:0432\:0430 \:0412\:0438\:043a\:0442\:043e\
\:0440\:0438\:044f \:0421\:0435\:0440\:0433\:0435\:0435\:0432\:043d\:0430", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key[
                 "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\
\:0430"]}, "Item", False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["72.848"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key[
                 "\:041f\:0440\:043e\:0446\:0435\:043d\:0442\:041f\:043e\:0441\
\:0442\:0430\:0432\:0414\:0438\:0430\:0433\:043d\:041c\:0438\:0440\:0430"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "\:041f\:043e\:0441\:0442\:0430\:0432\:043b\:0435\:043d\:043e \
10657 \:0443\:043d\:0438\:043a\:0430\:043b\:044c\:043d\:044b\:0445 \:0434\
\:0438\:0430\:0433\:043d\:043e\:0437\:0430 \:0438\:0437 14629", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key[
                 "\:0421\:043e\:043e\:0431\:0449\:0435\:043d\:0438\:0435"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{504.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "\:0423\:0447\:0430\:0441\:0442\:043e\:043a \:21162, \:043a\
\:0430\:0431\:0438\:043d\:0435\:0442 344, \
\:0411\:0435\:0437\:0441\:0438\:043b\:043a\:043e \:0410\:043d\:0434\:0440\
\:0435\:0439 \:0412\:0438\:043a\:0442\:043e\:0440\:043e\:0432\:0438\:0447", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key[
                 "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\
\:0430"]}, "Item", False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["82.159"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key[
                 "\:041f\:0440\:043e\:0446\:0435\:043d\:0442\:041f\:043e\:0441\
\:0442\:0430\:0432\:0414\:0438\:0430\:0433\:043d\:041c\:0438\:0440\:0430"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "\:041f\:043e\:0441\:0442\:0430\:0432\:043b\:0435\:043d\:043e \
12019 \:0443\:043d\:0438\:043a\:0430\:043b\:044c\:043d\:044b\:0445 \:0434\
\:0438\:0430\:0433\:043d\:043e\:0437\:0430 \:0438\:0437 14629", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key[
                 "\:0421\:043e\:043e\:0431\:0449\:0435\:043d\:0438\:0435"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{504.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "\:0423\:0447\:0430\:0441\:0442\:043e\:043a \:21164, \:043a\
\:0430\:0431\:0438\:043d\:0435\:0442 307, \
\:0410\:0437\:0445\:0430\:0440\:0438 \:0410\:0445\:043c\:0430\:0434 \:041a\
\:0430\:0434\:0440\:0438 \:0421\:0430\:0444\:0444\:0430\:043d", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key[
                 "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\
\:0430"]}, "Item", False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["82.289"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key[
                 "\:041f\:0440\:043e\:0446\:0435\:043d\:0442\:041f\:043e\:0441\
\:0442\:0430\:0432\:0414\:0438\:0430\:0433\:043d\:041c\:0438\:0440\:0430"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "\:041f\:043e\:0441\:0442\:0430\:0432\:043b\:0435\:043d\:043e \
12038 \:0443\:043d\:0438\:043a\:0430\:043b\:044c\:043d\:044b\:0445 \:0434\
\:0438\:0430\:0433\:043d\:043e\:0437\:0430 \:0438\:0437 14629", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key[
                 "\:0421\:043e\:043e\:0431\:0449\:0435\:043d\:0438\:0435"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{504.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "\:0423\:0447\:0430\:0441\:0442\:043e\:043a \:21165, \:043a\
\:0430\:0431\:0438\:043d\:0435\:0442 321, \
\:0427\:0435\:0440\:043d\:044f\:043a \:041b\:044e\:0434\:043c\:0438\:043b\
\:0430 \:0418\:0432\:0430\:043d\:043e\:0432\:043d\:0430", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key[
                 "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\
\:0430"]}, "Item", False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["82.753"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key[
                 "\:041f\:0440\:043e\:0446\:0435\:043d\:0442\:041f\:043e\:0441\
\:0442\:0430\:0432\:0414\:0438\:0430\:0433\:043d\:041c\:0438\:0440\:0430"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "\:041f\:043e\:0441\:0442\:0430\:0432\:043b\:0435\:043d\:043e \
12106 \:0443\:043d\:0438\:043a\:0430\:043b\:044c\:043d\:044b\:0445 \:0434\
\:0438\:0430\:0433\:043d\:043e\:0437\:0430 \:0438\:0437 14629", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key[
                 "\:0421\:043e\:043e\:0431\:0449\:0435\:043d\:0438\:0435"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{504.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "\:0423\:0447\:0430\:0441\:0442\:043e\:043a \:21166, \:043a\
\:0430\:0431\:0438\:043d\:0435\:0442 336, \
\:041a\:043b\:044e\:0441\:043e\:0432\:0430 \:041d\:0430\:0442\:0430\:043b\
\:0438\:044f \:041d\:0438\:043a\:043e\:043b\:0430\:0435\:0432\:043d\:0430", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key[
                 "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\
\:0430"]}, "Item", False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["72.712"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key[
                 "\:041f\:0440\:043e\:0446\:0435\:043d\:0442\:041f\:043e\:0441\
\:0442\:0430\:0432\:0414\:0438\:0430\:0433\:043d\:041c\:0438\:0440\:0430"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "\:041f\:043e\:0441\:0442\:0430\:0432\:043b\:0435\:043d\:043e \
10637 \:0443\:043d\:0438\:043a\:0430\:043b\:044c\:043d\:044b\:0445 \:0434\
\:0438\:0430\:0433\:043d\:043e\:0437\:0430 \:0438\:0437 14629", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key[
                 "\:0421\:043e\:043e\:0431\:0449\:0435\:043d\:0438\:0435"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{504.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "\:0423\:0447\:0430\:0441\:0442\:043e\:043a \:21167, \:043a\
\:0430\:0431\:0438\:043d\:0435\:0442 319, \
\:0422\:043e\:043b\:043a\:0430\:043d\:0438\:0446\:0430 \:0412\:0438\:043a\
\:0442\:043e\:0440 \:0412\:0430\:0441\:0438\:043b\:044c\:0435\:0432\:0438\
\:0447", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key[
                 "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\
\:0430"]}, "Item", False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["81.899"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key[
                 "\:041f\:0440\:043e\:0446\:0435\:043d\:0442\:041f\:043e\:0441\
\:0442\:0430\:0432\:0414\:0438\:0430\:0433\:043d\:041c\:0438\:0440\:0430"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "\:041f\:043e\:0441\:0442\:0430\:0432\:043b\:0435\:043d\:043e \
11981 \:0443\:043d\:0438\:043a\:0430\:043b\:044c\:043d\:044b\:0445 \:0434\
\:0438\:0430\:0433\:043d\:043e\:0437\:0430 \:0438\:0437 14629", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key[
                 "\:0421\:043e\:043e\:0431\:0449\:0435\:043d\:0438\:0435"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{504.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "\:0423\:0447\:0430\:0441\:0442\:043e\:043a \:21169, \:043a\
\:0430\:0431\:0438\:043d\:0435\:0442 348, \
\:0422\:0435\:043c\:043f\:0435\:0440\:0430\:043c\:0435\:043d\:0442\:043e\:0432\
\:0430-\:0410\:043d\:0434\:0440\:0435\:044e\:043a \:0412\:043b\:0430\:0434\
\:0430 \:042f\:0440\:043e\:0441\:043b\:0430\:0432\:043e\:0432\:043d\:0430", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key[
                 "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\
\:0430"]}, "Item", False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["72.766"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key[
                 "\:041f\:0440\:043e\:0446\:0435\:043d\:0442\:041f\:043e\:0441\
\:0442\:0430\:0432\:0414\:0438\:0430\:0433\:043d\:041c\:0438\:0440\:0430"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "\:041f\:043e\:0441\:0442\:0430\:0432\:043b\:0435\:043d\:043e \
10645 \:0443\:043d\:0438\:043a\:0430\:043b\:044c\:043d\:044b\:0445 \:0434\
\:0438\:0430\:0433\:043d\:043e\:0437\:0430 \:0438\:0437 14629", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key[
                 "\:0421\:043e\:043e\:0431\:0449\:0435\:043d\:0438\:0435"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{504.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "\:0423\:0447\:0430\:0441\:0442\:043e\:043a \:211613, \:043a\
\:0430\:0431\:0438\:043d\:0435\:0442 315, \:0415\:043b\:0430\:043a \:042e\
\:043b\:0438\:044f \:0412\:0430\:043b\:0435\:0440\:044c\:0435\:0432\:043d\
\:0430", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key[
                 "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\
\:0430"]}, "Item", False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["82.521"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key[
                 "\:041f\:0440\:043e\:0446\:0435\:043d\:0442\:041f\:043e\:0441\
\:0442\:0430\:0432\:0414\:0438\:0430\:0433\:043d\:041c\:0438\:0440\:0430"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "\:041f\:043e\:0441\:0442\:0430\:0432\:043b\:0435\:043d\:043e \
12072 \:0443\:043d\:0438\:043a\:0430\:043b\:044c\:043d\:044b\:0445 \:0434\
\:0438\:0430\:0433\:043d\:043e\:0437\:0430 \:0438\:0437 14629", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key[
                 "\:0421\:043e\:043e\:0431\:0449\:0435\:043d\:0438\:0435"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{504.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "\:0423\:0447\:0430\:0441\:0442\:043e\:043a \:211614, \:043a\
\:0430\:0431\:0438\:043d\:0435\:0442 313, \
\:041a\:0430\:0437\:0430\:043a\:0435\:0432\:0438\:0447 \:0412\:0430\:043b\
\:0435\:0440\:0438\:044f \:0412\:0430\:0434\:0438\:043c\:043e\:0432\:043d\
\:0430", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key[
                 "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\
\:0430"]}, "Item", False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["82.172"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key[
                 "\:041f\:0440\:043e\:0446\:0435\:043d\:0442\:041f\:043e\:0441\
\:0442\:0430\:0432\:0414\:0438\:0430\:0433\:043d\:041c\:0438\:0440\:0430"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "\:041f\:043e\:0441\:0442\:0430\:0432\:043b\:0435\:043d\:043e \
12021 \:0443\:043d\:0438\:043a\:0430\:043b\:044c\:043d\:044b\:0445 \:0434\
\:0438\:0430\:0433\:043d\:043e\:0437\:0430 \:0438\:0437 14629", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key[
                 "\:0421\:043e\:043e\:0431\:0449\:0435\:043d\:0438\:0435"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{504.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "\:0423\:0447\:0430\:0441\:0442\:043e\:043a \:211615, \:043a\
\:0430\:0431\:0438\:043d\:0435\:0442 309, \:041a\:043e\:0437\:0435\:043b \
\:0421\:0432\:0435\:0442\:043b\:0430\:043d\:0430 \:0410\:043d\:0434\:0440\
\:0435\:0435\:0432\:043d\:0430", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key[
                 "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\
\:0430"]}, "Item", False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["88.523"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key[
                 "\:041f\:0440\:043e\:0446\:0435\:043d\:0442\:041f\:043e\:0441\
\:0442\:0430\:0432\:0414\:0438\:0430\:0433\:043d\:041c\:0438\:0440\:0430"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "\:041f\:043e\:0441\:0442\:0430\:0432\:043b\:0435\:043d\:043e \
12950 \:0443\:043d\:0438\:043a\:0430\:043b\:044c\:043d\:044b\:0445 \:0434\
\:0438\:0430\:0433\:043d\:043e\:0437\:0430 \:0438\:0437 14629", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key[
                 "\:0421\:043e\:043e\:0431\:0449\:0435\:043d\:0438\:0435"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{504.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              
              "\:0423\:0447\:0430\:0441\:0442\:043e\:043a \:211616, \:043a\
\:0430\:0431\:0438\:043d\:0435\:0442 311, \:0420\:0430\:043a \:0412\:0430\
\:043b\:0435\:043d\:0442\:0438\:043d\:0430 \:0410\:043b\:0435\:043a\:0441\
\:0430\:043d\:0434\:0440\:043e\:0432\:043d\:0430", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key[
                 "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\
\:0430"]}, "Item", False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["88.646"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key[
                 "\:041f\:0440\:043e\:0446\:0435\:043d\:0442\:041f\:043e\:0441\
\:0442\:0430\:0432\:0414\:0438\:0430\:0433\:043d\:041c\:0438\:0440\:0430"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "\:041f\:043e\:0441\:0442\:0430\:0432\:043b\:0435\:043d\:043e \
12968 \:0443\:043d\:0438\:043a\:0430\:043b\:044c\:043d\:044b\:0445 \:0434\
\:0438\:0430\:0433\:043d\:043e\:0437\:0430 \:0438\:0437 14629", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key[
                 "\:0421\:043e\:043e\:0431\:0449\:0435\:043d\:0438\:0435"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{504.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "\:0423\:0447\:0430\:0441\:0442\:043e\:043a \:211617, \:043a\
\:0430\:0431\:0438\:043d\:0435\:0442 341, \
\:041c\:0438\:0445\:043e\:0432\:0438\:0447 \:0410\:043b\:0435\:043a\:0441\
\:0435\:0439 \:041f\:0430\:0432\:043b\:043e\:0432\:0438\:0447", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key[
                 "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\
\:0430"]}, "Item", False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["82.48"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key[
                 "\:041f\:0440\:043e\:0446\:0435\:043d\:0442\:041f\:043e\:0441\
\:0442\:0430\:0432\:0414\:0438\:0430\:0433\:043d\:041c\:0438\:0440\:0430"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "\:041f\:043e\:0441\:0442\:0430\:0432\:043b\:0435\:043d\:043e \
12066 \:0443\:043d\:0438\:043a\:0430\:043b\:044c\:043d\:044b\:0445 \:0434\
\:0438\:0430\:0433\:043d\:043e\:0437\:0430 \:0438\:0437 14629", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key[
                 "\:0421\:043e\:043e\:0431\:0449\:0435\:043d\:0438\:0435"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{504.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "\:0423\:0447\:0430\:0441\:0442\:043e\:043a \:211618, \:043a\
\:0430\:0431\:0438\:043d\:0435\:0442 344, \
\:041d\:0435\:0441\:0442\:0435\:0440\:0443\:043a \:042f\:043d\:0438\:043d\
\:0430 \:0412\:043b\:0430\:0434\:0438\:043c\:0438\:0440\:043e\:0432\:043d\
\:0430", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key[
                 "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\
\:0430"]}, "Item", False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["82.097"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key[
                 "\:041f\:0440\:043e\:0446\:0435\:043d\:0442\:041f\:043e\:0441\
\:0442\:0430\:0432\:0414\:0438\:0430\:0433\:043d\:041c\:0438\:0440\:0430"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "\:041f\:043e\:0441\:0442\:0430\:0432\:043b\:0435\:043d\:043e \
12010 \:0443\:043d\:0438\:043a\:0430\:043b\:044c\:043d\:044b\:0445 \:0434\
\:0438\:0430\:0433\:043d\:043e\:0437\:0430 \:0438\:0437 14629", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key[
                 "\:0421\:043e\:043e\:0431\:0449\:0435\:043d\:0438\:0435"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{504.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "\:0423\:0447\:0430\:0441\:0442\:043e\:043a \:211619, \:043a\
\:0430\:0431\:0438\:043d\:0435\:0442 344, \
\:041a\:043e\:0432\:0437\:043e\:043b\:043e\:0432\:0438\:0447 \:0410\:043b\
\:0438\:043d\:0430 \:0410\:043b\:0435\:043a\:0441\:0430\:043d\:0434\:0440\
\:043e\:0432\:043d\:0430", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key[
                 "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\
\:0430"]}, "Item", False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["82.323"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key[
                 "\:041f\:0440\:043e\:0446\:0435\:043d\:0442\:041f\:043e\:0441\
\:0442\:0430\:0432\:0414\:0438\:0430\:0433\:043d\:041c\:0438\:0440\:0430"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "\:041f\:043e\:0441\:0442\:0430\:0432\:043b\:0435\:043d\:043e \
12043 \:0443\:043d\:0438\:043a\:0430\:043b\:044c\:043d\:044b\:0445 \:0434\
\:0438\:0430\:0433\:043d\:043e\:0437\:0430 \:0438\:0437 14629", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key[
                 "\:0421\:043e\:043e\:0431\:0449\:0435\:043d\:0438\:0435"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{504.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1251., {208.1875, 213.8125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1251., {208.1875, 213.8125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8792589798577347`*^9, 3.8792590022376423`*^9}, {
   3.879260527519*^9, 3.879260537915412*^9}, 3.8792666315175657`*^9, 
   3.879295870311469*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"2b8f06cf-674e-4859-8ded-967823d50673"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{
      Opacity[0], 
      PointBox[{{0.6514353687549563, 0.}, {24.542030134813647`, 
       0.}}]}, {{}, {{{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.602]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{1.119878403383558, 0.}, {1.8719270420301348`, 
                  82.097}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 82.097]& , 
              TagBoxNote -> "82.097"], 
             StyleBox["82.097`", {}, StripOnInput -> False]], Annotation[#, 
             Style[82.097, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.602]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{2.8637324874438277`, 0.}, {3.6157811260904045`,
                   82.48}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 82.48]& , TagBoxNote -> 
              "82.48"], 
             StyleBox["82.48`", {}, StripOnInput -> False]], Annotation[#, 
             Style[82.48, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.602]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{4.607586571504097, 0.}, {5.359635210150674, 
                  88.646}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 88.646]& , 
              TagBoxNote -> "88.646"], 
             StyleBox["88.646`", {}, StripOnInput -> False]], Annotation[#, 
             Style[88.646, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.602]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{6.3514406555643665`, 0.}, {7.103489294210943, 
                  88.523}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 88.523]& , 
              TagBoxNote -> "88.523"], 
             StyleBox["88.523`", {}, StripOnInput -> False]], Annotation[#, 
             Style[88.523, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.602]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{8.095294739624636, 0.}, {8.847343378271212, 
                  82.172}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 82.172]& , 
              TagBoxNote -> "82.172"], 
             StyleBox["82.172`", {}, StripOnInput -> False]], Annotation[#, 
             Style[82.172, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.602]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{9.839148823684905, 0.}, {10.591197462331483`, 
                  82.521}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 82.521]& , 
              TagBoxNote -> "82.521"], 
             StyleBox["82.521`", {}, StripOnInput -> False]], Annotation[#, 
             Style[82.521, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.602]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{11.583002907745175`, 0.}, {12.335051546391753`,
                   72.766}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 72.766]& , 
              TagBoxNote -> "72.766"], 
             StyleBox["72.766`", {}, StripOnInput -> False]], Annotation[#, 
             Style[72.766, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.602]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{13.326856991805446`, 0.}, {14.078905630452024`,
                   81.899}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 81.899]& , 
              TagBoxNote -> "81.899"], 
             StyleBox["81.899`", {}, StripOnInput -> False]], Annotation[#, 
             Style[81.899, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.602]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{15.070711075865717`, 0.}, {15.822759714512294`,
                   72.712}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 72.712]& , 
              TagBoxNote -> "72.712"], 
             StyleBox["72.712`", {}, StripOnInput -> False]], Annotation[#, 
             Style[72.712, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.602]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{16.814565159925987`, 0.}, {17.566613798572565`,
                   82.753}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 82.753]& , 
              TagBoxNote -> "82.753"], 
             StyleBox["82.753`", {}, StripOnInput -> False]], Annotation[#, 
             Style[82.753, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.602]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{18.558419243986258`, 0.}, {19.310467882632835`,
                   82.289}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 82.289]& , 
              TagBoxNote -> "82.289"], 
             StyleBox["82.289`", {}, StripOnInput -> False]], Annotation[#, 
             Style[82.289, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.602]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{20.302273328046528`, 0.}, {21.054321966693106`,
                   82.159}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 82.159]& , 
              TagBoxNote -> "82.159"], 
             StyleBox["82.159`", {}, StripOnInput -> False]], Annotation[#, 
             Style[82.159, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.602]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{22.0461274121068, 0.}, {22.798176050753376`, 
                  72.848}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 72.848]& , 
              TagBoxNote -> "72.848"], 
             StyleBox["72.848`", {}, StripOnInput -> False]], Annotation[#, 
             Style[72.848, {}], 
             "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{}}}, {}, {}}}, {}, {}}, \
{}, {}, {}, {}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny]], {
          LineBox[{{0.6514353687549563, 0.}, {25.019842030134825`, 0.}}]}, 
         StyleBox[{}, {"GraphicsLabel"}, StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny]], 
           LineBox[{{1.119878403383558, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {1.119878403383558, 
              0.}]}], 
           LineBox[{{24.54203013481365, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {24.54203013481365, 
              0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
             LineBox[{{1.8719270420301348`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {1.8719270420301348`, 
                0.}]}], 
             LineBox[{{2.8637324874438277`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {2.8637324874438277`, 
                0.}]}], 
             LineBox[{{3.6157811260904045`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {3.6157811260904045`, 
                0.}]}], 
             LineBox[{{4.607586571504097, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {4.607586571504097, 
                0.}]}], 
             LineBox[{{5.359635210150675, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {5.359635210150675, 
                0.}]}], 
             LineBox[{{6.351440655564367, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {6.351440655564367, 
                0.}]}], 
             LineBox[{{7.103489294210943, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {7.103489294210943, 
                0.}]}], 
             LineBox[{{8.095294739624636, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {8.095294739624636, 
                0.}]}], 
             LineBox[{{8.847343378271212, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {8.847343378271212, 
                0.}]}], 
             LineBox[{{9.839148823684905, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {9.839148823684905, 
                0.}]}], 
             LineBox[{{10.591197462331483`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {10.591197462331483`, 
                0.}]}], 
             LineBox[{{11.583002907745175`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {11.583002907745175`, 
                0.}]}], 
             LineBox[{{12.335051546391753`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {12.335051546391753`, 
                0.}]}], 
             LineBox[{{13.326856991805446`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {13.326856991805446`, 
                0.}]}], 
             LineBox[{{14.078905630452024`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {14.078905630452024`, 
                0.}]}], 
             LineBox[{{15.070711075865717`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {15.070711075865717`, 
                0.}]}], 
             LineBox[{{15.822759714512294`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {15.822759714512294`, 
                0.}]}], 
             LineBox[{{16.814565159925987`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {16.814565159925987`, 
                0.}]}], 
             LineBox[{{17.56661379857257, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {17.56661379857257, 
                0.}]}], 
             LineBox[{{18.55841924398626, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {18.55841924398626, 
                0.}]}], 
             LineBox[{{19.31046788263284, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {19.31046788263284, 
                0.}]}], 
             LineBox[{{20.30227332804653, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {20.30227332804653, 
                0.}]}], 
             LineBox[{{21.05432196669311, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {21.05432196669311, 
                0.}]}], 
             LineBox[{{22.046127412106802`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {22.046127412106802`, 
                0.}]}], 
             LineBox[{{22.79817605075338, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {22.79817605075338, 
                0.}]}], 
             LineBox[{{23.789981496167073`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {23.789981496167073`, 
                0.}]}]}}}, 
          StyleBox[{}, {"GraphicsLabel"}, StripOnInput -> False]}, {
         "GraphicsTicks"}, StripOnInput -> False]}, {"GraphicsAxes"}, 
       StripOnInput -> False]}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.6514353687549563, 0.}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], PlotRange -> {{All, All}, {All, All}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\:041f\:0440\:043e\:0446\:0435\:043d\:0442 \:043f\:043e\:0441\:0442\
\:0430\:0432\:043b\:0435\:043d\:043d\:044b\:0445 \:0434\:0438\:0430\:0433\
\:043d\:043e\:0437\:043e\:0432 \:043c\:0438\:0440\:0430 \:0432\:0440\:0430\
\:0447\:0430\:043c\:0438 \:043a\:0430\:0436\:0434\:043e\:0433\:043e \:0443\
\:0447\:0430\:0441\:0442\:043a\:0430\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.602]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.982864, 0.7431472, 0.3262672]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", "}"}], ",", 
               RowBox[{"{", #, "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "None", "}"}], ",", 
                 RowBox[{"{", "Automatic", "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8792589798577347`*^9, 3.8792590022376423`*^9}, {
   3.879260527519*^9, 3.879260537915412*^9}, 3.8792666315175657`*^9, 
   3.879295871151184*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"2764fd48-472d-4712-8759-7b2be24694b3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["ExternalEvaluate \:0438 PieChart", "Subsection",
 CellChangeTimes->{{3.879259991306429*^9, 
  3.879260014432255*^9}},ExpressionUUID->"5cff8645-ebc9-4907-95ab-\
5cc7dd6f1b69"],

Cell["\<\
ExternalEvaluate - \:0432\:044b\:043f\:043e\:043b\:043d\:044f\:0435\:043c SQL \
\:0437\:0430\:043f\:0440\:043e\:0441
PieChart - \:0440\:0438\:0441\:0443\:0435\:043c \
\:0433\:0440\:0443\:0433\:043e\:0432\:0443\:044e \:0434\:0438\:0430\:0433\
\:0440\:0430\:043c\:043c\:0443

\:041d\:0430\:0439\:0442\:0438 \:0441\:043a\:043e\:043b\:044c\:043a\:043e \
\:043c\:0443\:0436\:0447\:0438\:043d \:0431\:044b\:043b\:0438 \:043e\:0431\
\:0441\:043b\:0443\:0436\:0430\:043d\:043d\:044b\:0445 \:043d\:0430 \:0434\
\:043e\:043c\:0443 \:043d\:0430 \:043a\:0430\:0436\:0434\:043e\:043c \:0443\
\:0447\:0430\:0441\:0442\:043a\:0435\
\>", "Text",
 CellChangeTimes->{{3.879260036198316*^9, 3.879260082423336*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"5de7ce63-b0d1-4997-a00b-e321ce662aa0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"gp$resPeoplesInHome", " ", "=", 
   RowBox[{"ExternalEvaluate", "[", 
    RowBox[{
    "gp$ref", ",", "\[IndentingNewLine]", 
     "\"\<SELECT\n    -- = = = = = = = = = = = = = = = = \:041a\:043e\:043b\
\:043e\:043d\:043a\:0430 \\\"\:0418\:0434\:0412\:0440\:0430\:0447\:0430\\\"\n \
   Doctors.id AS \:0418\:0434\:0412\:0440\:0430\:0447\:0430,\n    -- = = = = \
= = = = = = = = = = = = \:041a\:043e\:043b\:043e\:043d\:043a\:0430 \\\"\:0414\
\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\:0430\\\"\n    CONCAT(\
\n        '\:0423\:0447\:0430\:0441\:0442\:043e\:043a ',\n        \
Doctors.de_region,\n        ', \:043a\:0430\:0431\:0438\:0435\:043d\:0442 ',\n\
        Doctors.de_office,\n        ', ',\n        Doctors.de_surname,\n      \
  ', ',\n        Doctors.de_name,\n        ', ',\n        \
Doctors.de_patronymic\n    ) AS \:0414\:0430\:043d\:043d\:044b\:0435\:0412\
\:0440\:0430\:0447\:0430,\n    -- = = = = = = = = = = = = = = = = \
\:041a\:043e\:043b\:043e\:043d\:043a\:0430 \\\"\:0413\:0435\:043d\:0434\:0435\
\:0440\:041f\:0430\:0446\:0438\:0435\:043d\:0442\:0430\\\"\n    \
Genders.de_name AS \:0413\:0435\:043d\:0434\:0435\:0440\:041f\:0430\:0446\
\:0438\:0435\:043d\:0442\:0430,\n    -- = = = = = = = = = = = = = = = = \
\:041a\:043e\:043b\:043e\:043d\:043a\:0430 \\\"\:041c\:0435\:0441\:0442\:043e\
\:041e\:0441\:043c\:043e\:0442\:0440\:0430\\\"\n    Places.de_name AS \:041c\
\:0435\:0441\:0442\:043e\:041e\:0441\:043c\:043e\:0442\:0440\:0430,\n    -- = \
= = = = = = = = = = = = = = = \:041a\:043e\:043b\:043e\:043d\:043a\:0430 \\\"\
\:041a\:043e\:043b\:0432\:043e\:041f\:0430\:0446\:0438\:0435\:043d\:0442\:043e\
\:0432\:041e\:0431\:0441\:043b\:0443\:0436\:0417\:0430\:041f\:0435\:0440\:0438\
\:043e\:0434\\\"\n    COUNT(Patients.id) AS \:041a\:043e\:043b\:0432\:043e\
\:041f\:0430\:0446\:0438\:0435\:043d\:0442\:043e\:0432\:041e\:0431\:0441\:043b\
\:0443\:0436\:0417\:0430\:041f\:0435\:0440\:0438\:043e\:0434\nFROM\n    \
DE_DOC_Inspection AS Inspections\n    INNER JOIN DE_CTL_Patients AS Patients \
ON Patients.id = Inspections.de_patientId\n    INNER JOIN DE_CTL_Genders AS \
Genders ON Genders.id = Patients.de_genderId\n    INNER JOIN \
DE_CTL_InspectionPlaces AS Places ON Places.id = Inspections.de_placeId\n    \
INNER JOIN DE_CTL_Doctors AS Doctors ON Doctors.id = Inspections.de_doctorId\n\
WHERE\n    Inspections.de_startTime > '2019-01-01 00:00:00' AND \
Places.de_name = '\:043d\:0430 \:0434\:043e\:043c\:0443' AND Genders.de_name \
LIKE '\:043c\:0443\:0436\:0441\:043a\:043e\:0439'\nGROUP BY\n    Doctors.id,\n\
    CONCAT(\n        '\:0423\:0447\:0430\:0441\:0442\:043e\:043a ',\n        \
Doctors.de_region,\n        ', \:043a\:0430\:0431\:0438\:0435\:043d\:0442 ',\n\
        Doctors.de_office,\n        ', ',\n        Doctors.de_surname,\n      \
  ', ',\n        Doctors.de_name,\n        ', ',\n        \
Doctors.de_patronymic\n    ),\n    Genders.de_name,\n    Places.de_name\n\
ORDER BY \:0418\:0434\:0412\:0440\:0430\:0447\:0430;\>\""}], 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gp$lst", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gp$lst2", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", " ", 
    RowBox[{"i", "<", 
     RowBox[{"Length", "[", "gp$resPeoplesInHome", " ", "]"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"gp$lst", "=", 
      RowBox[{"Join", "[", 
       RowBox[{"gp$lst", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"gp$resPeoplesInHome", " ", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "5", "]"}], "]"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"gp$lst2", "=", 
      RowBox[{"Join", "[", 
       RowBox[{"gp$lst2", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"gp$resPeoplesInHome", " ", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "}"}]}], "]"}]}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"PieChart", "[", 
  RowBox[{"gp$lst", ",", " ", 
   RowBox[{"ChartLegends", "->", "gp$lst2"}], ",", " ", 
   RowBox[{"ChartStyle", "->", "\"\<DarkRainbow\>\""}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.8791530371662703`*^9, {3.879259139187045*^9, 3.879259239614173*^9}, {
   3.879259305827256*^9, 3.879259480488505*^9}, {3.879259516406414*^9, 
   3.879259585127989*^9}, {3.879259623203001*^9, 3.87925970322451*^9}, {
   3.879295407211816*^9, 3.879295456349818*^9}, 3.879295489731151*^9, {
   3.8792955549964743`*^9, 3.879295558447041*^9}, {3.879295607445644*^9, 
   3.879295671931492*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[26]:=",ExpressionUUID->"23ce4b11-e50c-4db2-9845-aa2c11fef2f9"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "\:0418\:0434\:0412\:0440\:0430\:0447\:0430" -> 1, 
        "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\:0430" -> 
        "\:0423\:0447\:0430\:0441\:0442\:043e\:043a 1, \:043a\:0430\:0431\
\:0438\:0435\:043d\:0442 309, \:041f\:0430\:0432\:043b\:043e\:0432\:0430, \
\:0412\:0438\:043a\:0442\:043e\:0440\:0438\:044f, \:0421\:0435\:0440\:0433\
\:0435\:0435\:0432\:043d\:0430", 
        "\:0413\:0435\:043d\:0434\:0435\:0440\:041f\:0430\:0446\:0438\:0435\
\:043d\:0442\:0430" -> "\:043c\:0443\:0436\:0441\:043a\:043e\:0439", 
        "\:041c\:0435\:0441\:0442\:043e\:041e\:0441\:043c\:043e\:0442\:0440\
\:0430" -> "\:043d\:0430 \:0434\:043e\:043c\:0443", 
        "\:041a\:043e\:043b\:0432\:043e\:041f\:0430\:0446\:0438\:0435\:043d\
\:0442\:043e\:0432\:041e\:0431\:0441\:043b\:0443\:0436\:0417\:0430\:041f\:0435\
\:0440\:0438\:043e\:0434" -> 4781|>, <|
       "\:0418\:0434\:0412\:0440\:0430\:0447\:0430" -> 2, 
        "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\:0430" -> 
        "\:0423\:0447\:0430\:0441\:0442\:043e\:043a 2, \:043a\:0430\:0431\
\:0438\:0435\:043d\:0442 344, \
\:0411\:0435\:0437\:0441\:0438\:043b\:043a\:043e, \:0410\:043d\:0434\:0440\
\:0435\:0439, \:0412\:0438\:043a\:0442\:043e\:0440\:043e\:0432\:0438\:0447", 
        "\:0413\:0435\:043d\:0434\:0435\:0440\:041f\:0430\:0446\:0438\:0435\
\:043d\:0442\:0430" -> "\:043c\:0443\:0436\:0441\:043a\:043e\:0439", 
        "\:041c\:0435\:0441\:0442\:043e\:041e\:0441\:043c\:043e\:0442\:0440\
\:0430" -> "\:043d\:0430 \:0434\:043e\:043c\:0443", 
        "\:041a\:043e\:043b\:0432\:043e\:041f\:0430\:0446\:0438\:0435\:043d\
\:0442\:043e\:0432\:041e\:0431\:0441\:043b\:0443\:0436\:0417\:0430\:041f\:0435\
\:0440\:0438\:043e\:0434" -> 7269|>, <|
       "\:0418\:0434\:0412\:0440\:0430\:0447\:0430" -> 3, 
        "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\:0430" -> 
        "\:0423\:0447\:0430\:0441\:0442\:043e\:043a 4, \:043a\:0430\:0431\
\:0438\:0435\:043d\:0442 307, \:0410\:0437\:0445\:0430\:0440\:0438, \:0410\
\:0445\:043c\:0430\:0434, \:041a\:0430\:0434\:0440\:0438 \:0421\:0430\:0444\
\:0444\:0430\:043d", 
        "\:0413\:0435\:043d\:0434\:0435\:0440\:041f\:0430\:0446\:0438\:0435\
\:043d\:0442\:0430" -> "\:043c\:0443\:0436\:0441\:043a\:043e\:0439", 
        "\:041c\:0435\:0441\:0442\:043e\:041e\:0441\:043c\:043e\:0442\:0440\
\:0430" -> "\:043d\:0430 \:0434\:043e\:043c\:0443", 
        "\:041a\:043e\:043b\:0432\:043e\:041f\:0430\:0446\:0438\:0435\:043d\
\:0442\:043e\:0432\:041e\:0431\:0441\:043b\:0443\:0436\:0417\:0430\:041f\:0435\
\:0440\:0438\:043e\:0434" -> 7296|>, <|
       "\:0418\:0434\:0412\:0440\:0430\:0447\:0430" -> 4, 
        "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\:0430" -> 
        "\:0423\:0447\:0430\:0441\:0442\:043e\:043a 5, \:043a\:0430\:0431\
\:0438\:0435\:043d\:0442 321, \:0427\:0435\:0440\:043d\:044f\:043a, \:041b\
\:044e\:0434\:043c\:0438\:043b\:0430, \:0418\:0432\:0430\:043d\:043e\:0432\
\:043d\:0430", 
        "\:0413\:0435\:043d\:0434\:0435\:0440\:041f\:0430\:0446\:0438\:0435\
\:043d\:0442\:0430" -> "\:043c\:0443\:0436\:0441\:043a\:043e\:0439", 
        "\:041c\:0435\:0441\:0442\:043e\:041e\:0441\:043c\:043e\:0442\:0440\
\:0430" -> "\:043d\:0430 \:0434\:043e\:043c\:0443", 
        "\:041a\:043e\:043b\:0432\:043e\:041f\:0430\:0446\:0438\:0435\:043d\
\:0442\:043e\:0432\:041e\:0431\:0441\:043b\:0443\:0436\:0417\:0430\:041f\:0435\
\:0440\:0438\:043e\:0434" -> 7216|>, <|
       "\:0418\:0434\:0412\:0440\:0430\:0447\:0430" -> 5, 
        "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\:0430" -> 
        "\:0423\:0447\:0430\:0441\:0442\:043e\:043a 6, \:043a\:0430\:0431\
\:0438\:0435\:043d\:0442 336, \:041a\:043b\:044e\:0441\:043e\:0432\:0430, \
\:041d\:0430\:0442\:0430\:043b\:0438\:044f, \:041d\:0438\:043a\:043e\:043b\
\:0430\:0435\:0432\:043d\:0430", 
        "\:0413\:0435\:043d\:0434\:0435\:0440\:041f\:0430\:0446\:0438\:0435\
\:043d\:0442\:0430" -> "\:043c\:0443\:0436\:0441\:043a\:043e\:0439", 
        "\:041c\:0435\:0441\:0442\:043e\:041e\:0441\:043c\:043e\:0442\:0440\
\:0430" -> "\:043d\:0430 \:0434\:043e\:043c\:0443", 
        "\:041a\:043e\:043b\:0432\:043e\:041f\:0430\:0446\:0438\:0435\:043d\
\:0442\:043e\:0432\:041e\:0431\:0441\:043b\:0443\:0436\:0417\:0430\:041f\:0435\
\:0440\:0438\:043e\:0434" -> 4763|>, <|
       "\:0418\:0434\:0412\:0440\:0430\:0447\:0430" -> 6, 
        "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\:0430" -> 
        "\:0423\:0447\:0430\:0441\:0442\:043e\:043a 7, \:043a\:0430\:0431\
\:0438\:0435\:043d\:0442 319, \
\:0422\:043e\:043b\:043a\:0430\:043d\:0438\:0446\:0430, \:0412\:0438\:043a\
\:0442\:043e\:0440, \:0412\:0430\:0441\:0438\:043b\:044c\:0435\:0432\:0438\
\:0447", "\:0413\:0435\:043d\:0434\:0435\:0440\:041f\:0430\:0446\:0438\:0435\
\:043d\:0442\:0430" -> "\:043c\:0443\:0436\:0441\:043a\:043e\:0439", 
        "\:041c\:0435\:0441\:0442\:043e\:041e\:0441\:043c\:043e\:0442\:0440\
\:0430" -> "\:043d\:0430 \:0434\:043e\:043c\:0443", 
        "\:041a\:043e\:043b\:0432\:043e\:041f\:0430\:0446\:0438\:0435\:043d\
\:0442\:043e\:0432\:041e\:0431\:0441\:043b\:0443\:0436\:0417\:0430\:041f\:0435\
\:0440\:0438\:043e\:0434" -> 7222|>, <|
       "\:0418\:0434\:0412\:0440\:0430\:0447\:0430" -> 7, 
        "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\:0430" -> 
        "\:0423\:0447\:0430\:0441\:0442\:043e\:043a 9, \:043a\:0430\:0431\
\:0438\:0435\:043d\:0442 348, \
\:0422\:0435\:043c\:043f\:0435\:0440\:0430\:043c\:0435\:043d\:0442\:043e\:0432\
\:0430-\:0410\:043d\:0434\:0440\:0435\:044e\:043a, \:0412\:043b\:0430\:0434\
\:0430, \:042f\:0440\:043e\:0441\:043b\:0430\:0432\:043e\:0432\:043d\:0430", 
        "\:0413\:0435\:043d\:0434\:0435\:0440\:041f\:0430\:0446\:0438\:0435\
\:043d\:0442\:0430" -> "\:043c\:0443\:0436\:0441\:043a\:043e\:0439", 
        "\:041c\:0435\:0441\:0442\:043e\:041e\:0441\:043c\:043e\:0442\:0440\
\:0430" -> "\:043d\:0430 \:0434\:043e\:043c\:0443", 
        "\:041a\:043e\:043b\:0432\:043e\:041f\:0430\:0446\:0438\:0435\:043d\
\:0442\:043e\:0432\:041e\:0431\:0441\:043b\:0443\:0436\:0417\:0430\:041f\:0435\
\:0440\:0438\:043e\:0434" -> 4757|>, <|
       "\:0418\:0434\:0412\:0440\:0430\:0447\:0430" -> 8, 
        "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\:0430" -> 
        "\:0423\:0447\:0430\:0441\:0442\:043e\:043a 13, \:043a\:0430\:0431\
\:0438\:0435\:043d\:0442 315, \:0415\:043b\:0430\:043a, \:042e\:043b\:0438\
\:044f, \:0412\:0430\:043b\:0435\:0440\:044c\:0435\:0432\:043d\:0430", 
        "\:0413\:0435\:043d\:0434\:0435\:0440\:041f\:0430\:0446\:0438\:0435\
\:043d\:0442\:0430" -> "\:043c\:0443\:0436\:0441\:043a\:043e\:0439", 
        "\:041c\:0435\:0441\:0442\:043e\:041e\:0441\:043c\:043e\:0442\:0440\
\:0430" -> "\:043d\:0430 \:0434\:043e\:043c\:0443", 
        "\:041a\:043e\:043b\:0432\:043e\:041f\:0430\:0446\:0438\:0435\:043d\
\:0442\:043e\:0432\:041e\:0431\:0441\:043b\:0443\:0436\:0417\:0430\:041f\:0435\
\:0440\:0438\:043e\:0434" -> 7176|>, <|
       "\:0418\:0434\:0412\:0440\:0430\:0447\:0430" -> 9, 
        "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\:0430" -> 
        "\:0423\:0447\:0430\:0441\:0442\:043e\:043a 14, \:043a\:0430\:0431\
\:0438\:0435\:043d\:0442 313, \
\:041a\:0430\:0437\:0430\:043a\:0435\:0432\:0438\:0447, \:0412\:0430\:043b\
\:0435\:0440\:0438\:044f, \:0412\:0430\:0434\:0438\:043c\:043e\:0432\:043d\
\:0430", "\:0413\:0435\:043d\:0434\:0435\:0440\:041f\:0430\:0446\:0438\:0435\
\:043d\:0442\:0430" -> "\:043c\:0443\:0436\:0441\:043a\:043e\:0439", 
        "\:041c\:0435\:0441\:0442\:043e\:041e\:0441\:043c\:043e\:0442\:0440\
\:0430" -> "\:043d\:0430 \:0434\:043e\:043c\:0443", 
        "\:041a\:043e\:043b\:0432\:043e\:041f\:0430\:0446\:0438\:0435\:043d\
\:0442\:043e\:0432\:041e\:0431\:0441\:043b\:0443\:0436\:0417\:0430\:041f\:0435\
\:0440\:0438\:043e\:0434" -> 7100|>, <|
       "\:0418\:0434\:0412\:0440\:0430\:0447\:0430" -> 10, 
        "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\:0430" -> 
        "\:0423\:0447\:0430\:0441\:0442\:043e\:043a 15, \:043a\:0430\:0431\
\:0438\:0435\:043d\:0442 309, \:041a\:043e\:0437\:0435\:043b, \:0421\:0432\
\:0435\:0442\:043b\:0430\:043d\:0430, \:0410\:043d\:0434\:0440\:0435\:0435\
\:0432\:043d\:0430", 
        "\:0413\:0435\:043d\:0434\:0435\:0440\:041f\:0430\:0446\:0438\:0435\
\:043d\:0442\:0430" -> "\:043c\:0443\:0436\:0441\:043a\:043e\:0439", 
        "\:041c\:0435\:0441\:0442\:043e\:041e\:0441\:043c\:043e\:0442\:0440\
\:0430" -> "\:043d\:0430 \:0434\:043e\:043c\:0443", 
        "\:041a\:043e\:043b\:0432\:043e\:041f\:0430\:0446\:0438\:0435\:043d\
\:0442\:043e\:0432\:041e\:0431\:0441\:043b\:0443\:0436\:0417\:0430\:041f\:0435\
\:0440\:0438\:043e\:0434" -> 9498|>, <|
       "\:0418\:0434\:0412\:0440\:0430\:0447\:0430" -> 11, 
        "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\:0430" -> 
        "\:0423\:0447\:0430\:0441\:0442\:043e\:043a 16, \:043a\:0430\:0431\
\:0438\:0435\:043d\:0442 311, \:0420\:0430\:043a, \:0412\:0430\:043b\:0435\
\:043d\:0442\:0438\:043d\:0430, \:0410\:043b\:0435\:043a\:0441\:0430\:043d\
\:0434\:0440\:043e\:0432\:043d\:0430", 
        "\:0413\:0435\:043d\:0434\:0435\:0440\:041f\:0430\:0446\:0438\:0435\
\:043d\:0442\:0430" -> "\:043c\:0443\:0436\:0441\:043a\:043e\:0439", 
        "\:041c\:0435\:0441\:0442\:043e\:041e\:0441\:043c\:043e\:0442\:0440\
\:0430" -> "\:043d\:0430 \:0434\:043e\:043c\:0443", 
        "\:041a\:043e\:043b\:0432\:043e\:041f\:0430\:0446\:0438\:0435\:043d\
\:0442\:043e\:0432\:041e\:0431\:0441\:043b\:0443\:0436\:0417\:0430\:041f\:0435\
\:0440\:0438\:043e\:0434" -> 9557|>, <|
       "\:0418\:0434\:0412\:0440\:0430\:0447\:0430" -> 12, 
        "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\:0430" -> 
        "\:0423\:0447\:0430\:0441\:0442\:043e\:043a 17, \:043a\:0430\:0431\
\:0438\:0435\:043d\:0442 341, \:041c\:0438\:0445\:043e\:0432\:0438\:0447, \
\:0410\:043b\:0435\:043a\:0441\:0435\:0439, \:041f\:0430\:0432\:043b\:043e\
\:0432\:0438\:0447", 
        "\:0413\:0435\:043d\:0434\:0435\:0440\:041f\:0430\:0446\:0438\:0435\
\:043d\:0442\:0430" -> "\:043c\:0443\:0436\:0441\:043a\:043e\:0439", 
        "\:041c\:0435\:0441\:0442\:043e\:041e\:0441\:043c\:043e\:0442\:0440\
\:0430" -> "\:043d\:0430 \:0434\:043e\:043c\:0443", 
        "\:041a\:043e\:043b\:0432\:043e\:041f\:0430\:0446\:0438\:0435\:043d\
\:0442\:043e\:0432\:041e\:0431\:0441\:043b\:0443\:0436\:0417\:0430\:041f\:0435\
\:0440\:0438\:043e\:0434" -> 7194|>, <|
       "\:0418\:0434\:0412\:0440\:0430\:0447\:0430" -> 13, 
        "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\:0430" -> 
        "\:0423\:0447\:0430\:0441\:0442\:043e\:043a 18, \:043a\:0430\:0431\
\:0438\:0435\:043d\:0442 344, \
\:041d\:0435\:0441\:0442\:0435\:0440\:0443\:043a, \:042f\:043d\:0438\:043d\
\:0430, \:0412\:043b\:0430\:0434\:0438\:043c\:0438\:0440\:043e\:0432\:043d\
\:0430", "\:0413\:0435\:043d\:0434\:0435\:0440\:041f\:0430\:0446\:0438\:0435\
\:043d\:0442\:0430" -> "\:043c\:0443\:0436\:0441\:043a\:043e\:0439", 
        "\:041c\:0435\:0441\:0442\:043e\:041e\:0441\:043c\:043e\:0442\:0440\
\:0430" -> "\:043d\:0430 \:0434\:043e\:043c\:0443", 
        "\:041a\:043e\:043b\:0432\:043e\:041f\:0430\:0446\:0438\:0435\:043d\
\:0442\:043e\:0432\:041e\:0431\:0441\:043b\:0443\:0436\:0417\:0430\:041f\:0435\
\:0440\:0438\:043e\:0434" -> 7121|>, <|
       "\:0418\:0434\:0412\:0440\:0430\:0447\:0430" -> 14, 
        "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\:0430" -> 
        "\:0423\:0447\:0430\:0441\:0442\:043e\:043a 19, \:043a\:0430\:0431\
\:0438\:0435\:043d\:0442 344, \
\:041a\:043e\:0432\:0437\:043e\:043b\:043e\:0432\:0438\:0447, \:0410\:043b\
\:0438\:043d\:0430, \:0410\:043b\:0435\:043a\:0441\:0430\:043d\:0434\:0440\
\:043e\:0432\:043d\:0430", 
        "\:0413\:0435\:043d\:0434\:0435\:0440\:041f\:0430\:0446\:0438\:0435\
\:043d\:0442\:0430" -> "\:043c\:0443\:0436\:0441\:043a\:043e\:0439", 
        "\:041c\:0435\:0441\:0442\:043e\:041e\:0441\:043c\:043e\:0442\:0440\
\:0430" -> "\:043d\:0430 \:0434\:043e\:043c\:0443", 
        "\:041a\:043e\:043b\:0432\:043e\:041f\:0430\:0446\:0438\:0435\:043d\
\:0442\:043e\:0432\:041e\:0431\:0441\:043b\:0443\:0436\:0417\:0430\:041f\:0435\
\:0440\:0438\:043e\:0434" -> 7202|>}, "AllowEmbedding" -> True, 
     "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{
         All, "\:0418\:0434\:0412\:0440\:0430\:0447\:0430"} -> 
        1, {
         All, "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\
\:0430"} -> 1, {
         All, "\:0413\:0435\:043d\:0434\:0435\:0440\:041f\:0430\:0446\:0438\
\:0435\:043d\:0442\:0430"} -> 
        1, {All, 
          "\:041c\:0435\:0441\:0442\:043e\:041e\:0441\:043c\:043e\:0442\:0440\
\:0430"} -> 1, {
         All, "\:041a\:043e\:043b\:0432\:043e\:041f\:0430\:0446\:0438\:0435\
\:043d\:0442\:043e\:0432\:041e\:0431\:0441\:043b\:0443\:0436\:0417\:0430\:041f\
\:0435\:0440\:0438\:043e\:0434"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "\:0418\:0434\:0412\:0440\:0430\:0447\:0430" -> 
            TypeSystem`PackageScope`AtomShape[34], 
            "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\
\:0430" -> TypeSystem`PackageScope`AtomShape[560.], 
            "\:0413\:0435\:043d\:0434\:0435\:0440\:041f\:0430\:0446\:0438\
\:0435\:043d\:0442\:0430" -> TypeSystem`PackageScope`AtomShape[73.5], 
            "\:041c\:0435\:0441\:0442\:043e\:041e\:0441\:043c\:043e\:0442\
\:0440\:0430" -> TypeSystem`PackageScope`AtomShape[73.5], 
            "\:041a\:043e\:043b\:0432\:043e\:041f\:0430\:0446\:0438\:0435\
\:043d\:0442\:043e\:0432\:041e\:0431\:0441\:043b\:0443\:0436\:0417\:0430\:041f\
\:0435\:0440\:0438\:043e\:0434" -> TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 5, {All}]], 14, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "\:0418\:0434\:0412\:0440\:0430\:0447\:0430", 
         "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\:0430",
          "\:0413\:0435\:043d\:0434\:0435\:0440\:041f\:0430\:0446\:0438\:0435\
\:043d\:0442\:0430", 
         "\:041c\:0435\:0441\:0442\:043e\:041e\:0441\:043c\:043e\:0442\:0440\
\:0430", "\:041a\:043e\:043b\:0432\:043e\:041f\:0430\:0446\:0438\:0435\:043d\
\:0442\:043e\:0432\:041e\:0431\:0441\:043b\:0443\:0436\:0417\:0430\:041f\:0435\
\:0440\:0438\:043e\:0434"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          TypeSystem`Enumeration[
          "\:043c\:0443\:0436\:0441\:043a\:043e\:0439"]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["\:043d\:0430 \:0434\:043e\:043c\:0443"]], 
         TypeSystem`Atom[Integer]}], 14], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{
         All, "\:0418\:0434\:0412\:0440\:0430\:0447\:0430"} -> 
        1, {All, 
          "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\:0430\
"} -> 1, {
         All, "\:0413\:0435\:043d\:0434\:0435\:0440\:041f\:0430\:0446\:0438\
\:0435\:043d\:0442\:0430"} -> 
        1, {All, 
          "\:041c\:0435\:0441\:0442\:043e\:041e\:0441\:043c\:043e\:0442\:0440\
\:0430"} -> 1, {
         All, "\:041a\:043e\:043b\:0432\:043e\:041f\:0430\:0446\:0438\:0435\
\:043d\:0442\:043e\:0432\:041e\:0431\:0441\:043b\:0443\:0436\:0417\:0430\:041f\
\:0435\:0440\:0438\:043e\:0434"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "\:0418\:0434\:0412\:0440\:0430\:0447\:0430" -> 
            TypeSystem`PackageScope`AtomShape[34], 
            "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\
\:0430" -> TypeSystem`PackageScope`AtomShape[560.], 
            "\:0413\:0435\:043d\:0434\:0435\:0440\:041f\:0430\:0446\:0438\
\:0435\:043d\:0442\:0430" -> TypeSystem`PackageScope`AtomShape[73.5], 
            "\:041c\:0435\:0441\:0442\:043e\:041e\:0441\:043c\:043e\:0442\
\:0440\:0430" -> TypeSystem`PackageScope`AtomShape[73.5], 
            "\:041a\:043e\:043b\:0432\:043e\:041f\:0430\:0446\:0438\:0435\
\:043d\:0442\:043e\:0432\:041e\:0431\:0441\:043b\:0443\:0436\:0417\:0430\:041f\
\:0435\:0440\:0438\:043e\:0434" -> TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 5, {All}]], 14, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "\:0418\:0434\:0412\:0440\:0430\:0447\:0430", 
         "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\:0430",
          "\:0413\:0435\:043d\:0434\:0435\:0440\:041f\:0430\:0446\:0438\:0435\
\:043d\:0442\:0430", 
         "\:041c\:0435\:0441\:0442\:043e\:041e\:0441\:043c\:043e\:0442\:0440\
\:0430", "\:041a\:043e\:043b\:0432\:043e\:041f\:0430\:0446\:0438\:0435\:043d\
\:0442\:043e\:0432\:041e\:0431\:0441\:043b\:0443\:0436\:0417\:0430\:041f\:0435\
\:0440\:0438\:043e\:0434"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          TypeSystem`Enumeration[
          "\:043c\:0443\:0436\:0441\:043a\:043e\:0439"]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["\:043d\:0430 \:0434\:043e\:043c\:0443"]], 
         TypeSystem`Atom[Integer]}], 14], "Path" -> {}, "DisplayedRowCount" -> 
     14, "DisplayedColumnCount" -> 5, "DataRowCount" -> 14, "DataColumnCount" -> 
     5, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\:0418\:0434\:0412\:0440\:0430\:0447\:0430", 
                  Style[
                  "\:0418\:0434\:0412\:0440\:0430\:0447\:0430", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "\:0418\:0434\:0412\:0440\:0430\:0447\:0430"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "\:0418\:0434\:0412\:0440\:0430\:0447\:0430"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                 "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\
\:0430", 
                  Style[
                  "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\
\:0447\:0430", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\
\:0430\:0447\:0430"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\
\:0447\:0430"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                 "\:0413\:0435\:043d\:0434\:0435\:0440\:041f\:0430\:0446\:0438\
\:0435\:043d\:0442\:0430", 
                  Style[
                  "\:0413\:0435\:043d\:0434\:0435\:0440\:041f\:0430\:0446\
\:0438\:0435\:043d\:0442\:0430", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "\:0413\:0435\:043d\:0434\:0435\:0440\:041f\:0430\
\:0446\:0438\:0435\:043d\:0442\:0430"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "\:0413\:0435\:043d\:0434\:0435\:0440\:041f\:0430\:0446\
\:0438\:0435\:043d\:0442\:0430"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                 "\:041c\:0435\:0441\:0442\:043e\:041e\:0441\:043c\:043e\:0442\
\:0440\:0430", 
                  Style[
                  "\:041c\:0435\:0441\:0442\:043e\:041e\:0441\:043c\:043e\
\:0442\:0440\:0430", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "\:041c\:0435\:0441\:0442\:043e\:041e\:0441\:043c\
\:043e\:0442\:0440\:0430"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "\:041c\:0435\:0441\:0442\:043e\:041e\:0441\:043c\:043e\
\:0442\:0440\:0430"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                 "\:041a\:043e\:043b\:0432\:043e\:041f\:0430\:0446\:0438\:0435\
\:043d\:0442\:043e\:0432\:041e\:0431\:0441\:043b\:0443\:0436\:0417\:0430\:041f\
\:0435\:0440\:0438\:043e\:0434", 
                  Style[
                  "\:041a\:043e\:043b\:0432\:043e\:041f\:0430\:0446\:0438\
\:0435\:043d\:0442\:043e\:0432\:041e\:0431\:0441\:043b\:0443\:0436\:0417\:0430\
\:041f\:0435\:0440\:0438\:043e\:0434", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "\:041a\:043e\:043b\:0432\:043e\:041f\:0430\:0446\
\:0438\:0435\:043d\:0442\:043e\:0432\:041e\:0431\:0441\:043b\:0443\:0436\:0417\
\:0430\:041f\:0435\:0440\:0438\:043e\:0434"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "\:041a\:043e\:043b\:0432\:043e\:041f\:0430\:0446\:0438\
\:0435\:043d\:0442\:043e\:0432\:041e\:0431\:0441\:043b\:0443\:0436\:0417\:0430\
\:041f\:0435\:0440\:0438\:043e\:0434"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["\:0418\:0434\:0412\:0440\:0430\:0447\:0430"]}, "Item", 
                False], "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "\:0423\:0447\:0430\:0441\:0442\:043e\:043a 1, \:043a\:0430\
\:0431\:0438\:0435\:043d\:0442 309, \
\:041f\:0430\:0432\:043b\:043e\:0432\:0430, \:0412\:0438\:043a\:0442\:043e\
\:0440\:0438\:044f, \:0421\:0435\:0440\:0433\:0435\:0435\:0432\:043d\:0430", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key[
                 "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\
\:0430"]}, "Item", False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\:043c\:0443\:0436\:0441\:043a\:043e\:0439", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key[
                 "\:0413\:0435\:043d\:0434\:0435\:0440\:041f\:0430\:0446\:0438\
\:0435\:043d\:0442\:0430"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\:043d\:0430 \:0434\:043e\:043c\:0443", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key[
                 "\:041c\:0435\:0441\:0442\:043e\:041e\:0441\:043c\:043e\:0442\
\:0440\:0430"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4781"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key[
                 "\:041a\:043e\:043b\:0432\:043e\:041f\:0430\:0446\:0438\:0435\
\:043d\:0442\:043e\:0432\:041e\:0431\:0441\:043b\:0443\:0436\:0417\:0430\:041f\
\:0435\:0440\:0438\:043e\:0434"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["\:0418\:0434\:0412\:0440\:0430\:0447\:0430"]}, "Item", 
                False], "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "\:0423\:0447\:0430\:0441\:0442\:043e\:043a 2, \:043a\:0430\
\:0431\:0438\:0435\:043d\:0442 344, \
\:0411\:0435\:0437\:0441\:0438\:043b\:043a\:043e, \:0410\:043d\:0434\:0440\
\:0435\:0439, \:0412\:0438\:043a\:0442\:043e\:0440\:043e\:0432\:0438\:0447", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key[
                 "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\
\:0430"]}, "Item", False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\:043c\:0443\:0436\:0441\:043a\:043e\:0439", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key[
                 "\:0413\:0435\:043d\:0434\:0435\:0440\:041f\:0430\:0446\:0438\
\:0435\:043d\:0442\:0430"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\:043d\:0430 \:0434\:043e\:043c\:0443", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key[
                 "\:041c\:0435\:0441\:0442\:043e\:041e\:0441\:043c\:043e\:0442\
\:0440\:0430"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7269"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key[
                 "\:041a\:043e\:043b\:0432\:043e\:041f\:0430\:0446\:0438\:0435\
\:043d\:0442\:043e\:0432\:041e\:0431\:0441\:043b\:0443\:0436\:0417\:0430\:041f\
\:0435\:0440\:0438\:043e\:0434"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["\:0418\:0434\:0412\:0440\:0430\:0447\:0430"]}, "Item", 
                False], "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "\:0423\:0447\:0430\:0441\:0442\:043e\:043a 4, \:043a\:0430\
\:0431\:0438\:0435\:043d\:0442 307, \:0410\:0437\:0445\:0430\:0440\:0438, \
\:0410\:0445\:043c\:0430\:0434, \:041a\:0430\:0434\:0440\:0438 \:0421\:0430\
\:0444\:0444\:0430\:043d", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key[
                 "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\
\:0430"]}, "Item", False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\:043c\:0443\:0436\:0441\:043a\:043e\:0439", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key[
                 "\:0413\:0435\:043d\:0434\:0435\:0440\:041f\:0430\:0446\:0438\
\:0435\:043d\:0442\:0430"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\:043d\:0430 \:0434\:043e\:043c\:0443", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key[
                 "\:041c\:0435\:0441\:0442\:043e\:041e\:0441\:043c\:043e\:0442\
\:0440\:0430"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7296"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key[
                 "\:041a\:043e\:043b\:0432\:043e\:041f\:0430\:0446\:0438\:0435\
\:043d\:0442\:043e\:0432\:041e\:0431\:0441\:043b\:0443\:0436\:0417\:0430\:041f\
\:0435\:0440\:0438\:043e\:0434"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["\:0418\:0434\:0412\:0440\:0430\:0447\:0430"]}, "Item", 
                False], "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "\:0423\:0447\:0430\:0441\:0442\:043e\:043a 5, \:043a\:0430\
\:0431\:0438\:0435\:043d\:0442 321, \:0427\:0435\:0440\:043d\:044f\:043a, \
\:041b\:044e\:0434\:043c\:0438\:043b\:0430, \:0418\:0432\:0430\:043d\:043e\
\:0432\:043d\:0430", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key[
                 "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\
\:0430"]}, "Item", False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\:043c\:0443\:0436\:0441\:043a\:043e\:0439", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key[
                 "\:0413\:0435\:043d\:0434\:0435\:0440\:041f\:0430\:0446\:0438\
\:0435\:043d\:0442\:0430"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\:043d\:0430 \:0434\:043e\:043c\:0443", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key[
                 "\:041c\:0435\:0441\:0442\:043e\:041e\:0441\:043c\:043e\:0442\
\:0440\:0430"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7216"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key[
                 "\:041a\:043e\:043b\:0432\:043e\:041f\:0430\:0446\:0438\:0435\
\:043d\:0442\:043e\:0432\:041e\:0431\:0441\:043b\:0443\:0436\:0417\:0430\:041f\
\:0435\:0440\:0438\:043e\:0434"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["\:0418\:0434\:0412\:0440\:0430\:0447\:0430"]}, "Item", 
                False], "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "\:0423\:0447\:0430\:0441\:0442\:043e\:043a 6, \:043a\:0430\
\:0431\:0438\:0435\:043d\:0442 336, \
\:041a\:043b\:044e\:0441\:043e\:0432\:0430, \:041d\:0430\:0442\:0430\:043b\
\:0438\:044f, \:041d\:0438\:043a\:043e\:043b\:0430\:0435\:0432\:043d\:0430", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key[
                 "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\
\:0430"]}, "Item", False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\:043c\:0443\:0436\:0441\:043a\:043e\:0439", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key[
                 "\:0413\:0435\:043d\:0434\:0435\:0440\:041f\:0430\:0446\:0438\
\:0435\:043d\:0442\:0430"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\:043d\:0430 \:0434\:043e\:043c\:0443", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key[
                 "\:041c\:0435\:0441\:0442\:043e\:041e\:0441\:043c\:043e\:0442\
\:0440\:0430"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4763"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key[
                 "\:041a\:043e\:043b\:0432\:043e\:041f\:0430\:0446\:0438\:0435\
\:043d\:0442\:043e\:0432\:041e\:0431\:0441\:043b\:0443\:0436\:0417\:0430\:041f\
\:0435\:0440\:0438\:043e\:0434"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["\:0418\:0434\:0412\:0440\:0430\:0447\:0430"]}, "Item", 
                False], "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "\:0423\:0447\:0430\:0441\:0442\:043e\:043a 7, \:043a\:0430\
\:0431\:0438\:0435\:043d\:0442 319, \
\:0422\:043e\:043b\:043a\:0430\:043d\:0438\:0446\:0430, \:0412\:0438\:043a\
\:0442\:043e\:0440, \:0412\:0430\:0441\:0438\:043b\:044c\:0435\:0432\:0438\
\:0447", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key[
                 "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\
\:0430"]}, "Item", False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\:043c\:0443\:0436\:0441\:043a\:043e\:0439", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key[
                 "\:0413\:0435\:043d\:0434\:0435\:0440\:041f\:0430\:0446\:0438\
\:0435\:043d\:0442\:0430"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\:043d\:0430 \:0434\:043e\:043c\:0443", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key[
                 "\:041c\:0435\:0441\:0442\:043e\:041e\:0441\:043c\:043e\:0442\
\:0440\:0430"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7222"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key[
                 "\:041a\:043e\:043b\:0432\:043e\:041f\:0430\:0446\:0438\:0435\
\:043d\:0442\:043e\:0432\:041e\:0431\:0441\:043b\:0443\:0436\:0417\:0430\:041f\
\:0435\:0440\:0438\:043e\:0434"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["\:0418\:0434\:0412\:0440\:0430\:0447\:0430"]}, "Item", 
                False], "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "\:0423\:0447\:0430\:0441\:0442\:043e\:043a 9, \:043a\:0430\
\:0431\:0438\:0435\:043d\:0442 348, \
\:0422\:0435\:043c\:043f\:0435\:0440\:0430\:043c\:0435\:043d\:0442\:043e\:0432\
\:0430-\:0410\:043d\:0434\:0440\:0435\:044e\:043a, \:0412\:043b\:0430\:0434\
\:0430, \:042f\:0440\:043e\:0441\:043b\:0430\:0432\:043e\:0432\:043d\:0430", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key[
                 "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\
\:0430"]}, "Item", False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\:043c\:0443\:0436\:0441\:043a\:043e\:0439", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key[
                 "\:0413\:0435\:043d\:0434\:0435\:0440\:041f\:0430\:0446\:0438\
\:0435\:043d\:0442\:0430"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\:043d\:0430 \:0434\:043e\:043c\:0443", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key[
                 "\:041c\:0435\:0441\:0442\:043e\:041e\:0441\:043c\:043e\:0442\
\:0440\:0430"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4757"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key[
                 "\:041a\:043e\:043b\:0432\:043e\:041f\:0430\:0446\:0438\:0435\
\:043d\:0442\:043e\:0432\:041e\:0431\:0441\:043b\:0443\:0436\:0417\:0430\:041f\
\:0435\:0440\:0438\:043e\:0434"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["\:0418\:0434\:0412\:0440\:0430\:0447\:0430"]}, "Item", 
                False], "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "\:0423\:0447\:0430\:0441\:0442\:043e\:043a 13, \:043a\:0430\
\:0431\:0438\:0435\:043d\:0442 315, \:0415\:043b\:0430\:043a, \:042e\:043b\
\:0438\:044f, \:0412\:0430\:043b\:0435\:0440\:044c\:0435\:0432\:043d\:0430", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key[
                 "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\
\:0430"]}, "Item", False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\:043c\:0443\:0436\:0441\:043a\:043e\:0439", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key[
                 "\:0413\:0435\:043d\:0434\:0435\:0440\:041f\:0430\:0446\:0438\
\:0435\:043d\:0442\:0430"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\:043d\:0430 \:0434\:043e\:043c\:0443", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key[
                 "\:041c\:0435\:0441\:0442\:043e\:041e\:0441\:043c\:043e\:0442\
\:0440\:0430"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7176"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key[
                 "\:041a\:043e\:043b\:0432\:043e\:041f\:0430\:0446\:0438\:0435\
\:043d\:0442\:043e\:0432\:041e\:0431\:0441\:043b\:0443\:0436\:0417\:0430\:041f\
\:0435\:0440\:0438\:043e\:0434"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["\:0418\:0434\:0412\:0440\:0430\:0447\:0430"]}, "Item", 
                False], "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "\:0423\:0447\:0430\:0441\:0442\:043e\:043a 14, \:043a\:0430\
\:0431\:0438\:0435\:043d\:0442 313, \
\:041a\:0430\:0437\:0430\:043a\:0435\:0432\:0438\:0447, \:0412\:0430\:043b\
\:0435\:0440\:0438\:044f, \:0412\:0430\:0434\:0438\:043c\:043e\:0432\:043d\
\:0430", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key[
                 "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\
\:0430"]}, "Item", False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\:043c\:0443\:0436\:0441\:043a\:043e\:0439", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key[
                 "\:0413\:0435\:043d\:0434\:0435\:0440\:041f\:0430\:0446\:0438\
\:0435\:043d\:0442\:0430"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\:043d\:0430 \:0434\:043e\:043c\:0443", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key[
                 "\:041c\:0435\:0441\:0442\:043e\:041e\:0441\:043c\:043e\:0442\
\:0440\:0430"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7100"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key[
                 "\:041a\:043e\:043b\:0432\:043e\:041f\:0430\:0446\:0438\:0435\
\:043d\:0442\:043e\:0432\:041e\:0431\:0441\:043b\:0443\:0436\:0417\:0430\:041f\
\:0435\:0440\:0438\:043e\:0434"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["\:0418\:0434\:0412\:0440\:0430\:0447\:0430"]}, "Item", 
                False], "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "\:0423\:0447\:0430\:0441\:0442\:043e\:043a 15, \:043a\:0430\
\:0431\:0438\:0435\:043d\:0442 309, \:041a\:043e\:0437\:0435\:043b, \:0421\
\:0432\:0435\:0442\:043b\:0430\:043d\:0430, \:0410\:043d\:0434\:0440\:0435\
\:0435\:0432\:043d\:0430", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key[
                 "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\
\:0430"]}, "Item", False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\:043c\:0443\:0436\:0441\:043a\:043e\:0439", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key[
                 "\:0413\:0435\:043d\:0434\:0435\:0440\:041f\:0430\:0446\:0438\
\:0435\:043d\:0442\:0430"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\:043d\:0430 \:0434\:043e\:043c\:0443", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key[
                 "\:041c\:0435\:0441\:0442\:043e\:041e\:0441\:043c\:043e\:0442\
\:0440\:0430"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9498"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key[
                 "\:041a\:043e\:043b\:0432\:043e\:041f\:0430\:0446\:0438\:0435\
\:043d\:0442\:043e\:0432\:041e\:0431\:0441\:043b\:0443\:0436\:0417\:0430\:041f\
\:0435\:0440\:0438\:043e\:0434"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["11"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["\:0418\:0434\:0412\:0440\:0430\:0447\:0430"]}, "Item", 
                False], "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "\:0423\:0447\:0430\:0441\:0442\:043e\:043a 16, \:043a\:0430\
\:0431\:0438\:0435\:043d\:0442 311, \:0420\:0430\:043a, \:0412\:0430\:043b\
\:0435\:043d\:0442\:0438\:043d\:0430, \:0410\:043b\:0435\:043a\:0441\:0430\
\:043d\:0434\:0440\:043e\:0432\:043d\:0430", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key[
                 "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\
\:0430"]}, "Item", False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\:043c\:0443\:0436\:0441\:043a\:043e\:0439", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key[
                 "\:0413\:0435\:043d\:0434\:0435\:0440\:041f\:0430\:0446\:0438\
\:0435\:043d\:0442\:0430"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\:043d\:0430 \:0434\:043e\:043c\:0443", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key[
                 "\:041c\:0435\:0441\:0442\:043e\:041e\:0441\:043c\:043e\:0442\
\:0440\:0430"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9557"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key[
                 "\:041a\:043e\:043b\:0432\:043e\:041f\:0430\:0446\:0438\:0435\
\:043d\:0442\:043e\:0432\:041e\:0431\:0441\:043b\:0443\:0436\:0417\:0430\:041f\
\:0435\:0440\:0438\:043e\:0434"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["\:0418\:0434\:0412\:0440\:0430\:0447\:0430"]}, "Item", 
                False], "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "\:0423\:0447\:0430\:0441\:0442\:043e\:043a 17, \:043a\:0430\
\:0431\:0438\:0435\:043d\:0442 341, \
\:041c\:0438\:0445\:043e\:0432\:0438\:0447, \:0410\:043b\:0435\:043a\:0441\
\:0435\:0439, \:041f\:0430\:0432\:043b\:043e\:0432\:0438\:0447", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key[
                 "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\
\:0430"]}, "Item", False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\:043c\:0443\:0436\:0441\:043a\:043e\:0439", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key[
                 "\:0413\:0435\:043d\:0434\:0435\:0440\:041f\:0430\:0446\:0438\
\:0435\:043d\:0442\:0430"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\:043d\:0430 \:0434\:043e\:043c\:0443", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key[
                 "\:041c\:0435\:0441\:0442\:043e\:041e\:0441\:043c\:043e\:0442\
\:0440\:0430"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7194"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key[
                 "\:041a\:043e\:043b\:0432\:043e\:041f\:0430\:0446\:0438\:0435\
\:043d\:0442\:043e\:0432\:041e\:0431\:0441\:043b\:0443\:0436\:0417\:0430\:041f\
\:0435\:0440\:0438\:043e\:0434"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["13"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["\:0418\:0434\:0412\:0440\:0430\:0447\:0430"]}, "Item", 
                False], "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "\:0423\:0447\:0430\:0441\:0442\:043e\:043a 18, \:043a\:0430\
\:0431\:0438\:0435\:043d\:0442 344, \
\:041d\:0435\:0441\:0442\:0435\:0440\:0443\:043a, \:042f\:043d\:0438\:043d\
\:0430, \:0412\:043b\:0430\:0434\:0438\:043c\:0438\:0440\:043e\:0432\:043d\
\:0430", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key[
                 "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\
\:0430"]}, "Item", False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\:043c\:0443\:0436\:0441\:043a\:043e\:0439", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key[
                 "\:0413\:0435\:043d\:0434\:0435\:0440\:041f\:0430\:0446\:0438\
\:0435\:043d\:0442\:0430"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\:043d\:0430 \:0434\:043e\:043c\:0443", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key[
                 "\:041c\:0435\:0441\:0442\:043e\:041e\:0441\:043c\:043e\:0442\
\:0440\:0430"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7121"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key[
                 "\:041a\:043e\:043b\:0432\:043e\:041f\:0430\:0446\:0438\:0435\
\:043d\:0442\:043e\:0432\:041e\:0431\:0441\:043b\:0443\:0436\:0417\:0430\:041f\
\:0435\:0440\:0438\:043e\:0434"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["\:0418\:0434\:0412\:0440\:0430\:0447\:0430"]}, "Item", 
                False], "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "\:0423\:0447\:0430\:0441\:0442\:043e\:043a 19, \:043a\:0430\
\:0431\:0438\:0435\:043d\:0442 344, \
\:041a\:043e\:0432\:0437\:043e\:043b\:043e\:0432\:0438\:0447, \:0410\:043b\
\:0438\:043d\:0430, \:0410\:043b\:0435\:043a\:0441\:0430\:043d\:0434\:0440\
\:043e\:0432\:043d\:0430", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key[
                 "\:0414\:0430\:043d\:043d\:044b\:0435\:0412\:0440\:0430\:0447\
\:0430"]}, "Item", False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\:043c\:0443\:0436\:0441\:043a\:043e\:0439", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key[
                 "\:0413\:0435\:043d\:0434\:0435\:0440\:041f\:0430\:0446\:0438\
\:0435\:043d\:0442\:0430"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\:043d\:0430 \:0434\:043e\:043c\:0443", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key[
                 "\:041c\:0435\:0441\:0442\:043e\:041e\:0441\:043c\:043e\:0442\
\:0440\:0430"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7202"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key[
                 "\:041a\:043e\:043b\:0432\:043e\:041f\:0430\:0446\:0438\:0435\
\:043d\:0442\:043e\:0432\:041e\:0431\:0441\:043b\:0443\:0436\:0417\:0430\:041f\
\:0435\:0440\:0438\:043e\:0434"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1049., {208.1875, 213.8125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1049., {208.1875, 213.8125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8792955379766006`*^9, 3.879295559665979*^9}, {
   3.879295636071992*^9, 3.879295673772406*^9}, 3.879295877930781*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"e7e68a72-d173-475c-b7a7-c866d7c14dcb"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$21643$22248 = False, DynamicChart`click$21651$22248 = 
       False, DynamicChart`click$21655$22248 = False, 
       DynamicChart`click$21674$22248 = False, DynamicChart`click$21678$22248 = 
       False, DynamicChart`click$21697$22248 = False, 
       DynamicChart`click$21701$22248 = False, DynamicChart`click$21705$22248 = 
       False, DynamicChart`click$21709$22248 = False, 
       DynamicChart`click$21713$22248 = False, DynamicChart`click$21717$22248 = 
       False, DynamicChart`click$21721$22248 = False, 
       DynamicChart`click$21725$22248 = False}, {{
        RGBColor[0.5, 0.5, 1.], 
        EdgeForm[{
          GrayLevel[0], 
          Opacity[0.5]}], {{{}, {{
            RGBColor[0.237736, 0.340215, 0.575113], 
            EdgeForm[{
              GrayLevel[0], 
              Opacity[0.5]}], 
            TagBox[
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {2.8113022857654326`, 
                    3.141592653589793}]}, 
                    ImageSizeCache -> {{31.585786437626894`, 
                    181.41421356237308`}, {-51.08891766552899, \
-0.5857864376268864}}], "DelayedMouseEffectStyle"], StatusArea[#, 4781]& , 
                  TagBoxNote -> "4781"], 
                 StyleBox["4781", {}, StripOnInput -> False]], Annotation[#, 
                 Style[4781, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$21643$22248, 
                   FEPrivate`Not[DynamicChart`click$21643$22248]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               FEPrivate`If[
               DynamicChart`click$21643$22248, {{{1., 0.}, {0., 
                 1.}}, {-0.19727889963087777`, 0.032879108266953644`}}, {{1, 
                0}, {0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$21643$22248}]], 
             "DelayedClickEffect"]}, {
            RGBColor[0.2509985, 0.3441133333333333, 0.560978], 
            EdgeForm[{
              GrayLevel[0], 
              Opacity[0.5]}], 
            TagBox[
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {2.309131048845274, 
                    2.8113022857654326`}]}, 
                    ImageSizeCache -> {{39.531399276787795`, 
                    181.4142135623731}, {-112.13400398811814`, \
-0.5857864376268793}}], "DelayedMouseEffectStyle"], StatusArea[#, 7269]& , 
                  TagBoxNote -> "7269"], 
                 StyleBox["7269", {}, StripOnInput -> False]], Annotation[#, 
                 Style[7269, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$21651$22248, 
                   FEPrivate`Not[DynamicChart`click$21651$22248]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               FEPrivate`If[
               DynamicChart`click$21651$22248, {{{1., 0.}, {0., 
                 1.}}, {-0.16714155697586544`, 0.10983487575302997`}}, {{1, 
                0}, {0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$21651$22248}]], 
             "DelayedClickEffect"]}, {
            RGBColor[
            0.2608336666666667, 0.3969803333333333, 0.4426503333333333], 
            EdgeForm[{
              GrayLevel[0], 
              Opacity[0.5]}], 
            TagBox[
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.805094545258883, 
                    2.309131048845274}]}, 
                    ImageSizeCache -> {{79.64637482737889, 
                    181.4142135623731}, {-146.39780705416848`, \
-0.5857864376268935}}], "DelayedMouseEffectStyle"], StatusArea[#, 7296]& , 
                  TagBoxNote -> "7296"], 
                 StyleBox["7296", {}, StripOnInput -> False]], Annotation[#, 
                 Style[7296, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$21655$22248, 
                   FEPrivate`Not[DynamicChart`click$21655$22248]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               FEPrivate`If[
               DynamicChart`click$21655$22248, {{{1., 0.}, {0., 
                 1.}}, {-0.09347452067573164, 0.1768120866469321}}, {{1, 0}, {
                0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$21655$22248}]], 
             "DelayedClickEffect"]}, {
            RGBColor[0.277947, 0.45009699999999997`, 0.32815550000000004`], 
            EdgeForm[{
              GrayLevel[0], 
              Opacity[0.5]}], 
            TagBox[
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.3065847577205882`, 
                    1.805094545258883}]}, 
                    ImageSizeCache -> {{144.45820240105903`, 
                    219.80301043573172`}, {-150.41421356237308`, \
-0.5857864376268935}}], "DelayedMouseEffectStyle"], StatusArea[#, 7216]& , 
                  TagBoxNote -> "7216"], 
                 StyleBox["7216", {}, StripOnInput -> False]], Annotation[#, 
                 Style[7216, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$21674$22248, 
                   FEPrivate`Not[DynamicChart`click$21674$22248]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               FEPrivate`If[
               DynamicChart`click$21674$22248, {{{1., 0.}, {0., 1.}}, {
                 0.0029912235342724335`, 0.19997763020340054`}}, {{1, 0}, {0, 
                1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$21674$22248}]], 
             "DelayedClickEffect"]}, {
            RGBColor[
            0.33311066666666667`, 0.5032283333333333, 0.26154733333333335`], 
            EdgeForm[{
              GrayLevel[0], 
              Opacity[0.5]}], 
            TagBox[
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.9775379010070493, 
                    1.3065847577205882`}]}, 
                    ImageSizeCache -> {{178.5857864376269, 
                    263.5968601616727}, {-145.31312220728128`, \
-0.5857864376268935}}], "DelayedMouseEffectStyle"], StatusArea[#, 4763]& , 
                  TagBoxNote -> "4763"], 
                 StyleBox["4763", {}, StripOnInput -> False]], Annotation[#, 
                 Style[4763, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$21678$22248, 
                   FEPrivate`Not[DynamicChart`click$21678$22248]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               FEPrivate`If[
               DynamicChart`click$21678$22248, {{{1., 0.}, {0., 1.}}, {
                 0.0831441250365258, 0.1818984729785013}}, {{1, 0}, {0, 
                1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$21678$22248}]], 
             "DelayedClickEffect"]}, {
            RGBColor[0.45113933333333334`, 0.5750044999999999, 0.245566], 
            EdgeForm[{
              GrayLevel[0], 
              Opacity[0.5]}], 
            TagBox[
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.47861360976514744`, 
                    0.9775379010070493}]}, 
                    ImageSizeCache -> {{178.5857864376269, 
                    311.89645217513623`}, {-125.29535483506807`, \
-0.5857864376268793}}], "DelayedMouseEffectStyle"], StatusArea[#, 7222]& , 
                  TagBoxNote -> "7222"], 
                 StyleBox["7222", {}, StripOnInput -> False]], Annotation[#, 
                 Style[7222, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$21697$22248, 
                   FEPrivate`Not[DynamicChart`click$21697$22248]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               FEPrivate`If[
               DynamicChart`click$21697$22248, {{{1., 0.}, {0., 1.}}, {
                 0.1492912484543276, 0.13308690068879142`}}, {{1, 0}, {0, 
                1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$21697$22248}]], 
             "DelayedClickEffect"]}, {
            RGBColor[0.624866, 0.673302, 0.264296], 
            EdgeForm[{
              GrayLevel[0], 
              Opacity[0.5]}], 
            TagBox[
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.14998125675521568`, 
                    0.47861360976514744`}]}, 
                    ImageSizeCache -> {{178.5857864376269, 
                    326.76397373389807`}, {-71.11491818649016, \
-0.5857864376268793}}], "DelayedMouseEffectStyle"], StatusArea[#, 4757]& , 
                  TagBoxNote -> "4757"], 
                 StyleBox["4757", {}, StripOnInput -> False]], Annotation[#, 
                 Style[4757, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$21701$22248, 
                   FEPrivate`Not[DynamicChart`click$21701$22248]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               FEPrivate`If[
               DynamicChart`click$21701$22248, {{{1., 0.}, {0., 1.}}, {
                 0.1902027621975462, 0.061829679381537266`}}, {{1, 0}, {0, 
                1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$21701$22248}]], 
             "DelayedClickEffect"]}, {
            RGBColor[0.7816718333333333, 0.7507936666666666, 0.296931], 
            EdgeForm[{
              GrayLevel[0], 
              Opacity[0.5]}], 
            TagBox[
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.34576517275903074`, 
                    0.14998125675521568`}]}, 
                    ImageSizeCache -> {{178.5857864376269, 
                    328.4142135623731}, {-25.378894713716306`, 
                    49.23496309287171}}], "DelayedMouseEffectStyle"], 
                  StatusArea[#, 7176]& , TagBoxNote -> "7176"], 
                 StyleBox["7176", {}, StripOnInput -> False]], Annotation[#, 
                 Style[7176, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$21705$22248, 
                   FEPrivate`Not[DynamicChart`click$21705$22248]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               FEPrivate`If[
               DynamicChart`click$21705$22248, {{{1., 0.}, {0., 1.}}, {
                 0.1990424814675788, -0.019547137161961846`}}, {{1, 0}, {0, 
                1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$21705$22248}]], 
             "DelayedClickEffect"]}, {
            RGBColor[0.8562609999999999, 0.742794, 0.31908333333333333`], 
            EdgeForm[{
              GrayLevel[0], 
              Opacity[0.5]}], 
            TagBox[
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-0.8362612220275856, -0.34576517275903074`}]}, 
                    ImageSizeCache -> {{178.5857864376269, 
                    319.71422410546495`}, {-3.4142135623730923`, 
                    108.50915018405217`}}], "DelayedMouseEffectStyle"], 
                  StatusArea[#, 7100]& , TagBoxNote -> "7100"], 
                 StyleBox["7100", {}, StripOnInput -> False]], Annotation[#, 
                 Style[7100, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$21709$22248, 
                   FEPrivate`Not[DynamicChart`click$21709$22248]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               FEPrivate`If[
               DynamicChart`click$21709$22248, {{{1., 0.}, {0., 1.}}, {
                 0.16607530982990795`, -0.11144052882546851`}}, {{1, 0}, {0, 
                1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$21709$22248}]], 
             "DelayedClickEffect"]}, {
            RGBColor[0.8453409999999999, 0.6248695, 0.3151775], 
            EdgeForm[{
              GrayLevel[0], 
              Opacity[0.5]}], 
            TagBox[
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.4924205848378298`, -0.8362612220275856}]}, 
                    ImageSizeCache -> {{178.5857864376269, 
                    279.9398183740759}, {-3.414213562373078, 
                    145.96295199835578`}}], "DelayedMouseEffectStyle"], 
                  StatusArea[#, 9498]& , TagBoxNote -> "9498"], 
                 StyleBox["9498", {}, StripOnInput -> False]], Annotation[#, 
                 Style[9498, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$21713$22248, 
                   FEPrivate`Not[DynamicChart`click$21713$22248]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               FEPrivate`If[
               DynamicChart`click$21713$22248, {{{1., 0.}, {0., 1.}}, {
                 0.07907120513662858, -0.18370559196236028`}}, {{1, 0}, {0, 
                1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$21713$22248}]], 
             "DelayedClickEffect"]}, {
            RGBColor[0.7851613333333333, 0.4255956666666667, 0.279293], 
            EdgeForm[{
              GrayLevel[0], 
              Opacity[0.5]}], 
            TagBox[
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.152655900733545, -1.4924205848378298`}]}, 
                    ImageSizeCache -> {{97.79775391975188, 
                    192.92365589560245`}, {-3.414213562373078, 
                    146.4142135623731}}], "DelayedMouseEffectStyle"], 
                  StatusArea[#, 9557]& , TagBoxNote -> "9557"], 
                 StyleBox["9557", {}, StripOnInput -> False]], Annotation[#, 
                 Style[9557, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$21717$22248, 
                   FEPrivate`Not[DynamicChart`click$21717$22248]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               FEPrivate`If[
               DynamicChart`click$21717$22248, {{{1., 0.}, {0., 
                 1.}}, {-0.049818269419356055`, -0.19369599900891205`}}, {{1, 
                0}, {0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$21717$22248}]], 
             "DelayedClickEffect"]}, {
            RGBColor[0.72987, 0.239399, 0.230961], 
            EdgeForm[{
              GrayLevel[0], 
              Opacity[0.5]}], 
            TagBox[
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.6496458413586135`, -2.152655900733545}]}, 
                    ImageSizeCache -> {{49.01778630349037, 
                    181.4142135623731}, {-3.4142135623730923`, 
                    122.22420420601242`}}], "DelayedMouseEffectStyle"], 
                  StatusArea[#, 7194]& , TagBoxNote -> "7194"], 
                 StyleBox["7194", {}, StripOnInput -> False]], Annotation[#, 
                 Style[7194, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$21721$22248, 
                   FEPrivate`Not[DynamicChart`click$21721$22248]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               FEPrivate`If[
               DynamicChart`click$21721$22248, {{{1., 0.}, {0., 
                 1.}}, {-0.1476341196092719, -0.13492281766697287`}}, {{1, 
                0}, {0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$21721$22248}]], 
             "DelayedClickEffect"]}, {
            RGBColor[0.72987, 0.239399, 0.230961], 
            EdgeForm[{
              GrayLevel[0], 
              Opacity[0.5]}], 
            TagBox[
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -2.6496458413586135`}]}, 
                    ImageSizeCache -> {{31.585786437626894`, 
                    181.41421356237308`}, {-3.4142135623730923`, 
                    68.84859511244093}}], "DelayedMouseEffectStyle"], 
                  StatusArea[#, 7121]& , TagBoxNote -> "7121"], 
                 StyleBox["7121", {}, StripOnInput -> False]], Annotation[#, 
                 Style[7121, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$21725$22248, 
                   FEPrivate`Not[DynamicChart`click$21725$22248]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               FEPrivate`If[
               DynamicChart`click$21725$22248, {{{1., 0.}, {0., 
                 1.}}, {-0.19398015191760665`, -0.04870010946622444}}, {{1, 
                0}, {0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$21725$22248}]], 
             "DelayedClickEffect"]}}}, {}}, {}}, {{{
          TagBox[
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 4781]& , TagBoxNote -> "4781"], 
               
               StyleBox["4781", {}, StripOnInput -> False]], Annotation[#, 
               Style[4781, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$21643$22248, 
                 FEPrivate`Not[DynamicChart`click$21643$22248]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             FEPrivate`If[
             DynamicChart`click$21643$22248, {{{1., 0.}, {0., 
               1.}}, {-0.19727889963087777`, 0.032879108266953644`}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$21643$22248}]], 
           "DelayedClickEffect"], 
          TagBox[
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 7269]& , TagBoxNote -> "7269"], 
               
               StyleBox["7269", {}, StripOnInput -> False]], Annotation[#, 
               Style[7269, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$21651$22248, 
                 FEPrivate`Not[DynamicChart`click$21651$22248]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             FEPrivate`If[
             DynamicChart`click$21651$22248, {{{1., 0.}, {0., 
               1.}}, {-0.16714155697586544`, 0.10983487575302997`}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$21651$22248}]], 
           "DelayedClickEffect"], 
          TagBox[
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 7296]& , TagBoxNote -> "7296"], 
               
               StyleBox["7296", {}, StripOnInput -> False]], Annotation[#, 
               Style[7296, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$21655$22248, 
                 FEPrivate`Not[DynamicChart`click$21655$22248]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             FEPrivate`If[
             DynamicChart`click$21655$22248, {{{1., 0.}, {0., 
               1.}}, {-0.09347452067573164, 0.1768120866469321}}, {{1, 0}, {0,
               1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$21655$22248}]], 
           "DelayedClickEffect"], 
          TagBox[
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 7216]& , TagBoxNote -> "7216"], 
               
               StyleBox["7216", {}, StripOnInput -> False]], Annotation[#, 
               Style[7216, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$21674$22248, 
                 FEPrivate`Not[DynamicChart`click$21674$22248]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             FEPrivate`If[
             DynamicChart`click$21674$22248, {{{1., 0.}, {0., 1.}}, {
               0.0029912235342724335`, 0.19997763020340054`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$21674$22248}]], 
           "DelayedClickEffect"], 
          TagBox[
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 4763]& , TagBoxNote -> "4763"], 
               
               StyleBox["4763", {}, StripOnInput -> False]], Annotation[#, 
               Style[4763, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$21678$22248, 
                 FEPrivate`Not[DynamicChart`click$21678$22248]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             FEPrivate`If[
             DynamicChart`click$21678$22248, {{{1., 0.}, {0., 1.}}, {
               0.0831441250365258, 0.1818984729785013}}, {{1, 0}, {0, 1}}, {{
              1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$21678$22248}]], 
           "DelayedClickEffect"], 
          TagBox[
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 7222]& , TagBoxNote -> "7222"], 
               
               StyleBox["7222", {}, StripOnInput -> False]], Annotation[#, 
               Style[7222, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$21697$22248, 
                 FEPrivate`Not[DynamicChart`click$21697$22248]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             FEPrivate`If[
             DynamicChart`click$21697$22248, {{{1., 0.}, {0., 1.}}, {
               0.1492912484543276, 0.13308690068879142`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$21697$22248}]], 
           "DelayedClickEffect"], 
          TagBox[
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 4757]& , TagBoxNote -> "4757"], 
               
               StyleBox["4757", {}, StripOnInput -> False]], Annotation[#, 
               Style[4757, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$21701$22248, 
                 FEPrivate`Not[DynamicChart`click$21701$22248]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             FEPrivate`If[
             DynamicChart`click$21701$22248, {{{1., 0.}, {0., 1.}}, {
               0.1902027621975462, 0.061829679381537266`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$21701$22248}]], 
           "DelayedClickEffect"], 
          TagBox[
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 7176]& , TagBoxNote -> "7176"], 
               
               StyleBox["7176", {}, StripOnInput -> False]], Annotation[#, 
               Style[7176, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$21705$22248, 
                 FEPrivate`Not[DynamicChart`click$21705$22248]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             FEPrivate`If[
             DynamicChart`click$21705$22248, {{{1., 0.}, {0., 1.}}, {
               0.1990424814675788, -0.019547137161961846`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$21705$22248}]], 
           "DelayedClickEffect"], 
          TagBox[
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 7100]& , TagBoxNote -> "7100"], 
               
               StyleBox["7100", {}, StripOnInput -> False]], Annotation[#, 
               Style[7100, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$21709$22248, 
                 FEPrivate`Not[DynamicChart`click$21709$22248]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             FEPrivate`If[
             DynamicChart`click$21709$22248, {{{1., 0.}, {0., 1.}}, {
               0.16607530982990795`, -0.11144052882546851`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$21709$22248}]], 
           "DelayedClickEffect"], 
          TagBox[
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 9498]& , TagBoxNote -> "9498"], 
               
               StyleBox["9498", {}, StripOnInput -> False]], Annotation[#, 
               Style[9498, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$21713$22248, 
                 FEPrivate`Not[DynamicChart`click$21713$22248]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             FEPrivate`If[
             DynamicChart`click$21713$22248, {{{1., 0.}, {0., 1.}}, {
               0.07907120513662858, -0.18370559196236028`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$21713$22248}]], 
           "DelayedClickEffect"], 
          TagBox[
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 9557]& , TagBoxNote -> "9557"], 
               
               StyleBox["9557", {}, StripOnInput -> False]], Annotation[#, 
               Style[9557, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$21717$22248, 
                 FEPrivate`Not[DynamicChart`click$21717$22248]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             FEPrivate`If[
             DynamicChart`click$21717$22248, {{{1., 0.}, {0., 
               1.}}, {-0.049818269419356055`, -0.19369599900891205`}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$21717$22248}]], 
           "DelayedClickEffect"], 
          TagBox[
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 7194]& , TagBoxNote -> "7194"], 
               
               StyleBox["7194", {}, StripOnInput -> False]], Annotation[#, 
               Style[7194, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$21721$22248, 
                 FEPrivate`Not[DynamicChart`click$21721$22248]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             FEPrivate`If[
             DynamicChart`click$21721$22248, {{{1., 0.}, {0., 
               1.}}, {-0.1476341196092719, -0.13492281766697287`}}, {{1, 0}, {
              0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$21721$22248}]], 
           "DelayedClickEffect"], 
          TagBox[
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 7121]& , TagBoxNote -> "7121"], 
               
               StyleBox["7121", {}, StripOnInput -> False]], Annotation[#, 
               Style[7121, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$21725$22248, 
                 FEPrivate`Not[DynamicChart`click$21725$22248]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             FEPrivate`If[
             DynamicChart`click$21725$22248, {{{1., 0.}, {0., 
               1.}}, {-0.19398015191760665`, -0.04870010946622444}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$21725$22248}]], 
           "DelayedClickEffect"]}, {}}, {}}, {}, {}}, 
      DynamicModuleValues :> {}], {{}, {}}, {{{}, {}, {}, {}}, {}}}, 
    ContentSelectable -> False, DisplayFunction -> Identity, GridLinesStyle -> 
    Directive[
      GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
    PlotRangePadding -> Scaled[0.09166666666666669]], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\:0423\:0447\:0430\:0441\:0442\:043e\:043a 1, \:043a\:0430\:0431\
\:0438\:0435\:043d\:0442 309, \:041f\:0430\:0432\:043b\:043e\:0432\:0430, \
\:0412\:0438\:043a\:0442\:043e\:0440\:0438\:044f, \:0421\:0435\:0440\:0433\
\:0435\:0435\:0432\:043d\:0430\"", 
       "\"\:0423\:0447\:0430\:0441\:0442\:043e\:043a 2, \:043a\:0430\:0431\
\:0438\:0435\:043d\:0442 344, \
\:0411\:0435\:0437\:0441\:0438\:043b\:043a\:043e, \:0410\:043d\:0434\:0440\
\:0435\:0439, \:0412\:0438\:043a\:0442\:043e\:0440\:043e\:0432\:0438\:0447\"",
        "\"\:0423\:0447\:0430\:0441\:0442\:043e\:043a 4, \:043a\:0430\:0431\
\:0438\:0435\:043d\:0442 307, \:0410\:0437\:0445\:0430\:0440\:0438, \:0410\
\:0445\:043c\:0430\:0434, \:041a\:0430\:0434\:0440\:0438 \:0421\:0430\:0444\
\:0444\:0430\:043d\"", 
       "\"\:0423\:0447\:0430\:0441\:0442\:043e\:043a 5, \:043a\:0430\:0431\
\:0438\:0435\:043d\:0442 321, \:0427\:0435\:0440\:043d\:044f\:043a, \:041b\
\:044e\:0434\:043c\:0438\:043b\:0430, \:0418\:0432\:0430\:043d\:043e\:0432\
\:043d\:0430\"", 
       "\"\:0423\:0447\:0430\:0441\:0442\:043e\:043a 6, \:043a\:0430\:0431\
\:0438\:0435\:043d\:0442 336, \:041a\:043b\:044e\:0441\:043e\:0432\:0430, \
\:041d\:0430\:0442\:0430\:043b\:0438\:044f, \:041d\:0438\:043a\:043e\:043b\
\:0430\:0435\:0432\:043d\:0430\"", 
       "\"\:0423\:0447\:0430\:0441\:0442\:043e\:043a 7, \:043a\:0430\:0431\
\:0438\:0435\:043d\:0442 319, \
\:0422\:043e\:043b\:043a\:0430\:043d\:0438\:0446\:0430, \:0412\:0438\:043a\
\:0442\:043e\:0440, \:0412\:0430\:0441\:0438\:043b\:044c\:0435\:0432\:0438\
\:0447\"", 
       "\"\:0423\:0447\:0430\:0441\:0442\:043e\:043a 9, \:043a\:0430\:0431\
\:0438\:0435\:043d\:0442 348, \
\:0422\:0435\:043c\:043f\:0435\:0440\:0430\:043c\:0435\:043d\:0442\:043e\:0432\
\:0430-\:0410\:043d\:0434\:0440\:0435\:044e\:043a, \:0412\:043b\:0430\:0434\
\:0430, \:042f\:0440\:043e\:0441\:043b\:0430\:0432\:043e\:0432\:043d\:0430\"",
        "\"\:0423\:0447\:0430\:0441\:0442\:043e\:043a 13, \:043a\:0430\:0431\
\:0438\:0435\:043d\:0442 315, \:0415\:043b\:0430\:043a, \:042e\:043b\:0438\
\:044f, \:0412\:0430\:043b\:0435\:0440\:044c\:0435\:0432\:043d\:0430\"", 
       "\"\:0423\:0447\:0430\:0441\:0442\:043e\:043a 14, \:043a\:0430\:0431\
\:0438\:0435\:043d\:0442 313, \
\:041a\:0430\:0437\:0430\:043a\:0435\:0432\:0438\:0447, \:0412\:0430\:043b\
\:0435\:0440\:0438\:044f, \:0412\:0430\:0434\:0438\:043c\:043e\:0432\:043d\
\:0430\"", 
       "\"\:0423\:0447\:0430\:0441\:0442\:043e\:043a 15, \:043a\:0430\:0431\
\:0438\:0435\:043d\:0442 309, \:041a\:043e\:0437\:0435\:043b, \:0421\:0432\
\:0435\:0442\:043b\:0430\:043d\:0430, \:0410\:043d\:0434\:0440\:0435\:0435\
\:0432\:043d\:0430\"", 
       "\"\:0423\:0447\:0430\:0441\:0442\:043e\:043a 16, \:043a\:0430\:0431\
\:0438\:0435\:043d\:0442 311, \:0420\:0430\:043a, \:0412\:0430\:043b\:0435\
\:043d\:0442\:0438\:043d\:0430, \:0410\:043b\:0435\:043a\:0441\:0430\:043d\
\:0434\:0440\:043e\:0432\:043d\:0430\"", 
       "\"\:0423\:0447\:0430\:0441\:0442\:043e\:043a 17, \:043a\:0430\:0431\
\:0438\:0435\:043d\:0442 341, \:041c\:0438\:0445\:043e\:0432\:0438\:0447, \
\:0410\:043b\:0435\:043a\:0441\:0435\:0439, \:041f\:0430\:0432\:043b\:043e\
\:0432\:0438\:0447\"", 
       "\"\:0423\:0447\:0430\:0441\:0442\:043e\:043a 18, \:043a\:0430\:0431\
\:0438\:0435\:043d\:0442 344, \
\:041d\:0435\:0441\:0442\:0435\:0440\:0443\:043a, \:042f\:043d\:0438\:043d\
\:0430, \:0412\:043b\:0430\:0434\:0438\:043c\:0438\:0440\:043e\:0432\:043d\
\:0430\""}, "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.237736, 0.340215, 0.575113]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.2509985, 0.3441133333333333, 0.560978]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.2608336666666667, 0.3969803333333333, 
                    0.4426503333333333]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.277947, 0.45009699999999997`, 0.32815550000000004`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.33311066666666667`, 0.5032283333333333, 
                    0.26154733333333335`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.45113933333333334`, 0.5750044999999999, 0.245566]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.624866, 0.673302, 0.264296]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.7816718333333333, 0.7507936666666666, 0.296931]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.8562609999999999, 0.742794, 0.31908333333333333`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.8453409999999999, 0.6248695, 0.3151775]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.7851613333333333, 0.4255956666666667, 0.279293]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.72987, 0.239399, 0.230961]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #12}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.72987, 0.239399, 0.230961]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #13}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.237736, 0.340215, 0.575113]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> 
                    RGBColor[0.2509985, 0.3441133333333333, 0.560978]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.2608336666666667, 0.3969803333333333, 
                    0.4426503333333333]|>, "RGBColorSwatchTemplate"]}], "]"}],
                ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.277947, 0.45009699999999997`, 0.32815550000000004`]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.33311066666666667`, 0.5032283333333333, 
                    0.26154733333333335`]|>, "RGBColorSwatchTemplate"]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.45113933333333334`, 0.5750044999999999, 0.245566]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.624866, 0.673302, 0.264296]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.7816718333333333, 0.7507936666666666, 0.296931]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.8562609999999999, 0.742794, 0.31908333333333333`]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> 
                    RGBColor[0.8453409999999999, 0.6248695, 0.3151775]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.7851613333333333, 0.4255956666666667, 0.279293]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.72987, 0.239399, 0.230961]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.72987, 0.239399, 0.230961]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11, ",", #12, ",", #13}], 
             "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "None", ",", "None", ",", "None", ",", "None", ",", "None", 
                   ",", "None", ",", "None", ",", "None", ",", "None", ",", 
                   "None", ",", "None", ",", "None"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8792955379766006`*^9, 3.879295559665979*^9}, {
   3.879295636071992*^9, 3.879295673772406*^9}, 3.879295878543754*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"2923e34c-0df4-4194-bf76-f708adb89995"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["DatabaseDisconnect[ref]", "Subsection",
 CellChangeTimes->{{3.879250371965282*^9, 
  3.8792503739125633`*^9}},ExpressionUUID->"ae11378d-153d-4495-b890-\
25357a10f9d3"],

Cell["DatabaseDisconnect[ref] - \:043e\:0442\:043a\:043b\:044e\:0447\:0438\
\:0442\:044c\:0441\:044f \:043e\:0442 \:0431\:0430\:0437\:044b \:0434\:0430\
\:043d\:043d\:044b\:0445", "Text",
 CellChangeTimes->{{3.879250378658318*^9, 3.8792503914898663`*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"32f8e71a-3fe2-4a3e-b317-ae7046b2e064"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DatabaseDisconnect", "[", "gp$ref", "]"}]], "Input",
 CellChangeTimes->{{3.879250351737083*^9, 3.879250360753153*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->"In[32]:=",ExpressionUUID->"62214861-25f5-4d3e-835f-d42e55b9dbdb"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Success",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            FrameBox[
             StyleBox["\"\[Checkmark]\"", 
              Directive[
               RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
               25], StripOnInput -> False], ContentPadding -> False, 
             FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                 "\"Database disconnection was successful.\"", 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"DatabaseSuccess\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            FrameBox[
             StyleBox["\"\[Checkmark]\"", 
              Directive[
               RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
               25], StripOnInput -> False], ContentPadding -> False, 
             FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                 "\"Database disconnection was successful.\"", 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"DatabaseSuccess\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Success[
  "DatabaseSuccess", <|
   "MessageTemplate" :> MessageName[DatabaseReference, "disc"], 
    "MessageParameters" :> {}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.879250362461521*^9, 3.8792601735034113`*^9, 
  3.8792605623188543`*^9, 3.879266640182176*^9, 3.879295931745528*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"eebb6b2b-bc8a-4857-b2de-af03e6a7dd67"]
}, Open  ]],

Cell["\<\
\:041b\:0438\:0442\:0435\:0440\:0430\:0442\:0443\:0440\:0430:
- https://reference.wolfram.com/language/guide/WorkingWithRelationalDatabases.\
html
- https://reference.wolfram.com/language/tutorial/\
RelationalDatabasesQuickStart.html#2047181595\
\>", "Text",
 CellChangeTimes->{{3.8792498009530973`*^9, 3.87924980850401*^9}, {
  3.879260125655871*^9, 
  3.879260149135453*^9}},ExpressionUUID->"fb651875-2d25-4174-84f0-\
419dd5474acc"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Wolfram Alpha \:0432 \:0441\:0432\:043e\:0431\:043e\:0434\:043d\:043e\
\:0439 \:0444\:043e\:0440\:043c\:0435 \:043c\:0430\:0442\:0435\:043c\:0430\
\:0442\:0438\:0447\:0435\:0441\:043a\:0438\:0435 \:0443\:0440\:0430\:0432\
\:043d\:0435\:043d\:0438\:044f", "Subsection",
 CellChangeTimes->{{3.879301411687984*^9, 
  3.879301434900922*^9}},ExpressionUUID->"87d28077-30c9-4cc0-b218-\
23c552179387"],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "plot sin(x) from -3pi to pi/2", 
   Typeset`newq$$ = "plot sin(x) from -3pi to pi/2", Typeset`chosen$$ = 
   "Plot[Sin[x], {x, -3*Pi, Pi/2}]", Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{11., {4., 7.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{11., {4., 7.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[Typeset`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "plot sin(x) from -3pi to pi/2", 
                  Defer[
                   Plot[
                    Sin[$CellContext`x], {$CellContext`x, (-3) Pi, Pi/2}]], 
                  "Fast parse"]; Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{"Plot", "[", 
                  RowBox[{
                   RowBox[{"Sin", "[", "x", "]"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{
                    RowBox[{"-", "3"}], "*", "Pi"}], ",", " ", 
                    RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{"Plot", "[", 
                  RowBox[{
                   RowBox[{"Sin", "[", "x", "]"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{
                    RowBox[{"-", "3"}], "*", "Pi"}], ",", " ", 
                    RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{
                    RowBox[{"-", "3"}], "*", "Pi"}], ",", " ", 
                    RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}]], "Input"], 
                  All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], "MouseExited" :> 
        FEPrivate`Set[Typeset`show$$, False], Method -> "Preemptive", 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
         False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  Typeset`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "plot sin(x) from -3pi to pi/2", 
                    Defer[
                    Plot[
                    Sin[$CellContext`x], {$CellContext`x, (-3) Pi, Pi/2}]], 
                    "Fast parse"]; Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{
                    RowBox[{"-", "3"}], "*", "Pi"}], ",", " ", 
                    RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{
                    RowBox[{"-", "3"}], "*", "Pi"}], ",", " ", 
                    RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{
                    RowBox[{"-", "3"}], "*", "Pi"}], ",", " ", 
                    RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}]], "Input"], 
                    All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], 
            "MouseExited" :> FEPrivate`Set[Typeset`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[1]:=",ExpressionUUID->"2b3bb3c5-b732-4507-9a15-655853c79c04"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$6544#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{(-3) Pi, Rational[1, 2] Pi}, {-0.9999999462403731, 
     0.9999999999999748}}, {{-9.42477796076938, 
    1.5707963267948966`}, {-0.9999999462403731, 0.9999999999999748}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.879301220773405*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"19d4454c-f26a-42a2-8eec-709227b72d2f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "simplify(cos(x)^2+sin(x)^2)", 
   Typeset`newq$$ = "simplify(cos(x)^2+sin(x)^2)", Typeset`chosen$$ = 
   "Simplify[Cos[x]^2 + Sin[x]^2]", Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{11., {4., 7.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{11., {4., 7.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[Typeset`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "simplify(cos(x)^2+sin(x)^2)", 
                  Defer[
                   Simplify[Cos[$CellContext`x]^2 + Sin[$CellContext`x]^2]], 
                  "Fast parse"]; Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{"Simplify", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Cos", "[", "x", "]"}], "^", "2"}], " ", "+", " ", 
                   RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], "^", "2"}]}], "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{"Simplify", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Cos", "[", "x", "]"}], "^", "2"}], " ", "+", " ", 
                   RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], "^", "2"}]}], "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{"Simplify", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", "x", "]"}], "^", "2"}], " ", "+", " ", 
                    RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], "^", "2"}]}], "]"}]], 
                   "Input"], All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], "MouseExited" :> 
        FEPrivate`Set[Typeset`show$$, False], Method -> "Preemptive", 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
         False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  Typeset`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "simplify(cos(x)^2+sin(x)^2)", 
                    Defer[
                    Simplify[Cos[$CellContext`x]^2 + Sin[$CellContext`x]^2]], 
                    "Fast parse"]; Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"Simplify", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", "x", "]"}], "^", "2"}], " ", "+", " ", 
                    RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], "^", "2"}]}], "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"Simplify", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", "x", "]"}], "^", "2"}], " ", "+", " ", 
                    RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], "^", "2"}]}], "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"Simplify", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", "x", "]"}], "^", "2"}], " ", "+", " ", 
                    RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], "^", "2"}]}], "]"}]], 
                    "Input"], All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], 
            "MouseExited" :> FEPrivate`Set[Typeset`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[2]:=",ExpressionUUID->"aa7ea2b6-ba31-4d32-877a-7b9fce7f0ec7"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.879301291400444*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"ad397daa-7ee1-47cf-ac31-c2c2ed7d4c07"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Wolfram Alpha \:043e\:0431 \:0445\:0438\:043c\:0438\:0447\:0435\:0441\
\:043a\:0438\:0445 \:044d\:043b\:0435\:043c\:0435\:043d\:0442\:0430", \
"Subsection",
 CellChangeTimes->{{3.879301442843082*^9, 3.879301459401141*^9}, {
  3.879301503055029*^9, 
  3.879301507753387*^9}},ExpressionUUID->"c33d0616-3de2-460e-b5f0-\
f3c7c8ffb323"],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "oxygen", Typeset`opts$$ = {
   AppearanceElements -> {
     "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "Fast parse", "Fast parse", 1, 0, "Input", 
        "Entity[\"Element\", \"Oxygen\"]"}, "ExtrusionOpen" -> True, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {
   "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
    
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Entity[\"Element\", \"Oxygen\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               TemplateBox[{
                 TagBox[
                  TagBox["\"oxygen\"", 
                   $CellContext`TagBoxWrapper[
                   "Entity" -> {ElementData, "Oxygen"}]], Identity], "\"  \"", 
                 StyleBox[
                  
                  RowBox[{
                   "\"(\"", "\[NoBreak]", "\"chemical element\"", 
                    "\[NoBreak]", "\")\""}], {
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}, "RowDefault"], LineIndent -> 0], TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Periodic table location", "scanner" -> "Data", "id" -> 
     "PeriodicTableLocation:ElementData", "position" -> "200", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"ElementData"}], "\n  "}], 
       XMLElement["datasources", {}, {"\n   ", 
         XMLElement["datasource", {}, {"WebElements"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            GraphicsBox[{{
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.5098039215686274, 0.8745098039215686, 
                  0.5568627450980392]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{0.5, 9.55}, {1.5, 10.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"H\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "H"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["1", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {1, 10}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9019607843137255, 0.8705882352941177, 
                  0.7647058823529411]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{17.5, 9.55}, {18.5, 10.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"He\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "He"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["2", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {18, 10}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.8509803921568627, 0.44705882352941173`, 
                  0.25098039215686274`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{0.5, 8.55}, {1.5, 9.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Li\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Li"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["3", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {1, 9}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9882352941176471, 0.6627450980392157, 
                  0.3529411764705882]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{1.5, 8.55}, {2.5, 9.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Be\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Be"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["4", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {2, 9}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.5490196078431373, 0.8117647058823529, 
                  0.9490196078431372]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{12.5, 8.55}, {13.5, 9.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"B\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "B"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["5", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {13, 9}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.32156862745098036`, 0.6352941176470588, 
                  0.796078431372549]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{13.5, 8.55}, {14.5, 9.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"C\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "C"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["6", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {14, 9}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.32156862745098036`, 0.6352941176470588, 
                  0.796078431372549]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{14.5, 8.55}, {15.5, 9.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"N\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "N"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["7", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {15, 9}, {0, 0}]}, {
               FaceForm[
                RGBColor[
                0.32156862745098036`, 0.6352941176470588, 0.796078431372549]], 
               EdgeForm[
                GrayLevel[1]], 
               EdgeForm[{
                 AbsoluteThickness[1], 
                 RGBColor[
                 0.22509803921568627`, 0.4447058823529412, 
                  0.5572549019607843]}], 
               RectangleBox[
                Offset[{1, 1}, {15.5, 8.55}], 
                Offset[{-1, -1}, {16.5, 9.55}]], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"O\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "O"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["8", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                16, 9}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.32156862745098036`, 0.6352941176470588, 
                  0.796078431372549]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{16.5, 8.55}, {17.5, 9.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"F\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "F"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["9", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {17, 9}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9019607843137255, 0.8705882352941177, 
                  0.7647058823529411]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{17.5, 8.55}, {18.5, 9.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Ne\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Ne"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["10", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {18, 9}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.8509803921568627, 0.44705882352941173`, 
                  0.25098039215686274`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{0.5, 7.55}, {1.5, 8.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Na\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Na"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["11", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {1, 8}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9882352941176471, 0.6627450980392157, 
                  0.3529411764705882]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{1.5, 7.55}, {2.5, 8.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Mg\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Mg"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["12", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {2, 8}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9882352941176471, 0.6235294117647059, 
                  0.4549019607843137]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{12.5, 7.55}, {13.5, 8.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Al\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Al"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["13", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {13, 8}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.5490196078431373, 0.8117647058823529, 
                  0.9490196078431372]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{13.5, 7.55}, {14.5, 8.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Si\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Si"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["14", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {14, 8}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.32156862745098036`, 0.6352941176470588, 
                  0.796078431372549]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{14.5, 7.55}, {15.5, 8.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"P\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "P"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["15", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {15, 8}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.32156862745098036`, 0.6352941176470588, 
                  0.796078431372549]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{15.5, 7.55}, {16.5, 8.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"S\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "S"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["16", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {16, 8}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.32156862745098036`, 0.6352941176470588, 
                  0.796078431372549]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{16.5, 7.55}, {17.5, 8.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Cl\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Cl"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["17", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {17, 8}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9019607843137255, 0.8705882352941177, 
                  0.7647058823529411]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{17.5, 7.55}, {18.5, 8.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Ar\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Ar"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["18", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {18, 8}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.8509803921568627, 0.44705882352941173`, 
                  0.25098039215686274`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{0.5, 6.55}, {1.5, 7.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"K\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "K"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["19", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {1, 7}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9882352941176471, 0.6627450980392157, 
                  0.3529411764705882]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{1.5, 6.55}, {2.5, 7.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Ca\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Ca"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["20", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {2, 7}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{2.5, 6.55}, {3.5, 7.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Sc\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Sc"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["21", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {3, 7}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{3.5, 6.55}, {4.5, 7.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Ti\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Ti"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["22", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {4, 7}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{4.5, 6.55}, {5.5, 7.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"V\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "V"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["23", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {5, 7}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{5.5, 6.55}, {6.5, 7.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Cr\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Cr"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["24", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {6, 7}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{6.5, 6.55}, {7.5, 7.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Mn\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Mn"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["25", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {7, 7}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{7.5, 6.55}, {8.5, 7.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Fe\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Fe"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["26", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {8, 7}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{8.5, 6.55}, {9.5, 7.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Co\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Co"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["27", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {9, 7}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{9.5, 6.55}, {10.5, 7.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Ni\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Ni"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["28", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {10, 7}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{10.5, 6.55}, {11.5, 7.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Cu\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Cu"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["29", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {11, 7}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{11.5, 6.55}, {12.5, 7.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Zn\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Zn"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["30", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {12, 7}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9882352941176471, 0.6235294117647059, 
                  0.4549019607843137]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{12.5, 6.55}, {13.5, 7.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Ga\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Ga"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["31", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {13, 7}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.5490196078431373, 0.8117647058823529, 
                  0.9490196078431372]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{13.5, 6.55}, {14.5, 7.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Ge\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Ge"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["32", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {14, 7}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.5490196078431373, 0.8117647058823529, 
                  0.9490196078431372]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{14.5, 6.55}, {15.5, 7.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"As\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "As"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["33", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {15, 7}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.32156862745098036`, 0.6352941176470588, 
                  0.796078431372549]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{15.5, 6.55}, {16.5, 7.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Se\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Se"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["34", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {16, 7}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.32156862745098036`, 0.6352941176470588, 
                  0.796078431372549]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{16.5, 6.55}, {17.5, 7.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Br\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Br"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["35", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {17, 7}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9019607843137255, 0.8705882352941177, 
                  0.7647058823529411]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{17.5, 6.55}, {18.5, 7.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Kr\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Kr"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["36", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {18, 7}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.8509803921568627, 0.44705882352941173`, 
                  0.25098039215686274`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{0.5, 5.55}, {1.5, 6.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Rb\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Rb"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["37", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {1, 6}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9882352941176471, 0.6627450980392157, 
                  0.3529411764705882]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{1.5, 5.55}, {2.5, 6.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Sr\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Sr"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["38", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {2, 6}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{2.5, 5.55}, {3.5, 6.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Y\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Y"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["39", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {3, 6}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{3.5, 5.55}, {4.5, 6.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Zr\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Zr"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["40", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {4, 6}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{4.5, 5.55}, {5.5, 6.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Nb\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Nb"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["41", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {5, 6}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{5.5, 5.55}, {6.5, 6.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Mo\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Mo"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["42", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {6, 6}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{6.5, 5.55}, {7.5, 6.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Tc\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Tc"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["43", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {7, 6}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{7.5, 5.55}, {8.5, 6.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Ru\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Ru"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["44", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {8, 6}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{8.5, 5.55}, {9.5, 6.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Rh\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Rh"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["45", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {9, 6}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{9.5, 5.55}, {10.5, 6.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Pd\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Pd"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["46", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {10, 6}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{10.5, 5.55}, {11.5, 6.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Ag\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Ag"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["47", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {11, 6}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{11.5, 5.55}, {12.5, 6.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Cd\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Cd"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["48", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {12, 6}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9882352941176471, 0.6235294117647059, 
                  0.4549019607843137]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{12.5, 5.55}, {13.5, 6.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"In\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "In"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["49", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {13, 6}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9882352941176471, 0.6235294117647059, 
                  0.4549019607843137]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{13.5, 5.55}, {14.5, 6.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Sn\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Sn"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["50", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {14, 6}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.5490196078431373, 0.8117647058823529, 
                  0.9490196078431372]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{14.5, 5.55}, {15.5, 6.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Sb\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Sb"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["51", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {15, 6}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.5490196078431373, 0.8117647058823529, 
                  0.9490196078431372]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{15.5, 5.55}, {16.5, 6.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Te\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Te"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["52", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {16, 6}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.32156862745098036`, 0.6352941176470588, 
                  0.796078431372549]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{16.5, 5.55}, {17.5, 6.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"I\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "I"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["53", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {17, 6}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9019607843137255, 0.8705882352941177, 
                  0.7647058823529411]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{17.5, 5.55}, {18.5, 6.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Xe\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Xe"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["54", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {18, 6}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.8509803921568627, 0.44705882352941173`, 
                  0.25098039215686274`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{0.5, 4.55}, {1.5, 5.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Cs\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Cs"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["55", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {1, 5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9882352941176471, 0.6627450980392157, 
                  0.3529411764705882]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{1.5, 4.55}, {2.5, 5.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Ba\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Ba"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["56", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {2, 5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{3.5, 4.55}, {4.5, 5.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Hf\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Hf"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["72", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {4, 5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{4.5, 4.55}, {5.5, 5.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Ta\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Ta"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["73", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {5, 5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{5.5, 4.55}, {6.5, 5.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"W\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "W"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["74", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {6, 5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{6.5, 4.55}, {7.5, 5.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Re\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Re"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["75", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {7, 5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{7.5, 4.55}, {8.5, 5.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Os\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Os"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["76", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {8, 5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{8.5, 4.55}, {9.5, 5.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Ir\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Ir"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["77", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {9, 5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{9.5, 4.55}, {10.5, 5.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Pt\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Pt"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["78", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {10, 5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{10.5, 4.55}, {11.5, 5.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Au\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Au"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["79", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {11, 5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{11.5, 4.55}, {12.5, 5.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Hg\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Hg"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["80", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {12, 5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9882352941176471, 0.6235294117647059, 
                  0.4549019607843137]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{12.5, 4.55}, {13.5, 5.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Tl\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Tl"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["81", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {13, 5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9882352941176471, 0.6235294117647059, 
                  0.4549019607843137]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{13.5, 4.55}, {14.5, 5.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Pb\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Pb"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["82", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {14, 5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9882352941176471, 0.6235294117647059, 
                  0.4549019607843137]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{14.5, 4.55}, {15.5, 5.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Bi\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Bi"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["83", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {15, 5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.5490196078431373, 0.8117647058823529, 
                  0.9490196078431372]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{15.5, 4.55}, {16.5, 5.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Po\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Po"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["84", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {16, 5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.32156862745098036`, 0.6352941176470588, 
                  0.796078431372549]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{16.5, 4.55}, {17.5, 5.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"At\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "At"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["85", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {17, 5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9019607843137255, 0.8705882352941177, 
                  0.7647058823529411]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{17.5, 4.55}, {18.5, 5.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Rn\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Rn"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["86", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {18, 5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.8509803921568627, 0.44705882352941173`, 
                  0.25098039215686274`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{0.5, 3.55}, {1.5, 4.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Fr\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Fr"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["87", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {1, 4}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9882352941176471, 0.6627450980392157, 
                  0.3529411764705882]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{1.5, 3.55}, {2.5, 4.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Ra\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Ra"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["88", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {2, 4}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{3.5, 3.55}, {4.5, 4.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Rf\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Rf"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["104", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {4, 4}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{4.5, 3.55}, {5.5, 4.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Db\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Db"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["105", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {5, 4}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{5.5, 3.55}, {6.5, 4.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Sg\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Sg"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["106", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {6, 4}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{6.5, 3.55}, {7.5, 4.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Bh\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Bh"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["107", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {7, 4}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{7.5, 3.55}, {8.5, 4.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Hs\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Hs"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["108", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {8, 4}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{8.5, 3.55}, {9.5, 4.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Mt\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Mt"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["109", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {9, 4}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{9.5, 3.55}, {10.5, 4.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Ds\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Ds"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["110", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {10, 4}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{10.5, 3.55}, {11.5, 4.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Rg\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Rg"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["111", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {11, 4}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{11.5, 3.55}, {12.5, 4.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Cn\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Cn"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["112", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {12, 4}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9882352941176471, 0.6235294117647059, 
                  0.4549019607843137]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{12.5, 3.55}, {13.5, 4.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Nh\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Nh"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["113", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {13, 4}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9882352941176471, 0.6235294117647059, 
                  0.4549019607843137]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{13.5, 3.55}, {14.5, 4.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Fl\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Fl"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["114", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {14, 4}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9882352941176471, 0.6235294117647059, 
                  0.4549019607843137]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{14.5, 3.55}, {15.5, 4.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Mc\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Mc"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["115", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {15, 4}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9882352941176471, 0.6235294117647059, 
                  0.4549019607843137]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{15.5, 3.55}, {16.5, 4.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Lv\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Lv"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["116", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {16, 4}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.32156862745098036`, 0.6352941176470588, 
                  0.796078431372549]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{16.5, 3.55}, {17.5, 4.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Ts\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Ts"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["117", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {17, 4}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9019607843137255, 0.8705882352941177, 
                  0.7647058823529411]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{17.5, 3.55}, {18.5, 4.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Og\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Og"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["118", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {18, 4}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9098039215686274, 0.8196078431372549, 
                  0.4627450980392157]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{2.5, 2.05}, {3.5, 3.05}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"La\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "La"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["57", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {3, 2.5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9098039215686274, 0.8196078431372549, 
                  0.4627450980392157]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{3.5, 2.05}, {4.5, 3.05}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Ce\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Ce"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["58", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {4, 2.5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9098039215686274, 0.8196078431372549, 
                  0.4627450980392157]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{4.5, 2.05}, {5.5, 3.05}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Pr\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Pr"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["59", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {5, 2.5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9098039215686274, 0.8196078431372549, 
                  0.4627450980392157]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{5.5, 2.05}, {6.5, 3.05}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Nd\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Nd"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["60", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {6, 2.5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9098039215686274, 0.8196078431372549, 
                  0.4627450980392157]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{6.5, 2.05}, {7.5, 3.05}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Pm\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Pm"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["61", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {7, 2.5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9098039215686274, 0.8196078431372549, 
                  0.4627450980392157]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{7.5, 2.05}, {8.5, 3.05}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Sm\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Sm"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["62", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {8, 2.5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9098039215686274, 0.8196078431372549, 
                  0.4627450980392157]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{8.5, 2.05}, {9.5, 3.05}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Eu\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Eu"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["63", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {9, 2.5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9098039215686274, 0.8196078431372549, 
                  0.4627450980392157]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{9.5, 2.05}, {10.5, 3.05}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Gd\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Gd"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["64", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {10, 2.5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9098039215686274, 0.8196078431372549, 
                  0.4627450980392157]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{10.5, 2.05}, {11.5, 3.05}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Tb\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Tb"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["65", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {11, 2.5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9098039215686274, 0.8196078431372549, 
                  0.4627450980392157]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{11.5, 2.05}, {12.5, 3.05}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Dy\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Dy"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["66", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {12, 2.5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9098039215686274, 0.8196078431372549, 
                  0.4627450980392157]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{12.5, 2.05}, {13.5, 3.05}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Ho\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Ho"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["67", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {13, 2.5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9098039215686274, 0.8196078431372549, 
                  0.4627450980392157]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{13.5, 2.05}, {14.5, 3.05}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Er\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Er"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["68", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {14, 2.5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9098039215686274, 0.8196078431372549, 
                  0.4627450980392157]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{14.5, 2.05}, {15.5, 3.05}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Tm\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Tm"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["69", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {15, 2.5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9098039215686274, 0.8196078431372549, 
                  0.4627450980392157]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{15.5, 2.05}, {16.5, 3.05}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Yb\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Yb"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["70", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {16, 2.5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9098039215686274, 0.8196078431372549, 
                  0.4627450980392157]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{16.5, 2.05}, {17.5, 3.05}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Lu\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Lu"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["71", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {17, 2.5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.8588235294117647, 0.796078431372549, 0.5333333333333333]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{2.5, 1.05}, {3.5, 2.05}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Ac\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Ac"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["89", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {3, 1.5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.8588235294117647, 0.796078431372549, 0.5333333333333333]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{3.5, 1.05}, {4.5, 2.05}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Th\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Th"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["90", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {4, 1.5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.8588235294117647, 0.796078431372549, 0.5333333333333333]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{4.5, 1.05}, {5.5, 2.05}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Pa\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Pa"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["91", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {5, 1.5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.8588235294117647, 0.796078431372549, 0.5333333333333333]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{5.5, 1.05}, {6.5, 2.05}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"U\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "U"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["92", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {6, 1.5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.8588235294117647, 0.796078431372549, 0.5333333333333333]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{6.5, 1.05}, {7.5, 2.05}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Np\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Np"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["93", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {7, 1.5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.8588235294117647, 0.796078431372549, 0.5333333333333333]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{7.5, 1.05}, {8.5, 2.05}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Pu\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Pu"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["94", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {8, 1.5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.8588235294117647, 0.796078431372549, 0.5333333333333333]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{8.5, 1.05}, {9.5, 2.05}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Am\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Am"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["95", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {9, 1.5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.8588235294117647, 0.796078431372549, 0.5333333333333333]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{9.5, 1.05}, {10.5, 2.05}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Cm\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Cm"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["96", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {10, 1.5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.8588235294117647, 0.796078431372549, 0.5333333333333333]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{10.5, 1.05}, {11.5, 2.05}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Bk\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Bk"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["97", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {11, 1.5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.8588235294117647, 0.796078431372549, 0.5333333333333333]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{11.5, 1.05}, {12.5, 2.05}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Cf\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Cf"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["98", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {12, 1.5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.8588235294117647, 0.796078431372549, 0.5333333333333333]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{12.5, 1.05}, {13.5, 2.05}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Es\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Es"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["99", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {13, 1.5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.8588235294117647, 0.796078431372549, 0.5333333333333333]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{13.5, 1.05}, {14.5, 2.05}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Fm\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Fm"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["100", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {14, 1.5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.8588235294117647, 0.796078431372549, 0.5333333333333333]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{14.5, 1.05}, {15.5, 2.05}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Md\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Md"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["101", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {15, 1.5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.8588235294117647, 0.796078431372549, 0.5333333333333333]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{15.5, 1.05}, {16.5, 2.05}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"No\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "No"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["102", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {16, 1.5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.8588235294117647, 0.796078431372549, 0.5333333333333333]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{16.5, 1.05}, {17.5, 2.05}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Lr\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Lr"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["103", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.55], StripOnInput -> False], 
                  TraditionalForm]], {17, 1.5}, {0, 0}]}}, ImageSize -> 320, 
             AspectRatio -> 0.75, ImagePadding -> 0], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Larger", "input" -> 
         "PeriodicTableLocation:ElementData__Larger"}, {}]}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Image", "scanner" -> "Data", "id" -> 
     "Image:ElementData", "position" -> "300", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "imagesource", {}, {
        "http://periodictable.com/Items/008.10/index.html"}], 
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"ElementData"}], "\n  "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Element\", \"Oxygen\"][EntityProperty[\"Element\", \
\"Image\"]]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GraphicsBox[
              TagBox[
               RasterBox[CompressedData["
1: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
SASQTbij4q1wMZEh/wDdQNgvW42B03ZonbC/6Ok+7sgC8kdVJuYHLVX3EL2G
Fq5dA3qHPircbTmCnMu/AnMi6nsdxO+ySfV/Rse51UXnMw4zPWJ32/M5hCRT
hw5uV3KT64RImpnLOaFIKdjP71M/L97A6/B+WVTGtVBlF4ZzViitC2w4S5Xv
8qHMl5LPWa72ZO6v5EX0EVePGFMG1X1zfIwtgRWVyKHKnAsiR4hL7HqDSkn7
7Z1DOIRVtu1BR1FTlKu63SgMZaP2LfwGiertC91LaPaahpeTSlWTuDPWhT6G
iBiSSLHOxAlyib3VogrhwvsEzEZDhfsgW3BsKZN4wHYw0ASzg9av24TqJD/S
MIDXUK7CfpNhyC1WNViL3S2eBW3DT0tXIZ9b/VIxsUz6PD8zrBF9yI9Bumb3
PGSC8snpReQzttQLkwdVHwmf0zSlLApd27BTEuM3u2qXs7EgNf2RTafH8oT3
DmOe4ynmnC6Ffb6n0Ei3tixL4Kd1LfWR2vs/rJj04gfpVTvIhv0bD7IEQC2t
1Ep4Svu1NFyg1m4vPeJhJEfnVTtG8QZTn9kROG5JWOtptwMxaiuQw5cQAM7a
muQbjK6nhmr2oDdTb6g3ojdRH3nTiHm2GwPekDc5CkKvEHbZngw4hGfY8P0x
2AT6OZ0Ie5t+XZeDTCDzVWKkMZmvJKDFVKX6OegdZrcIZ2GL+MJ5ZJIGCWGu
M7oEvO18f7/Kst9xzW6scTLtt+FFS7nj5/1yC7XdR6MboATXfM870mvJS04v
6ta7Od1jOHzoPv7spfO77mCHQBeQL2wFJ6QWwf9g208/XN9XfyFg8f9Zs/S/
of5JqTh9pn7V39YQgSzDGFgvPbboTMn1gGbQMdHFZR3zehbcnj9x7VLQ8+sx
HilLmhehXcmRqj+YJKqt9wF0LxmnikSsIznJDxq6WbIdiYbrLH0caWbvoX0e
X017oB4etibJ4Di3PmgNni4VYL5RH2uuo/LJVSopvIXYK1+MyCHVKoAYFk2r
JWPktHfar2gwLVhLw8cxcvxWQ+bgTCVOls+RMfyVwMeobMF99F4aW7uBkGyz
LsCTttRFFXnGbgMbkthgv5b7IWmfK1Z0I+M500p6PvszW6a4nt/gSfA+WjTP
s121YmbLUtUWLuLXqWuK1SJHnzNlPzwy5VdzXV2EwoYMc4aL+5n4J7Zatl1S
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
iV0FMEM4hMbo94BW+BoYJoOj/d1MY+BbQu1RVXjL9By7c564EpS9r09FebTd
Q8+W0sO+epHDrYTA/Fgifb/HOcLupp3OoQG7a3COPn7rK8PUauuXroE8bheU
5gZzsNqdhFHvJ1WdxJd5TZUGWRTZdqf7xU3nnua5Jd0qHBV8zUbXKC6uJfn0
GEm2V5FpSyYNml50nhSbNUjap0WkKk86cTKrEk6bmzjf6NPpM0to+dF9ea6x
dYF9R+pIKeCskWtTDnJGZJvIQHVOZJMXentkwZQqzgn5M+pzrrVikfaY91lR
Ri/m6ytfUf/ivpavoH/kBSueUa9xVXISpY3Dkm1gigWPlXep37jt8pT6lHbx
zI/q5czFyePNgq4gMYPSw3kr+5P5QPhFtYy+mX9NcYhmwHNU9LOQfXHz/SxA
H2SezPQQNqmKyed698h6GvQ7NGaTmp92ucz1s+z6XOaRavaZyhiKgrNcLm9x
7DkgSWky7NokNm880Ymd1W36o/PO7LPm0O4v4q2kzB5DSaV6PNGXpdFz+AeU
DlXfafsnG/KbG8qH3KK8s+hsV4t4u7dp60Ac5JGICsAMQhx23swXvTq622QG
NheiDfS0WE3UwKgcijNw9to+eWXaLnuDztY881xGHGlOU+9ZVW5i/cU1uOCc
VYerXkGXzX33W0Vh1hi38gI9yx6nNTlWyAq7A6k/ICdwm+NyQbqozeErgLEW
68I+mbHR9yIUFsO2H5Il8HBrr8Rqcy6mNKoT2GABCZswboA2Br0ydDB39hs2
ijb39WdGjSbQ68rE+UreM5ehi5Pad12mO6Swp3bdfK7p2Lblh1ZYrP3V1z0a
5zTe/cco+9/Xv+a32axRpkX+n5l+03yqA1bH48X1ypcvRs9dGLz+x+Rg3uSy
ey3nlw8H3NgfU58ipHRCOrALUTvMLTHVkWJQN9IxnG+6Dl5MmITLrUFJ9y36
bY+meJo3YPDRRmZRqNyItaa9sMYQloHI7LxfrKEYfNXfW/8zCOdbjWDZKJNc
bQzd6wq34Au8rpea4cVey8suuUQEra5zDRbHH2Ru8mwODWjScb8f8r3hs32O
D7B8Hl5jHZ601VyAcYy5DNhogSTus+v2jCut87IlNrUUxA/nree+isZnm3DI
KbiSs33jRcqm/iFlFYjeOulRtY6+MBFUSaTpTJwvsmwOGIbkk+r7LntU36Tb
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
i2wLdzdUgpf5XzYRwbaE7AC/Q1tG3ga3YlKiQGADDDDKHVyA6Y7CmNjC/gme
Pi00XebRb9QPuR6AAMQg0IQXut0AT6/51F3ZkSSJ5NiVay+XXj477nS7SjQg
n32W2m7d820gTCtoycCvG7Q1ijTqNCb/D1iVfqnGMo3VGqVaNK2J34PFDpcf
7tKwnBlt+frn98+svXz6Ovqc36DbjVvnfg7K/mhMu5T3o2MMdg/nHesGDkav
jfA3K0d1RtwFyZBGER/hFOvApLXoFfaz6aaYXIcdmYmQq9iUmExAFOJ2aDKw
2qKd2AVxt7wWu9sCbns32c1mxu1WgYNDg09UudAW6ulUsgQ/6JVWds/nR8Sz
1h8h4Yn6rIiQewmlzDGnJ/451c8xjY7w7L/MG7BdsZ5mlSiDqHeQTss38d9g
l60OJM86LvGXVVdE3E/fzN4eN5P7jZdR8KDh8eCBWoWarx0t9d2Yuej6Fe0j
M2/re9sTRXON4M7cWXz9vvbLM+U1JswN08j6rravM4sVhdQdE5CymtaRUWH9
l7afM3cbt3Q6z1aT7/Q+kdY3He/aIV5HMeCIZABqGLdDTmk+0n1NXE3J5WTJ
9BnHBGzlKG2K91PhSHfl71QeYxwUJChl9OtqX2qhpnVSGcNwEtxXHmY+Etio
blHfcUfl8ep0tk05ycrsY6jTH0HYrzraJum7On+S9U24fr6i4Xb7ktmBCh7V
YsK5+i1df2qo6H7zj+Hb+QcaNw85lB5pNR0TlghIgNHWimKq7kRcmSU5Yyyp
PqD99gxZrfJ/iHwqTlDfjRvXjDMCpl5Wien+k5K8M2ofPpUVU/3mwp649tx4
7qnA7lgTWoxDr29phQL+yNo6ecTcAYuJnTbdhmgJ3QP+A60ftQwz4JCWoeWU
54+synTaEjBatdnVOhhQ1+wQ5BdWudPujqewxA932mVp3mNckcuavET0Loec
jEJwAuafqAGDq+o8gtEDAiu8RgCvEZxQD/MqbGL0N8iEZVfseqgBzjjuMvgq
piDKz/ANOMN/UWe1vhCPMF4DdQtMNbKBpAUQwdYWgCBZX96Fflnh9BHZ9JP6
y4iJp7ddFS+vab8J8/0c8DPmVw9Ttdq0qFq/0tZ/f2n9ezulCdMs/z1YkLbr
72w4EMNDnW2XPr9oObr6drIw+QLgattFysjFW8mt5cysUU98n/vbbAvzOQwh
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
mLNdsGbFW5afV2/BInmz5buEaN33ZhGx2RQq40hysvKijov/FkI0yTZoTFGV
2Ocap3pK/3bwmKqdvlUIS2vM2Dcar21qeis2BS+ilxb4TCWCtBzkTfSmwMPC
VI7ofQ6AyturCDjFS8XKHzC/I/oUWmB4V0wFXmocJKmJ1KD5o2+pId2PIRPw
FY5Gku1yy2bK8F9KTjaysg0oK+YQ9Ak6lukrfEomi/ousCjsaY7yeM/U1Wdb
2oP6di36drzvt1yamVh/0/XpGEZZWVX3d0waQ+wgKavxCf5TZMC/83tUSQcK
gHur/+FuGOEX2uqX8IF9trqp5V730mJn1ePGM9MZjY872HOk9oC+6sVEr45A
ifxZZLwy0S4akYALsw1CduJvOdyVkUP9sDSRkpTPN+9EC6lf9njP8z+Tbr/0
EmnnEoRRe4mJLhG8PIhjuaDfqzHcB8UU4FDj10ICMs8oTSoKJHoQoC5oMB++
SWVI71UgieLFeJM6RVlimLPDTQ/Ze2XF0vudlnIvmq63l8tK1Q4zMYrtx1/T
FQgaw7poOfm9R51Sy/a4SfhMwoYcNj1nh+XcZUq4D+f5u5PCa2t6XMZD3lcV
xVXlLPatd/kepFQe5vgwYEN5b4x+9om+9DRscdSYTfKhfKth82T+fPjwD55q
1MasOBElFlw/TnZJAjeMk1OSxNXhFJUYcamc/BJFLiTzSyl9oiizvWzntRrO
3ZLQP589wxXmec7w0cC0paKBMUFe3tzEjUg9WbgwYsm+WZgyWpTxpPTUxMFM
qbLMiaD07SVq49/SiMWfxj6no0smxvHp1cWY8W2Zu8qcJlo5P0p6uE/YjKKL
Y5PpTJ4G6UkLV3SG/Fx/hXDL9RIWLhcMvE7iy9cfvpFcnN86rOVmHCZS1a5y
Xy8nsIfO7zST/UHRnZjnbovX0e3yr9V0N0qOXFA7bFATfgyH1Bbx3aJioncz
4Ba6VH2zp43qPPll8IxeFl0/UUnrgXFFTB1+RHcgoEnxvepeN1/0JvXtHlCl
Qo0DXo3Ij/ggR2XZQ2gjZqX4QYS1yS9RS5imkQFUFr3EICs/0Lbwg8ugFYcs
q2WeKeparshko/YwHWRDUCct74nFwftMXYyz6Hb+pCH9iY4HQGfYgOKd3e12
fbMLl6/vuCX3UjjkYCQ683c0RoB24CggDcgBTGD9n7d/Pv4+szQNPlu9ljcv
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
8QgwCNwCzoOVYA/4AaQA+gAawPCi5K8s2bVFZVv8nnzpA3Bb1R6rZIfZaKW0
9Zc/dg1VRjVtvB3UMNrBWZitHm2mz+ytfNVwcupFzVjL4MzVJlaX1oJV95sh
kfvcru1DwLJlHaX1x1TH5a+Fnd1qkXrxyyWbXeBel9gn6IVWbuENui8NHnuL
48bUlu2+yx3CGjP8oKKoBHM+aB7K1nKn7DfFWUt3iQS5UzSyGA3uZooQOwcv
NZESg8IPmc4Kh8leNqSKCEPljHzFXsOETQLEFGFNhjES2xFTRvOSbQiuYQQs
SrHTpB9LIbZaRer3G/t441hqDueiG/10Qm5m7Un7kfWu/m1ZaC1pLL85titq
drmDPgC/m9mW3edwJ7OhqIN/bksVrml+6leNe8veme9Nfl1PF8TaTvT13u2r
SGzwn7wdNhhLKiKrk3TWWSoeWD5k+2dltwE8Cxzm/dUAVAAFoBJsBvtBHG/k
GwQVeC1s87ceWdPdvzJ/6fGPNabNAANwBgqAaLAA3ACRAGXB86t2VgIQ/ev1
4HoBib05x8LkkzAxJG17WzdyIjq5JBNs4yvtqX0xOVFj2bphzqTmVsvF2+O1
0FbOrYDaypYrM3UNz9v9Z180U7rfLHR0kYbq7j3oZg6b3K/sXBhIu7u19UzP
l7nuOrtW16ndxYxK9WG33O6Cz1367E9Zoc2h8d9SkbWxUS8SdpVfCFWLvlMg
ERwUScvfF0KL0imICe2JziuEROyLO1TcEJ2cqFAWkhSWblR7JvN83va2mqs9
JZd7Ryqw9dLcLY2j7dSZax3P+0eWvvekjFTcD++OGJa+L9em0fd8Sb8utW3b
7eeV4k0LU/1VvU3J074N1A7BOWLr9x6vOzlNfV1ui1uK9lZ9GFsK64nFFr3S
O27QZLf19Olz0eKu68TXk1evlXkQOA7IALPADaAOqAOHQH5IBMAGuMAuQID3
zB/13dpK+hr/MX8p8o/5t8O8iJECRoAFQARcBn+ARMhjYAXoXX2lFCC2OvPT
Ckxty9+xuP+12Fep70oj5E4jwNXa90fI28vEnJTCJ/2C1dnNM7dozXrd+Dv3
Wy170+7eaDvad/7uciOmU2Y+ok607fTtc42sju+z0/U27adm9et02nRub256
3Rk6D62PaMfNwuvC2zRuzzW/6TZYlG090Ruz9LGlq+fnYk5rWW/cUk6rXa/t
0olWQi9t6Vajcdf+hdKmq11CC8uNc53O81/qDNp3zM7V/Wpj3B6tgjd/msZV
2zQjb+JqvVt33xJsfN6xMjfdqNvls/C6yba7fTGkoaTj2dyzouUqi/GDCTJp
fTU4Gxmn2IjdmBBlO/2cw8rHXAVTIKfW8f8u5niKOwnIAUSemz8OLIKPwPcg
DNTk1d0Inp8w+3Nk27C23+Ya/yX+0uQf5wqX4FUuFGA7KAiG8aINgCAhfTwF
hq++8hRwHkCs3k8Dt0Herf8lILRP4Ph3EV+JRcV84qhWlsW0DcZ5T3RPWGms
RPG9tKpcjfZXV0+VXxvxr7zceGd6pEaq9d3tZ7WpbcFzp3gOMHvhS11NO2v+
Qv3rdv15XOPTzqWF6w2wzv0LeQ2CnfPzKg0/Onrm7zdwOs8uVDYc7/w6j2k4
1Plp3qolqUf4Tn9rXq/n3SNNGV2qi4ymnq5tixdrmlq6Z+yL31VPc8VylAqx
vb3x9ey5appbv89ssguZY9hrrwrbjIxUZR8ROp4gWMxXvuHb5t9bJMvbNuTq
1qF4j/YCK+AT3i2G5xl+gK5AIC/r/eHtD655yzX+rwAC/MBGYDsA58UjDVgE
3gBYcAx8zMuVJWAdLwtAAXFg6+prf8+uCwD7gNOr/1EEr4D49aZb7mx1FTA4
2H1Y6aziBVehW1AnmC/yKzEYb6hWaDKsc4yyy3aXcQcd5ynIoNoWh2g6fHT7
EHfGpdQrIsnc9Zd3fLK+67y3U/KCi4M3IXmnU65HcsJD1j7HLRGm5nKsaX8I
1dXExtlEjahtaL5FUVdJVtdatFvinUL3cYdTXUJXdvkJfD8EXX+Rz+TP2ZKd
vMr4EG+r/nAAm/7cwr8cowNIB8XBsxA5iCeEwLvfDNoC7jzHvhvYA5xY9Qxr
rPH/HvBPrW3gKe0gcAGwAOyBy8A+UBgMBqfB16AGRAByAUKF6IAq4DbwEE+9
v1n3/2we8O/Hhc3zqrU4YAtkH+QEhA9yBMKEkEF7sBtk85S2BJwFLvF85Qae
Pret5bg1/gH5HbXrebllCy8XCgLCgBLABJx4Ch3lxf5JUB4kgRVgLTgOnod8
AQUgDMguiCDEArKep1pJCBecAW+CUTzHRwMJoCL4DjgA8oM1wDrwBZAOfAGe
AykAP/gdyAVOgzvBboAFMkExsA8c4L3nRsheyGnIJYgCxAFyhuebQyE3wVcg
BmLLc9KL4DdgB2gARvPeZQL4o3Yz4WXC3cCxP7XJDwBrWlvjX4y/5oHW/+lx
N/Hqqu08TRwC9vN+LgIneblIjqdeSUADkOYpRp9XlyoAhgAMkAeMeLUZEjDg
1aowgMTTuBCABY7yPKIksOtPr7gJ2My798c+lhv/zLnrVz9vjTXWWGONNdZY
Y4011lhjjTXWWGONNdZYY4011lhjjTXWWGONNdZYY4011lhjjTXWWGONNdZY
Y4011lhjjTXWWGONNdZYY43/E/wPb72u6A==
                "], {{0, 150}, {150, 0}}, {0, 65535}, ColorFunction -> 
                RGBColor], 
               BoxForm`ImageTag[
               "Bit16", ColorSpace -> ColorProfileData[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIj
UNAApJaBycDRxcmVCagqN6+kKMjdSSEiMkqB/TwDGwMzAxgkJhcXOAYE+IDY
efl5qQyoAGjUt2sgkoHhsi7ILAbSAFdyQVEJkP4DxEYpqcXJQCMNgOzs8pIC
oDjjHCBbJCkbzN4AYheFBDkD2UeAbL50CPsKiJ0EYT8BsYuAngCyv4DUp4PZ
TBxgcyBsGRC7JLUCZC+Dc35BZVFmekaJgqGlpaWCY0p+UqpCcGVxSWpusYJn
XnJ+UUF+UWJJagpQLcR9YCAIUQgKMQ2gRgtNEv1NEIDiAcL6HAgOX0axMwgx
BEguLSqDMhmZjAnzEWbMkWBg8F/KwMDyByFm0svAsECHgYF/KkJMzZCBQUCf
gWHfHACHPFyJ
                  "], "RGB", "XYZ"], Interleaving -> True], Selectable -> 
               False], DefaultBaseStyle -> "ImageGraphics", 
              ImageSizeRaw -> {150, 150}, PlotRange -> {{0, 150}, {0, 150}}], 
             Annotation[#, <|
              "URL" -> 
               "http://www.wolframcdn.com/waimage/hset040/0af/\
0af3f4d56fff824ce2e28f7d35c2179b_v001s.jpg", "Dimensions" -> {150, 150}, 
               "Source" -> "http://periodictable.com/Items/008.10/index.html",
                "Popup" -> 
               "hset040/0af/0af3f4d56fff824ce2e28f7d35c2179b_v001ms.jpg"|>, 
              "Image"]& ], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Basic elemental properties", "scanner" -> "Data", "id" -> 
     "Elemental2:ElementData", "position" -> "400", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"ElementData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"WebElements"}], "\n    ", 
         XMLElement["datasource", {}, {"NISTAtomicWeights"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Dataset[EntityValue[Entity[\"Element\", \"Oxygen\"], \
{EntityProperty[\"Element\", \"AtomicSymbol\"], EntityProperty[\"Element\", \
\"AtomicNumber\"], EntityProperty[\"Element\", \"AtomicMass\"]}, \
\"PropertyAssociation\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   TagBox["\"atomic symbol\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                 "\"O\"", {
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"atomic number\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox["8", #& ]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"atomic mass\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["15.999", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "15.999", "SRString" -> "15.999"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"u\"", FontFamily -> "Roboto", FontSize -> Smaller]}], 
                    Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"unified atomic mass units\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,numberdata,\
quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> "Elemental2:ElementData__More"}, {}]}]}],
    Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Thermodynamic properties", "scanner" -> "Data", "id" -> 
     "Thermodynamics:ElementData", "position" -> "500", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"ElementData"}], "\n  "}], 
       XMLElement["datasources", {}, {"\n   ", 
         XMLElement["datasource", {}, {"WebElements"}], "\n  "}], 
       XMLElement[
       "minput", {}, {
        "Dataset[EntityValue[Entity[\"Element\", \"Oxygen\"], \
{EntityProperty[\"Element\", \"Phase\"]}, \"PropertyAssociation\"]]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    PaneBox[
                    TagBox["\"phase at STP\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    FormBox[
                    TagBox[
                    TagBox["\"gas\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {"MatterPhase", "Gas"}]], Identity], 
                    TraditionalForm]}, {
                    TagBox[
                    PaneBox[
                    TagBox["\"melting point\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    TagBox["218.3", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "218.3", "SRString" -> "218.3"]]}], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Degree]C\"", FontFamily -> "Roboto", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"rank: \"", 
                    TagBox[
                    SuperscriptBox["98", "\"th\""], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> 
                    RowBox[{"98", "\[InvisibleSpace]", "\"th\""}]]]}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                    TagBox[
                    PaneBox[
                    TagBox["\"boiling point\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    TagBox["182.9", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "182.9", "SRString" -> "182.9"]]}], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Degree]C\"", FontFamily -> "Roboto", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"rank: \"", 
                    TagBox[
                    SuperscriptBox["88", "\"th\""], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> 
                    RowBox[{"88", "\[InvisibleSpace]", "\"th\""}]]]}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxBackground -> {"Columns" -> {None, None}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False]}, {
                PaneBox[
                 TagBox[
                  Cell[
                   TextData[{
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", 
                    "\"properties at standard conditions\"", "\[NoBreak]", 
                    "\")\""}], TraditionalForm]]], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}]], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 BaseStyle -> {LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,numberdata,\
quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> 
         "Thermodynamics:ElementData__More"}, {}]}]}], Typeset`pod6$$ = 
   XMLElement[
   "pod", {"title" -> "Material properties", "scanner" -> "Data", "id" -> 
     "Material:ElementData", "position" -> "600", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"ElementData"}], "\n  "}], 
       XMLElement["datasources", {}, {"\n   ", 
         XMLElement["datasource", {}, {"WebElements"}], "\n  "}], 
       XMLElement[
       "minput", {}, {
        "Dataset[EntityValue[Entity[\"Element\", \"Oxygen\"], \
{EntityProperty[\"Element\", \"SoundSpeed\"], EntityProperty[\"Element\", \
\"ThermalConductivity\"]}, \"PropertyAssociation\"]]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    PaneBox[
                    TagBox["\"density\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0.001429", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.001429", "SRString" -> "0.001429"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"g\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", 
                    SuperscriptBox["\"cm\"", "3"]}], FontFamily -> "Roboto", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"rank: \"", 
                    TagBox[
                    SuperscriptBox["114", "\"th\""], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> 
                    RowBox[{"114", "\[InvisibleSpace]", "\"th\""}]]]}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                    TagBox[
                    PaneBox[
                    TagBox["\"sound speed\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["317.5", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "317.5", "SRString" -> "317.5"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"m\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}], FontFamily -> "Roboto", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"rank: \"", 
                    TagBox[
                    SuperscriptBox["71", "\"st\""], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> 
                    RowBox[{"71", "\[InvisibleSpace]", "\"st\""}]]]}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                    TagBox[
                    PaneBox[
                    TagBox["\"thermal conductivity\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0.02658", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.02658", "SRString" -> "0.02658"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"W\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", 
                    
                    RowBox[{"\"(\"", "\[InvisibleSpace]", "\"m\"", 
                    "\[InvisibleSpace]", "\"\[ThinSpace]\"", 
                    "\[InvisibleSpace]", "\"K\"", "\[InvisibleSpace]", 
                    "\")\""}]}], FontFamily -> "Roboto", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"rank: \"", 
                    TagBox[
                    SuperscriptBox["88", "\"th\""], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> 
                    RowBox[{"88", "\[InvisibleSpace]", "\"th\""}]]]}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxBackground -> {"Columns" -> {None, None}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False]}, {
                PaneBox[
                 TagBox[
                  Cell[
                   TextData[{
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", 
                    "\"properties at standard conditions\"", "\[NoBreak]", 
                    "\")\""}], TraditionalForm]]], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}]], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 BaseStyle -> {LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,numberdata,\
quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> "Material:ElementData__More"}, {}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement["units", {"count" -> "3"}, {
           XMLElement[
           "unit", {
            "short" -> "g/cm^3", "long" -> "grams per cubic centimeter"}, {}], 
           XMLElement[
           "unit", {"short" -> "m/s", "long" -> "meters per second"}, {}], 
           XMLElement[
           "unit", {
            "short" -> "W/(m K)", "long" -> 
             "watts per meter kelvin difference"}, {}], 
           XMLElement[
           "img", {"src" -> 
             "https://www6b3.wolframalpha.com/Calculate/MSP/\
MSP420511fi548bdg4gg884000020ff751e3ec2h7a4?MSPStoreType=image/gif&s=4", 
             "width" -> "247", "height" -> "72", "ImportedData" -> 
             Image[CompressedData["
1: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
CZYHkZxgeTjUNRMIFoO31xmBYDj+B5XBTh0=
               "], "Byte", ColorSpace -> "RGB", ImageSize -> Automatic, 
               Interleaving -> True, Magnification -> 1]}, {}]}]}]}]}], 
   Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Electromagnetic properties", "scanner" -> "Data", "id" -> 
     "Electromagnetic:ElementData", "position" -> "700", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"ElementData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"EnvironmentalChemistry"}], "\n    ", 
         XMLElement["datasource", {}, {"WebElements"}], "\n    ", 
         XMLElement["datasource", {}, {"MaterialsHandbook"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Dataset[EntityValue[Entity[\"Element\", \"Oxygen\"], \
{EntityProperty[\"Element\", \"MagneticType\"]}, \"PropertyAssociation\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   TagBox["\"magnetic type\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], "\"paramagnetic\""}, {
                
                 TagBox[
                  PaneBox[
                   TagBox["\"color\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TemplateBox[{
                   GraphicsBox[{
                    RGBColor[1, 1, 1], 
                    EdgeForm[], 
                    RectangleBox[{0, 0}]}, {
                    ImageSize -> {8}, ImageSize -> 1, BaselinePosition -> 0}], 
                   TemplateBox[{"\" \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"colorless\"", "\[NoBreak]", 
                    "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"]}, "RowDefault"]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"refractive index\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox["1.000271", 
                  $CellContext`TagBoxWrapper[
                  "StringBoxes" -> "1.000271", "SRString" -> "1.000271"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> 
         "Electromagnetic:ElementData__More"}, {}]}]}], Typeset`pod8$$ = 
   XMLElement[
   "pod", {"title" -> "Reactivity", "scanner" -> "Data", "id" -> 
     "Chemical:ElementData", "position" -> "800", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"ElementData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"WebElements"}], "\n    ", 
         XMLElement["datasource", {}, {"TheWikimediaFoundationIncWikipedia"}],
          "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Dataset[EntityValue[Entity[\"Element\", \"Oxygen\"], \
{EntityProperty[\"Element\", \"Valence\"], EntityProperty[\"Element\", \
\"Electronegativity\"], EntityProperty[\"Element\", \"ElectronAffinity\"]}, \
\"PropertyAssociation\"]]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   TagBox["\"valence\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox["2", #& ]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"electronegativity\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  StyleBox[
                   TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["3.44", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "3.44", "SRString" -> "3.44"]]}], 
                    Identity, TagBoxNote -> {"Hyperlink" -> "3.44"}], #& , 
                    SyntaxForm -> Dot], "Unit", SyntaxForm -> Dot], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0, ZeroWidthTimes -> False], Identity]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"electron affinity\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["141", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "141", "SRString" -> "141"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{
                    "\"kJ\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"mol\""}], FontFamily -> "Roboto", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"kilojoules per mole\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"first ionization energy\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["1313.9", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1313.9", "SRString" -> "1313.9"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{
                    "\"kJ\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"mol\""}], FontFamily -> "Roboto", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"kilojoules per mole\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,numberdata,\
quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "3"}, {
       XMLElement[
       "state", {
        "name" -> "Show energy plot", "input" -> 
         "Chemical:ElementData__Show energy plot"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Show non-metric", "input" -> 
         "Chemical:ElementData__Show non-metric"}, {}], 
       XMLElement[
       "state", {
        "name" -> "More", "input" -> "Chemical:ElementData__More"}, {}]}]}], 
   Typeset`pod9$$ = XMLElement[
   "pod", {"title" -> "Atomic properties", "scanner" -> "Data", "id" -> 
     "Atomic:ElementData", "position" -> "900", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"AtomicLineData"}], "\n    ", 
         XMLElement["microsource", {}, {"ElementData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"WebElements"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Dataset[EntityValue[Entity[\"Element\", \"Oxygen\"], \
{EntityProperty[\"Element\", \"TermSymbol\"]}, \"PropertyAssociation\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    PaneBox[
                    TagBox["\"term symbol\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{"\"\"", "3"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], 
                    SubscriptBox["\"P\"", 
                    InterpretationBox[
                    StyleBox[
                    "2", ShowStringCharacters -> True, NumberMarks -> True], 
                    InputForm[2], Editable -> True, AutoDelete -> True]]}, 
                    "RowWithSeparators"]}, {
                    TagBox[
                    PaneBox[
                    TagBox["\"atomic radius\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["60", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "60", "SRString" -> "60"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"pm\"", FontFamily -> "Roboto", FontSize -> Smaller]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxBackground -> {"Columns" -> {None, None}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False]}, {
                PaneBox[
                 TagBox[
                  StyleBox[
                   
                   RowBox[{
                    "\"(\"", "\[NoBreak]", 
                    "\"electronic ground state properties\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 BaseStyle -> {LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,numberdata,\
quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> "Atomic:ElementData__More"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Spectrum", "input" -> 
         "Atomic:ElementData__Spectrum"}, {}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement["units", {"count" -> "1"}, {
           XMLElement[
           "unit", {"short" -> "pm", "long" -> "picometers"}, {}]}]}]}]}], 
   Typeset`pod10$$ = XMLElement[
   "pod", {"title" -> "Abundances", "scanner" -> "Data", "id" -> 
     "Abundance:ElementData", "position" -> "1000", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"ElementData"}], "\n  "}], 
       XMLElement["datasources", {}, {"\n   ", 
         XMLElement["datasource", {}, {"WebElements"}], "\n  "}], 
       XMLElement[
       "minput", {}, {
        "Dataset[EntityValue[Entity[\"Element\", \"Oxygen\"], \
{EntityProperty[\"Element\", \"UniverseAbundance\"], EntityProperty[\"Element\
\", \"CrustAbundance\"], EntityProperty[\"Element\", \"HumanAbundance\"]}, \
\"PropertyAssociation\"]]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   TagBox["\"universe abundance\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["1", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1", "SRString" -> "1"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{"\[InvisibleSpace]", "\" mass%\""}], FontFamily -> 
                    "Roboto", FontSize -> Smaller]}], Identity], #& , 
                    SyntaxForm -> Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"rank: \"", 
                    TagBox[
                    SuperscriptBox["3", "\"rd\""], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> 
                    RowBox[{"3", "\[InvisibleSpace]", "\"rd\""}]]]}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"crust abundance\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["46", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "46", "SRString" -> "46"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{"\[InvisibleSpace]", "\" mass%\""}], FontFamily -> 
                    "Roboto", FontSize -> Smaller]}], Identity], #& , 
                    SyntaxForm -> Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"rank: \"", 
                    TagBox[
                    SuperscriptBox["1", "\"st\""], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> 
                    RowBox[{"1", "\[InvisibleSpace]", "\"st\""}]]]}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"human abundance\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["61", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "61", "SRString" -> "61"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{"\[InvisibleSpace]", "\" mass%\""}], FontFamily -> 
                    "Roboto", FontSize -> Smaller]}], Identity], #& , 
                    SyntaxForm -> Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"rank: \"", 
                    TagBox[
                    SuperscriptBox["1", "\"st\""], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> 
                    RowBox[{"1", "\[InvisibleSpace]", "\"st\""}]]]}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,numberdata,\
quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Show atomic abundances", "input" -> 
         "Abundance:ElementData__Show atomic abundances"}, {}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement["units", {"count" -> "1"}, {
           XMLElement[
           "unit", {"short" -> " mass%", "long" -> "mass percent"}, {}], 
           XMLElement[
           "img", {"src" -> 
             "https://www6b3.wolframalpha.com/Calculate/MSP/\
MSP11092278hha0fbdfbh160000328iigafd3a5i3g7?MSPStoreType=image/gif&s=15", 
             "width" -> "148", "height" -> "27", "ImportedData" -> 
             Image[CompressedData["
1:eJztl0lIXUkUhh/pjeBAb1y1G3GniAsRW3DTCxfiRtKIIiIktv1sRAOmIQTc
iBtRBJEgBHGe51lUFEERBxxxiIqzOM8zjq+/tuByea9zc6E7eX1J/aBUnTp1
6tT5zzl1n/vrNy9/f2Eymd468O/lq3e/JCW9ev/rj0zCEt/+YU6M/S048c9Y
c2zSz69/QPgTfx/4+3v8ScLIsBgEBnL1G0ByZ1xI7owLyZ1xIbkzLiR3xoXk
zriQ3BkX9uIuPz8/NzdXjCsqKp6envTs+h64Ky0tvbq60qNpF+4GBgZSUlKy
srI6OztXVlaSk5N1btR2dWtrq66urrm5uaCgoLe3d2ZmprCwsKSkZG1tjdXH
x0fOLS4uRjg5Oal4gjLhWlhY+JxEMV5fX9/Y2CiMYw0hOtgvKioaGxsTOrW1
tfgwODjIFAfEcaOjo8KIrX5DQ0N7ezuZTChI4Ly8vI/PODw81BMN/dzV1NQE
BAS4u7u7urqmpaX5+fk5OjrGx8ezdHl5GRkZ6eLi4uHh0d/ff3p6GhQU5ODg
4Ovru7S0ZDVtaWkhAtXV1VRcQkKCHj8VbzVWCQWxOj4+Jm/Lysp6enru7u4W
FxcJpvBwfn7+9vaWVQJ4fX29u7uLDzc3N/v7+5BC6GwlauPsOjo6YjsGYYGD
iDzTi4sLBnt7e+jACzpsxAI+nJycoEDcdnZ2/lGfODDgxMrKSnQsX63u8CEw
MBDfSBVnZ+e5uTmOg8fz83MYYVWEJSwsDAUvL6+2tjYaI1ewmqJmNpvj4uJG
RkZSU1O5FOTq9FZjlVC0traKcUdHx+rqKgPOIhpCODw8jHsisbkFPFZVVRFG
qgAqUbCVqI1T0YobfX19U1NTH1WYnZ1V61DaQ0NDYozZ+/t7bf2uri5akOVr
cieq7ODgAC6E0MfHBwaRBAcHU4YmkykkJARXMzIyINrNzY1rWk0Vg9A3Pj4O
1xEREaKzfdFbjVU1d7QgK+7W19epF3KeMZ0N7izPjXRzc5M+qby5thLFuBJn
klZwR4exckDRmZ6eVrgT0NaHu+XlZYs9uMvJyQkPD6f70d7hjs6TmZlJPWZn
Z1NiVlOxcWJiIj09vby8nEiS7TQNPd5qrGpzR2doamqimqCG9wXukHR3d6NA
1dO7qA5bidq4Vc8kCFyWjoca3RjLai5Y5WpnZ2fIeSO2t7e19RXu6Eto6vl4
+6+4I1De3t5OTk6hoaH+/v6QCIOUoaenJ5VlNRUbY2JiiAOnR0dHR0VFCc+/
6K3GqjZ3FBRCPgZo3VwEBh8eHigEXiheScoEHVuJ2jjZRTuFd+VbBX8INTZ5
W+ktai4sz6UH3eQAWar4/zl9hTuqFQUirCcadvnwJq9IcjHe2NjgFnp22fE3
ghUv/wfI3+Y6Ibn7lzCQq98AkjvjQnJnXEjujAvJnXEhuTMuPkkYGfZOHwmJ
7xF/AbMKfew=
               "], "Byte", ColorSpace -> "RGB", ImageSize -> Automatic, 
               Interleaving -> True, Magnification -> 1]}, {}]}]}]}]}], 
   Typeset`pod11$$ = XMLElement[
   "pod", {"title" -> "Nuclear properties", "scanner" -> "Data", "id" -> 
     "Nuclear:ElementData", "position" -> "1100", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"ElementData"}], "\n    ", 
         XMLElement["microsource", {}, {"IsotopeData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"NISTAtomicWeights"}], "\n    ", 
         XMLElement["datasource", {}, {"NationalNuclearDataCenter"}], 
         "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Dataset[EntityValue[Entity[\"Element\", \"Oxygen\"], \
{EntityProperty[\"Element\", \"HalfLife\"]}, \"PropertyAssociation\"]]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   TagBox["\"half\[Hyphen]life\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  
                  RowBox[{
                   "\"(\"", "\[NoBreak]", "\"stable\"", "\[NoBreak]", 
                    "\")\""}], {
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"stable isotopes\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{
                    StyleBox[
                    TemplateBox[{
                    FormBox[
                    TagBox[
                    TagBox[
                    TemplateBox[{
                    
                    TemplateBox[{"\"\"", "16"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], "\"O\""}, "RowDefault"], 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {IsotopeData, "Oxygen16"}, 
                    "StringBoxes" :> ($CellContext`GeneralData[ElementData, 
                    $CellContext`GeneralData[
                    IsotopeData, "Oxygen16", "AtomicNumber"], "Symbol"] <> 
                    "-") <> ToString[
                    $CellContext`GeneralData[
                    IsotopeData, "Oxygen16", "MassNumber"]]]], Identity], 
                    TraditionalForm], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["99.762", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "99.762", "SRString" -> "99.762"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> Smaller]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\[NoBreak]", 
                    "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    "\"\[Ellipsis]\""}], 
                  LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                  0]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"unstable isotopes\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{
                    StyleBox[
                    TemplateBox[{
                    FormBox[
                    TagBox[
                    TagBox[
                    TemplateBox[{
                    
                    TemplateBox[{"\"\"", "15"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], "\"O\""}, "RowDefault"], 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {IsotopeData, "Oxygen15"}, 
                    "StringBoxes" :> ($CellContext`GeneralData[ElementData, 
                    $CellContext`GeneralData[
                    IsotopeData, "Oxygen15", "AtomicNumber"], "Symbol"] <> 
                    "-") <> ToString[
                    $CellContext`GeneralData[
                    IsotopeData, "Oxygen15", "MassNumber"]]]], Identity], 
                    TraditionalForm], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["122.24", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "122.24", "SRString" -> "122.24"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"s\"", FontFamily -> "Roboto", FontSize -> Smaller]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\[NoBreak]", 
                    "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    "\"\[Ellipsis]\""}], 
                  LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                  0]}}, GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> "Nuclear:ElementData__More"}, {}], 
       XMLElement[
       "state", {
        "name" -> "All isotopes", "input" -> 
         "Nuclear:ElementData__All isotopes"}, {}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement["units", {"count" -> "4"}, {
           XMLElement[
           "unit", {"short" -> "ms", "long" -> "milliseconds"}, {}], 
           XMLElement["unit", {"short" -> "ns", "long" -> "nanoseconds"}, {}], 
           XMLElement["unit", {"short" -> "s", "long" -> "seconds"}, {}], 
           XMLElement[
           "unit", {"short" -> "zs", "long" -> "zeptoseconds"}, {}]}]}]}]}], 
   Typeset`pod12$$ = XMLElement[
   "pod", {"title" -> "Identifiers", "scanner" -> "Data", "id" -> 
     "Identifier:ElementData", "position" -> "1200", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"ChemicalData"}], "\n    ", 
         XMLElement["microsource", {}, {"ElementData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"WebElements"}], "\n    ", 
         XMLElement["datasource", {}, {"PubChem"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Dataset[EntityValue[Entity[\"Element\", \"Oxygen\"], \
{EntityProperty[\"Element\", \"CASNumber\"]}, \"PropertyAssociation\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   TagBox["\"CAS number\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                 "\"7782-44-7\"", {
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"PubChem CID number\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                 "\"977\"", {
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod13$$ = XMLElement[
   "pod", {"title" -> "Wikipedia page hits history", "scanner" -> "Data", 
     "id" -> "PopularityPod:WikipediaStatsData", "position" -> "1300", 
     "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TemplateBox[{
                  GraphicsBox[{
                    GraphicsComplexBox[CompressedData["
1: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
mJ6w1Pg0PwcOHXx8ad5Spt+vJLMczVKgR3yWsds6Gpcqui8/+ZYHSeOb1slr
0+g15nhVoZ3x393tS6MP0Ji0U+jcSt1UmIQmvzcnabQKrD7zPDkd+s7eJM66
0Jh47M11DfEM6L3g5PruJsNP9I8npi554BwZvPhnFI3cV4lxtSnJYPv7pYhN
Oo3CGgf2rUpLBuW21e7vntGYub6/9OCCWOjwUpAfO0mgzNNu7r2jyaCWtGi5
2iXGTyPcxyf1eSAcfeZ2902GRyp/+K67kAEZOa+N99wncM7tj/LunXyQmW/+
yoFF4FyDz7m+1TwQ0dv2kiomkKhYYSh7PxuGCllX9jYz/tyXXdomwQXNWzmV
s/oJ7H7+g1XVywPNv8sN7D4TeMY7/UzhAj4oZi+7liDA+Oua5501rYUQstFD
QWMhiZJzhquELpdB6fO/q6LlSazh/yd+LKAIqiuC+vPUSUz9pVN3/nwebLvh
vlhen8TsZvAQ1S6HxGvjXy8dY/qbFXdmJLMIgjpELss7kfjTR+O4Y0UpSHYF
bLvqTaJvzZaUDJtaeDD/XlJqBIm7Y8RCv2A1BMjMCFBOJnFrpu/T5oUZYHdm
SuIuj0QV59dn5NQLoHHO3R3mDSSGcbhHLokXQPvR8LzqHhLf3v63zLuEDQ0D
y57MIJm8eS674BWTBipbZx9JnCRx6vkWTgbDS/b5SzREJShUv7P5iK1aNri5
qfYorqTQYNvi6MMGaTAhkf8jbTOFaaLbhk9apIHd25Kiv7so1KhdMiTxPhPM
FhxfWXiE4fH0nQvcVPNhjDzbNN+e8emYxlJZpUxwnZqxdK8HhX3pvRKRwINz
b6fedodSuPfDqa6DzP9D7aP05JY4CsWg3vFGXDq0b93bvTeP8YtwxT/7vAph
yPKFUlE1hfGnk89fY3FgsIRUFHhJYT1/S06AfS6YEGcSWB8onBPK8nyaw4U7
24TslkwwPnxLd5XHMAdYXTmfdGbT2LyxL/k4ZIPy3qIvdctojHD84B3zLBVY
n41jZDfQ+PfO8hjHq1yI/3nj4/sdNN5982z3wVPZoJO+7IqeCeMDKXNLNyYl
w7M7mHnzFMM3Dr6vXP9kwDPDZ+YrLtPY8mFm5IehdHi85qq57y0aBTy0jZ/c
ygMw2bQs9gGNRzqeD+iZpIC5of6RRZk03ny97XN2ZxK0BbPzHUppFPu70CP1
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
Mg70rnvgkdJIYaiKeJHI/+/fM2uk5nUPhdoui+Y6qRfDtfzTpMgYhSujHSz1
hnjgspT8mDuPxgUpTx5cdsgBhT0XzWsMaQzrW7bld0EhnEsODdPZR2OKlei1
25dzYN8mXbE/Z2kcq/X2YQdyQLWz5+qlJBqp4+ZPsu9lgwdrkh/4gMYXeqdW
L61PgwSh/E35tgRaCnVd/HksC+SUuacIDwL7zVLyz1Uy/WHt3HktlMBLFtP/
fnHjwKnvOrRQEoEO2t0Bb0TK4dee5hw1NoFZ/3FGD+QK4GaXZDK7ikD590H1
F74VQuy6eLdJ5jy3Htt0rzuKBwrh7xTqXhB4JURko6BcAHe31l5f+IXAwQaT
j/uUyuAJ2fPTUojhuT5K/qllBdDlN5NH5Un8O3f83BmfWtg56DRqsZjE1kvr
xaNfVIJrk8ybkxtITMuoYU2ll0Bq50npIWYeIghy64I5dbCg/peK1mESTTse
qPQXVcL61CN/Bk8zvGaom1J3uAZ832P5uoskToSViEpUNoPCXAcL6zjm+vtd
JKyeN0KNm6EOwcwPR0p+GvshGyoL9n8wFZB4d3PAoTGrctj2eI23bDuJcsm/
ZM74l4Ooy42BgAHm9bT3GN9/x4W5HzZpVBIMbwYdjdmYwQLdy/Fs6ykS51mP
de5jeDQt7PP7VhkKqQfCX9ZtLoR2XFj3ipm/kcJ82bmZLJhaJNZlt4aZx7Fl
kQnyLIiite9wTZi8JuV+D2dwgJ0577LrAQrXp96k/PVL4VtLjGaXI4VL7wZ8
efGJA8mdRvmTzHw6PFrZJXtFACa/sh0Sopl+X6HVVCrGB/0guaEvzHwm1W8+
U96UB9/u7v88VUxh54nCMsu2CqjU3ap/ton5fJPJRyfv8qDvio9j+SPGjz53
vGg9UAy/RQ8/shtm+mb3v33eFnxw7N863svM76NtH+qvNPMg1WU6/4cYjQrm
iu5twYUwsMiXc1GJxu29xxc6++SC6x3tsH4dxnf1XWc8reRDwl72qtTNNK7c
dXRpvFchjGzn8EX20+hclT2Ukp8NCVof5288TmPrmzcfZjRwYNvywfqnXsz1
FeNjg2ZxYOuVPuXN4TSu+iPVdy2E8fGCnJkWyTSW17nvnKWWA72fF8NDDs34
iFhV4XgWlNxqvaZSQyMrP978gXc2vIrSd9nmRCC958xDlioPiodAHvwJlHhc
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
                    "], {{{}, {
                    EdgeForm[], 
                    Directive[
                    Opacity[0.05], 
                    Hue[0.67, 0.6, 0.6]], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJwl2negz2Ubx/GjHHslO3uHZMte2SPZm2waaKeykpRSGZWQjFAiu0UoREZG
Zc+QZMtMPK+r549f93Vd7/fn7pzf+t7fU/m6D2jxxB0JCQlJPAqn/P9aKOX/
6zLqgtb3EhMS8qZISEhzZ0LC20kTErInT0h4ndhUcJtZh2QJCeu4Rcz+8njC
7JpMD7Ms8i+rk8sf4M+ydrPHKZl23H/Ur9ovJzZN7l7zCXK3eLXlNmMvYy/r
E7hv4FeUi9VVsW/sUU3uR25p89H6Jvyfzdpz15p1wU5yPzd/1z73y36NFeb+
pu6GnVI/LnOV213mJWsy7n6ZmdauvD9l2vIO6m/oR8rdg38kVxQbHzn9bf3r
+sv6H7mLuFW4X8uW1lfF19u/FJ5aPRbPhr+GFzCfr25sn/7crXg7e/3AnWdW
kvuVvhD3V3VX7p/qOtzHuFfkH+Hu43bBT3Lb4NfVr3BzmLfmTuUWwcZx/9XX
ktuEv4jfwkZjf2NfyVbRr8Pv1xfwek5U55FJZf6WfbPKjeI1kt1i1lb2+/jd
uJ25f+CfYe/I3Mf/Ei/I/0XdBTupflTuMreb3IvWRO5emRnWzrw/ZFrzrqlH
yGTHpsgUNn9XZrD+X/1r+kv69XILuZW5X8qV0lfG19q7JJ5S/SaeBX813rd4
fuxzfUN79dNv5rSx3xr+p2Yl+Mv1Bfh/ePTH/5bpiu/BO+En8FbYVfVwe2Uz
b2WvydxC2Dvcm/qacj/hL+A3sVHYRWy5bCX9D/h9+vyewwnq3DIpzJdbx9g7
s+xIbj5snrqBfTbhre2zWi6VXCfsBDYXe1uuuNwyPL/cTnVn7IS6n9wlbpd4
Hq1Jubtlpls78o7LtORdUQ+TyYp9KFPQ/G2ZGjIbzZ83f0nmH+xV7AL2hUwl
bJn8A+bfc0uYJ1cv476BZ8JfwU/p8+Kf6evb6ydOK/us4s/RF+Mu1efjbuPu
0HfiHtfX1vflX5TvzN/F74Af47fAL6uHcrOYt+RO4hbAxnKry2zAnsNumI80
P2++QOYB86Xy98tUxNZwi2P5PL/j1bnMk8XnnXs3dwS3nn02mrW0z3fxXuN2
5B7HZ2NjZe7lL8Hz8o959OFf4HTiZ+a/oL6T9xv/Y2t7/u/8h7l/q4fYKzP2
gVx+87fkqsn8aP6s+Ysy17FXsHPYfJmK2BL5CuarucXMx1lzchPNllpH8zLy
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
u/Nv8fvxW/J/03fjb4p98fH8XHFejPOyPiM+JfG/ly7hKL8Xfk7TGb+tfp2b
z7wtdxa3JDaJW1fmZ2wElsh72/yf+E5R14pzpXw5mdoym7kVse7W09gimXK8
72RK8M571I2zOvdfTt84a8XfENSL+C34v2Jd+T9hY+P+VT858b+nNyGb12Bo
fBZkjnB72vsstxMvr34m9z79B9zbcc/B3Wrf4dhQfVL+WPwGvlxdM86TsrXk
NnErxHeC9S/zhTLj4+8IvJUyxXl71D2wc+onZW5y+8TfAbi/6LvwNsZzIzeO
m5P7VtzjYh8m/ve/biQc5vZQnOF2xA5zb+lHc/NgbeL+nl8Cf58/zOxO/C39
df0ydQ3uStmy3Jrcn+xdHutmPYV9IVOGt0KmGO+sxyDeP3hv3mm5wuqF3Obc
x/Q78c78Dfi7svfEeVAuvfmkxP/+s0pCVs//kPgcxzU83ufW7tzTch24/6pf
k8uNTRcobv6eXB2ZLeZDzYfEdxbvTewatlRdPc6R8jVkNnLLmXe1/mm+QGac
TGnetzL38naru2Nn1ANlbnB7yRSyfmH+UJwLZHZgnWR+jPs+mRzYmLjXNf8g
8b/bz4SD/vEI9hevPXZI7qZ+FDcX9jG3GDaRO0SfBBujv6rfwF2ir8b9VraM
vjp/g73L4vP5pfBv+EXxXepHuKfjOyvO59zr3J7cgtYFWDOZ7eYdZdabv8FN
q38f/x/BkaXl
                    "]]}]}, {}, {}}, {{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    LineBox[CompressedData["
1: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
Sd2WvxQvGrMAlhr7ELst11P/iFw5+1/1n7AfLrNS5l+sa8wHMn9aG8ls5tXT
X81LaT9KJkPMCzKDZXZj9bmTZSpg82Qei/sY/TT63WRu6r8kM13mXPxeWD+L
+UZmmjWXzHe8QjJjeHv0e8oc0X85rtEyP2LFuP+qX8fT4B/hd+TKe21WV5P9
iXuZ2y2+N7zXNbl77Rtzy8tu4dbH13BT2X8nl9F+iNwf+g24U2Qq6s+Pz4NM
UWw4ljbmFZlb2Msy5/Uzc6fr545rBnc0/jB3bPxZ1H/ivfhH8Xb8N9Rp1R+r
73J7cY9yd3ErqLdg1dWruLW4fzm7CbdCzB54A/5afJM6tXo0P5N6KH8qv5J6
Ab9Y3L9w08kf4/aIeQ97hTsjZnU8C38Gnoc/Ju6Z+N/je/V7c4/pv8Jtz12G
Fee+iaXDPokbNf3e+sdkKsr/pl/D/huZ1dh/WPeYHaj7rE1ltvIa6q/jpbEf
I5M5ZrWYF2X2YA25Sbx30+Qq4wvlimPfYvdgPeXu6L8qNzNm9/i+inkpvmvl
ssrNtM8rN5b7l/pF/nF1B+5y55TAL8u8hd2DfYrVVyeK2SHmKL2azl+jvsLv
EbMEd7+1GbdizCi8Rth6Xlr7sTJZ4v5ZZjq3inoRt23MJ3ojuOnlj6vjocNd
/DX+Jew+/iwsH78Q/j1emD8uPgvqffhL/BN4R/7b6vTqz9SJ47rMPc7dza0s
+ztWS/2tei1+Fe8ZM4TcAWtzuW28xvo/89LZfy+T1b6PzDCZP7FG3BkyVbHF
cc+sP1L/3nj+EQ9M7F+PZx0xu2MZrH1jHoJmW/PLjOPtV7/jda9z+ugliflA
f5u6tvw69TVn9Yp7f+9hXe5B+xbc7bx7Ynbg3hfzNHcvtzE+k/eE/hLe8zGD
YKOwDPGMQyaR/Rsyl/Uf4M7RLxCzB3d83K/i4/HV6gP4y846ib/Af1edQd1X
3QBPqvcS/wT/D3VV+e14HfV6rB7/b+e35O/AmnA3YOntx/PujzlZ7mvuX1gT
7iyZatgPcS8T9yv6GeM5hkxi+zdlZsesHteAmFfjmuznk01urn1BuQncg+pX
nHNK/Wo8D+GvkC/J+U/9Hp4R74cni9lBZof6SeePiJlS7zq/dzy/cH59/iH7
p/g7ufd6TeA/ENcL7j5uUzwpdza3OrY0vuNiTsFH45ni+UbMffZvyV3Rz86d
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
+///FqkE9/8A86mlhA==
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$3426423#1"]& ]}}], {}}, {
                   GridLines -> Dynamic[
                    Join[{{{3.3135264*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.4712928*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.6290592*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.7868256*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.9446784*^9, 
                    Directive[
                    GrayLevel[0.9]]}}, {0, 2500, 5000, 7500, 10000, 12500, 
                    15000, 17500}}, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x$, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y$, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x$, 
                    GrayLevel[0.7]}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y$, 
                    GrayLevel[0.7]}}}}], 2]], FrameTicks -> {{{{0., 
                    FormBox[
                    TagBox["0", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {2500., 
                    FormBox[
                    TagBox["2500", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {5000., 
                    FormBox[
                    TagBox["5000", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {7500., 
                    FormBox[
                    TagBox["7500", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {10000., 
                    FormBox[
                    TagBox["10000", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {12500., 
                    FormBox[
                    TagBox["12500", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {15000., 
                    FormBox[
                    TagBox["15000", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {500., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {1000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {1500., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {3000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {3500., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {4000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {4500., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {5500., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {6000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {6500., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {7000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {8000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {8500., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {9000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {9500., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {10500., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {11000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {11500., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {12000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {13000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {13500., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {14000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {14500., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {15500., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {16000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}}, {{0., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {2500., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {5000., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {7500., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {10000., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {12500., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {15000., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {500., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {1000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {1500., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {3000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {3500., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {4000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {4500., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {5500., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {6000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {6500., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {7000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {8000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {8500., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {9000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {9500., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {10500., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {11000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {11500., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {12000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {13000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {13500., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {14000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {14500., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {15500., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {16000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}}}, {{{3.3135264*^9, 
                    FormBox[
                    StyleBox["\"2005\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.4712928*^9, 
                    FormBox[
                    StyleBox["\"2010\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.6290592*^9, 
                    FormBox[
                    StyleBox["\"2015\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.7868256*^9, 
                    FormBox[
                    StyleBox["\"2020\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.9446784*^9, 
                    FormBox[
                    StyleBox["\"2025\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}}, {{3.3135264*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.4712928*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.6290592*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.7868256*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.9446784*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.3135264*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.3450624*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.3765984*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.4081344*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.4397568*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.4712928*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.4712928*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.5028288*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.5343648*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.5659872*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.5975232*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.6290592*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.6290592*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.6605952*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.6922176*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.7237536*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.7552896*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.7868256*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.7868256*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.818448*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.849984*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.88152*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.913056*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.9446784*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}}}}, ImagePadding -> All, 
                    GridLines -> {{{3.3135264*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.4712928*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.6290592*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.7868256*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.9446784*^9, 
                    Directive[
                    GrayLevel[0.9]]}}, Automatic}, PlotRangePadding -> None, 
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {3.405456*^9, 0}, 
                    FrameTicks -> {{Automatic, {{0., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {5000., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {10000., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {15000., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {1000., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2000., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3000., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {4000., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {6000., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {7000., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {8000., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {9000., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {11000., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {12000., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {13000., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {14000., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {16000., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {17000., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {18000., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {19000., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {20000., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}}}, {Automatic, {{3.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.6*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.7*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.8*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.4*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.42*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.44*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.46*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.48*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.52*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.54*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.56*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.58*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.62*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.64*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.66*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.68*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.72*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.74*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.76*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.78*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.82*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.84*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.86*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.88*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.9*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}}}}, GridLines -> {{{3.3135264*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.4712928*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.6290592*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.7868256*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.9446784*^9, 
                    Directive[
                    GrayLevel[0.9]]}}, Automatic}, DisplayFunction -> 
                    Identity, 
                    PlotRangePadding -> {{None, None}, {None, None}}, 
                    PlotRangeClipping -> True, ImagePadding -> All, 
                    DisplayFunction -> Identity, AspectRatio -> 0.2, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {3.405456*^9, 0}, AxesStyle -> Directive[
                    GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1], BaseStyle -> AbsoluteThickness[1], 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1], 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {{{3.3135264*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.4712928*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.6290592*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.7868256*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.9446784*^9, 
                    Directive[
                    GrayLevel[0.9]]}}, Automatic}, GridLinesStyle -> 
                    GrayLevel[0.9], ImageSize -> Full, 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> PointSize[Medium], 
                    "PointSizeFunction" -> "SmallPointSize", 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}, "AxesInFront" -> True}, 
                    PlotRange -> {{3.405456*^9, 3.8656224*^9}, {
                    0, 16301.186265359593`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{None, None}, {None, None}}, Prolog -> {
                    Opacity[0], 
                    TagBox[
                    RectangleBox[
                    Scaled[{0, 0}], 
                    Scaled[{1, 1}]], Annotation[#, "DatePlot", "Frame"]& ]}, 
                    Ticks -> {Automatic, Automatic}}], 
                  TagBox[
                   GridBox[{{
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"in hits per day\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"]}, "Labeled", DisplayFunction -> (FormBox[
                   GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    
                    ItemBox[#2, Alignment -> {Left, Inherited}, 
                    DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], TraditionalForm]& ), 
                 InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Labeled", FontFamily -> "Roboto", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{#, ",", 
                    RowBox[{"{", #2, "}"}], ",", 
                    TemplateBox[{
                    GridBox[{{
                    StyleBox[
                    "Bottom", FontFamily -> "Roboto", 
                    FontSize -> -1 + Inherited], 
                    StyleBox[
                    "Left", FontFamily -> "Roboto", 
                    FontSize -> -1 + Inherited]}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center]}, "Matrix", 
                    DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                    InterpretationFunction -> (#& )]}], "]"}]& )]}, {
                PaneBox[
                 TagBox[
                  StyleBox[
                   RowBox[{"\"(\"", "\[NoBreak]", 
                    
                    TemplateBox[{
                    "\"based on monthly averages of daily hits to English\
\[Hyphen]language \"", 
                    TagBox[
                    StyleBox[
                    
                    TemplateBox[{"\"\\\"\"", "\"oxygen\"", "\"\\\"\""}, 
                    "RowDefault"], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], Annotation[#, {
                    "URL" -> "http://en.wikipedia.org/wiki?curid=22303", 
                    "Popup" -> "link to Wikipedia", "OneClick" -> False}, 
                    "ExternalLink"]& ], "\" page\""}, "RowDefault"], 
                    "\[NoBreak]", "\")\""}], {
                   FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 BaseStyle -> {LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"computabledata,formatteddata,timeseriesdata"}]}], 
     
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Log scale", "input" -> 
         "PopularityPod:WikipediaStatsData__Log scale"}, {}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`aux6$$ = {True, False, {False}, True},
    Typeset`aux7$$ = {True, False, {False}, True}, Typeset`aux8$$ = {
   True, False, {False}, True}, Typeset`aux9$$ = {True, False, {False}, True},
    Typeset`aux10$$ = {True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "1"}, {
      XMLElement[
      "assumption", {
       "type" -> "Clash", "word" -> "oxygen", "template" -> 
        "Assuming \"oxygen\" is a chemical element${separator}Use as ${desc} \
or ${desc} or ${desc} instead", "count" -> "4", "pulldown" -> "false", 
        "default" -> "{\"C\", \"oxygen\"} -> {\"Element\", \"dflt\"}"}, {
        XMLElement[
        "value", {
         "name" -> "Element", "desc" -> "a chemical element", "input" -> 
          "{\"C\", \"oxygen\"} -> {\"Element\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Chemical", "desc" -> "a chemical compound", "input" -> 
          "{\"C\", \"oxygen\"} -> {\"Chemical\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Movie", "desc" -> "a movie", "input" -> 
          "{\"C\", \"oxygen\"} -> {\"Movie\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Word", "desc" -> "a word", "input" -> 
          "{\"C\", \"oxygen\"} -> {\"Word\"}"}, {}]}]}], 
    XMLElement["sources", {"count" -> "4"}, {
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
AtomicLineDataSourceInformationNotes.html", "text" -> 
        "Atomic line data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
ChemicalDataSourceInformationNotes.html", "text" -> "Chemical data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
ElementDataSourceInformationNotes.html", "text" -> "Element data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
IsotopeDataSourceInformationNotes.html", "text" -> "Isotope data"}, {}]}]}, 
   Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True], 
   Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "13", "datatypes" -> "AtomicLine,Chemical,Element,Isotope", 
    "timedout" -> "", "timedoutpods" -> "", "timing" -> "1.539", 
    "parsetiming" -> "0.11800000000000001", "parsetimedout" -> "false", 
    "recalculate" -> "", "id" -> 
    "MSP3940129e9g3g76dgi7ic00001a7hbib9dd938956", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "1", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa3941129e9g3g76dgi7ic000050g931h9dcg0ci967794153569472399936", "version" -> 
    "2.6", "inputstring" -> "oxygen"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 3., 
    "Date" -> {2022, 12, 6, 10, 41, 57.6967`8.513725947725865}, "Line" -> 4, 
    "SessionID" -> 23578867866504654728}, Typeset`showpods$$ = {1, 2, 3, 4, 5,
    6, 7, 8, 9, 10, 11, 12, 13}, Typeset`failedpods$$ = {}, 
   Typeset`chosen$$ = {
   "Fast parse", "Fast parse", 1, 0, "Input", 
    "Entity[\"Element\", \"Oxygen\"]"}, Typeset`open$$ = True, 
   Typeset`newq$$ = "oxygen"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{560., {3096., 23.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",ExpressionUUID->\
"ddcc2926-1042-4701-820f-c154ac7bc693"],

Cell[BoxData[
 TemplateBox[{"\"oxygen\"", 
   RowBox[{"Entity", "[", 
     RowBox[{"\"Element\"", ",", "\"Oxygen\""}], "]"}], 
   "\"Entity[\\\"Element\\\", \\\"Oxygen\\\"]\"", "\"element\""},
  "Entity"]], "Output",
 CellChangeTimes->{3.8793013114458838`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"a1791b71-a010-48fb-af2b-48645bd8e18d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Wolfram Alpha \:043e\:0431 \:0446\:0432\:0435\:0442\:0435", "Subsection",
 CellChangeTimes->{{3.8793014660111713`*^9, 
  3.87930149320352*^9}},ExpressionUUID->"3485b5e8-4b05-420b-a58b-\
44ea4d337d22"],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "yellow", Typeset`opts$$ = {
   AppearanceElements -> {
     "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "Fast parse", "Fast parse", 1, 0, "Input", "Yellow"}, "ExtrusionOpen" -> 
      True, "Formats" -> {
       "cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {
   "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
    
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Yellow"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               TemplateBox[{"\"yellow\"", "\"  \"", 
                 StyleBox[
                  
                  RowBox[{
                   "\"(\"", "\[NoBreak]", "\"color\"", "\[NoBreak]", 
                    "\")\""}], {
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}, "RowDefault"], LineIndent -> 0], TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Color swatch", "scanner" -> "Data", "id" -> 
     "ColorSwatch:ColorData", "position" -> "200", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GraphicsBox[{
               EdgeForm[{
                 Thickness[Tiny], 
                 RGBColor[
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0]}], 
               RGBColor[1, 1, 0], 
               RectangleBox[{0, 0}]}, ImageSize -> 35], Identity], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"computabledata,formatteddata,numberdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Nearest representations", "scanner" -> "Data", "id" -> 
     "ColorSchemaConversions:ColorData", "position" -> "300", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Dataset[EntityValue[Entity[\"Color\", {\"WolframLanguage\", \"Yellow\
\"}], {EntityProperty[\"Color\", \"RGBValue\"], EntityProperty[\"Color\", \
\"HexValue\"], EntityProperty[\"Color\", \"Value\"], \
EntityProperty[\"Color\", \"HSVValue\"], EntityProperty[\"Color\", \"HSLValue\
\"], EntityProperty[\"Color\", \"CMYKValue\"], EntityProperty[\"Color\", \
\"XYZValue\"], EntityProperty[\"Color\", \"CIE1976LabValue\"]}, \
\"PropertyAssociation\"]]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "\"24\[Hyphen]bit RGB\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{
                    StyleBox[
                    TemplateBox[{
                    StyleBox["\"red\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \"", "255", "\"\"", "\"\""}, "RowDefault"], 
                    LineIndent -> 0], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox["\"green\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \"", "255", "\"\"", "\"\""}, "RowDefault"], 
                    LineIndent -> 0], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox["\"blue\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \"", "0", "\"\"", "\"\""}, "RowDefault"], 
                    LineIndent -> 0]}], 
                  LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                  0]}, {
                 TagBox[
                  PaneBox[
                  "\"fractions\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{
                    StyleBox[
                    TemplateBox[{
                    StyleBox["\"red\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \"", "1", "\"\"", "\"\""}, "RowDefault"], 
                    LineIndent -> 0], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox["\"green\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \"", "1", "\"\"", "\"\""}, "RowDefault"], 
                    LineIndent -> 0], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox["\"blue\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \"", "0", "\"\"", "\"\""}, "RowDefault"], 
                    LineIndent -> 0]}], 
                  LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                  0]}, {
                 TagBox[
                  PaneBox[
                  "\"hexadecimal\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], "\"#FFFF00\""}, {
                 TagBox[
                  PaneBox[
                  "\"Wolfram Language\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 RowBox[{
                   TagBox[
                    StyleBox[
                    "RGBColor", FontFamily -> "Roboto", 
                    FontSize -> -1 + Inherited], HoldForm], "[", 
                   RowBox[{"1", ",", "1", ",", "0"}], "]"}]}, {
                 TagBox[
                  PaneBox[
                  "\"HSV\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{
                    StyleBox[
                    TemplateBox[{
                    StyleBox["\"hue\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["60", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "60", "SRString" -> "60"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], 
                    FontFamily -> "Roboto", FontSize -> Smaller]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\"\"", 
                    "\"\""}, "RowDefault"], LineIndent -> 0], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox["\"saturation\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["100", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "100", "SRString" -> "100"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> Smaller]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\"\"", 
                    "\"\""}, "RowDefault"], LineIndent -> 0], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox["\"value\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["100", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "100", "SRString" -> "100"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> Smaller]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\"\"", 
                    "\"\""}, "RowDefault"], LineIndent -> 0]}], 
                  LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                  0]}, {
                 TagBox[
                  PaneBox[
                  "\"HSL\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{
                    StyleBox[
                    TemplateBox[{
                    StyleBox["\"hue\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["60", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "60", "SRString" -> "60"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], 
                    FontFamily -> "Roboto", FontSize -> Smaller]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\"\"", 
                    "\"\""}, "RowDefault"], LineIndent -> 0], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox["\"saturation\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["100", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "100", "SRString" -> "100"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> Smaller]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\"\"", 
                    "\"\""}, "RowDefault"], LineIndent -> 0], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox["\"lightness\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["50", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "50", "SRString" -> "50"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> Smaller]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\"\"", 
                    "\"\""}, "RowDefault"], LineIndent -> 0]}], 
                  LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                  0]}, {
                 TagBox[
                  PaneBox[
                  "\"CMYK\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{
                    StyleBox[
                    TemplateBox[{
                    StyleBox["\"cyan\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0", "SRString" -> "0"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 
                    Smaller]}], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\"\"", 
                    "\"\""}, "RowDefault"], LineIndent -> 0], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox["\"magenta\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0", "SRString" -> "0"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 
                    Smaller]}], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\"\"", 
                    "\"\""}, "RowDefault"], LineIndent -> 0], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox["\"yellow\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["100", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "100", "SRString" -> "100"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> Smaller]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\"\"", 
                    "\"\""}, "RowDefault"], LineIndent -> 0], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox["\"black\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0", "SRString" -> "0"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 
                    Smaller]}], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\"\"", 
                    "\"\""}, "RowDefault"], LineIndent -> 0]}], 
                  LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                  0]}, {
                 TagBox[
                  PaneBox[
                  "\"XYZ\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{
                    StyleBox[
                    TemplateBox[{
                    StyleBox["X", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0.8211", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.8211", "SRString" -> "0.8211"]]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\"\"", 
                    "\"\""}, "RowDefault"], LineIndent -> 0], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox["Y", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0.9394", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.9394", "SRString" -> "0.9394"]]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\"\"", 
                    "\"\""}, "RowDefault"], LineIndent -> 0], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox["Z", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0.111", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.111", "SRString" -> "0.111"]]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\"\"", 
                    "\"\""}, "RowDefault"], LineIndent -> 0]}], 
                  LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                  0]}, {
                 TagBox[
                  PaneBox[
                   TemplateBox[{"\"CIE \"", "\" \"", 
                    
                    TemplateBox[{"L", "*"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], 
                    
                    TemplateBox[{"a", "*"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], 
                    
                    TemplateBox[{"b", "*"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}, "RowDefault"], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    
                    TemplateBox[{"L", "*"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["97.61", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "97.61", "SRString" -> "97.61"]]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\"\"", 
                    "\"\""}, "RowDefault"], LineIndent -> 0], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    
                    TemplateBox[{"a", "*"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    TagBox["15.75", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "15.75", "SRString" -> "15.75"]]}]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\"\"", 
                    "\"\""}, "RowDefault"], LineIndent -> 0], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    
                    TemplateBox[{"b", "*"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["93.39", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "93.39", "SRString" -> "93.39"]]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\"\"", 
                    "\"\""}, "RowDefault"], LineIndent -> 0]}], 
                  LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                  0]}}, GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,numberdata,\
quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> 
         "ColorSchemaConversions:ColorData__More"}, {}]}], 
     XMLElement["definitions", {"count" -> "1"}, {
       XMLElement[
       "definition", {
        "word" -> "XYZ", "desc" -> "CIE 1931 XYZ color space"}, {}]}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Chromaticity diagram location", "scanner" -> "Data", 
     "id" -> "CIEChromaticityDiagram:ColorData", "position" -> "400", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 GraphicsBox[{{
                    GraphicsComplexBox[CompressedData["
1:eJxlljFrVFEQRoNNOq3UKooQq/wDLULKdGojVgHB2ipdunQpY6U2KdNI/AMv
3GbBwgcX2YCCwvN5n17DbdKple7C+cJ8PliWw+zO5jDMN7nz9PmjZ1dWVla+
/nst3v25Nd9am2+92YzciW/sXFzfuZhZvRe/WN8+XN/+IL65/PyZ+PXLxfNJ
fHv5/S/ih6u7D1Z3B+s3is8WH18r1n8SP9mbPd6b/RC/Wv7eT3H8nbeb+Ebu
xPjGei/GF8YXxhfGF8Y39hvF+Mb+kxhfGF84+ibzTeabzDeZbzLfZL7JfJP5
JvNN5pvMN5lvMt9kvkm+fw5Ofh2cvJNv5E6Mb6z3YnxhfGF8YXxhfGO/UYxv
7D+J8YXxheN8s80323yzzTfbfLPNN9t8s80323yzzTfbfLPNN9t8s80323yz
fO8u2h7O5Ru5E+Mb670YXxhfGF8YXxjf2G8U4xv7T2J8YXxhfH8v5/1RvpE7
Mb6x3ovxhfGF8YXxhfGN/UYxvrH/JMYXxhfGt3+/eD7LN3InxjfWezG+ML4w
vjC+ML6x3yjGN/afxPjC+MJ+9+L+Dra/g+3vYPs72P4Otr+D7e9g+zv89x73
d7D9HWx/B9vfwfb38q7fP96/d7w/yjdyJ8Y31nsxvjC+ML4wvjB/V+w3ivGN
/ScxvjC+cMyrYnlVLK+K5VWxvCqWV8XyqlheFcurYnlVLK+K5VWxvCqWV8Xy
6vL/smvnR1fPj77LN3InxjfWezG+ML4wvjC+ML6x3yjGN/afxPjC+MIxn6vl
c7V8rpbP1fK5Wj5Xy+dq+Vwtn6vlc7V8rpbP1fK5Wj5Xy+cq328bp+PG6bl8
I3difGO9F+ML4wvjC+ML4xv7jWJ8Y/9JjC+MLxzvUbN71OweNbtHze5Rs3vU
7B41u0fN7lGze9TsHjW7R83uUbN71Owetc2/wT9s8Q==
                    "], {{{
                    EdgeForm[], 
                    Hue[0.67, 0.6, 0.6], 
                    GraphicsGroupBox[
                    TagBox[{
                    PolygonBox[CompressedData["
1:eJwBIQPe/CFib1JiAgAAAMQAAAAEAAAAAQIREAIDEhEDBBMSCwwbGgwNHBsF
BhUUBgcWFQQFFBMJChkYCgsaGQgJGBcNDh0cFhcmJRARIB8REiEgMjNCQRUW
JSQODx4dExQjIhITIiEXGCcmFBUkIwcIFxYYGSgnGRopKCAhMC8cHSwrHR4t
LBscKyofIC8uJSY1NCEiMTAjJDMyJCU0MyYnNjUoKTg3LzA/PikqOTgqKzo5
GhsqKSwtPDsrLDs6Li8+PTAxQD8xMkFAJyg3NjM0Q0IiIzIxNDVEQ1ZXZmU5
OklINjdGRTc4R0ZAQVBPODlIRz9AT046O0pJPT5NTD4/Tk07PEtKQUJRUElK
WVhDRFNSREVUU0VGVVRCQ1JRRkdWVUhJWFdHSFdWSktaWUxNXFtNTl1cT1Bf
XtDR4N9UVWRjUVJhYFJTYmFbXGtqU1RjYllaaWhVVmVkV1hnZlhZaGdcXWxr
XV5tbGRldHNfYG9uYGFwb1BRYF9eX25tYWJxcGJjcnFlZnV0Zmd2dWNkc3I1
NkVEZ2h3dmhpeHdqa3p5b3B/fmxtfHttbn18dXaFhG5vfn10dYSDcHGAf3Jz
goFzdIOCcXKBgHZ3hoV/gI+OeXqJiHp7iol7fIuKd3iHhnx9jIt+f46NfX6N
jICBkI+BgpGQgoOSkYOEk5KEhZSTiYqZmIqLmpmGh5aViImYl4uMm5qOj56d
j5CfnoyNnJuNjp2chYaVlJCRoJ+Sk6Khl5inppOUo6KUlaSjlZalpJiZqKeR
kqGgmZqpqJqbqqmbnKuqnJ2sq2tse3qdnq2sn6CvrqOks7KgobCvoaKxsKqr
urmio7Kxqaq5uKSltLOnqLe2qKm4t6usu7qsrby7s7TDwq6vvr2vsL++np+u
ra2uvbywscC/sbLBwLW2xcS2t8bFsrPCwaantrVOT15dt7jHxrm6yci9vs3M
vr/Ozbu8y8q8vczLv8DPzsLD0tHExdTTwMHQz8HC0dC6u8rJxcbV1MfI19bL
zNvayMnY18nK2djKy9rZzM3c28bH1tXNzt3czs/e3c/Q3964ucjH0dLh4IBH
XJA=
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$462749#1"]& ]]}, {}, {}, {}, {}}, {{
                    
                    Directive[
                    RGBColor[0.39598880819409377`, 0.24, 0.6]], 
                    
                    LineBox[{2, 1, 16, 31, 46, 61, 76, 91, 106, 121, 136, 151,
                     166, 181, 196, 211, 212, 213, 214, 215, 216, 217, 218, 
                    219, 220, 221, 222, 223, 224, 225, 210, 195, 180, 165, 
                    150, 135, 120, 105, 90, 75, 60, 45, 30, 15, 14, 13, 12, 
                    11, 10, 9, 8, 7, 6, 5, 4, 3, 2}, VertexColors -> None]}}},
                     VertexColors -> CompressedData["
1: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
                    "]], {}}, {
                    GrayLevel[1], 
                    
                    PolygonBox[{{-1, -1}, {2, -1}, {2, 2}, {-1, 
                    2}, {-1, -1}, {0.17556023175572394`, 
                    0.005293837011448581}, {0.17536359983998115`, 
                    0.0052756835086245945`}, {0.1751832266012616, 
                    0.005258496695871006}, {0.17501613456134835`, 
                    0.005241761371297277}, {0.17485934624202448`, 
                    0.0052249623330128635`}, {0.17471437050588853`, 
                    0.0052163258794187175`}, {0.1745686949050439, 
                    0.005196758206671449}, {0.17438655342162454`, 
                    0.005118554549985008}, {0.1741952098896991, 
                    0.005010211750772774}, {0.174076658262699, 
                    0.004958307077092231}, {0.1740319916403864, 
                    0.004969697904826961}, {0.17397805595937796`, 
                    0.004970995982340718}, {0.1738828384979183, 
                    0.004938548694005485}, {0.17377499442337, 
                    0.004916451373271851}, {0.17366187093994412`, 
                    0.004924337941529843}, {0.17354925119098794`, 
                    0.004918081234377825}, {0.1734486993895146, 
                    0.00485908475496034}, {0.17333937108826114`, 
                    0.0047978877665547405`}, {0.17320523972156368`, 
                    0.004777308086019989}, {0.17304684766317197`, 
                    0.00477439049264027}, {0.17285397285329213`, 
                    0.004781308166369025}, {0.17263866621817262`, 
                    0.004794854359209058}, {0.172422288975678, 
                    0.004798191913592145}, {0.17218989201904114`, 
                    0.004814961802891915}, {0.17192576940040152`, 
                    0.0048764409814174145`}, {0.17160799184654643`, 
                    0.005002736369540446}, {0.17119682786308751`, 
                    0.0052171085166790344`}, {0.17068304004872895`, 
                    0.0055306515237927515`}, {0.17010081918061948`, 
                    0.00593472421689477}, {0.16945646115957932`, 
                    0.00643183330154858}, {0.16870349387244327`, 
                    0.007039618137338212}, {0.16781244062254633`, 
                    0.0077705757635202774`}, {0.16680771951269083`, 
                    0.008635354723008295}, {0.16571159830926377`, 
                    0.009649611775946724}, {0.16446842472034728`, 
                    0.010805265069488198`}, {0.16304535985452714`, 
                    0.012079786021384634`}, {0.16140730253026808`, 
                    0.013527119145756683`}, {0.1595032707835204, 
                    0.015194596641146224`}, {0.1573367841947519, 
                    0.017092933641790545`}, {0.15491507641595717`, 
                    0.019202854009223724`}, {0.15222038871706767`, 
                    0.021604634825459216`}, {0.14922625578990492`, 
                    0.024376548255645374`}, {0.14592217167251953`, 
                    0.02763548063723386}, {0.14235309321074113`, 
                    0.031421725349965055`}, {0.13845603390311093`, 
                    0.03599689856485891}, {0.13398682160551256`, 
                    0.04199140479943818}, {0.12880278921251914`, 
                    0.049864667435636056`}, {0.12294935746728373`, 
                    0.059876037156560105`}, {0.11641258374966156`, 
                    0.07232999394622402}, {0.10910279780366018`, 
                    0.08794688639714918}, {0.10094787984638058`, 
                    0.10733595324555739`}, {0.09190235575853702, 
                    0.1310304911413033}, {0.08167262427194437, 
                    0.15966036581555584`}, {0.07082155434608398, 
                    0.19358768351714645`}, {0.059817416957095595`, 
                    0.2335985680996362}, {0.048851369406004534`, 
                    0.27927416674104816`}, {0.03797071645875126, 
                    0.33083590189447737`}, {0.027690510611921567`, 
                    0.38679976162910523`}, {0.018669888762176158`, 
                    0.44532119245236657`}, {0.011395738571790347`, 
                    0.5046749878340863}, {0.006320691593521946, 
                    0.5628236008715106}, {0.0038610834905612426`, 
                    0.6181624727884985}, {0.0043831868952121, 
                    0.669726304100396}, {0.008220758402066552, 
                    0.7162948349158103}, {0.015377506940553749`, 
                    0.7564530641698093}, {0.026045353124646443`, 
                    0.7887586566525424}, {0.03947841456673645, 
                    0.8128086626298999}, {0.05529065855542668, 
                    0.8270334974207783}, {0.07275942793154874, 
                    0.833566714456559}, {0.09111773885318163, 
                    0.8331658706070437}, {0.1100821266945993, 
                    0.827814693322161}, {0.12925202281557857`, 
                    0.8196942165161936}, {0.14831319807154394`, 
                    0.809610085059285}, {0.16676071977899662`, 
                    0.7987285025281501}, {0.18463800929019178`, 
                    0.7872526041667259}, {0.20216210130103304`, 
                    0.7750775111100823}, {0.21942612394280397`, 
                    0.7622613087118403}, {0.23652647927799422`, 
                    0.7488150767131858}, {0.2535320038434578, 
                    0.7347860975047882}, {0.270445807373137, 
                    0.7202634536743228}, {0.2872950362902006, 
                    0.7053192150787574}, {0.304108662964538, 
                    0.6900067121662545}, {0.3209194884693519, 
                    0.674386687233604}, {0.33772095745463904`, 
                    0.658508139814946}, {0.3545253946371649, 
                    0.6424243263849768}, {0.37131640832892465`, 
                    0.6261854218697829}, {0.3880925479761988, 
                    0.6098478530853221}, {0.40482782572907294`, 
                    0.5934493060638648}, {0.421505178172087, 
                    0.5770285686473562}, {0.4380919152213715, 
                    0.5606306420948011}, {0.45455822194656975`, 
                    0.5442967791090849}, {0.47086552683183763`, 
                    0.5280791043098605}, {0.48697231906181726`, 
                    0.5120325430631746}, {0.5028371368677546, 
                    0.49621291105484616`}, {0.5184197634646172, 
                    0.4806807067266449}, {0.5336747842055273, 
                    0.46549218358877364`}, {0.5485452412186969, 
                    0.45069659351502667`}, {0.5629773585037835, 
                    0.4363457853199396}, {0.5769019536565851, 
                    0.42248595694695035`}, {0.5902667589336371, 
                    0.4091449118347121}, {0.6029327855757162, 
                    0.3964966335729774}, {0.6146726165974282, 
                    0.38479956475462057`}, {0.6256800327846108, 
                    0.37384125441861654`}, {0.6361219372576182, 
                    0.36344418550327773`}, {0.6458681359177542, 
                    0.3537462949955304}, {0.6547627048542051, 
                    0.34491844622940315`}, {0.6628584600799188, 
                    0.33689234214928726`}, {0.6702316207319516, 
                    0.3295645797072063}, {0.6769190187406181, 
                    0.3228998584173931}, {0.6829419614901258, 
                    0.3168889330927986}, {0.6883461584437284, 
                    0.311493064762896}, {0.6932005616270809, 
                    0.30665484041154656`}, {0.6975633767640905, 
                    0.30232089566421777`}, {0.7014872591587333, 
                    0.29842479534850047`}, {0.7050269267617462, 
                    0.2949046931597014}, {0.7082512222035675, 
                    0.2916948730181046}, {0.7112410674905182, 
                    0.28871383433473913`}, {0.7139761081705562, 
                    0.2859842711575483}, {0.7164637478609328, 
                    0.28350037586136473`}, {0.7187167593249135, 
                    0.28125061157720627`}, {0.7207547027301163, 
                    0.2792172735672014}, {0.722569721388469, 
                    0.2774082902394775}, {0.7241368297435044, 
                    0.27585045341214154`}, {0.7254930940127818, 
                    0.27450378547165555`}, {0.7266949625626657, 
                    0.27330619557043784`}, {0.7277603240606225, 
                    0.27224045873932134`}, {0.7286948950132419, 
                    0.2713051049867581}, {0.7295047982564321, 
                    0.2704952017435679}, {0.7301776766397369, 
                    0.269822323360263}, {0.7307192678881747, 
                    0.26928073211182535`}, {0.7311888977627051, 
                    0.2688111022372949}, {0.7316287025328848, 
                    0.26837129746711524`}, {0.7320247435006082, 
                    0.2679752564993918}, {0.732376149352635, 
                    0.26762385064736505`}, {0.7327051542604087, 
                    0.2672948457395912}, {0.7330388382846801, 
                    0.26696116171532}, {0.7333630813818561, 
                    0.266636918618144}, {0.7336829648123552, 
                    0.26631703518764493`}, {0.7339713327741839, 
                    0.2660286672258161}, {0.7341850648375982, 
                    0.26581493516240184`}, {0.7343375767131999, 
                    0.2656624232868001}, {0.734456905848058, 
                    0.265543094151942}, {0.7345507388706178, 
                    0.26544926112938216`}, {0.734620713363792, 
                    0.265379286636208}, {0.7346694785861829, 
                    0.2653305214138171}, {0.7346938888911683, 
                    0.2653061111088318}, {0.7346953465406071, 
                    0.26530465345939297`}, {0.7346921261616721, 
                    0.26530787383832777`}, {0.7346991164284454, 
                    0.26530088357155457`}, {0.7346856553828995, 
                    0.2653143446171004}, {0.7346099153920321, 
                    0.26539008460796787`}, {0.7345499018795552, 
                    0.26545009812044484`}, {0.7346004599906061, 
                    0.2653995400093939}, {0.7346766671161696, 
                    0.2653233328838303}, {0.7346990610632237, 
                    0.2653009389367762}, {0.7346934810949736, 
                    0.26530651890502643`}, {0.7346899827941388, 
                    0.26531001720586117`}, {0.7346899591162742, 
                    0.26531004088372573`}, {0.7346899587513279, 
                    0.265310041248672}, {0.734689979448047, 
                    0.26531002055195285`}, {0.7346899970449323, 
                    0.2653100029550676}, {0.7346900038402209, 
                    0.2653099961597791}, {0.7346900052677908, 
                    0.26530999473220923`}, {0.7346900023320355, 
                    0.2653099976679646}, {0.734690000880342, 
                    0.2653099991196582}, {0.734690006235616, 
                    0.2653099937643841}, {0.7346900107878785, 
                    0.2653099892121215}, {0.7346900101258405, 
                    0.2653099898741596}, {0.7346900028459842, 
                    0.2653099971540159}, {0.7346899820899148, 
                    0.2653100179100853}, {0.7346899572281275, 
                    0.26531004277187265`}, {0.7346899326769708, 
                    0.2653100673230292}, {0.7346899190526232, 
                    0.2653100809473769}, {0.7346899412375943, 
                    0.2653100587624056}, {0.7346899821666248, 
                    0.2653100178333752}, {0.7346900001958658, 
                    0.26530999980413417`}, {0.7346899924207384, 
                    0.26531000757926154`}, {0.7346899843024212, 
                    0.26531001569757884`}, {0.734689983454365, 
                    0.265310016545635}, {0.7346899845298409, 
                    0.26531001547015914`}, {0.7346899865757621, 
                    0.2653100134242378}, {0.7346899831410453, 
                    0.2653100168589546}, {0.734689967020282, 
                    0.265310032979718}, {0.7346899540024436, 
                    0.2653100459975564}, {0.734689961026772, 
                    0.2653100389732281}, {0.7346899732507743, 
                    0.26531002674922577`}, {0.7346899813168498, 
                    0.26531001868315024`}, {0.7346899870040634, 
                    0.2653100129959366}, {0.7346899894594975, 
                    0.26531001054050246`}, {0.7346899904175132, 
                    0.26531000958248674`}, {0.7346899924350723, 
                    0.2653100075649276}, {0.7346899958253966, 
                    0.26531000417460326`}, {0.7346900017758548, 
                    0.26530999822414525`}, {0.7346900080492961, 
                    0.265309991950704}, {0.7346900062647306, 
                    0.2653099937352694}, {0.7346899943092736, 
                    0.2653100056907265}, {0.7346899821325252, 
                    0.26531001786747477`}, {0.7346899749411026, 
                    0.26531002505889756`}, {0.7346899691617546, 
                    0.26531003083824545`}, {0.7346899640304887, 
                    0.26531003596951136`}, {0.734689958783312, 
                    0.26531004121668794`}, {0.17556023175572394`, 
                    0.005293837011448581}}]}, {{
                    GrayLevel[1], 
                    EdgeForm[
                    Opacity[0.5]], 
                    DiskBox[{0.17556023175572394`, 0.005293837011448581}, 
                    Offset[{2, 2}]], 
                    InsetBox[
                    FormBox[
                    StyleBox["360", 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm], 
                    
                    Offset[{-4, 0}, {0.17556023175572394`, 
                    0.005293837011448581}], {Right, Center}]}, {
                    GrayLevel[1], 
                    EdgeForm[
                    Opacity[0.5]], 
                    DiskBox[{0.10959432361561004`, 0.08684251118309425}, 
                    Offset[{2, 2}]], 
                    InsetBox[
                    FormBox[
                    StyleBox["475", 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm], 
                    
                    Offset[{-4, 0}, {0.10959432361561004`, 
                    0.08684251118309425}], {Right, Center}]}, {
                    GrayLevel[1], 
                    EdgeForm[
                    Opacity[0.5]], 
                    DiskBox[{0.008168028004667443, 0.5384230705117519}, 
                    Offset[{2, 2}]], 
                    InsetBox[
                    FormBox[
                    StyleBox["500", 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm], 
                    
                    Offset[{-4, 0}, {0.008168028004667443, 
                    0.5384230705117519}], {Right, Center}]}, {
                    GrayLevel[1], 
                    EdgeForm[
                    Opacity[0.5]], 
                    DiskBox[{0.11416071960667964`, 0.8262069597811889}, 
                    Offset[{2, 2}]], 
                    InsetBox[
                    FormBox[
                    StyleBox["525", 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm], 
                    
                    Offset[{2, 2}, {0.11416071960667964`, 
                    0.8262069597811889}], {Left, Bottom}]}, {
                    GrayLevel[1], 
                    EdgeForm[
                    Opacity[0.5]], 
                    DiskBox[{0.3016037993957512, 0.6923077623715742}, 
                    Offset[{2, 2}]], 
                    InsetBox[
                    FormBox[
                    StyleBox["550", 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm], 
                    
                    Offset[{2, 2}, {0.3016037993957512, 
                    0.6923077623715742}], {Left, Bottom}]}, {
                    GrayLevel[1], 
                    EdgeForm[
                    Opacity[0.5]], 
                    DiskBox[{0.47877479115758365`, 0.5202023072114564}, 
                    Offset[{2, 2}]], 
                    InsetBox[
                    FormBox[
                    StyleBox["575", 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm], 
                    
                    Offset[{2, 2}, {0.47877479115758365`, 
                    0.5202023072114564}], {Left, Bottom}]}, {
                    GrayLevel[1], 
                    EdgeForm[
                    Opacity[0.5]], 
                    DiskBox[{0.6270365997638725, 0.3724911452184179}, 
                    Offset[{2, 2}]], 
                    InsetBox[
                    FormBox[
                    StyleBox["600", 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm], 
                    
                    Offset[{2, 2}, {0.6270365997638725, 
                    0.3724911452184179}], {Left, Bottom}]}, {
                    GrayLevel[1], 
                    EdgeForm[
                    Opacity[0.5]], 
                    DiskBox[{0.7346900232582808, 0.26530997674171924`}, 
                    Offset[{2, 2}]], 
                    InsetBox[
                    FormBox[
                    StyleBox["700", 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm], 
                    
                    Offset[{2, 2}, {0.7346900232582808, 
                    0.26530997674171924`}], {Left, Bottom}]}}}, {Epilog -> {{
                    GrayLevel[0], 
                    PointSize[0.035], 
                    TagBox[
                    TooltipBox[
                    PointBox[{0.4387462284064283, 0.5019253327328704}], 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    
                    TemplateBox[{
                    "0.4387462284064283`", "\", \"", "0.5019253327328704`"}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]], Annotation[#, 
                    $CellContext`GrayComment[
                    Row[{0.4387462284064283, ", ", 0.5019253327328704}]], 
                    "Tooltip"]& ], 
                    RGBColor[1, 1, 0], 
                    PointSize[0.03], 
                    TagBox[
                    TooltipBox[
                    PointBox[{0.4387462284064283, 0.5019253327328704}], 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    
                    TemplateBox[{
                    "0.4387462284064283`", "\", \"", "0.5019253327328704`"}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]], Annotation[#, 
                    $CellContext`GrayComment[
                    Row[{0.4387462284064283, ", ", 0.5019253327328704}]], 
                    "Tooltip"]& ]}}, Frame -> False, Axes -> False, 
                   PlotRange -> {{0, 0.8}, {0, 0.9}}, 
                   ImagePadding -> {{30, 20}, {5, 0}}, ImageSize -> 220., 
                   DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.05], 
                    Scaled[0.05]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> False, ImagePadding -> 
                   All, DisplayFunction -> Identity, Axes -> {True, True}, 
                   AxesLabel -> {None, None}, 
                   AxesOrigin -> {Automatic, Automatic}, AxesStyle -> 
                   Directive[
                    AbsoluteThickness[0.2]], BaseStyle -> Automatic, 
                   DisplayFunction :> Identity, Frame -> True, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    AbsoluteThickness[0.2]], 
                   FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLinesStyle -> Automatic, 
                   Method -> {
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "ScalingFunctions" -> None, "TransparentPolygonMesh" -> 
                    True, "AxesInFront" -> True}, 
                   PlotRange -> {{0., 0.8}, {0., 0.9}}, PlotRangePadding -> {
                    Scaled[0.02], 
                    Scaled[0.02]}, Ticks -> {Automatic, Automatic}}]}, {
                 PaneBox[
                  TagBox[
                   PaneBox[
                    TagBox[
                    Cell[
                    TextData[{
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    
                    TemplateBox[{
                    "x", "\", \"", "y", "\" values from \"", "xyY", 
                    "\" representation projected on to CIE 1931 xy \
chromaticity diagram\""}, "RowDefault"], "\[NoBreak]", "\")\""}], 
                    TraditionalForm]]], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}]], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    BaseStyle -> {LineIndent -> 0}], 
                   $CellContext`TagBoxWrapper["Label"]], 
                  BaseStyle -> {LineIndent -> 0}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
               "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], ImageSizeMultipliers -> {1, 1}, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Nearest named HTML colors", "scanner" -> "Data", "id" -> 
     "NearestNamedHTML:ColorData", "position" -> "500", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "\"\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"HTML name\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"hexadecimal\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                   TagBox[
                    GridBox[{{"\"24\[Hyphen]bit RGB\""}, {
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    "\"red\"", {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    "\"green\"", {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    "\"blue\"", {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], LinebreakAdjustments -> {1, 10, 0, 0, 100}, 
                    LineIndent -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]]}, {
                 TagBox[
                  PaneBox[
                   TagBox[
                    GraphicsBox[{
                    EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[0.6666666666666667, 0.6666666666666667, 0]}], 
                    RGBColor[1., 1., 0], 
                    RectangleBox[{0, 0}]}, ImageSize -> 20], Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], "\"yellow\"", 
                 "\"#FFFF00\"", 
                 StyleBox[
                  RowBox[{"255", 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], "255", 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], "0"}], 
                  LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                  0]}, {
                 TagBox[
                  PaneBox[
                   TagBox[
                    GraphicsBox[{
                    EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[0.6666666666666667, 0.5620915032679739, 0]}], 
                    RGBColor[1., 0.8431372549019608, 0], 
                    RectangleBox[{0, 0}]}, ImageSize -> 20], Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], "\"gold\"", 
                 "\"#FFD700\"", 
                 StyleBox[
                  RowBox[{"255", 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], "215", 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], "0"}], 
                  LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                  0]}}, GridBoxAlignment -> {
                "Columns" -> {Left, Left, Left, Left}, "Rows" -> {{Baseline}},
                  "ItemsIndexed" -> {{1, 1} -> {Center, Baseline}, {1, 2} -> {
                    Center, Baseline}, {1, 3} -> {Center, Baseline}, {1, 
                    4} -> {Center, Baseline}}}, AutoDelete -> False, 
               GridBoxBackground -> {
                "Columns" -> {None, None}, "Rows" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> 
         "NearestNamedHTML:ColorData__More"}, {}]}]}], Typeset`pod6$$ = 
   XMLElement[
   "pod", {"title" -> "Nearest Pantone colors", "scanner" -> "Data", "id" -> 
     "NearestPMS:ColorData", "position" -> "600", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    PaneBox[
                    GraphicsBox[{
                    EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[0.6666666666666667, 0.6666666666666667, 0.]}], 
                    CMYKColor[0, 0, 1, 0], 
                    RectangleBox[{0, 0}]}, ImageSize -> 20], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"Process Yellow\""}, "RowDefault"], 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ColorData, {"Process Yellow"}}]], 
                    Identity]}, {
                    TagBox[
                    PaneBox[
                    GraphicsBox[{
                    EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[0.6666666666666667, 0.6666666666666667, 0.]}], 
                    CMYKColor[0., 0., 1., 0.], 
                    RectangleBox[{0, 0}]}, ImageSize -> 20], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"Pro. Yel. EC\"", "\" \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"Euro coated\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ColorData, {"Pro. Yel. EC"}}]], Identity]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Left, {Left}}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxBackground -> {"Columns" -> {None, None}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False]}, {
                StyleBox[
                 
                 RowBox[{
                  "\"(\"", "\[NoBreak]", "\"screen approximations\"", 
                   "\[NoBreak]", "\")\""}], {
                 FontFamily -> "Roboto", FontSize -> 10, 
                  GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> "NearestPMS:ColorData__More"}, {}]}]}], 
   Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Nearest brand colors", "scanner" -> "Data", "id" -> 
     "NearestNamedBrand:ColorData", "position" -> "700", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   TagBox[
                    GraphicsBox[{
                    EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[0.6666666666666667, 0.6666666666666667, 0.]}], 
                    RGBColor[1., 1., 0.], 
                    RectangleBox[{0, 0}]}, ImageSize -> 20], Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox["\"Office Max trademark yellow\"", Identity]}, {
                 TagBox[
                  PaneBox[
                   TagBox[
                    GraphicsBox[{
                    EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0.5333333333333334, 
                    0]}], 
                    RGBColor[1, 0.8, 0], 
                    RectangleBox[{0, 0}]}, ImageSize -> 20], Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox["\"Symantec trademark yellow\"", Identity]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> 
         "NearestNamedBrand:ColorData__More"}, {}]}]}], Typeset`pod8$$ = 
   XMLElement[
   "pod", {"title" -> "Related colors", "scanner" -> "Data", "id" -> 
     "RelatedColors:ColorData", "position" -> "800", "error" -> "false", 
     "numsubpods" -> "2"}, {
     XMLElement["subpod", {"title" -> "Complementary colors"}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GraphicsBox[{
                   EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]}], 
                   RGBColor[1, 1, 0], 
                   RectangleBox[{0, 0}]}, ImageSize -> 20], Identity], 
                TagBox[
                 GraphicsBox[{
                   EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[0, 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]}], 
                   RGBColor[0, 0, 1], 
                   RectangleBox[{0, 0}]}, ImageSize -> 20], Identity]}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"computabledata,formatteddata,numberdata"}]}], 
     XMLElement["subpod", {"title" -> "Color triad"}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GraphicsBox[{
                   EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]}], 
                   RGBColor[1, 1, 0], 
                   RectangleBox[{0, 0}]}, ImageSize -> 20], Identity], 
                TagBox[
                 GraphicsBox[{
                   EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[0., 0.6666666666666667, 0.6666666666666667]}], 
                   RGBColor[0., 1., 1.], 
                   RectangleBox[{0, 0}]}, ImageSize -> 20], Identity], 
                TagBox[
                 GraphicsBox[{
                   EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[0.6666666666666667, 0., 0.6666666666666667]}], 
                   RGBColor[1., 0., 1.], 
                   RectangleBox[{0, 0}]}, ImageSize -> 20], Identity]}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"computabledata,formatteddata,numberdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "2"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> "RelatedColors:ColorData__More"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Details", "input" -> 
         "RelatedColors:ColorData__Details"}, {}]}]}], Typeset`pod9$$ = 
   XMLElement[
   "pod", {"title" -> "Color composition", "scanner" -> "Data", "id" -> 
     "ColorComposition:ColorData", "position" -> "900", "error" -> "false", 
     "numsubpods" -> "3"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               StyleBox[
                TemplateBox[{
                  TagBox[
                   GraphicsBox[{
                    EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0.33333333333333337`,
                     0]}], 
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, 0}]}, ImageSize -> 35], Identity], 
                  "\"  \"", 
                  StyleBox[
                   
                   RowBox[{
                    "\"(\"", "\[NoBreak]", "\"orange\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  StyleBox["\" + \"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], AutoSpacing -> True], 
               StyleBox[
                TemplateBox[{
                  TagBox[
                   GraphicsBox[{
                    EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]}], 
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, 0}]}, ImageSize -> 35], Identity], 
                  "\"  \"", 
                  StyleBox[
                   
                   RowBox[{
                    "\"(\"", "\[NoBreak]", "\"green\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               StyleBox[
                TemplateBox[{
                  TagBox[
                   GraphicsBox[{
                    EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[0.6666666666666667, 0.4993466666666667, 0.]}], 
                    RGBColor[1., 0.74902, 0.], 
                    RectangleBox[{0, 0}]}, ImageSize -> 35], Identity], 
                  "\"  \"", 
                  StyleBox[
                   RowBox[{"\"(\"", "\[NoBreak]", 
                    TagBox[
                    TagBox["\"amber\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ColorData, {"Miscellaneous", "Amber"}}]], 
                    Identity], "\[NoBreak]", "\")\""}], {
                   FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  StyleBox["\" + \"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], AutoSpacing -> True], 
               StyleBox[
                TemplateBox[{
                  TagBox[
                   GraphicsBox[{
                    EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[0.3320261437908497, 0.6666666666666667, 0]}], 
                    RGBColor[0.4980392156862745, 1., 0], 
                    RectangleBox[{0, 0}]}, ImageSize -> 35], Identity], 
                  "\"  \"", 
                  StyleBox[
                   
                   RowBox[{
                    "\"(\"", "\[NoBreak]", "\"chartreuse\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             
             RowBox[{"\"(\"", "\[NoBreak]", 
               "\"decomposition based on paint (RYB) color mixing\"", 
               "\[NoBreak]", "\")\""}], {
              GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
              LineIndent -> 0}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "3"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Hide color names", "input" -> 
         "ColorComposition:ColorData__Hide color names"}, {}]}]}], 
   Typeset`pod10$$ = XMLElement[
   "pod", {"title" -> "Spectral location", "scanner" -> "Data", "id" -> 
     "SpectrumLocation:ColorData", "position" -> "1000", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["datasources", {}, {"\n   ", 
         XMLElement["datasource", {}, {"TheWikimediaFoundationIncWikipedia"}],
          "\n  "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            GraphicsBox[{
              GraphicsComplexBox[CompressedData["
1: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
xH3y6yORkwU+Ipv7xFNy7AYtJ+Z/QTb3itfk/O6hv3/ekM39IozcCM+l0x/I
5p7xmTw0Zd9nU7+SzX3jB3kVnleNfpPNvSPcsH98oUqeM+m9yOb+EZn8Cc+x
sKhkcw+JQU7S/82GXd5kcx+JS3bwfBvqQzb3kkTk1muWT6uUlGzuJynI4/Hc
80lNNveUtOQtN5v0vp+BbO4rmck38TxcmY1s7i2+5N+REjXukpts7i/5yOkW
dr9YuCDZ3GOKkCvmCynpVZxs7jMOuTOen+f9yOZeU5Y8M2BshlkVyOZ+U5m8
z/NcrUY295ya5MdT/KJnqUM295365CiZgwd8bEA2957G5ByHfobta0Y2958A
cm08h0e2Jpt7UDty33fbr1brSDb3oSByMJ7PibuSzb2oO/lEsqDdj3uRzf2o
L/kNntvrBpDNPWkwOW6lTAt7DCOb+9JIcsHHw2OXGEM296bx5CZ9Hg2NMols
7k9TyMPxnA+ZTjb3qFnkNSvntpk3l2zuUwvIl/D8bxlMNveqpeT/rtWqnGMF
2dyvVpOTBW468GUt2dyzNpBLeUFoN5PNfWsbuS30YuxOsrl37SFPzA0h3E82
969D5G3QkeRHyeYedoJ8uxmE6hTZ3MfOkv9CXzZdIJt7WQg5wyQIyVWyuZ/d
IFeG7vjdJpt72j1y1/140D8km/vaY/Js6NH1Z2Rzb3tJPhC6ZtWiULK5v70j
P/X8cZFLNve4T+RoSfCg/EI297nv5Jyb8eD7STb3uj/kuuXxIAs//B+b+11E
cn+PrkUhm3tedPKSnnjQxCKb+14c8inoXer4ZHPvS0h+twwPgsRkc/9LRo5f
FIOdkmzugWnIha+UTzUwPdncBzORm0Efy2Ulm3thDvLIcBikXGRzP8xDXgfd
vJ2fbO6JhciXffGBXpRs7oslyF+hp4GlyObeWIacogk+EMuTzf2xErn050vO
3ypkc4+sTm4/Hh8otcjmPlmXPBn6O82fbO6Vjcg79uAbsinZ3C9bkO9ClzO0
Ipt7Zlty+FeL+oe1J5v7ZiA502B8wXUmm3tnN3LVhPiC6Ek2988+5O7Q8Ur9
yeYeOog8twx+QYeSzX10OPkQ9P3+KLK5l44lP++Gn9AEsrmfTibHiI7/wjSy
uafOJOdeMty7yByyua/OJ9cv9GiI1yKyubcuJg+8VOzT+WVkc39dSV7m+ePa
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
GAABHkOOsxFCO568zPPXdSeRC5SFcE4ln5kCgZxBbnyv86Hfs8jvM0Hw5pKH
QUdOLSAnOPQjdF0weXV0CNVSctF6EKQV5IsefVlNbvFu26US68ifC0FINpJH
j4BgbCEnDSkBYSBvSAYB2Eku2RYP+j3kq1vPZJy/n9zmz9eHgw+Rv1fEA/oo
ecJMPIhPkFM9HhbD9zR5K3Qq3jly2T54gF4g3zoWq+C9EHLH2HggXiX/gX6t
uEGeuhIPuNvk9B9PJut8j7yrOB5YD8mVxnoeTOT712qWT/Gc3CU1HjSvyF6B
eKCEkmdB7869I2fxwgPCJe+vhgfBJ3L1eRj4L+Qn0MGm38k9c2OAf5GjDsSg
/iXPP516eMwIo/+xrw8GLyL5SDMMWBRynXXrNu6NTn755Xbb4Fjkfn6ewSDH
moQBiE9efLvV9KoJyXkz4AM6Cfkk9DRRcnKD/e8P/kxJfhsFH4hpyINr4wMu
PTlecL/QNZnIK0JXL5uUlVyoAD5QcpDPDcUHRC5y0wt5LxXLS/4Am01TgDwC
r9vIhcmJNh/8EVqUvBZf/ZdKkIuXxzdAKXKIJ48rQ275oPfDgeXJX6DXAZXI
Y3viC6gqOfmRCDGy1yBvionf4NpkP3/8htUlX182scAdf3K79/veH2xE/un5
4/qm5EkefW9BTnOlXLJOrcjbU+An1JZcvj3+AR3Id6D7yTqRzY8u/4//9f+u
o/2/62j/7zra/7uO9v+uo/2/62j/7zra/7uO9v+uo/2/62j/7zra/7uO9v+u
o/2/62j/7zra/7uO9v+uo/2/62j/7zra/7uO9v+uo/2/62j/7zra/7uO9v+u
o/2/62j/7zra/7uO9v+uo/2/62j/7zra/7uO9v+uo/2/62j/7zra/7uO9v+u
o/2/62j/7zra/7uO9v+uo/2/62j/7zra/7uO9v+uo/2/62j/7zra/7uO9v+u
o/2/62j/7zra/7uO9v+uo/2/62j/7zra/7uO9v+uo/2/62j/7zra/7uO9v+u
o/2/62j/7zra/7uO9v+uo/2/62j/7zra/7uO9v+uo/2/62j/7zra/7uO9v+u
o/2/62j/7zra/7uO9v+uo/2/62j/7zra/7uO9v+uo/2/62j/7zra/7uO9v+u
o/2/62j/7zra/7uO9v+uo/2/62j/7zra/7uO9v+uo/2/62j/7zra/7uO9v+u
o/2/62j/7zra/7uO9v+uo/2/62j/7zra/7uO9v+uo/2/62j/7zra/7uO9v+u
o/2/62j/7zra/7uO9v+uo/2/62j/7zra/7uO9v+uo/2/62j/7zra/7uO9v+u
o/2/62j/7zra/7uO9v+uo/2/62j/7zra/7uO9v/Yf+n/sf/S/2P/pf/H/kv/
j/2X/h/7L/0/9l/6f+y/9P/Yf+n/sf/S/2P/pf/H/kv/j/2X/h/7L/0/9l/6
f+y/9P/Yf+n/sf/S/2P/pf/H/kv/j/2X/h/7L/0/9l/6f+y/9P/Yf+n/sf/S
/2P/pf/H/kv/j/2X/h/7L/0/9l/6f+y/9P/Yf+n/sf/S/2P/pf/H/kv/j/2X
/h/7L/0/9l/6f+y/9P/Yf+n/sf/S/2P/pf/H/kv/j/2X/h/7L/0/9l/6f+y/
9P/Yf+n/sf/S/2P/pf/H/kv/j/2X/h/7L/0/9l/6f+y/9P/Yf+n/sf/S/2P/
pf/H/kv/j/2X/h/7L/0/9l/6f+y/9P/Yf+n/sf/S/2P/pf/H/kv/j/2X/h/7
L/0/9l/6f+y/9P/Yf+n/sf/S/2P/pf/H/kv/j/2X/h/7L/0/9l/6f+y/9P/Y
f+n/sf/S/2P/pf/H/kv/j/2X/h/7L/0/9l/6f+y/9P/Yf+n/sf/S/2P/pf/H
/kv/j/2X/h/7L/0/9l/6f+y/9P/Yf+n/sf/S/2P/pf/H/kv/j/2X/h/7L/0/
9l/6f+y/9P/Yf+n/sf/S/2P/pf/H/kv/j/2X/h/7L/0/9l/6f+y/9P/Yf+n/
sf/S/2P/pf/H/kv/j/2X/h/7L/0/9l/6f+y/9P/Yf+n/sf/S/2P/pf/H/kv/
j/2X/h/7L/0/9l/6f+y/9P/Yf+n/sf/S/2P/pf/H/kv/j/2X/h/7L/0/9l/6
f+y/9P/Yf+n/sf/S/2P/pf/H/kv/j/2X/h/7L/0/9l/6f+y/9P/Yf+n/sf/S
/2P/pf/H/kv/j/2X/h/7L/0/9l/6f+y/9P/Yf+n/sf/S/2P/pf/H/kv/j/2X
/h/7L/0/9l/6f+y/9P/Yf+n/sf/S/2P/pf/H/kv/j/2X/h/7L/0/9l/6f+y/
9P/Yf+n/sf/S/2P/pf/H/kv/j/2X/h/7L/0/9l/6f+y/9P/Yf+n/sf/S/2P/
pf/H/kv/j/2X/h/7L/0/9l/6f+y/9P/Yf+n/sf/S/2P/pf/H/kv/j/2X/h/7
L/0/9l/6f+y/9P/Yf+n/sf/S/2P/pf/H/kv/j/2X/h/7L/0/9l/6f+y/9P/Y
f+n/sf/S/2P/pf/H/kv/j/2X/h/7L/0/9l/6f+y/9P/Yf+n/sf/S/2P/pf/H
/kv/j/2X/h/7L/0/9l/6f+y/9P/Yf+n/sf/S/2P/pf/H/kv/j/2X/h/7L/0/
9l/6f+y/9P/Yf+n/sf/S/2P/pf/H/kv/j/2X/h/7L/0/9l/6f+y/9P/Yf+n/
sf/S/2P/pf/H/kv/7zra/9v3thdZ+3/7/o5K1v7fvse9ydr/2/e5D1n7f/te
T0rW/t++31ORtf+37/kMZO3/7fs+G1n7f/vez03W/t++/wuStf+3PlCMrP2/
9QM/svb/1hcqkLX/t/5Qjaz9v/WJOmTt/61fNCBr/299oxlZ+3/rH63J2v9b
H+lI1v7f+kkXsvb/1ld6kbX/t/4ygKz9v/WZYWTt/63fjCFr/299ZyJZ+3/r
P9PJ2v9bH5pL1v7f+lEwWft/60sryNr/W39aS9b+3/rUZrL2/9avdpK1/7e+
tZ+s/b/1ryNk7f+tj50ia/9v/ewCWft/62tXydr/W3+7Tdb+3/rcA7L2/9bv
npG1/7e+F0rW/t/6n0vW/t/64Bey9v/WD3+Stf+3vviv/3cd7f+tP0Yha/9v
fTIWWft/65fxyNr/W99MTNb+3/pnSrL2/9ZH05O1/7d+mpWs/b/11Zxk7f+t
v+Yna/9vfbYoWft/67elyNr/W98tT9b+3/pvFbL2/9aHa5G1/7d+7E/W/t/6
clOy9v/Wn1uRtf+3Pt2erP2/9evOZO3/rW/3JGv/b/27P1n7f+vjQ8ja/1s/
H0XW/t/6+gSy9v/W36eRtf+3Pj+HrP2/9fuFZO3/re8vI2v/b/1/DVn7f3sP
2ETW/t/eB3aQtf+394K9ZO3/7f3gMFn7f3tPOEnW/t/eF86Ttf+394bLZO3/
7f3hJln7f3uPuE/W/t/eJ56Stf+394rXZO3/7f0ijKz9v71nfCZr/2/vGz/I
2v/be8e//t91tP+394/IZO3/7T0kBln7f3sfiUvW/t/eSxKRtf+395MUZO3/
7T0lLVn7f3tfyUzW/t/eW3zJ2v/b+0s+svb/9h5ThKz9v73POGTt/+29pixZ
+397v6lM1v7f3nNqkrX/t/ed+mTt/+29pzFZ+397/wkga/9v70HtyNr/2/tQ
EFn7f3sv6k7W/t/ej/qStf+396TBZO3/7X1pJFn7f3tvGk/W/t/en6aQtf+3
96hZZO3/7X1qAVn7f3uvWkrW/t/er1aTtf+396wNZO3/7X1rG1n7f3vv2kPW
/t/evw6Rtf+397ATZO3/7X3sLFn7f3svCyFr/2/vZzfI2v/be9o9svb/9r72
mKz9v723vSRr/2/vb+/I2v/be9wnsvb/9j73naz9v73X/SFr/2/vdxHJ2v/b
e150svb/9r4Xh6z9v733JSRr/2/vf8nI2v/be2Aasvb/9j6Yiaz9v70X5iBr
/2/vh3nI2v/be2Ihsvb/9r5Ygqz9v703liFr/2/vj5XI2v/be2R1svb/9j5Z
l6z9v71XNiJr/2/vly3I2v/be2Zbsvb/9r4ZSNb+3947u5G1/7f3zz5k7f/t
PXQQWft/ex8dTtb+395Lx5K1/7f308lk7f/tPXUmWft/e1+dT9b+395bF5O1
/7f315Vk7f/tPXY9Wft/e5/dStb+395rd5O1/7f32wNk7f/tPfcYWft/e989
Q9b+3957L5G1/7f332tk7f/tPfgOWft/ex9+RNb+396LX5C1/7f347dk7f/t
PfkDWft/e1/+Stb+396bf5O1/7f3Zy+y9v/2Hh2NrP2/vU97k7X/t/dqH7L2
//Z+nZSs/T/8X/p/+L/0//B/6f/h/9L/w/+l/4f/S/8P/5f+H/4v/T/8X/p/
+L/0//B/6f/h/9L/w/+l/4f/S/8P/5f+H/4v/T/8X/p/+L/0//B/6f/h/9L/
w/+l/4f/S/8P/5f+H/4v/T/8X/p/+L/0//B/6f/h/9L/w/+l/4f/S/8P/5f+
H/4v/T/8X/p/+L/0//B/6f/h/9L/w/+l/4f/S/8P/5f+H/4v/T/8X/p/+L/0
//B/6f/h/9L/w/+l/4f/S/8P/5f+H/4v/T/8X/p/+L/0//B/6f/h/9L/w/+l
/4f/S/8P/5f+H/4v/T/8X/p/+L/0//B/6f/h/9L/w/+l/4f/S/8P/5f+H/4v
/T/8X/p/+L/0//B/6f/h/9L/w/+l/4f/S/8P/5f+H/4v/T/8X/p/+L/0//B/
6f/h/9L/w/+l/4f/S/8P/5f+H/4v/T/8X/p/+L/0//B/6f/h/9L/w/+l/4f/
S/8P/5f+H/4v/T/8X/p/+L/0//B/6f/h/9L/w/+l/4f/S/8P/5f+H/4v/T/8
X/p/+L/0//B/6f/h/9L/w/+l/4f/S/8P/5f+H/4v/T/8X/p/+L/0//B/6f/h
/9L/w/+l/4f/S/8P/5f+H/4v/T/8X/p/+L/0//B/6f/h/9L/w/+l/4f/S/8P
/5f+H/4v/T/8X/p/+L/0//B/6f/h/9L/w/+l/4f/S/8P/5f+H/4v/T/8X/p/
+L/0//B/6f/h/9L/w/+l/4f/S/8P/5f+H/4v/T/8X/p/+L/0//B/6f/h/9L/
w/+l/4f/S/8P/5f+H/4v/T/8X/p/+L/0//B/6f/h/9L/w/+l/4f/S/8P/5f+
H/4v/T/8X/p/+L/0//B/6f/h/9L/w/+l/4f/S/8P/5f+H/4v/T/8X/p/+L/0
//B/6f/h/9L/w/+l/4f/S/8P/5f+H/4v/T/8X/p/+L/0//B/6f/h/9L/w/+l
/4f/S/8P/5f+H/4v/T/8X/p/+L/0//B/6f/h/9L/w/+l/4f/S/8P/5f+H/4v
/T/8X/p/+L/0//B/6f/h/9L/w/+l/4f/S/8P/5f+H/4v/T/8X/p/+L/0//B/
6f/h/9L/w/+l/4f/S/8P/5f+H/4v/T/8X/p/+L/0//B/6f/h/9L/w/+l/4f/
S/8P/5f+H/4v/T/8X/p/+L/0//B/6f/h/9L/w/+l/4f/S/8P/5f+H/4v/T/8
X/p/+L/0//B/6f/h/9L/w/+l/4f/S/8P/5f+H/4v/T/8X/p/+L/0//B/6f/h
/9L/w/+l/4f/S/8P/5f+H/4v/T/8X/p/+L/0//B/6f/h/9L/w/+l/4f/S/8P
/5f+H/4v/T/8X/p/+L/0//B/6f/h/9L/w/+l/4f/S/8P/5f+H/4v/T/8X/p/
+L/0//B/6f/h/9L/w/+l/4f/S/8P/5f+H/4v/T/8X/p/+L/0//B/6f/h/9L/
w/+l/4f/S/8P/5f+H/4v/T/8X/p/+L/0//B/6f/h/9L/w/+l/4f/S/8P/5f+
H/4v/T/8X/p/+L/0//B/6f/h/9L/w/+l/4f/S/8P/5f+H/4v/T/8X/p/+L/0
//B/6f/h/9L/w/+l/4f/S/8P/5f+H/4v/T/8X/p/+L/0//B/6f/h/9L/w/+l
/4fve350If8PdkCVRA==
               "], {{{
                  EdgeForm[], 
                  Hue[0.67, 0.6, 0.6], 
                  GraphicsGroupBox[
                   TagBox[{
                    PolygonBox[CompressedData["
1:eJwl23f4LuQcx/Fzfr97NEQiGRnhREgZGUVGEkpISVQakhLJKkoqQlaDiJB1
lEKD7Aptqx1KGQ1b2Qrl+/L54315+47Pdd/39TzPdc65WGuXvbd61cKSJUtu
X1yypNV/Li3894X6L0tbfBEttVE+wVt8BbTU+pLM6PWWXbmtJYOb0VOzuyJa
Mu5Qvgp4sVL5yuDFHcvvBN6ya0ZPhl0zejLsypQl4z7l9wVv8fuhpXbn8tXA
W/wuaKndrXwN8Ba/O1pqqy/JjN7qLbt3RUuGs6+KljvYvQdaMtYsvzd4cc/y
e4G37Dqjs8mwa0ZPhl13dDcZdmXKkuEszuhszuTua6HlDR5dvgF4cf/yB4AX
a5c/CLzFH4yW2rIlmdFb1rL7QLRkcDN6anbXQUvGw8rXBS8eUv5Q8OLh5euB
t+ya0ZNh14yeDLsyZcnYuPxJ4C13d0d38waPKH8keIs/Ci21x5Q/FrzFH4eW
mrczo+cN7XpTbynD2ddHyx3sPh4tGU8ofyJ4sWH5RuAtu87obDLsmtGTYdcd
3U2GXZmyZBxY/hbwFj8ILbWnlD8VvMU3QUvt6eWbgbf4M9BS23RJZvQ2bdl9
GloyuBk9NbvPREvGFuXPBi+eVb45eLFl+XPAW3bN6Mmwa0ZPhl2ZsmTsWP4S
8BbfCS2155VvBd7iz0dL7QXl24K3+AvRUttmSWb0tmnZ3RotGc7+XLTcwe52
aMnYvnwH8OJF5S8Gb9l1RmeTYdeMngy77uhuMuzKlCXDZ//JaPkOuPvOaHmD
15W/HrzYpXxX8OJl5buDt/jL0VLbbUlm9HZr2X0pWjK4GT01u3ugJWOv8leC
F3uWvwK8eFX53uAtu2b0ZNg1oyfDrkxZMtzdZ9xn2xu4uzu6mzfYp/w14C3+
WrTU3lC+L3iL74eWmrczo+cN7XpTbynD2V+NljvYfSNaMg4ofzN48aby/cFb
dp3R2WTYNaMnw67vuO+2DLsyZcnwWfQZ9dn0mTyo/GC0/AZcXn4FeHFI+VvB
i7eXvwO8xd+JltqhSzKjd2jL7tvQksHN6KnZPQwtGe8pfy948a7yd4MX7ys/
HLxl14yeDLtm9GTYlSlLxsfLjwNv8U+gpXZk+VHgLf5+tNQ+WP4h8BY/Bi21
o5dkRu/olt0PoCXD2Y9Ayx3sfhgtGR8t/xh48ZHyY8Fbdp3R2WTYNaMnw647
upsMuzJlyXAWZ3Q2Z3L3T6LlDb5cfjp48anyT4MXny0/HrzFT0BLbfmSzOgt
b9n9DFoyuBk9NbufQ0vG58u/AF6cWH4SePHF8pPBW3bN6Mmwa0ZPhl2ZsmSc
WX4WeMvd3dHdvMGp5aeBt/iX0FL7SvlXwVv8a2ipeTszet7Qrjf1ljKc/RS0
3MHu19GS8a3yM8CLb5R/E7xl1xmdTYZdM3oy7Lqju8mwK1OWjNvKbwdv+e77
jvtu+w34Tvl3wVv8bLTUzis/H7zFL0BL7dwlmdE7t2X3HLRkcDN6anYvREvG
D8p/CF58r/z74MWPyi8Cb9k1oyfDrhk9GXZlypJxbfnPwVv8F2ipXVJ+KXiL
X4aW2pXlPwZv8Z+gpea304ye31C7flP9lspw9ovRcge7P0VLxs/KrwEvriq/
Grxl1xmdTYZdM3oy7Lqju8mwK1OWDJ/9b6PlO+Duv0TLG/yt/O/gxa/KrwMv
biz/NXiL/wYttRuWZEbvhpbd69GSwc3oqdn9LVoy/lD+R/Did+W/By/+VH4T
eMuuGT0Zds3oybArU5YMd/cZ99n2Bu7uju7mDf5c/hfwFv8rWmr/KP8neIv/
Cy01b2dGzxva9abeUoaz34yWO9i9BS0Z/yn/L3hxa/m/wVt2ndHZZNg1oyfD
ru+477YMuzJlybit/oJ/O+ov4bf1+P//kj9SW1r/fQG8xxfRUxvlE7zHV0BP
rS/NjF7v2W3oyeBm9NTsroiejDuUrwJerFS+Mnhxx/I7gffsmtGTYdeMngy7
MmXJuE/5fcF7/H7oqd25fDXwHr8Lemp3K18DvMfvjp7a6kszo7d6z+5d0ZPh
7Kui5w5274GejDXL7w1e3LP8XuA9u87obDLsmtGTYdcd3U2GXZmyZDiLMzqb
M7n7Wuh5g0eXbwBe3L/8AeDF2uUPAu/xB6OntmxpZvSW9ew+ED0Z3Iyemt11
0JPxsPJ1wYuHlD8UvHh4+XrgPbtm9GTYNaMnw65MWTI2Ln8SeM/d3dHdvMEj
yh8J3uOPQk/tMeWPBe/xx6Gn5u3M6HlDu97UW8pw9vXRcwe7j0dPxhPKnwhe
bFi+EXjPrjM6mwy7ZvRk2HVHd5NhV6YsGQeWvwW8xw9CT+0p5U8F7/FN0FN7
evlm4D3+DPTUNl2aGb1Ne3afhp4MbkZPze4z0ZOxRfmzwYtnlW8OXmxZ/hzw
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
TM2/nZrR82+odv2bqn9LleHsz8XMHexuh5mM7ct3AC9eVP5i8JldZ3Q2GXbN
6Mmw647uJsOuTFkyfPafjJnvgLvvjJk3eF3568GLXcp3BS9eVr47+Iy/HDO1
3RYzo7fbzO5LMZPBzeip2d0DMxl7lb8SvNiz/BXgxavK9waf2TWjJ8OuGT0Z
dmXKkuHuPuM+297A3d3R3bzBPuWvAZ/x12Km9obyfcFnfD/M1LydGT1vaNeb
eksZzv5qzNzB7hsxk3FA+ZvBizeV7w8+s+uMzibDrhk9GXZ9x323ZdiVKUuG
P/v///+UN/N3AN/9gzHzG3B5+RXgxSHlbwUv3l7+DvAZfydmaocuZkbv0Jnd
t2Emg5vRU7N7GGYy3lP+XvDiXeXvBi/eV344+MyuGT0Zds3oybArU5aMj5cf
Bz7jn8BM7cjyo8Bn/P2YqX2w/EPgM34MZmpHL2ZG7+iZ3Q9gJsPZj8DMHex+
GDMZHy3/GHjxkfJjwWd2ndHZZNg1oyfDrju6mwy7MmXJcBZndDZncvdPYuYN
vlx+OnjxqfJPgxefLT8efMZPwExt+WJm9JbP7H4GMxncjJ6a3c9hJuPz5V8A
L04sPwm8+GL5yeAzu2b0ZNg1oyfDrkxZMs4sPwt85u7u6G7e4NTy08Bn/EuY
qX2l/KvgM/41zNS8nRk9b2jXm3pLGc5+CmbuYPfrmMn4VvkZ4MU3yr8JPrPr
jM4mw64ZPRl23dHdZNiVKUuG774/4/uzvd8A333fcd9tvwHfKf8u+IyfjZna
eeXng8/4BZipnbuYGb1zZ3bPwUwGN6OnZvdCzGT8oPyH4MX3yr8PXvyo/CLw
mV0zejLsmtGTYVemLBnXlv8cfMZ/gZnaJeWXgs/4ZZipXVn+Y/AZ/wlman47
zej5DbXrN9VvqQxnvxgzd7D7U8xk/Kz8GvDiqvKrwWd2ndHZZNg1oyfDrju6
mwy7MmXJ8Nn/Nma+A+7+S8y8wd/K/w5e/Kr8OvDixvJfg8/4bzBTu2ExM3o3
zOxej5kMbkZPze5vMZPxh/I/ghe/K/89ePGn8pvAZ3bN6Mmwa0ZPhl2ZsmS4
u8+4z7Y3cHd3dDdv8Ofyv4DP+F8xU/tH+T/BZ/xfmKl5OzN63tCuN/WWMpz9
Zszcwe4tmMn4T/l/wYtby/8NPrPrjM4mw64ZPRl2/R3f3+1l2JUpS4a/+///
/4S/Qv4N4H94UjMx
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$3380422#1"]& ]]}, {}, {}, {}, {}}, {{
                  Directive[
                   RGBColor[0.39598880819409377`, 0.24, 0.6]], 
                  LineBox[CompressedData["
1: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
iAD/b/H/tvp/x31/R/5/135/v/1/n/7/AS49GgM=
                   "], VertexColors -> None]}}}, VertexColors -> {{
                  Opacity[0.2], 
                  RGBColor[0., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.003432003806042654, 0., 0.00723362658846554]}, {
                  Opacity[0.2], 
                  RGBColor[0.006864007612085308, 0., 0.01446725317693108]}, {
                  Opacity[0.2], 
                  RGBColor[0.010296011418127962`, 0., 0.02170087976539662]}, {
                 
                  Opacity[0.2], 
                  RGBColor[0.013728015224170616`, 0., 0.02893450635386216]}, {
                 
                  Opacity[0.2], 
                  RGBColor[0.01716001903021327, 0., 0.0361681329423277]}, {
                  Opacity[0.2], 
                  RGBColor[0.020592022836255924`, 0., 0.04340175953079324]}, {
                 
                  Opacity[0.2], 
                  RGBColor[0.02402402664229858, 0., 0.05063538611925878]}, {
                  Opacity[0.2], 
                  RGBColor[0.02745603044834123, 0., 0.05786901270772432]}, {
                  Opacity[0.2], 
                  RGBColor[0.030888034254383887`, 0., 0.06510263929618987]}, {
                 
                  Opacity[0.2], 
                  RGBColor[0.03432003806042654, 0., 0.0723362658846554]}, {
                  Opacity[0.2], 
                  RGBColor[0.037752041866469195`, 0., 0.07956989247312095]}, {
                 
                  Opacity[0.2], 
                  RGBColor[0.04118404567251185, 0., 0.08680351906158648]}, {
                  Opacity[0.2], 
                  RGBColor[0.044616049478554506`, 0., 0.09403714565005203]}, {
                 
                  Opacity[0.2], 
                  RGBColor[0.04804805328459716, 0., 0.10127077223851756`]}, {
                  Opacity[0.2], 
                  RGBColor[0.05148005709063981, 0., 0.10850439882698311`]}, {
                  Opacity[0.2], 
                  RGBColor[0.05491206089668246, 0., 0.11573802541544864`]}, {
                  Opacity[0.2], 
                  RGBColor[0.05834406470272512, 0., 0.12297165200391419`]}, {
                  Opacity[0.2], 
                  RGBColor[0.061776068508767774`, 0., 0.13020527859237974`]}, {
                  Opacity[0.2], 
                  RGBColor[0.06520807231481043, 0., 0.13743890518084528`]}, {
                  Opacity[0.2], 
                  RGBColor[0.06864007612085309, 0., 0.1446725317693108]}, {
                  Opacity[0.2], 
                  RGBColor[0.07207207992689574, 0., 0.15190615835777635`]}, {
                  Opacity[0.2], 
                  RGBColor[0.07550408373293839, 0., 0.1591397849462419]}, {
                  Opacity[0.2], 
                  RGBColor[0.07893608753898104, 0., 0.16637341153470744`]}, {
                  Opacity[0.2], 
                  RGBColor[0.0823680913450237, 0., 0.17360703812317296`]}, {
                  Opacity[0.2], 
                  RGBColor[0.08580009515106635, 0., 0.1808406647116385]}, {
                  Opacity[0.2], 
                  RGBColor[0.08923209895710901, 0., 0.18807429130010406`]}, {
                  Opacity[0.2], 
                  RGBColor[0.09266410276315167, 0., 0.1953079178885696]}, {
                  Opacity[0.2], 
                  RGBColor[0.09609610656919432, 0., 0.20254154447703512`]}, {
                  Opacity[0.2], 
                  RGBColor[0.09952811037523697, 0., 0.20977517106550067`]}, {
                  Opacity[0.2], 
                  RGBColor[0.10296011418127962`, 0., 0.21700879765396622`]}, {
                 
                  Opacity[0.2], 
                  RGBColor[0.10639211798732227`, 0., 0.22424242424243176`]}, {
                 
                  Opacity[0.2], 
                  RGBColor[0.10982412179336493`, 0., 0.23147605083089728`]}, {
                 
                  Opacity[0.2], 
                  RGBColor[0.11325612559940759`, 0., 0.23870967741936283`]}, {
                 
                  Opacity[0.2], 
                  RGBColor[0.11668812940545024`, 0., 0.24594330400782838`]}, {
                 
                  Opacity[0.2], 
                  RGBColor[0.1201201332114929, 0., 0.2531769305962939]}, {
                  Opacity[0.2], 
                  RGBColor[0.12355213701753555`, 0., 0.2604105571847595]}, {
                  Opacity[0.2], 
                  RGBColor[0.1269841408235782, 0., 0.267644183773225]}, {
                  Opacity[0.2], 
                  RGBColor[0.13041614462962087`, 0., 0.27487781036169057`]}, {
                 
                  Opacity[0.2], 
                  RGBColor[0.1338481484356635, 0., 0.28211143695015606`]}, {
                  Opacity[0.2], 
                  RGBColor[0.13728015224170617`, 0., 0.2893450635386216]}, {
                  Opacity[0.2], 
                  RGBColor[0.1407121560477488, 0., 0.29657869012708715`]}, {
                  Opacity[0.2], 
                  RGBColor[0.14414415985379148`, 0., 0.3038123167155527]}, {
                  Opacity[0.2], 
                  RGBColor[0.14757616365983411`, 0., 0.31104594330401825`]}, {
                 
                  Opacity[0.2], 
                  RGBColor[0.15100816746587678`, 0., 0.3182795698924838]}, {
                  Opacity[0.2], 
                  RGBColor[0.15444017127191945`, 0., 0.32551319648094934`]}, {
                 
                  Opacity[0.2], 
                  RGBColor[0.15787217507796208`, 0., 0.3327468230694149]}, {
                  Opacity[0.2], 
                  RGBColor[0.16130417888400475`, 0., 0.3399804496578804]}, {
                  Opacity[0.2], 
                  RGBColor[0.1647361826900474, 0., 0.3472140762463459]}, {
                  Opacity[0.2], 
                  RGBColor[0.16816818649609006`, 0., 0.3544477028348115]}, {
                  Opacity[0.2], 
                  RGBColor[0.1716001903021327, 0., 0.361681329423277]}, {
                  Opacity[0.2], 
                  RGBColor[0.17503219410817536`, 0., 0.36891495601174257`]}, {
                 
                  Opacity[0.2], 
                  RGBColor[0.17846419791421803`, 0., 0.3761485826002081]}, {
                  Opacity[0.2], 
                  RGBColor[0.18189620172026066`, 0., 0.38338220918867366`]}, {
                 
                  Opacity[0.2], 
                  RGBColor[0.18532820552630333`, 0., 0.3906158357771392]}, {
                  Opacity[0.2], 
                  RGBColor[0.18876020933234597`, 0., 0.39784946236560476`]}, {
                 
                  Opacity[0.2], 
                  RGBColor[0.19219221313838863`, 0., 0.40508308895407025`]}, {
                 
                  Opacity[0.2], 
                  RGBColor[0.19562421694443127`, 0., 0.4123167155425358]}, {
                  Opacity[0.2], 
                  RGBColor[0.19905622075047394`, 0., 0.41955034213100134`]}, {
                 
                  Opacity[0.2], 
                  RGBColor[0.2024882245565166, 0., 0.4267839687194669]}, {
                  Opacity[0.2], 
                  RGBColor[0.20592022836255924`, 0., 0.43401759530793244`]}, {
                 
                  Opacity[0.2], 
                  RGBColor[0.2093522321686019, 0., 0.441251221896398]}, {
                  Opacity[0.2], 
                  RGBColor[0.21278423597464455`, 0., 0.44848484848486353`]}, {
                 
                  Opacity[0.2], 
                  RGBColor[0.2162162397806872, 0., 0.4557184750733291]}, {
                  Opacity[0.2], 
                  RGBColor[0.21964824358672985`, 0., 0.46295210166179457`]}, {
                 
                  Opacity[0.2], 
                  RGBColor[0.22308024739277252`, 0., 0.4701857282502601]}, {
                  Opacity[0.2], 
                  RGBColor[0.22651225119881518`, 0., 0.47741935483872566`]}, {
                 
                  Opacity[0.2], 
                  RGBColor[0.22994425500485782`, 0., 0.4846529814271912]}, {
                  Opacity[0.2], 
                  RGBColor[0.2333762588109005, 0., 0.49188660801565676`]}, {
                  Opacity[0.2], 
                  RGBColor[0.23680826261694313`, 0., 0.4991202346041223]}, {
                  Opacity[0.2], 
                  RGBColor[0.2402402664229858, 0., 0.5063538611925879]}, {
                  Opacity[0.2], 
                  RGBColor[0.24367227022902843`, 0., 0.5135874877810533]}, {
                  Opacity[0.2], 
                  RGBColor[0.2471042740350711, 0., 0.520821114369519]}, {
                  Opacity[0.2], 
                  RGBColor[0.25053627784111376`, 0., 0.5280547409579844]}, {
                  Opacity[0.2], 
                  RGBColor[0.2539682816471564, 0., 0.53528836754645]}, {
                  Opacity[0.2], 
                  RGBColor[0.25740028545319904`, 0., 0.5425219941349155]}, {
                  Opacity[0.2], 
                  RGBColor[0.26083228925924173`, 0., 0.5497556207233811]}, {
                  Opacity[0.2], 
                  RGBColor[0.2642642930652844, 0., 0.5569892473118466]}, {
                  Opacity[0.2], 
                  RGBColor[0.267696296871327, 0., 0.5642228739003121]}, {
                  Opacity[0.2], 
                  RGBColor[0.27112830067736965`, 0., 0.5714565004887777]}, {
                  Opacity[0.2], 
                  RGBColor[0.27456030448341234`, 0., 0.5786901270772432]}, {
                  Opacity[0.2], 
                  RGBColor[0.277992308289455, 0., 0.5859237536657088]}, {
                  Opacity[0.2], 
                  RGBColor[0.2814243120954976, 0., 0.5931573802541743]}, {
                  Opacity[0.2], 
                  RGBColor[0.2848563159015403, 0., 0.6003910068426399]}, {
                  Opacity[0.2], 
                  RGBColor[0.28828831970758295`, 0., 0.6076246334311054]}, {
                  Opacity[0.2], 
                  RGBColor[0.2917203235136256, 0., 0.614858260019571]}, {
                  Opacity[0.2], 
                  RGBColor[0.29515232731966823`, 0., 0.6220918866080365]}, {
                  Opacity[0.2], 
                  RGBColor[0.2985843311257109, 0., 0.629325513196502]}, {
                  Opacity[0.2], 
                  RGBColor[0.30201633493175356`, 0., 0.6365591397849676]}, {
                  Opacity[0.2], 
                  RGBColor[0.3054483387377962, 0., 0.6437927663734331]}, {
                  Opacity[0.2], 
                  RGBColor[0.3088803425438389, 0., 0.6510263929618987]}, {
                  Opacity[0.2], 
                  RGBColor[0.31231234634988153`, 0., 0.6582600195503642]}, {
                  Opacity[0.2], 
                  RGBColor[0.31574435015592417`, 0., 0.6654936461388298]}, {
                  Opacity[0.2], 
                  RGBColor[0.3191763539619668, 0., 0.6727272727272953]}, {
                  Opacity[0.2], 
                  RGBColor[0.3226083577680095, 0., 0.6799608993157608]}, {
                  Opacity[0.2], 
                  RGBColor[0.32604036157405214`, 0., 0.6871945259042264]}, {
                  Opacity[0.2], 
                  RGBColor[0.3294723653800948, 0., 0.6944281524926919]}, {
                  Opacity[0.2], 
                  RGBColor[0.33290436918613747`, 0., 0.7016617790811575]}, {
                  Opacity[0.2], 
                  RGBColor[0.3363363729921801, 0., 0.708895405669623]}, {
                  Opacity[0.2], 
                  RGBColor[0.33976837679822275`, 0., 0.7161290322580885]}, {
                  Opacity[0.2], 
                  RGBColor[0.3432003806042654, 0., 0.723362658846554]}, {
                  Opacity[0.2], 
                  RGBColor[0.3466323844103081, 0., 0.7305962854350196]}, {
                  Opacity[0.2], 
                  RGBColor[0.3500643882163507, 0., 0.7378299120234851]}, {
                  Opacity[0.2], 
                  RGBColor[0.35349639202239336`, 0., 0.7450635386119506]}, {
                  Opacity[0.2], 
                  RGBColor[0.35692839582843605`, 0., 0.7522971652004162]}, {
                  Opacity[0.2], 
                  RGBColor[0.3603603996344787, 0., 0.7595307917888817]}, {
                  Opacity[0.2], 
                  RGBColor[0.36379240344052133`, 0., 0.7667644183773473]}, {
                  Opacity[0.2], 
                  RGBColor[0.36722440724656397`, 0., 0.7739980449658128]}, {
                  Opacity[0.2], 
                  RGBColor[0.37065641105260666`, 0., 0.7812316715542784]}, {
                  Opacity[0.2], 
                  RGBColor[0.3740884148586493, 0., 0.7884652981427439]}, {
                  Opacity[0.2], 
                  RGBColor[0.37752041866469194`, 0., 0.7956989247312095]}, {
                  Opacity[0.2], 
                  RGBColor[0.38095242247073463`, 0., 0.802932551319675]}, {
                  Opacity[0.2], 
                  RGBColor[0.38438442627677727`, 0., 0.8101661779081405]}, {
                  Opacity[0.2], 
                  RGBColor[0.3878164300828199, 0., 0.8173998044966061]}, {
                  Opacity[0.2], 
                  RGBColor[0.39124843388886255`, 0., 0.8246334310850716]}, {
                  Opacity[0.2], 
                  RGBColor[0.39468043769490524`, 0., 0.8318670576735372]}, {
                  Opacity[0.2], 
                  RGBColor[0.3981124415009479, 0., 0.8391006842620027]}, {
                  Opacity[0.2], 
                  RGBColor[0.4015444453069905, 0., 0.8463343108504683]}, {
                  Opacity[0.2], 
                  RGBColor[0.4049764491130332, 0., 0.8535679374389338]}, {
                  Opacity[0.2], 
                  RGBColor[0.40840845291907585`, 0., 0.8608015640273994]}, {
                  Opacity[0.2], 
                  RGBColor[0.4118404567251185, 0., 0.8680351906158649]}, {
                  Opacity[0.2], 
                  RGBColor[0.4152724605311611, 0., 0.8752688172043304]}, {
                  Opacity[0.2], 
                  RGBColor[0.4187044643372038, 0., 0.882502443792796]}, {
                  Opacity[0.2], 
                  RGBColor[0.42213646814324646`, 0., 0.8897360703812615]}, {
                  Opacity[0.2], 
                  RGBColor[0.4255684719492891, 0., 0.8969696969697271]}, {
                  Opacity[0.2], 
                  RGBColor[0.4290004757553318, 0., 0.9042033235581926]}, {
                  Opacity[0.2], 
                  RGBColor[0.4324324795613744, 0., 0.9114369501466582]}, {
                  Opacity[0.2], 
                  RGBColor[0.43586448336741707`, 0., 0.9186705767351236]}, {
                  Opacity[0.2], 
                  RGBColor[0.4392964871734597, 0., 0.9259042033235891]}, {
                  Opacity[0.2], 
                  RGBColor[0.4427284909795024, 0., 0.9331378299120547]}, {
                  Opacity[0.2], 
                  RGBColor[0.44616049478554504`, 0., 0.9403714565005202]}, {
                  Opacity[0.2], 
                  RGBColor[0.4495924985915877, 0., 0.9476050830889858]}, {
                  Opacity[0.2], 
                  RGBColor[0.45302450239763037`, 0., 0.9548387096774513]}, {
                  Opacity[0.2], 
                  RGBColor[0.456456506203673, 0., 0.9620723362659169]}, {
                  Opacity[0.2], 
                  RGBColor[0.45988851000971565`, 0., 0.9693059628543824]}, {
                  Opacity[0.2], 
                  RGBColor[0.4633205138157583, 0., 0.976539589442848]}, {
                  Opacity[0.2], 
                  RGBColor[0.466752517621801, 0., 0.9837732160313135]}, {
                  Opacity[0.2], 
                  RGBColor[0.4701845214278436, 0., 0.991006842619779]}, {
                  Opacity[0.2], 
                  RGBColor[0.47361652523388625`, 0., 0.9982404692082446]}, {
                  Opacity[0.2], 
                  RGBColor[0.47463878166510826`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47488647644015736`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4751341712152065, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47538186599025567`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47562956076530477`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4758772555403539, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47612495031540303`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4763726450904522, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47662033986550134`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47686803464055044`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4771157294155996, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47736342419064876`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47761111896569786`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.477858813740747, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4781065085157961, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47835420329084527`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4786018980658944, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4788495928409435, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4790972876159927, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47934498239104184`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47959267716609094`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4798403719411401, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4800880667161892, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.48033576149123836`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4805834562662875, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4808311510413366, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.48107884581638577`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.48092405257339577`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47744873318177455`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4739734137901533, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4704980943985321, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4670227750069108, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.46354745561528954`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.46007213622366827`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.45659681683204706`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4531214974404258, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4496461780488046, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4461708586571833, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.44269553926556204`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4392202198739408, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.43574490048231956`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4322695810906983, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4287942616990771, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4253189423074558, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.42184362291583455`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4183683035242133, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.41489298413259207`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4114176647409708, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4079423453493496, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4044670259577283, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.40099170656610705`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3975163871744858, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3940410677828646, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3905657483912433, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3870904289996221, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3818412089481284, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3745050469438981, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3671688849396678, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3598327229354375, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.35249656093120724`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3451603989269769, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.33782423692274666`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.33048807491851634`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3231519129142861, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.31581575091005576`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3084795889058255, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3011434269015952, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.29380726489736486`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.2864711028931346, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.2772751690491151, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.2670108556375891, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.256746542226063, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.24648222881453705`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.23621791540301101`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.225953601991485, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.215689288579959, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.205424975168433, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.195160661756907, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.184896348345381, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.17463203493385498`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.16436772152232898`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.15410340811080295`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.14383909469927694`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.13357478128775094`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.12331046787622493`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.11304615446469893`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.10278184105317292`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.09251752764164689, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.08225321423012089, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.07198890081859488, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.061724587407068876`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.05146027399554287, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.041195960584016866`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.03093164717249086, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.020667333760964857`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.010403020349438852`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.00013870693791279143`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.012580593983232156`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.02533352487024245, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.038086455757252745`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.050839386644263046`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.06359231753127334, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.07634524841828363, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.08909817930529393, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.10185111019230422`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.11460404107931452`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.1273569719663248, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.1401099028533351, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.1528628337403454, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.1656157646273557, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.1785492364508735, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.19241550311295635`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.20628176977503918`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.22014803643712202`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.23401430309920485`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.2478805697612877, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.2617468364233705, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.27561310308545334`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.2894793697475362, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.303345636409619, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.3172119030717019, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.3310781697337847, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.3449444363958675, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.3588107030579504, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.3708394818213784, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.3792667843035846, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.38769408678579087`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.3961213892679971, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.40454869175020336`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.4129759942324096, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.42140329671461585`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.4298305991968221, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.43825790167902834`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.4466852041612346, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.45511250664344083`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.4635398091256471, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.4719671116078533, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.48039441409005956`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.4896124225460928, 0.9975760114650513]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.49957952087203966`, 0.9928556127391835]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.5095466191979865, 0.9881352140133158]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.5195137175239334, 0.9834148152874482]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.5294808158498803, 0.9786944165615805]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.539447914175827, 0.9739740178357128]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.5494150125017739, 0.9692536191098451]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.5593821108277208, 0.9645332203839774]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.5693492091536676, 0.9598128216581098]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.5793163074796145, 0.9550924229322421]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.5892834058055614, 0.9503720242063743]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.5992505041315083, 0.9456516254805066]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.609217602457455, 0.9409312267546389]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.6191847007834019, 0.9362108280287713]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.6291517991093488, 0.9314904293029036]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.6391188974352957, 0.9267700305770359]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.6490859957612425, 0.9220496318511682]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.6590530940871894, 0.9173292331253005]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.6690201924131363, 0.9126088343994329]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.678987290739083, 0.9078884356735651]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.6889543890650299, 0.9031680369476974]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.6989214873909768, 0.8984476382218297]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.7088885857169237, 0.893727239495962]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.7188556840428706, 0.8890068407700944]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.7288227823688174, 0.8842864420442267]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.7387898806947643, 0.879566043318359]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.7487569790207111, 0.8748456445924913]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.7587240773466579, 0.8701252458666235]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.7686911756726048, 0.8654048471407558]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.7786582739985517, 0.8606844484148882]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.7886253723244985, 0.8559640496890205]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.7985924706504454, 0.8512436509631528]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.8085595689763923, 0.8465232522372851]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.818526667302339, 0.8418028535114175]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.828493765628286, 0.8370824547855498]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.8384608639542328, 0.832362056059682]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.8484279622801797, 0.8276416573338143]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.8583950606061266, 0.8229212586079466]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.8683621589320734, 0.8182008598820789]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.8783292572580202, 0.8134804611562113]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.8882963555839671, 0.8087600624303436]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.8979418373278871, 0.8037987742467485]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.8999757266325897, 0.7931364355651659]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9020096159372923, 0.7824740968835833]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9040435052419951, 0.7718117582020007]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9060773945466977, 0.761149419520418]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9081112838514003, 0.7504870808388354]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9101451731561029, 0.7398247421572528]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9121790624608055, 0.7291624034756702]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9142129517655081, 0.7185000647940876]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9162468410702107, 0.707837726112505]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9182807303749134, 0.6971753874309223]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.920314619679616, 0.6865130487493397]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9223485089843186, 0.6758507100677571]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9243823982890212, 0.6651883713861745]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9264162875937239, 0.6545260327045919]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9284501768984265, 0.6438636940230092]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9304840662031291, 0.6332013553414266]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9325179555078317, 0.622539016659844]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9345518448125344, 0.6118766779782614]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.936585734117237, 0.6012143392966788]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9386196234219396, 0.5905520006150962]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9406535127266422, 0.5798896619335135]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9426874020313448, 0.5692273232519309]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9447212913360474, 0.5585649845703483]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.94675518064075, 0.5479026458887657]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9487890699454526, 0.5372403072071831]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9508229592501554, 0.5265779685256005]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.952856848554858, 0.5159156298440178]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9548907378595606, 0.5052532911624352]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9569246271642632, 0.4945909524808526]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9589585164689658, 0.48392861379927]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9609924057736684, 0.4732662751176874]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.963026295078371, 0.46260393643610476`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9650601843830737, 0.45194159775452214`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9670940736877763, 0.4412792590729395]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9691279629924789, 0.43061692039135685`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9711618522971815, 0.41995458170977423`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9731957416018842, 0.4092922430281916]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9752296309065868, 0.398629904346609]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9772635202112894, 0.3879675656650264]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9792974095159921, 0.37730522698344376`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9813312988206947, 0.36664288830186115`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9825759923333812, 0.35460040229211515`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.983219393814085, 0.3415063754609629]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9838627952947888, 0.32841234862981067`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9845061967754926, 0.31531832179865843`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9851495982561964, 0.3022242949675062]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9857929997369002, 0.28913026813635395`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.986436401217604, 0.2760362413052017]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9870798026983078, 0.2629422144740495]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9877232041790116, 0.24984818764289723`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9883666056597153, 0.23675416081174502`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9890100071404192, 0.22366013398059278`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9896534086211229, 0.21056610714944055`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9902968101018268, 0.1974720803182883]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9909402115825305, 0.18437805348713607`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9915836130632344, 0.17128402665598383`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9922270145439381, 0.1581899998248316]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.992870416024642, 0.14509597299367935`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9935138175053457, 0.1320019461625271]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9941572189860496, 0.11890791933137487`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9948006204667533, 0.1058138925002226]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9954440219474572, 0.09271986566907037]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9960874234281609, 0.07962583883791813]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9967308249088648, 0.06653181200676594]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9973742263895685, 0.053437785175613706`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9980176278702724, 0.04034375834446147]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9986610293509761, 0.027249731513309228`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9993044308316799, 0.014155704682156989`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9999478323123837, 0.0010616778510047498`]}, {
                 
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.01898328239255946, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.038493878184596576`, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.058004473976633684`, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.0775150697686708, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.09702566556070791, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.11653626135274503`, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.13604685714478215`, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.15555745293681925`, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.17506804872885637`, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.1945786445208935, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.21408924031293058`, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.2335998361049677, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.25311043189700483`, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.27262102768904195`, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.292131623481079, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.31164221927311614`, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.33115281506515326`, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3506634108571904, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3701740066492275, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3896846024412646, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4091951982333017, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4287057940253388, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.44821638981737594`, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.46772698560941306`, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4872375814014502, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5067481771934873, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5262587729855244, 1., 0.]}, 
                 RGBColor[0.5446773896842848, 1., 0.], 
                 RGBColor[0.5608210499388919, 1., 0.], 
                 RGBColor[0.576964710193499, 1., 0.], 
                 RGBColor[0.593108370448106, 1., 0.], 
                 RGBColor[0.6092520307027132, 1., 0.], 
                 RGBColor[0.6253956909573203, 1., 0.], 
                 RGBColor[0.6415393512119273, 1., 0.], 
                 RGBColor[0.6576830114665344, 1., 0.], 
                 RGBColor[0.6738266717211414, 1., 0.], 
                 RGBColor[0.6899703319757485, 1., 0.], 
                 RGBColor[0.7061139922303556, 1., 0.], 
                 RGBColor[0.7222576524849627, 1., 0.], 
                 RGBColor[0.7384013127395698, 1., 0.], 
                 RGBColor[0.7545449729941769, 1., 0.], 
                 RGBColor[0.7686696191754187, 1., 0.], 
                 RGBColor[0.7807752512834336, 1., 0.], 
                 RGBColor[0.7928808833914485, 1., 0.], 
                 RGBColor[0.8049865154994634, 1., 0.], 
                 RGBColor[0.8170921476074783, 1., 0.], 
                 RGBColor[0.8291977797154932, 1., 0.], 
                 RGBColor[0.8413034118235081, 1., 0.], 
                 RGBColor[0.8534090439315231, 1., 0.], 
                 RGBColor[0.865514676039538, 1., 0.], 
                 RGBColor[0.8776203081475529, 1., 0.], 
                 RGBColor[0.8897259402555678, 1., 0.], 
                 RGBColor[0.9018315723635827, 1., 0.], 
                 RGBColor[0.9139372044715977, 1., 0.], 
                 RGBColor[0.9260428365796125, 1., 0.], 
                 RGBColor[0.9356736969230925, 0.9977150185790297, 0.], 
                 RGBColor[0.9441166668196912, 0.9943332460760815, 0.], 
                 RGBColor[0.9525596367162898, 0.9909514735731334, 0.], 
                 RGBColor[0.9610026066128885, 0.9875697010701853, 0.], 
                 RGBColor[0.9694455765094872, 0.9841879285672371, 0.], 
                 RGBColor[0.9778885464060858, 0.9808061560642891, 0.], 
                 RGBColor[0.9863315163026845, 0.977424383561341, 0.], 
                 RGBColor[0.9947744861992831, 0.9740426110583928, 0.], 
                 RGBColor[1., 0.9703610330577935, 0.], 
                 RGBColor[1., 0.9661925369085634, 0.], 
                 RGBColor[1., 0.9620240407593333, 0.], 
                 RGBColor[1., 0.9578555446101032, 0.], 
                 RGBColor[1., 0.9536870484608732, 0.], 
                 RGBColor[1., 0.949518552311643, 0.], 
                 RGBColor[1., 0.9453500561624129, 0.], 
                 RGBColor[1., 0.9411815600131828, 0.], 
                 RGBColor[1., 0.9370130638639527, 0.], 
                 RGBColor[1., 0.9328445677147226, 0.], 
                 RGBColor[1., 0.9286760715654925, 0.], 
                 RGBColor[1., 0.9245075754162624, 0.], 
                 RGBColor[1., 0.9203390792670323, 0.], 
                 RGBColor[1., 0.9161705831178022, 0.], 
                 RGBColor[1., 0.9120020869685721, 0.], 
                 RGBColor[1., 0.907833590819342, 0.], 
                 RGBColor[1., 0.9036650946701119, 0.], 
                 RGBColor[1., 0.8994965985208818, 0.], 
                 RGBColor[1., 0.8953281023716517, 0.], 
                 RGBColor[1., 0.8910558793648536, 0.], 
                 RGBColor[1., 0.8830494894882385, 0.], 
                 RGBColor[1., 0.8750430996116233, 0.], 
                 RGBColor[1., 0.867036709735008, 0.], 
                 RGBColor[1., 0.8590303198583928, 0.], 
                 RGBColor[1., 0.8510239299817776, 0.], 
                 RGBColor[1., 0.8430175401051624, 0.], 
                 RGBColor[1., 0.8350111502285472, 0.], 
                 RGBColor[1., 0.8270047603519319, 0.], 
                 RGBColor[1., 0.8189983704753168, 0.], 
                 RGBColor[1., 0.8109919805987016, 0.], 
                 RGBColor[1., 0.8029855907220863, 0.], 
                 RGBColor[1., 0.7949792008454711, 0.], 
                 RGBColor[1., 0.7869728109688559, 0.], {
                  Opacity[0.2], 
                  RGBColor[1., 0.7789664210922407, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.7709600312156255, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.7629536413390103, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.754947251462395, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.7469408615857799, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.7389344717091646, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.7309280818325494, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.7229216919559343, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.714915302079319, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.7069089122027038, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.6989025223260885, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.6908961324494733, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.6828897425728582, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.6748833526962429, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.6668769628196277, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.6588705729430125, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.6508641830663973, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.6428577931897821, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.6348514033131669, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.6268450134365516, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.6188386235599365, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.6108322336833212, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.602825843806706, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.5948194539300908, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.5868130640534757, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.5788066741768604, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.5708002843002451, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.5627938944236299, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.5547875045470148, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.5467811146703996, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.5387747247937843, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.5307683349171691, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.5227619450405538, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.5147555551639387, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.5067491652873235, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.49874277541070827`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.49073638553409304`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.4827299956574778, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.4747236057808626, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.4667172159042474, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.4587108260276322, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.45070443615101696`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.4395236895754036, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.4271672553336161, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.41481082109182854`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.40245438685004103`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.39009795260825353`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.37774151836646597`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.36538508412467846`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.35302864988289095`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.3406722156411034, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.3283157813993159, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.3159593471575284, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.3036029129157408, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.2912464786739533, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.2788900444321658, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.2595322190344981, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.23944290500878207`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.21935359098306606`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.19926427695735002`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.17917496293163399`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.15908564890591798`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.13899633488020194`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.1189070208544859, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.09881770682876989, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.07872839280305385, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.058639078777337816`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.03854976475162181, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.018460450725905797`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9995900659673137, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.996556554125976, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9935230422846382, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9904895304433003, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9874560186019625, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9844225067606247, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9813889949192869, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9783554830779491, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9753219712366112, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9722884593952734, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9692549475539357, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9662214357125979, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9631879238712601, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9601544120299222, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9559695214035038, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9492315734713294, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9424936255391549, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9357556776069805, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9290177296748062, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9222797817426318, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9155418338104574, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.908803885878283, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9020659379461086, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.8953279900139341, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.8885900420817598, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.8818520941495854, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.875114146217411, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.8683761982852366, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.8616382503530622, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.8549003024208878, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.8481623544887134, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.841424406556539, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.8346864586243646, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.8279485106921902, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.8212105627600158, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.8144726148278414, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.807734666895667, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.8009967189634926, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.7942587710313183, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.7875208230991438, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.7807828751669694, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.774044927234795, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.7673069793026206, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.7605690313704462, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.7538310834382718, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.7470931355060975, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.740355187573923, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.7336172396417486, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.7268792917095742, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.7201413437773998, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.7134033958452255, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.706665447913051, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6999274999808767, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6931895520487023, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6864516041165278, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6797136561843534, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6763360967335184, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6736089350531409, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6708817733727633, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6681546116923859, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6654274500120084, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.662700288331631, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6599731266512535, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6572459649708761, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6545188032904986, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6517916416101212, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6490644799297436, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6463373182493661, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6436101565689887, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6408829948886112, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6381558332082338, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6354286715278563, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6327015098474789, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6299743481671014, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.627247186486724, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6245200248063465, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6217928631259689, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6190657014455915, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.616338539765214, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6136113780848366, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6108842164044591, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6081570547240817, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6054298930437042, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6027027313633267, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5999755696829492, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5972484080025717, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5945212463221943, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5917940846418168, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5890669229614394, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5863397612810619, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5836125996006845, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.580885437920307, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5781582762399295, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5754311145595521, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5727039528791745, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5699767911987971, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5672496295184196, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5645224678380422, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5617953061576647, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5590681444772873, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5563409827969098, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5536138211165323, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5508866594361548, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5481594977557773, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5454323360753999, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5427051743950224, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.539978012714645, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5372508510342675, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.53452368935389, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5317965276735126, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5290693659931351, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5263422043127577, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5236150426323802, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5208878809520027, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5181607192716252, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5154335575912478, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5127063959108703, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5099792342304929, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5072520725501154, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5045249108697379, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5017977491893604, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.499070587508983, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.49634342582860547`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.493616264148228, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.49088910246785056`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4881619407874731, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.48543477910709565`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4827076174267182, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47998045574634074`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47725329406596323`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4745261323855858, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47179897070520826`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4690718090248308, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.46634464734445336`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4636174856640759, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.46089032398369845`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.458163162303321, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.45543600062294354`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.452708838942566, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4499816772621886, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.44725451558181106`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4445273539014336, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.44180019222105615`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4390730305406787, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.43634586886030124`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4336187071799238, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.43089154549954634`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4281643838191688, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.42543722213879137`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4227100604584139, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4199828987780364, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.41725573709765895`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4145285754172815, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.41180141373690404`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4090742520565266, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4063470903761491, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4036199286957716, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.40089276701539417`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3981656053350167, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3954384436546392, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.39271128197426175`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3899841202938843, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.38725695861350684`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3845297969331294, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3818026352527519, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3790754735723744, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.37634831189199697`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3736211502116195, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.370893988531242, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.36816682685086455`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3654396651704871, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.36271250349010964`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3599853418097322, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3572581801293547, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3545310184489772, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.35180385676859977`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3490766950882223, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3463495334078448, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.34362237172746735`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3408952100470899, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.33816804836671244`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.335440886686335, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3327137250059575, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.32998656332558, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.32725940164520256`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3245322399648251, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3218050782844476, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.31907791660407014`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3163507549236927, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.31362359324331524`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3108964315629378, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.30816926988256027`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3054421082021828, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.30271494652180536`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.2999877848414279, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.2972606231610504, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.29453346148067294`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.2918062998002955, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.28907913811991803`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.2863519764395406, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.28362481475916307`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.2808976530787856, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.27817049139840816`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.2754433297180307, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.27271616803765325`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.26998900635727574`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.2672618446768983, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.26453468299652083`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.2618075213161434, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.25908035963576587`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.2563531979553884, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.25362603627501096`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.2508988745946335, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.24817171291425605`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.24544455123387854`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.24271738955350108`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.23999022787312363`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.23726306619274617`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.23453590451236866`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.2318087428319912, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.22908158115161376`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.2263544194712363, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.22362725779085885`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.22090009611048134`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.21817293443010388`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.21544577274972643`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.21271861106934897`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.20999144938897146`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.207264287708594, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.20453712602821655`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.2018099643478391, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.19908280266746164`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.19635564098708413`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.19362847930670668`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.19090131762632923`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.18817415594595177`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.18544699426557426`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.1827198325851968, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.17999267090481935`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.17726550922444184`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.1745383475440644, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.17181118586368693`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.16908402418330948`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.16635686250293202`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.16362970082255457`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.16090253914217711`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.15817537746179966`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.1554482157814222, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.15272105410104464`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.14999389242066719`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.14726673074028973`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.14453956905991228`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.14181240737953482`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.13908524569915737`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.1363580840187799, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.13363092233840246`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.130903760658025, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.12817659897764744`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.12544943729726998`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.12272227561689253`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.11999511393651507`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.11726795225613762`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.11454079057576017`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.11181362889538271`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.10908646721500526`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.1063593055346278, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.10363214385425024`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.10090498217387278`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.09817782049349533, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.09545065881311787, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.09272349713274042, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.08999633545236296, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.08726917377198551, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.08454201209160805, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.0818148504112306, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.07908768873085303, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.07636052705047558, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.07363336537009812, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.07090620368972067, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.06817904200934322, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.06545188032896576, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.0627247186485883, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.05999755696821085, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.0572703952878334, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.05454323360745583, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.05181607192707838, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.04908891024670092, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.04636174856632347, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.043634586885946014`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.04090742520556856, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.038180263525191105`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.03545310184481365, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.032725940164436196`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.02999877848405863, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.027271616803681176`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.02454445512330372, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.021817293442926267`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.019090131762548812`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.016362970082171358`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.013635808401793903`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.010908646721416448`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.008181485041038994, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.005454323360661428, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.0027271616802839738`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.003432003806042654, 0., 0.00723362658846554]}, {
                  Opacity[0.2], 
                  RGBColor[0.006864007612085308, 0., 0.01446725317693108]}, {
                  Opacity[0.2], 
                  RGBColor[0.010296011418127962`, 0., 0.02170087976539662]}, {
                 
                  Opacity[0.2], 
                  RGBColor[0.013728015224170616`, 0., 0.02893450635386216]}, {
                 
                  Opacity[0.2], 
                  RGBColor[0.01716001903021327, 0., 0.0361681329423277]}, {
                  Opacity[0.2], 
                  RGBColor[0.020592022836255924`, 0., 0.04340175953079324]}, {
                 
                  Opacity[0.2], 
                  RGBColor[0.02402402664229858, 0., 0.05063538611925878]}, {
                  Opacity[0.2], 
                  RGBColor[0.02745603044834123, 0., 0.05786901270772432]}, {
                  Opacity[0.2], 
                  RGBColor[0.030888034254383887`, 0., 0.06510263929618987]}, {
                 
                  Opacity[0.2], 
                  RGBColor[0.03432003806042654, 0., 0.0723362658846554]}, {
                  Opacity[0.2], 
                  RGBColor[0.037752041866469195`, 0., 0.07956989247312095]}, {
                 
                  Opacity[0.2], 
                  RGBColor[0.04118404567251185, 0., 0.08680351906158648]}, {
                  Opacity[0.2], 
                  RGBColor[0.044616049478554506`, 0., 0.09403714565005203]}, {
                 
                  Opacity[0.2], 
                  RGBColor[0.04804805328459716, 0., 0.10127077223851756`]}, {
                  Opacity[0.2], 
                  RGBColor[0.05148005709063981, 0., 0.10850439882698311`]}, {
                  Opacity[0.2], 
                  RGBColor[0.05491206089668246, 0., 0.11573802541544864`]}, {
                  Opacity[0.2], 
                  RGBColor[0.05834406470272512, 0., 0.12297165200391419`]}, {
                  Opacity[0.2], 
                  RGBColor[0.061776068508767774`, 0., 0.13020527859237974`]}, {
                  Opacity[0.2], 
                  RGBColor[0.06520807231481043, 0., 0.13743890518084528`]}, {
                  Opacity[0.2], 
                  RGBColor[0.06864007612085309, 0., 0.1446725317693108]}, {
                  Opacity[0.2], 
                  RGBColor[0.07207207992689574, 0., 0.15190615835777635`]}, {
                  Opacity[0.2], 
                  RGBColor[0.07550408373293839, 0., 0.1591397849462419]}, {
                  Opacity[0.2], 
                  RGBColor[0.07893608753898104, 0., 0.16637341153470744`]}, {
                  Opacity[0.2], 
                  RGBColor[0.0823680913450237, 0., 0.17360703812317296`]}, {
                  Opacity[0.2], 
                  RGBColor[0.08580009515106635, 0., 0.1808406647116385]}, {
                  Opacity[0.2], 
                  RGBColor[0.08923209895710901, 0., 0.18807429130010406`]}, {
                  Opacity[0.2], 
                  RGBColor[0.09266410276315167, 0., 0.1953079178885696]}, {
                  Opacity[0.2], 
                  RGBColor[0.09609610656919432, 0., 0.20254154447703512`]}, {
                  Opacity[0.2], 
                  RGBColor[0.09952811037523697, 0., 0.20977517106550067`]}, {
                  Opacity[0.2], 
                  RGBColor[0.10296011418127962`, 0., 0.21700879765396622`]}, {
                 
                  Opacity[0.2], 
                  RGBColor[0.10639211798732227`, 0., 0.22424242424243176`]}, {
                 
                  Opacity[0.2], 
                  RGBColor[0.10982412179336493`, 0., 0.23147605083089728`]}, {
                 
                  Opacity[0.2], 
                  RGBColor[0.11325612559940759`, 0., 0.23870967741936283`]}, {
                 
                  Opacity[0.2], 
                  RGBColor[0.11668812940545024`, 0., 0.24594330400782838`]}, {
                 
                  Opacity[0.2], 
                  RGBColor[0.1201201332114929, 0., 0.2531769305962939]}, {
                  Opacity[0.2], 
                  RGBColor[0.12355213701753555`, 0., 0.2604105571847595]}, {
                  Opacity[0.2], 
                  RGBColor[0.1269841408235782, 0., 0.267644183773225]}, {
                  Opacity[0.2], 
                  RGBColor[0.13041614462962087`, 0., 0.27487781036169057`]}, {
                 
                  Opacity[0.2], 
                  RGBColor[0.1338481484356635, 0., 0.28211143695015606`]}, {
                  Opacity[0.2], 
                  RGBColor[0.13728015224170617`, 0., 0.2893450635386216]}, {
                  Opacity[0.2], 
                  RGBColor[0.1407121560477488, 0., 0.29657869012708715`]}, {
                  Opacity[0.2], 
                  RGBColor[0.14414415985379148`, 0., 0.3038123167155527]}, {
                  Opacity[0.2], 
                  RGBColor[0.14757616365983411`, 0., 0.31104594330401825`]}, {
                 
                  Opacity[0.2], 
                  RGBColor[0.15100816746587678`, 0., 0.3182795698924838]}, {
                  Opacity[0.2], 
                  RGBColor[0.15444017127191945`, 0., 0.32551319648094934`]}, {
                 
                  Opacity[0.2], 
                  RGBColor[0.15787217507796208`, 0., 0.3327468230694149]}, {
                  Opacity[0.2], 
                  RGBColor[0.16130417888400475`, 0., 0.3399804496578804]}, {
                  Opacity[0.2], 
                  RGBColor[0.1647361826900474, 0., 0.3472140762463459]}, {
                  Opacity[0.2], 
                  RGBColor[0.16816818649609006`, 0., 0.3544477028348115]}, {
                  Opacity[0.2], 
                  RGBColor[0.1716001903021327, 0., 0.361681329423277]}, {
                  Opacity[0.2], 
                  RGBColor[0.17503219410817536`, 0., 0.36891495601174257`]}, {
                 
                  Opacity[0.2], 
                  RGBColor[0.17846419791421803`, 0., 0.3761485826002081]}, {
                  Opacity[0.2], 
                  RGBColor[0.18189620172026066`, 0., 0.38338220918867366`]}, {
                 
                  Opacity[0.2], 
                  RGBColor[0.18532820552630333`, 0., 0.3906158357771392]}, {
                  Opacity[0.2], 
                  RGBColor[0.18876020933234597`, 0., 0.39784946236560476`]}, {
                 
                  Opacity[0.2], 
                  RGBColor[0.19219221313838863`, 0., 0.40508308895407025`]}, {
                 
                  Opacity[0.2], 
                  RGBColor[0.19562421694443127`, 0., 0.4123167155425358]}, {
                  Opacity[0.2], 
                  RGBColor[0.19905622075047394`, 0., 0.41955034213100134`]}, {
                 
                  Opacity[0.2], 
                  RGBColor[0.2024882245565166, 0., 0.4267839687194669]}, {
                  Opacity[0.2], 
                  RGBColor[0.20592022836255924`, 0., 0.43401759530793244`]}, {
                 
                  Opacity[0.2], 
                  RGBColor[0.2093522321686019, 0., 0.441251221896398]}, {
                  Opacity[0.2], 
                  RGBColor[0.21278423597464455`, 0., 0.44848484848486353`]}, {
                 
                  Opacity[0.2], 
                  RGBColor[0.2162162397806872, 0., 0.4557184750733291]}, {
                  Opacity[0.2], 
                  RGBColor[0.21964824358672985`, 0., 0.46295210166179457`]}, {
                 
                  Opacity[0.2], 
                  RGBColor[0.22308024739277252`, 0., 0.4701857282502601]}, {
                  Opacity[0.2], 
                  RGBColor[0.22651225119881518`, 0., 0.47741935483872566`]}, {
                 
                  Opacity[0.2], 
                  RGBColor[0.22994425500485782`, 0., 0.4846529814271912]}, {
                  Opacity[0.2], 
                  RGBColor[0.2333762588109005, 0., 0.49188660801565676`]}, {
                  Opacity[0.2], 
                  RGBColor[0.23680826261694313`, 0., 0.4991202346041223]}, {
                  Opacity[0.2], 
                  RGBColor[0.2402402664229858, 0., 0.5063538611925879]}, {
                  Opacity[0.2], 
                  RGBColor[0.24367227022902843`, 0., 0.5135874877810533]}, {
                  Opacity[0.2], 
                  RGBColor[0.2471042740350711, 0., 0.520821114369519]}, {
                  Opacity[0.2], 
                  RGBColor[0.25053627784111376`, 0., 0.5280547409579844]}, {
                  Opacity[0.2], 
                  RGBColor[0.2539682816471564, 0., 0.53528836754645]}, {
                  Opacity[0.2], 
                  RGBColor[0.25740028545319904`, 0., 0.5425219941349155]}, {
                  Opacity[0.2], 
                  RGBColor[0.26083228925924173`, 0., 0.5497556207233811]}, {
                  Opacity[0.2], 
                  RGBColor[0.2642642930652844, 0., 0.5569892473118466]}, {
                  Opacity[0.2], 
                  RGBColor[0.267696296871327, 0., 0.5642228739003121]}, {
                  Opacity[0.2], 
                  RGBColor[0.27112830067736965`, 0., 0.5714565004887777]}, {
                  Opacity[0.2], 
                  RGBColor[0.27456030448341234`, 0., 0.5786901270772432]}, {
                  Opacity[0.2], 
                  RGBColor[0.277992308289455, 0., 0.5859237536657088]}, {
                  Opacity[0.2], 
                  RGBColor[0.2814243120954976, 0., 0.5931573802541743]}, {
                  Opacity[0.2], 
                  RGBColor[0.2848563159015403, 0., 0.6003910068426399]}, {
                  Opacity[0.2], 
                  RGBColor[0.28828831970758295`, 0., 0.6076246334311054]}, {
                  Opacity[0.2], 
                  RGBColor[0.2917203235136256, 0., 0.614858260019571]}, {
                  Opacity[0.2], 
                  RGBColor[0.29515232731966823`, 0., 0.6220918866080365]}, {
                  Opacity[0.2], 
                  RGBColor[0.2985843311257109, 0., 0.629325513196502]}, {
                  Opacity[0.2], 
                  RGBColor[0.30201633493175356`, 0., 0.6365591397849676]}, {
                  Opacity[0.2], 
                  RGBColor[0.3054483387377962, 0., 0.6437927663734331]}, {
                  Opacity[0.2], 
                  RGBColor[0.3088803425438389, 0., 0.6510263929618987]}, {
                  Opacity[0.2], 
                  RGBColor[0.31231234634988153`, 0., 0.6582600195503642]}, {
                  Opacity[0.2], 
                  RGBColor[0.31574435015592417`, 0., 0.6654936461388298]}, {
                  Opacity[0.2], 
                  RGBColor[0.3191763539619668, 0., 0.6727272727272953]}, {
                  Opacity[0.2], 
                  RGBColor[0.3226083577680095, 0., 0.6799608993157608]}, {
                  Opacity[0.2], 
                  RGBColor[0.32604036157405214`, 0., 0.6871945259042264]}, {
                  Opacity[0.2], 
                  RGBColor[0.3294723653800948, 0., 0.6944281524926919]}, {
                  Opacity[0.2], 
                  RGBColor[0.33290436918613747`, 0., 0.7016617790811575]}, {
                  Opacity[0.2], 
                  RGBColor[0.3363363729921801, 0., 0.708895405669623]}, {
                  Opacity[0.2], 
                  RGBColor[0.33976837679822275`, 0., 0.7161290322580885]}, {
                  Opacity[0.2], 
                  RGBColor[0.3432003806042654, 0., 0.723362658846554]}, {
                  Opacity[0.2], 
                  RGBColor[0.3466323844103081, 0., 0.7305962854350196]}, {
                  Opacity[0.2], 
                  RGBColor[0.3500643882163507, 0., 0.7378299120234851]}, {
                  Opacity[0.2], 
                  RGBColor[0.35349639202239336`, 0., 0.7450635386119506]}, {
                  Opacity[0.2], 
                  RGBColor[0.35692839582843605`, 0., 0.7522971652004162]}, {
                  Opacity[0.2], 
                  RGBColor[0.3603603996344787, 0., 0.7595307917888817]}, {
                  Opacity[0.2], 
                  RGBColor[0.36379240344052133`, 0., 0.7667644183773473]}, {
                  Opacity[0.2], 
                  RGBColor[0.36722440724656397`, 0., 0.7739980449658128]}, {
                  Opacity[0.2], 
                  RGBColor[0.37065641105260666`, 0., 0.7812316715542784]}, {
                  Opacity[0.2], 
                  RGBColor[0.3740884148586493, 0., 0.7884652981427439]}, {
                  Opacity[0.2], 
                  RGBColor[0.37752041866469194`, 0., 0.7956989247312095]}, {
                  Opacity[0.2], 
                  RGBColor[0.38095242247073463`, 0., 0.802932551319675]}, {
                  Opacity[0.2], 
                  RGBColor[0.38438442627677727`, 0., 0.8101661779081405]}, {
                  Opacity[0.2], 
                  RGBColor[0.3878164300828199, 0., 0.8173998044966061]}, {
                  Opacity[0.2], 
                  RGBColor[0.39124843388886255`, 0., 0.8246334310850716]}, {
                  Opacity[0.2], 
                  RGBColor[0.39468043769490524`, 0., 0.8318670576735372]}, {
                  Opacity[0.2], 
                  RGBColor[0.3981124415009479, 0., 0.8391006842620027]}, {
                  Opacity[0.2], 
                  RGBColor[0.4015444453069905, 0., 0.8463343108504683]}, {
                  Opacity[0.2], 
                  RGBColor[0.4049764491130332, 0., 0.8535679374389338]}, {
                  Opacity[0.2], 
                  RGBColor[0.40840845291907585`, 0., 0.8608015640273994]}, {
                  Opacity[0.2], 
                  RGBColor[0.4118404567251185, 0., 0.8680351906158649]}, {
                  Opacity[0.2], 
                  RGBColor[0.4152724605311611, 0., 0.8752688172043304]}, {
                  Opacity[0.2], 
                  RGBColor[0.4187044643372038, 0., 0.882502443792796]}, {
                  Opacity[0.2], 
                  RGBColor[0.42213646814324646`, 0., 0.8897360703812615]}, {
                  Opacity[0.2], 
                  RGBColor[0.4255684719492891, 0., 0.8969696969697271]}, {
                  Opacity[0.2], 
                  RGBColor[0.4290004757553318, 0., 0.9042033235581926]}, {
                  Opacity[0.2], 
                  RGBColor[0.4324324795613744, 0., 0.9114369501466582]}, {
                  Opacity[0.2], 
                  RGBColor[0.43586448336741707`, 0., 0.9186705767351236]}, {
                  Opacity[0.2], 
                  RGBColor[0.4392964871734597, 0., 0.9259042033235891]}, {
                  Opacity[0.2], 
                  RGBColor[0.4427284909795024, 0., 0.9331378299120547]}, {
                  Opacity[0.2], 
                  RGBColor[0.44616049478554504`, 0., 0.9403714565005202]}, {
                  Opacity[0.2], 
                  RGBColor[0.4495924985915877, 0., 0.9476050830889858]}, {
                  Opacity[0.2], 
                  RGBColor[0.45302450239763037`, 0., 0.9548387096774513]}, {
                  Opacity[0.2], 
                  RGBColor[0.456456506203673, 0., 0.9620723362659169]}, {
                  Opacity[0.2], 
                  RGBColor[0.45988851000971565`, 0., 0.9693059628543824]}, {
                  Opacity[0.2], 
                  RGBColor[0.4633205138157583, 0., 0.976539589442848]}, {
                  Opacity[0.2], 
                  RGBColor[0.466752517621801, 0., 0.9837732160313135]}, {
                  Opacity[0.2], 
                  RGBColor[0.4701845214278436, 0., 0.991006842619779]}, {
                  Opacity[0.2], 
                  RGBColor[0.47361652523388625`, 0., 0.9982404692082446]}, {
                  Opacity[0.2], 
                  RGBColor[0.47463878166510826`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47488647644015736`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4751341712152065, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47538186599025567`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47562956076530477`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4758772555403539, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47612495031540303`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4763726450904522, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47662033986550134`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47686803464055044`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4771157294155996, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47736342419064876`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47761111896569786`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.477858813740747, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4781065085157961, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47835420329084527`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4786018980658944, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4788495928409435, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4790972876159927, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47934498239104184`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47959267716609094`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4798403719411401, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4800880667161892, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.48033576149123836`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4805834562662875, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4808311510413366, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.48107884581638577`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.48092405257339577`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47744873318177455`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4739734137901533, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4704980943985321, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4670227750069108, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.46354745561528954`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.46007213622366827`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.45659681683204706`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4531214974404258, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4496461780488046, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4461708586571833, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.44269553926556204`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4392202198739408, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.43574490048231956`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4322695810906983, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4287942616990771, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4253189423074558, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.42184362291583455`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4183683035242133, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.41489298413259207`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4114176647409708, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4079423453493496, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4044670259577283, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.40099170656610705`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3975163871744858, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3940410677828646, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3905657483912433, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3870904289996221, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3818412089481284, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3745050469438981, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3671688849396678, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3598327229354375, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.35249656093120724`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3451603989269769, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.33782423692274666`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.33048807491851634`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3231519129142861, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.31581575091005576`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3084795889058255, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3011434269015952, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.29380726489736486`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.2864711028931346, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.2772751690491151, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.2670108556375891, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.256746542226063, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.24648222881453705`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.23621791540301101`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.225953601991485, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.215689288579959, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.205424975168433, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.195160661756907, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.184896348345381, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.17463203493385498`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.16436772152232898`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.15410340811080295`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.14383909469927694`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.13357478128775094`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.12331046787622493`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.11304615446469893`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.10278184105317292`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.09251752764164689, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.08225321423012089, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.07198890081859488, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.061724587407068876`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.05146027399554287, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.041195960584016866`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.03093164717249086, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.020667333760964857`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.010403020349438852`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.00013870693791279143`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.012580593983232156`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.02533352487024245, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.038086455757252745`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.050839386644263046`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.06359231753127334, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.07634524841828363, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.08909817930529393, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.10185111019230422`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.11460404107931452`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.1273569719663248, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.1401099028533351, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.1528628337403454, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.1656157646273557, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.1785492364508735, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.19241550311295635`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.20628176977503918`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.22014803643712202`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.23401430309920485`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.2478805697612877, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.2617468364233705, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.27561310308545334`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.2894793697475362, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.303345636409619, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.3172119030717019, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.3310781697337847, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.3449444363958675, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.3588107030579504, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.3708394818213784, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.3792667843035846, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.38769408678579087`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.3961213892679971, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.40454869175020336`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.4129759942324096, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.42140329671461585`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.4298305991968221, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.43825790167902834`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.4466852041612346, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.45511250664344083`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.4635398091256471, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.4719671116078533, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.48039441409005956`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.4896124225460928, 0.9975760114650513]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.49957952087203966`, 0.9928556127391835]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.5095466191979865, 0.9881352140133158]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.5195137175239334, 0.9834148152874482]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.5294808158498803, 0.9786944165615805]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.539447914175827, 0.9739740178357128]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.5494150125017739, 0.9692536191098451]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.5593821108277208, 0.9645332203839774]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.5693492091536676, 0.9598128216581098]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.5793163074796145, 0.9550924229322421]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.5892834058055614, 0.9503720242063743]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.5992505041315083, 0.9456516254805066]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.609217602457455, 0.9409312267546389]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.6191847007834019, 0.9362108280287713]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.6291517991093488, 0.9314904293029036]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.6391188974352957, 0.9267700305770359]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.6490859957612425, 0.9220496318511682]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.6590530940871894, 0.9173292331253005]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.6690201924131363, 0.9126088343994329]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.678987290739083, 0.9078884356735651]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.6889543890650299, 0.9031680369476974]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.6989214873909768, 0.8984476382218297]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.7088885857169237, 0.893727239495962]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.7188556840428706, 0.8890068407700944]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.7288227823688174, 0.8842864420442267]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.7387898806947643, 0.879566043318359]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.7487569790207111, 0.8748456445924913]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.7587240773466579, 0.8701252458666235]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.7686911756726048, 0.8654048471407558]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.7786582739985517, 0.8606844484148882]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.7886253723244985, 0.8559640496890205]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.7985924706504454, 0.8512436509631528]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.8085595689763923, 0.8465232522372851]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.818526667302339, 0.8418028535114175]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.828493765628286, 0.8370824547855498]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.8384608639542328, 0.832362056059682]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.8484279622801797, 0.8276416573338143]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.8583950606061266, 0.8229212586079466]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.8683621589320734, 0.8182008598820789]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.8783292572580202, 0.8134804611562113]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.8882963555839671, 0.8087600624303436]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.8979418373278871, 0.8037987742467485]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.8999757266325897, 0.7931364355651659]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9020096159372923, 0.7824740968835833]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9040435052419951, 0.7718117582020007]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9060773945466977, 0.761149419520418]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9081112838514003, 0.7504870808388354]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9101451731561029, 0.7398247421572528]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9121790624608055, 0.7291624034756702]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9142129517655081, 0.7185000647940876]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9162468410702107, 0.707837726112505]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9182807303749134, 0.6971753874309223]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.920314619679616, 0.6865130487493397]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9223485089843186, 0.6758507100677571]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9243823982890212, 0.6651883713861745]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9264162875937239, 0.6545260327045919]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9284501768984265, 0.6438636940230092]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9304840662031291, 0.6332013553414266]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9325179555078317, 0.622539016659844]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9345518448125344, 0.6118766779782614]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.936585734117237, 0.6012143392966788]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9386196234219396, 0.5905520006150962]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9406535127266422, 0.5798896619335135]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9426874020313448, 0.5692273232519309]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9447212913360474, 0.5585649845703483]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.94675518064075, 0.5479026458887657]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9487890699454526, 0.5372403072071831]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9508229592501554, 0.5265779685256005]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.952856848554858, 0.5159156298440178]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9548907378595606, 0.5052532911624352]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9569246271642632, 0.4945909524808526]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9589585164689658, 0.48392861379927]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9609924057736684, 0.4732662751176874]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.963026295078371, 0.46260393643610476`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9650601843830737, 0.45194159775452214`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9670940736877763, 0.4412792590729395]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9691279629924789, 0.43061692039135685`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9711618522971815, 0.41995458170977423`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9731957416018842, 0.4092922430281916]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9752296309065868, 0.398629904346609]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9772635202112894, 0.3879675656650264]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9792974095159921, 0.37730522698344376`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9813312988206947, 0.36664288830186115`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9825759923333812, 0.35460040229211515`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.983219393814085, 0.3415063754609629]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9838627952947888, 0.32841234862981067`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9845061967754926, 0.31531832179865843`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9851495982561964, 0.3022242949675062]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9857929997369002, 0.28913026813635395`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.986436401217604, 0.2760362413052017]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9870798026983078, 0.2629422144740495]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9877232041790116, 0.24984818764289723`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9883666056597153, 0.23675416081174502`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9890100071404192, 0.22366013398059278`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9896534086211229, 0.21056610714944055`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9902968101018268, 0.1974720803182883]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9909402115825305, 0.18437805348713607`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9915836130632344, 0.17128402665598383`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9922270145439381, 0.1581899998248316]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.992870416024642, 0.14509597299367935`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9935138175053457, 0.1320019461625271]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9941572189860496, 0.11890791933137487`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9948006204667533, 0.1058138925002226]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9954440219474572, 0.09271986566907037]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9960874234281609, 0.07962583883791813]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9967308249088648, 0.06653181200676594]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9973742263895685, 0.053437785175613706`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9980176278702724, 0.04034375834446147]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9986610293509761, 0.027249731513309228`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9993044308316799, 0.014155704682156989`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9999478323123837, 0.0010616778510047498`]}, {
                 
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.01898328239255946, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.038493878184596576`, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.058004473976633684`, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.0775150697686708, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.09702566556070791, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.11653626135274503`, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.13604685714478215`, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.15555745293681925`, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.17506804872885637`, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.1945786445208935, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.21408924031293058`, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.2335998361049677, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.25311043189700483`, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.27262102768904195`, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.292131623481079, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.31164221927311614`, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.33115281506515326`, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3506634108571904, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3701740066492275, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3896846024412646, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4091951982333017, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4287057940253388, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.44821638981737594`, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.46772698560941306`, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4872375814014502, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5067481771934873, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5262587729855244, 1., 0.]}, 
                 RGBColor[0.5446773896842848, 1., 0.], 
                 RGBColor[0.5608210499388919, 1., 0.], 
                 RGBColor[0.576964710193499, 1., 0.], 
                 RGBColor[0.593108370448106, 1., 0.], 
                 RGBColor[0.6092520307027132, 1., 0.], 
                 RGBColor[0.6253956909573203, 1., 0.], 
                 RGBColor[0.6415393512119273, 1., 0.], 
                 RGBColor[0.6576830114665344, 1., 0.], 
                 RGBColor[0.6738266717211414, 1., 0.], 
                 RGBColor[0.6899703319757485, 1., 0.], 
                 RGBColor[0.7061139922303556, 1., 0.], 
                 RGBColor[0.7222576524849627, 1., 0.], 
                 RGBColor[0.7384013127395698, 1., 0.], 
                 RGBColor[0.7545449729941769, 1., 0.], 
                 RGBColor[0.7686696191754187, 1., 0.], 
                 RGBColor[0.7807752512834336, 1., 0.], 
                 RGBColor[0.7928808833914485, 1., 0.], 
                 RGBColor[0.8049865154994634, 1., 0.], 
                 RGBColor[0.8170921476074783, 1., 0.], 
                 RGBColor[0.8291977797154932, 1., 0.], 
                 RGBColor[0.8413034118235081, 1., 0.], 
                 RGBColor[0.8534090439315231, 1., 0.], 
                 RGBColor[0.865514676039538, 1., 0.], 
                 RGBColor[0.8776203081475529, 1., 0.], 
                 RGBColor[0.8897259402555678, 1., 0.], 
                 RGBColor[0.9018315723635827, 1., 0.], 
                 RGBColor[0.9139372044715977, 1., 0.], 
                 RGBColor[0.9260428365796125, 1., 0.], 
                 RGBColor[0.9356736969230925, 0.9977150185790297, 0.], 
                 RGBColor[0.9441166668196912, 0.9943332460760815, 0.], 
                 RGBColor[0.9525596367162898, 0.9909514735731334, 0.], 
                 RGBColor[0.9610026066128885, 0.9875697010701853, 0.], 
                 RGBColor[0.9694455765094872, 0.9841879285672371, 0.], 
                 RGBColor[0.9778885464060858, 0.9808061560642891, 0.], 
                 RGBColor[0.9863315163026845, 0.977424383561341, 0.], 
                 RGBColor[0.9947744861992831, 0.9740426110583928, 0.], 
                 RGBColor[1., 0.9703610330577935, 0.], 
                 RGBColor[1., 0.9661925369085634, 0.], 
                 RGBColor[1., 0.9620240407593333, 0.], 
                 RGBColor[1., 0.9578555446101032, 0.], 
                 RGBColor[1., 0.9536870484608732, 0.], 
                 RGBColor[1., 0.949518552311643, 0.], 
                 RGBColor[1., 0.9453500561624129, 0.], 
                 RGBColor[1., 0.9411815600131828, 0.], 
                 RGBColor[1., 0.9370130638639527, 0.], 
                 RGBColor[1., 0.9328445677147226, 0.], 
                 RGBColor[1., 0.9286760715654925, 0.], 
                 RGBColor[1., 0.9245075754162624, 0.], 
                 RGBColor[1., 0.9203390792670323, 0.], 
                 RGBColor[1., 0.9161705831178022, 0.], 
                 RGBColor[1., 0.9120020869685721, 0.], 
                 RGBColor[1., 0.907833590819342, 0.], 
                 RGBColor[1., 0.9036650946701119, 0.], 
                 RGBColor[1., 0.8994965985208818, 0.], 
                 RGBColor[1., 0.8953281023716517, 0.], 
                 RGBColor[1., 0.8910558793648536, 0.], 
                 RGBColor[1., 0.8830494894882385, 0.], 
                 RGBColor[1., 0.8750430996116233, 0.], 
                 RGBColor[1., 0.867036709735008, 0.], 
                 RGBColor[1., 0.8590303198583928, 0.], 
                 RGBColor[1., 0.8510239299817776, 0.], 
                 RGBColor[1., 0.8430175401051624, 0.], 
                 RGBColor[1., 0.8350111502285472, 0.], 
                 RGBColor[1., 0.8270047603519319, 0.], 
                 RGBColor[1., 0.8189983704753168, 0.], 
                 RGBColor[1., 0.8109919805987016, 0.], 
                 RGBColor[1., 0.8029855907220863, 0.], 
                 RGBColor[1., 0.7949792008454711, 0.], 
                 RGBColor[1., 0.7869728109688559, 0.], {
                  Opacity[0.2], 
                  RGBColor[1., 0.7789664210922407, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.7709600312156255, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.7629536413390103, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.754947251462395, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.7469408615857799, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.7389344717091646, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.7309280818325494, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.7229216919559343, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.714915302079319, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.7069089122027038, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.6989025223260885, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.6908961324494733, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.6828897425728582, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.6748833526962429, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.6668769628196277, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.6588705729430125, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.6508641830663973, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.6428577931897821, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.6348514033131669, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.6268450134365516, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.6188386235599365, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.6108322336833212, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.602825843806706, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.5948194539300908, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.5868130640534757, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.5788066741768604, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.5708002843002451, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.5627938944236299, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.5547875045470148, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.5467811146703996, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.5387747247937843, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.5307683349171691, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.5227619450405538, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.5147555551639387, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.5067491652873235, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.49874277541070827`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.49073638553409304`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.4827299956574778, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.4747236057808626, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.4667172159042474, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.4587108260276322, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.45070443615101696`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.4395236895754036, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.4271672553336161, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.41481082109182854`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.40245438685004103`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.39009795260825353`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.37774151836646597`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.36538508412467846`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.35302864988289095`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.3406722156411034, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.3283157813993159, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.3159593471575284, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.3036029129157408, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.2912464786739533, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.2788900444321658, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.2595322190344981, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.23944290500878207`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.21935359098306606`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.19926427695735002`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.17917496293163399`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.15908564890591798`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.13899633488020194`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.1189070208544859, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.09881770682876989, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.07872839280305385, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.058639078777337816`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.03854976475162181, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.018460450725905797`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9995900659673137, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.996556554125976, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9935230422846382, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9904895304433003, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9874560186019625, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9844225067606247, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9813889949192869, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9783554830779491, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9753219712366112, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9722884593952734, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9692549475539357, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9662214357125979, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9631879238712601, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9601544120299222, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9559695214035038, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9492315734713294, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9424936255391549, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9357556776069805, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9290177296748062, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9222797817426318, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9155418338104574, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.908803885878283, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9020659379461086, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.8953279900139341, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.8885900420817598, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.8818520941495854, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.875114146217411, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.8683761982852366, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.8616382503530622, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.8549003024208878, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.8481623544887134, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.841424406556539, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.8346864586243646, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.8279485106921902, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.8212105627600158, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.8144726148278414, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.807734666895667, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.8009967189634926, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.7942587710313183, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.7875208230991438, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.7807828751669694, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.774044927234795, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.7673069793026206, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.7605690313704462, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.7538310834382718, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.7470931355060975, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.740355187573923, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.7336172396417486, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.7268792917095742, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.7201413437773998, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.7134033958452255, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.706665447913051, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6999274999808767, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6931895520487023, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6864516041165278, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6797136561843534, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6763360967335184, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6736089350531409, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6708817733727633, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6681546116923859, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6654274500120084, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.662700288331631, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6599731266512535, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6572459649708761, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6545188032904986, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6517916416101212, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6490644799297436, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6463373182493661, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6436101565689887, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6408829948886112, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6381558332082338, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6354286715278563, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6327015098474789, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6299743481671014, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.627247186486724, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6245200248063465, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6217928631259689, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6190657014455915, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.616338539765214, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6136113780848366, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6108842164044591, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6081570547240817, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6054298930437042, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6027027313633267, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5999755696829492, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5972484080025717, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5945212463221943, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5917940846418168, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5890669229614394, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5863397612810619, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5836125996006845, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.580885437920307, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5781582762399295, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5754311145595521, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5727039528791745, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5699767911987971, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5672496295184196, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5645224678380422, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5617953061576647, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5590681444772873, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5563409827969098, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5536138211165323, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5508866594361548, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5481594977557773, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5454323360753999, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5427051743950224, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.539978012714645, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5372508510342675, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.53452368935389, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5317965276735126, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5290693659931351, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5263422043127577, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5236150426323802, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5208878809520027, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5181607192716252, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5154335575912478, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5127063959108703, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5099792342304929, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5072520725501154, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5045249108697379, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5017977491893604, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.499070587508983, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.49634342582860547`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.493616264148228, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.49088910246785056`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4881619407874731, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.48543477910709565`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4827076174267182, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47998045574634074`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47725329406596323`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4745261323855858, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47179897070520826`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4690718090248308, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.46634464734445336`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4636174856640759, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.46089032398369845`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.458163162303321, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.45543600062294354`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.452708838942566, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4499816772621886, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.44725451558181106`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4445273539014336, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.44180019222105615`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4390730305406787, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.43634586886030124`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4336187071799238, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.43089154549954634`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4281643838191688, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.42543722213879137`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4227100604584139, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4199828987780364, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.41725573709765895`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4145285754172815, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.41180141373690404`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4090742520565266, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4063470903761491, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4036199286957716, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.40089276701539417`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3981656053350167, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3954384436546392, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.39271128197426175`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3899841202938843, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.38725695861350684`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3845297969331294, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3818026352527519, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3790754735723744, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.37634831189199697`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3736211502116195, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.370893988531242, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.36816682685086455`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3654396651704871, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.36271250349010964`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3599853418097322, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3572581801293547, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3545310184489772, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.35180385676859977`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3490766950882223, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3463495334078448, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.34362237172746735`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3408952100470899, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.33816804836671244`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.335440886686335, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3327137250059575, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.32998656332558, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.32725940164520256`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3245322399648251, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3218050782844476, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.31907791660407014`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3163507549236927, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.31362359324331524`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3108964315629378, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.30816926988256027`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3054421082021828, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.30271494652180536`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.2999877848414279, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.2972606231610504, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.29453346148067294`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.2918062998002955, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.28907913811991803`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.2863519764395406, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.28362481475916307`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.2808976530787856, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.27817049139840816`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.2754433297180307, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.27271616803765325`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.26998900635727574`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.2672618446768983, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.26453468299652083`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.2618075213161434, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.25908035963576587`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.2563531979553884, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.25362603627501096`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.2508988745946335, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.24817171291425605`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.24544455123387854`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.24271738955350108`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.23999022787312363`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.23726306619274617`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.23453590451236866`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.2318087428319912, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.22908158115161376`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.2263544194712363, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.22362725779085885`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.22090009611048134`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.21817293443010388`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.21544577274972643`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.21271861106934897`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.20999144938897146`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.207264287708594, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.20453712602821655`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.2018099643478391, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.19908280266746164`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.19635564098708413`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.19362847930670668`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.19090131762632923`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.18817415594595177`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.18544699426557426`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.1827198325851968, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.17999267090481935`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.17726550922444184`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.1745383475440644, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.17181118586368693`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.16908402418330948`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.16635686250293202`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.16362970082255457`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.16090253914217711`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.15817537746179966`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.1554482157814222, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.15272105410104464`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.14999389242066719`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.14726673074028973`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.14453956905991228`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.14181240737953482`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.13908524569915737`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.1363580840187799, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.13363092233840246`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.130903760658025, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.12817659897764744`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.12544943729726998`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.12272227561689253`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.11999511393651507`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.11726795225613762`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.11454079057576017`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.11181362889538271`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.10908646721500526`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.1063593055346278, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.10363214385425024`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.10090498217387278`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.09817782049349533, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.09545065881311787, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.09272349713274042, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.08999633545236296, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.08726917377198551, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.08454201209160805, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.0818148504112306, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.07908768873085303, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.07636052705047558, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.07363336537009812, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.07090620368972067, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.06817904200934322, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.06545188032896576, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.0627247186485883, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.05999755696821085, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.0572703952878334, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.05454323360745583, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.05181607192707838, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.04908891024670092, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.04636174856632347, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.043634586885946014`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.04090742520556856, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.038180263525191105`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.03545310184481365, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.032725940164436196`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.02999877848405863, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.027271616803681176`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.02454445512330372, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.021817293442926267`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.019090131762548812`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.016362970082171358`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.013635808401793903`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.010908646721416448`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.008181485041038994, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.005454323360661428, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.0027271616802839738`, 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0., 0.]}}], {}}, {
             DisplayFunction -> Identity, 
              PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> 
              False, ImagePadding -> All, DisplayFunction -> Identity, 
              AspectRatio -> 0.1, Axes -> {False, False}, 
              AxesLabel -> {None, None}, AxesOrigin -> {400, 0}, AxesStyle -> 
              Directive[
                AbsoluteThickness[0.2]], BaseStyle -> Automatic, 
              DisplayFunction :> Identity, Epilog -> {{{
                  InsetBox[
                   FormBox[
                    StyleBox["\"\[FilledUpTriangle]\"", 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm], {
                   560, 0}, {0, 0}]}, {
                  InsetBox[
                   FormBox[
                    StyleBox["\"\[FilledUpTriangle]\"", 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm], {
                   585, 0}, {0, 0}]}}}, Frame -> True, 
              FrameLabel -> {{None, None}, {
                 FormBox[
                  StyleBox[
                   TemplateBox[{
                    StyleBox["\"wavelength\"", 
                    GrayLevel[0], {FontSize -> 10, FontFamily -> "Roboto"}, 
                    StripOnInput -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    StyleBox[
                    "\"nanometer\"", {
                    FontFamily -> "Roboto", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], TraditionalForm], 
                 None}}, FrameStyle -> GrayLevel[0.9], 
              FrameTicks -> {{None, None}, {{{560, 
                   FormBox["560", TraditionalForm]}, {585, 
                   FormBox["585", TraditionalForm]}}, {{
                   NCache[
                    Rational[1145, 2], 572.5], 
                   FormBox["\"yellow\"", TraditionalForm], 0}}}}, 
              FrameTicksStyle -> GrayLevel[0], GridLinesStyle -> Automatic, 
              Method -> {
               "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "ScalingFunctions" -> None, "TransparentPolygonMesh" -> True, 
                "AxesInFront" -> True}, PlotRange -> {{380, 750}, {0, 1}}, 
              PlotRangePadding -> 0, Ticks -> {None, None}}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`aux6$$ = {True, False, {False}, True},
    Typeset`aux7$$ = {True, False, {False}, True}, Typeset`aux8$$ = {
   True, False, {False, False}, True}, Typeset`aux9$$ = {
   True, False, {False, False, False}, True}, Typeset`aux10$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "2"}, {
      XMLElement[
      "assumption", {
       "type" -> "Clash", "word" -> "yellow", "template" -> 
        "Assuming \"yellow\" is a color${separator}Use as ${desc} or ${desc} \
or ${desc} or ${desc} instead", "count" -> "5", "pulldown" -> "false", 
        "default" -> "{\"C\", \"yellow\"} -> {\"Color\", \"dflt\"}"}, {
        XMLElement[
        "value", {
         "name" -> "Color", "desc" -> "a color", "input" -> 
          "{\"C\", \"yellow\"} -> {\"Color\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "ColorSet", "desc" -> " referring to a set of colors", 
          "input" -> "{\"C\", \"yellow\"} -> {\"ColorSet\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "LightColor", "desc" -> " referring to a color of light", 
          "input" -> "{\"C\", \"yellow\"} -> {\"LightColor\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "River", "desc" -> "a river", "input" -> 
          "{\"C\", \"yellow\"} -> {\"River\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Word", "desc" -> "a word", "input" -> 
          "{\"C\", \"yellow\"} -> {\"Word\"}"}, {}]}], 
      XMLElement[
      "assumption", {
       "type" -> "SubCategory", "word" -> "yellow", "template" -> 
        "Assuming yellow${separator}Use ${desc} instead", "count" -> "2", 
        "pulldown" -> "false", "default" -> 
        "{\"DPClash\", \"ColorE\", \"yellow\"} -> {{\"WolframLanguage\", \
\"Yellow\"}, \"dflt\"}"}, {
        XMLElement[
        "value", {
         "name" -> "{WolframLanguage, Yellow}", "desc" -> "yellow", "input" -> 
          "{\"DPClash\", \"ColorE\", \"yellow\"} -> {{\"WolframLanguage\", \
\"Yellow\"}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "{HTML, Yellow}", "desc" -> "HTML yellow", "input" -> 
          "{\"DPClash\", \"ColorE\", \"yellow\"} -> {{\"HTML\", \
\"Yellow\"}}"}, {}]}]}]}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "10", "datatypes" -> "", "timedout" -> "", "timedoutpods" -> 
    "", "timing" -> "1.856", "parsetiming" -> "0.112", "parsetimedout" -> 
    "false", "recalculate" -> "", "id" -> 
    "MSP1411fi5af3ga0f9igc00002a33c8e2dgb3594i", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "4", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa1511fi5af3ga0f9igc0000292d43fhe83c3eh16430556393126808734", "version" -> 
    "2.6", "inputstring" -> "yellow"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 3., 
    "Date" -> {2022, 12, 6, 10, 43, 12.429118`7.847015297044757}, "Line" -> 5,
     "SessionID" -> 23578867866504654728}, Typeset`showpods$$ = {1, 2, 3, 4, 
   5, 6, 7, 8, 9, 10}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Fast parse", "Fast parse", 1, 0, "Input", "Yellow"}, Typeset`open$$ = 
   True, Typeset`newq$$ = "yellow"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{560., {1918., 23.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",ExpressionUUID->\
"8ff63c24-98bc-4604-8482-7ac3a139cb1a"],

Cell[BoxData[
 TemplateBox[<|"color" -> RGBColor[1, 1, 0]|>,
  "RGBColorSwatchTemplate"]], "Output",
 CellChangeTimes->{3.879301364368256*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"ad9a444c-a74b-4945-ba14-097876098be3"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440, 762},
WindowMargins->{{0, Automatic}, {0, Automatic}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.1 for Linux x86 (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"e70c6bf5-0935-4d2b-8053-af191e22ed5a"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 195, 4, 54, "Subsection",ExpressionUUID->"df39f796-e169-4843-a78b-44eb8a07cc3f"],
Cell[778, 28, 285, 4, 51, "Text",ExpressionUUID->"b1f53f1e-f2b2-4a38-af4f-0c235c3126ee"],
Cell[CellGroupData[{
Cell[1088, 36, 1243, 24, 190, "Input",ExpressionUUID->"b0d04fce-16b6-4a52-95e1-1d3e4a3de7ea"],
Cell[2334, 62, 23073, 412, 68, "Output",ExpressionUUID->"2fa499fb-283c-4288-9656-757a6759404e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[25456, 480, 196, 4, 54, "Subsection",ExpressionUUID->"dcbd6a14-e461-4254-9cb8-0d7b5dc6ba4c"],
Cell[25655, 486, 506, 9, 51, "Text",ExpressionUUID->"88260de4-0e24-4766-a4aa-ab9cfe160e7e"],
Cell[CellGroupData[{
Cell[26186, 499, 328, 5, 45, "Input",ExpressionUUID->"0ce54707-4929-4a15-bb49-9fe4bf9111c5"],
Cell[26517, 506, 4448, 94, 68, "Output",ExpressionUUID->"9269b8cf-d4aa-4ad4-9bc3-3a1e3aeef618"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[31014, 606, 259, 5, 54, "Subsection",ExpressionUUID->"c9dbd5ff-2f79-4e77-a2df-6fe23238cec9"],
Cell[31276, 613, 431, 8, 51, "Text",ExpressionUUID->"b6703469-7c34-472f-8e15-eaf6c90c15a8"],
Cell[CellGroupData[{
Cell[31732, 625, 355, 6, 45, "Input",ExpressionUUID->"15b4bb63-0eb1-47e8-bb2e-66913b061d9b"],
Cell[32090, 633, 464, 7, 33, "Output",ExpressionUUID->"b2f58417-70c2-4f1c-a280-8b7269e0dff0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[32603, 646, 283, 6, 54, "Subsection",ExpressionUUID->"355a043f-aaf2-4b92-b259-fe5ba87e7aa6"],
Cell[32889, 654, 571, 10, 51, "Text",ExpressionUUID->"6fe6f034-a7e4-44bd-a1d9-c828a63530b4"],
Cell[CellGroupData[{
Cell[33485, 668, 641, 12, 49, "Input",ExpressionUUID->"19642b4b-37ba-4517-a938-a40983bab49e"],
Cell[34129, 682, 939, 16, 33, "Output",ExpressionUUID->"f74c670e-0c44-45be-8e68-35ba2aab17d2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[35117, 704, 197, 4, 54, "Subsection",ExpressionUUID->"5acb18eb-ce9d-4cdb-b398-e9af229dd755"],
Cell[35317, 710, 384, 5, 51, "Text",ExpressionUUID->"156e29bc-3b0b-4814-b22f-dca48fb95ff3"],
Cell[CellGroupData[{
Cell[35726, 719, 306, 5, 45, "Input",ExpressionUUID->"d403b57f-b64a-4e42-a7ef-5827adbcd8d2"],
Cell[36035, 726, 217671, 3909, 68, "Output",ExpressionUUID->"15291ca5-50d6-4429-bff3-e6952e9c1ab2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[253755, 4641, 228, 4, 54, "Subsection",ExpressionUUID->"aa64122c-4b86-4fd8-9d0d-6765620613a7"],
Cell[253986, 4647, 641, 11, 97, "Text",ExpressionUUID->"ef703c23-e66d-4748-ac11-ea1a76814131"],
Cell[CellGroupData[{
Cell[254652, 4662, 425, 7, 45, "Input",ExpressionUUID->"a304453a-830b-42a2-b470-6c996bff80b4"],
Cell[255080, 4671, 810766, 14390, 68, "Output",ExpressionUUID->"3405ab7b-2692-4e21-981d-b8e0de5ca093"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1065883, 19066, 350, 6, 48, "Input",ExpressionUUID->"394ff2a0-b62c-4a74-8423-582d9e84a0c1"],
Cell[1066236, 19074, 780, 13, 55, "Output",ExpressionUUID->"ebf5afc2-71ce-41da-a064-1c92072c92f0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1067053, 19092, 242, 4, 45, "Input",ExpressionUUID->"be807407-2c8a-4a1d-b219-b05927a0e9f2"],
Cell[1067298, 19098, 811335, 14386, 68, "Output",ExpressionUUID->"0ed87184-c1ba-4be0-814b-abff8c0377d3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1878682, 33490, 363, 6, 54, "Subsection",ExpressionUUID->"6d1308fc-e792-4629-b9cb-586d1353df05"],
Cell[1879048, 33498, 485, 8, 51, "Text",ExpressionUUID->"036d079a-5d2c-4743-a287-12bd4a397ad5"],
Cell[CellGroupData[{
Cell[1879558, 33510, 1609, 40, 159, "Input",ExpressionUUID->"fdf446fe-b734-4ea9-88a9-9362f32fbe72"],
Cell[1881170, 33552, 1189, 25, 233, "Output",ExpressionUUID->"5f1628df-a489-4ca1-81cf-92c4a9684721"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1882396, 33582, 762, 14, 49, "Input",ExpressionUUID->"9934bb1c-2754-486d-bdc4-39376f6c1f1d"],
Cell[1883161, 33598, 937, 18, 25, "Print",ExpressionUUID->"9b2dc39e-ee54-4f19-92d5-97e8d2163136"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1884135, 33621, 823, 14, 49, "Input",ExpressionUUID->"cb6f2aff-ae13-49f6-97de-d4f91decc999"],
Cell[1884961, 33637, 1276, 22, 25, "Print",ExpressionUUID->"48378cd0-20a6-4890-ba22-1f276e12b96a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1886274, 33664, 867, 15, 49, "Input",ExpressionUUID->"45843659-bcb6-4de5-919e-c1597f110860"],
Cell[1887144, 33681, 1224, 21, 25, "Print",ExpressionUUID->"0502795e-e252-4293-ba8f-32ee43383c6e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1888405, 33707, 681, 13, 49, "Input",ExpressionUUID->"578d9587-3c0e-49fc-be27-2714b419a7eb"],
Cell[1889089, 33722, 955, 17, 25, "Print",ExpressionUUID->"b1a22e4f-2476-4b9d-aefd-bc0180954876"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1890081, 33744, 698, 13, 49, "Input",ExpressionUUID->"b53c9df6-1bd3-47f9-81af-2200f7e79aa3"],
Cell[1890782, 33759, 975, 18, 25, "Print",ExpressionUUID->"a1bc0da4-30ac-4f69-9708-7f6786e096ba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1891794, 33782, 702, 13, 49, "Input",ExpressionUUID->"710eec1f-623f-4e19-bedb-89a962d0f78b"],
Cell[1892499, 33797, 999, 18, 25, "Print",ExpressionUUID->"8e7b6fbf-5454-4efe-8ea0-ed723bef0663"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1893547, 33821, 257, 5, 54, "Subsection",ExpressionUUID->"40034f79-08bb-4d04-8af5-f6367271ad42"],
Cell[1893807, 33828, 569, 10, 51, "Text",ExpressionUUID->"df8c69c1-3234-40b5-b67e-8550f64a2e82"],
Cell[CellGroupData[{
Cell[1894401, 33842, 5146, 110, 612, "Input",ExpressionUUID->"f2a49980-9fdb-4981-83ae-a765e922f0af"],
Cell[1899550, 33954, 7814, 188, 162, "Output",ExpressionUUID->"248e1452-efe9-424a-a696-1ea7f0e20870"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1907413, 34148, 208, 4, 54, "Subsection",ExpressionUUID->"4b1d7019-3eaf-4938-85c2-a2a7e5818b9b"],
Cell[1907624, 34154, 760, 15, 120, "Text",ExpressionUUID->"130871f3-70d9-49fe-a5bf-b8a661bceff3"],
Cell[CellGroupData[{
Cell[1908409, 34173, 5864, 95, 1329, "Input",ExpressionUUID->"c00ad7fc-0d95-4e75-85df-68f55f6f4b21"],
Cell[1914276, 34270, 71274, 1270, 441, "Output",ExpressionUUID->"2b8f06cf-674e-4859-8ded-967823d50673"],
Cell[1985553, 35542, 30622, 720, 239, "Output",ExpressionUUID->"2764fd48-472d-4712-8759-7b2be24694b3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2016224, 36268, 180, 3, 54, "Subsection",ExpressionUUID->"5cff8645-ebc9-4907-95ab-5cc7dd6f1b69"],
Cell[2016407, 36273, 801, 15, 120, "Text",ExpressionUUID->"5de7ce63-b0d1-4997-a00b-e321ce662aa0"],
Cell[CellGroupData[{
Cell[2017233, 36292, 4996, 91, 1266, "Input",ExpressionUUID->"23ce4b11-e50c-4db2-9845-aa2c11fef2f9"],
Cell[2022232, 36385, 92304, 1686, 441, "Output",ExpressionUUID->"e7e68a72-d173-475c-b7a7-c866d7c14dcb"],
Cell[2114539, 38073, 61659, 1366, 379, "Output",ExpressionUUID->"2923e34c-0df4-4194-bf76-f708adb89995"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2176247, 39445, 173, 3, 54, "Subsection",ExpressionUUID->"ae11378d-153d-4495-b890-25357a10f9d3"],
Cell[2176423, 39450, 351, 5, 51, "Text",ExpressionUUID->"32f8e71a-3fe2-4a3e-b317-ae7046b2e064"],
Cell[CellGroupData[{
Cell[2176799, 39459, 259, 4, 45, "Input",ExpressionUUID->"62214861-25f5-4d3e-835f-d42e55b9dbdb"],
Cell[2177061, 39465, 4140, 89, 68, "Output",ExpressionUUID->"eebb6b2b-bc8a-4857-b2de-af03e6a7dd67"]
}, Open  ]],
Cell[2181216, 39557, 444, 10, 81, "Text",ExpressionUUID->"fb651875-2d25-4174-84f0-419dd5474acc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2181697, 39572, 400, 6, 54, "Subsection",ExpressionUUID->"87d28077-30c9-4cc0-b218-23c552179387"],
Cell[CellGroupData[{
Cell[2182122, 39582, 14778, 361, 73, "WolframAlphaShortInput",ExpressionUUID->"2b3bb3c5-b732-4507-9a15-655853c79c04"],
Cell[2196903, 39945, 14815, 262, 239, "Output",ExpressionUUID->"19d4454c-f26a-42a2-8eec-709227b72d2f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2211755, 40212, 14224, 347, 73, "WolframAlphaShortInput",ExpressionUUID->"aa7ea2b6-ba31-4d32-877a-7b9fce7f0ec7"],
Cell[2225982, 40561, 148, 2, 33, "Output",ExpressionUUID->"ad397daa-7ee1-47cf-ac31-c2c2ed7d4c07"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2226179, 40569, 337, 6, 54, "Subsection",ExpressionUUID->"c33d0616-3de2-460e-b5f0-f3c7c8ffb323"],
Cell[CellGroupData[{
Cell[2226541, 40579, 501251, 9859, 3136, "WolframAlphaShortInput",ExpressionUUID->"ddcc2926-1042-4701-820f-c154ac7bc693"],
Cell[2727795, 50440, 338, 7, 44, "Output",ExpressionUUID->"a1791b71-a010-48fb-af2b-48645bd8e18d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2728182, 50453, 206, 3, 54, "Subsection",ExpressionUUID->"3485b5e8-4b05-420b-a58b-44ea4d337d22"],
Cell[CellGroupData[{
Cell[2728413, 50460, 325134, 6629, 1958, "WolframAlphaShortInput",ExpressionUUID->"8ff63c24-98bc-4604-8482-7ac3a139cb1a"],
Cell[3053550, 57091, 220, 4, 33, "Output",ExpressionUUID->"ad9a444c-a74b-4945-ba14-097876098be3"]
}, Open  ]]
}, Open  ]]
}
]
*)

