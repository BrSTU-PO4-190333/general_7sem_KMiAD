(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2566958,      46847]
NotebookOptionsPosition[   2558310,      46693]
NotebookOutlinePosition[   2558819,      46712]
CellTagsIndexPosition[   2558776,      46709]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 StyleBox["\:041b\:0443\:0434 \:0410. \:0421.", "Title"],
 StyleBox[" ", "Subchapter"],
 "\n",
 StyleBox["\:041b\:0430\:0431\:043e\:0440\:0430\:0442\:043e\:0440\:043d\:0430\
\:044f \:0440\:0430\:0431\:043e\:0442\:0430 \:21168 : \
\:0420\:0430\:0431\:043e\:0442\:0430 \:0441 \:0411\:0414 \:0438 WolframAlpha \
\:0432 \:0441\:0438\:0441\:0442\:0435\:043c\:0435 Mathematica", "Title",
  FontSize->36]
}], "Chapter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.814460954278425*^9, {3.8144609935404177`*^9, 3.814460993653335*^9}, {
   3.844782886663793*^9, 3.844782890142933*^9}, {3.845216236255737*^9, 
   3.845216241146427*^9}, {3.8476143939039135`*^9, 3.847614394035205*^9}, {
   3.8761365668032517`*^9, 3.8761365804763803`*^9}, {3.8761370111988153`*^9, 
   3.8761370305241876`*^9}, 3.876137074789527*^9, {3.876137114632807*^9, 
   3.8761371230234203`*^9}, {3.8761371744992714`*^9, 3.87613721608617*^9}, 
   3.8761374820756655`*^9, {3.876376184394312*^9, 3.876376208278927*^9}, {
   3.8767645016420183`*^9, 
   3.8767645084548516`*^9}},ExpressionUUID->"5d342c17-883f-4e07-a683-\
b26a12d08241"],

Cell[TextData[StyleBox["\:0420\:0430\:0431\:043e\:0442\:0430 \:0441 \:0431\
\:0430\:0437\:043e\:0439 \:0434\:0430\:043d\:043d\:044b\:0445", "Section"]], \
"Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.876137573492797*^9, 3.8761375864451814`*^9}, {
  3.8761376540865173`*^9, 3.8761376569025164`*^9}, {3.876377188423815*^9, 
  3.8763771979731245`*^9}, {3.876764483345474*^9, 
  3.876764492798601*^9}},ExpressionUUID->"ff0df9ba-4677-4cd5-a86e-\
7166b9da77cb"],

Cell[CellGroupData[{

Cell["\<\
1) \:0421\:043e\:0437\:0434\:0430\:0435\:0442\:0441\:044f \:043f\:043e\:0434\
\:043a\:043b\:044e\:0447\:0435\:043d\:0438\:0435 \:043a \:0431\:0430\:0437\
\:0435 \:0434\:0430\:043d\:043d\:044b\:0445 MySQL. \:041a \:0442\:0430\:0431\
\:043b\:0438\:0446\:0435 mysql://root:root@localhost:3306/prokattovara\
\>", "Subsubsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.8767565242588053`*^9, 
  3.876756569913718*^9}},ExpressionUUID->"77ae37d3-a95c-462b-875a-\
f38ca4c9840c"],

Cell[BoxData[
 RowBox[{"conn", "=", 
  RowBox[{"DatabaseReference", "[", 
   RowBox[{
   "URL", "[", "\"\<mysql://root:root@localhost:3306/prokattovara\>\"", "]"}],
    "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.84761454694106*^9, 3.847614548534802*^9}, 
   3.8476147275192313`*^9, {3.847614825457172*^9, 3.847614860769257*^9}, {
   3.8476159573188515`*^9, 3.847615991514171*^9}, {3.8476160403271255`*^9, 
   3.847616148029336*^9}, 3.847616284327673*^9, {3.847616332321368*^9, 
   3.8476164431065493`*^9}, {3.8476164804346824`*^9, 
   3.8476164852471914`*^9}, {3.84761652140589*^9, 3.84761654938787*^9}, {
   3.8476167215249386`*^9, 3.8476167759772387`*^9}, 3.8761370009141273`*^9, 
   3.8761375864451814`*^9, {3.876153937539617*^9, 3.87615395650695*^9}, {
   3.876153992368863*^9, 3.876154019851179*^9}, {3.8761540507274585`*^9, 
   3.8761540511641006`*^9}, {3.8761541109142885`*^9, 
   3.8761541407588673`*^9}, {3.8761544039764576`*^9, 
   3.8761544170865755`*^9}, {3.876154509101288*^9, 3.8761545109773664`*^9}, {
   3.876377206983782*^9, 3.876377235513403*^9}, {3.8763773177135315`*^9, 
   3.876377328203723*^9}, {3.8763776076035337`*^9, 3.8763776137309036`*^9}, {
   3.876462830432626*^9, 3.876462853111582*^9}, {3.8764629276636944`*^9, 
   3.876462935803355*^9}, 3.87646334458972*^9, {3.876743681488863*^9, 
   3.8767436850357065`*^9}, {3.8767564710187426`*^9, 3.876756484502287*^9}, 
   3.8767565358112593`*^9, {3.876756569913718*^9, 
   3.8767565764901648`*^9}},ExpressionUUID->"ef7a1368-3969-4902-9c6c-\
ee96804cd05d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["DatabaseReference",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.04], {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}}}, {{{21.0264, 18.2393}, {21.0264, 15.5973}, {17.2094, 
                13.456299999999999`}, {12.500399999999999`, 
                13.456299999999999`}, {7.791399999999999, 
                13.456299999999999`}, {3.973399999999998, 15.5973}, {
                3.973399999999998, 18.2393}, {3.973399999999998, 20.8813}, {
                7.791399999999999, 23.0213}, {12.500399999999999`, 23.0213}, {
                17.2094, 23.0213}, {21.0264, 20.8813}, {21.0264, 
                18.2393}}}]}, {
               FaceForm[{
                 RGBColor[0.537, 0.537, 0.537], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmJeKA0Bmg5x3ifYbbvNHNpeB+6Qc1WA82vsTeN2nRR0
kJh6hTNjkgmcv4H5eY+GrRGcz+Tbwut/Xh+ufyJ/ldnqe9oOMPNhfFuu64sL
7hrA+YobijIm9prA9cP4MPNhfJj9MP0w96G7H8a/JV2TaPRV00E2KsX6/nlZ
OB8iz+Pwa0H65leT9eB8mH0w/qqmQM+5BqZw/Zau7kU/683h5sP4lS/VDDl6
DFHlG0zh+mF8FPOBfJj9MP2o7kO4HwAEYoXy
                "]]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}}}, {{{12.5, 23.0215}, {
                7.7909999999999995`, 23.0215}, {3.974, 20.880499999999998`}, {
                3.974, 18.2395}, {3.974, 6.7605}, {3.974, 
                4.119500000000002}, {7.7909999999999995`, 
                1.9785000000000004`}, {12.5, 1.9785000000000004`}, {17.209, 
                1.9785000000000004`}, {21.026, 4.119500000000002}, {21.026, 
                6.7605}, {21.026, 18.2395}, {21.026, 20.880499999999998`}, {
                17.209, 23.0215}, {12.5, 23.0215}}}]}, {
               FaceForm[{
                 RGBColor[0.537, 0.537, 0.537], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
                 1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 
                 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
                 1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{20.552699999999998`, 10.5869}, {20.552699999999998`,
                  8.2539}, {16.8647, 6.2819}, {12.499699999999997`, 6.2819}, {
                 8.135699999999998, 6.2819}, {4.4476999999999975`, 8.2539}, {
                 4.4476999999999975`, 10.5869}, {4.4476999999999975`, 
                 12.0379}, {5.9087, 10.3139}, {8.926699999999999, 9.1519}, {
                 12.499699999999997`, 9.1519}, {16.073699999999995`, 
                 9.1519}, {19.0907, 10.3139}, {20.552699999999998`, 
                 12.0379}}, {{20.552699999999998`, 6.7609}, {
                 20.552699999999998`, 4.4279}, {16.8647, 
                 2.4559000000000015`}, {12.499699999999997`, 
                 2.4559000000000015`}, {8.135699999999998, 
                 2.4559000000000015`}, {4.4476999999999975`, 4.4279}, {
                 4.4476999999999975`, 6.7609}, {4.4476999999999975`, 
                 8.2119}, {5.9087, 6.4879}, {8.926699999999999, 5.3259}, {
                 12.499699999999997`, 5.3259}, {16.073699999999995`, 
                 5.3259}, {19.0907, 6.4879}, {20.552699999999998`, 
                 8.2119}}, CompressedData["
1:eJxTTMoPSmViYGBQBWIQPe/sqvNX2UwdUs7Eep/YbuTAFj/DR/SPCZxvLGhm
s5fJ1KE/uERler+RA0z9/NVrb8SnIfgbmJ/3aNgi+AqOH5PPrDV0UH3SPO/s
LRMH7xPstrNVDR1O13vsr+01cUj7/iRx4TIDOD+H8+eC9Ms6cP7sZ7LLX2ho
OLy4ueZXzF0DB4Eqs9V25ioOISCL/2vA+elKORVVrgpwvsPazHuFpwTh+mF8
mPkwPsz+G9I1iUZTBeDue/H6gKXyKX64+2F8mP9gfJj/OQrXdN9+wQ8PnwAD
rZXCAgLw8IOph/EzGlmO9m/khfMDatdtS/rP7RAC1P6/AcGH2Qfjc0rPi9Pk
lobzy+YsUt5Zw+dwbMbuaRPOyzpMANn//7s9LHxgfOWdf9q/dBvC+cDYCXtT
bwrXD+PDzIfxYfbD+DD3qfNzb13miUgv6OkHACYRDMY=
                 "]}]}, {
               FaceForm[{
                 RGBColor[0.8670000000000001, 0.067, 0.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 
                 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
                 1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}}, {CompressedData["
1:eJxTTMoPSmViYGAwBmIQ7fgx+UxstoGDtP5dFTZGXYdHx2fsniag4/AmcIdc
q7aBA1eGUk5FlIHDl79XKl6yYfIb1A61LS83dGBrnOrc/UbfYXbo/NVrdxjC
5bN8P/cFfzF0aBe7ee67sIHDPoOZWhKmxg5HFTYUZQgaEuQnx95xY7bQd/h0
yTdJIMLIIc+kYbvDIR2Hypdqhhw8xg5OazPvFXLpOjglPL2gZG3iwOjbwuuf
r+Ngc9+/d/o5UzhfFeTA06YORV19Tz7N13LY9hnoQE9TB6Durr4ULYfMiW9r
7E1NHW5J1yQaTdVwKN83X0p/r4lDHND6itPqDrd/1mXtKTF12Lj/zTybHHWH
DpB/Nps6LH/hofd/oRrE/GwzB7Hfp9+ddFZxKM4AGnjf1EHkgsuNDyVKDg+A
zsn7ZOIANI1bRUPR4fRC122f7xo7PPkkfyn/voIDKPhyjhs7uN748MVrpoKD
bFSK9f31xg4g63RCFByaD5xa6DrN2GG+jc6VWWoKDkIggVZjBzGPgD8Sn+Ud
RNe5P6wqMXZwWHJ/H98ceYdOR2CAJBk7aCzo3PDwpZzDGhmggfbGDmu2JdXf
tJVzAAXXbUljBy431VKmWbJQ9xk5eFU36/uoyToIRFhuOXHNyGEZyLjNMg7v
gKETt8vIIY0hv5HFVQYSPnONHBJCgtQXdEo6+JiDbDR04JCeF6fpLe6wt2Sy
BIuYocO71wcslb1EIe4LAaYH7W/T7woLOySBLHhh4PAGJH9K0IFJG5hC+gzh
fLD5tkZwPth9k0wc9h0UVwt2VYCEd7eZg8W1o7kmDJpw/uSVTYGedw3g/DJ/
ObGsXhO4fhgfZj6M/2H5MW/zlQYObEIi9sfuGDn0Tc8Tam7Qc0DPHwDu+047

                 "], {{12.500399999999999`, 20.349}, {13.1264, 20.689}, {
                 13.2204, 20.739}, {13.8234, 21.064}, {13.8704, 20.414}, {
                 13.8474, 20.076}, {13.776399999999999`, 
                 19.281000000000002`}, {13.4294, 19.478}, {
                 12.732399999999998`, 19.725}, {12.732399999999998`, 
                 19.725}, {12.732399999999998`, 19.725}, {12.593399999999999`,
                  20.18}, {12.500399999999999`, 20.349}}, CompressedData["
1:eJxTTMoPSmViYGCwAGIQ/UHMI+DPDAmHtteBO+Rc9R2u7HksIusp7fBNI6b/
kKmhQ9RloMBcOYcdcq2vA38YOQgu3XtQ/JmiQ9aekskSLcYOTY+Oz9gdpgyR
tzBxeDAHpELZocsx4ekFJ1OHePZzkoFRag429/17p58zdQhmXTzJilEdLp/a
kRx7h03DIeTx0tlHFEwc6np2ZnPu1HC487Mua88UYwcNkMBJbQe3bZ//Xtlh
5KDrLPP6kZmBQ+NU5+6c5YYOIvbH7mw9YujQfODUQlczQ4dTRkc26r0zdEgS
iLDcomHo8JP/5fb1ykYOb4Deaz1tgME3BirPazZ0eFdjbxoXZeBwZdYz2eUr
VB2qRda5P9xl4ABy/q1oVYdXaoYca/YYOJyYsXvaBH5VBzuu64sL9ho4/Dr9
7uThQypw/q5szp8LnivD+Tc+fPGKZFN28OJh0m7fZuDAXMGtovFP0QEkbbvK
wMF//ZTUjsVKDs8uKN3+KWfoALL+BYeKAzD0v2rUEOZDIkDJYZErMIC2GELD
X9FBHhgdO/YZOmwV/X36HaeSg+KGooyJbw0dGraDdCg5gIKzQtPI4drRXJOG
70oO6kDvyVgZOcwFaZ+u5LDq4yXfJAMjh4gVpmetz8k7zJoJBDeB4fvUfsl9
O3mI/ARDh43738yzeaPgAPKeWKWhw6V8YIzfVHRwAkavUjRhfk2iUahBloLD
L2B0l3w2cFj2wkPvv6KCQzHQtTX2mHxw+KarOJROlmAJyzNwmApKQHPUIe4J
MHDIAUlvVneYApTm8zVwkFsONGA/gh93x4254jSCDzL9b5kmJDw8DRwMtFYK
X2DRc3gATK55QToOoOD2yNNxSAalJw4dhwn8VWar92lBwveetoMFKAAZNOH8
eTY6wCSkDOdvePhy6qYeOYed4Pyh64Ce3wCDEYra
                 "], {{12.500399999999999`, 23.5}, {7.4533999999999985`, 
                 23.5}, {3.500399999999999, 21.189}, {3.500399999999999, 
                 18.239}, {3.500399999999999, 15.289000000000001`}, {
                 7.4533999999999985`, 12.979000000000001`}, {
                 12.500399999999999`, 12.979000000000001`}, {17.5464, 
                 12.979000000000001`}, {21.5004, 15.289000000000001`}, {
                 21.5004, 18.239}, {21.5004, 21.189}, {17.5464, 23.5}, {
                 12.500399999999999`, 23.5}}}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}}}, {{{14.2646, 17.915}, {13.7296, 18.136}, {13.1496, 
                18.369999999999997`}, {12.3616, 18.305999999999997`}, {
                12.2906, 18.188}, {12.2226, 18.096999999999998`}, {12.1756, 
                17.967}, {12.5466, 17.992}, {12.9416, 17.915}, {13.3826, 
                17.771}, {13.8006, 17.837}, {13.8476, 17.849999999999998`}, {
                14.2646, 17.915}}}]}}, AspectRatio -> Automatic, 
             ImageSize -> {25., 25.}, PlotRange -> {{0., 25.}, {0., 25.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"prokattovara\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Backend: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"MySQL\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.04], {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}}}, {{{21.0264, 18.2393}, {21.0264, 15.5973}, {17.2094, 
                13.456299999999999`}, {12.500399999999999`, 
                13.456299999999999`}, {7.791399999999999, 
                13.456299999999999`}, {3.973399999999998, 15.5973}, {
                3.973399999999998, 18.2393}, {3.973399999999998, 20.8813}, {
                7.791399999999999, 23.0213}, {12.500399999999999`, 23.0213}, {
                17.2094, 23.0213}, {21.0264, 20.8813}, {21.0264, 
                18.2393}}}]}, {
               FaceForm[{
                 RGBColor[0.537, 0.537, 0.537], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmJeKA0Bmg5x3ifYbbvNHNpeB+6Qc1WA82vsTeN2nRR0
kJh6hTNjkgmcv4H5eY+GrRGcz+Tbwut/Xh+ufyJ/ldnqe9oOMPNhfFuu64sL
7hrA+YobijIm9prA9cP4MPNhfJj9MP0w96G7H8a/JV2TaPRV00E2KsX6/nlZ
OB8iz+Pwa0H65leT9eB8mH0w/qqmQM+5BqZw/Zau7kU/683h5sP4lS/VDDl6
DFHlG0zh+mF8FPOBfJj9MP2o7kO4HwAEYoXy
                "]]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}}}, {{{12.5, 23.0215}, {
                7.7909999999999995`, 23.0215}, {3.974, 20.880499999999998`}, {
                3.974, 18.2395}, {3.974, 6.7605}, {3.974, 
                4.119500000000002}, {7.7909999999999995`, 
                1.9785000000000004`}, {12.5, 1.9785000000000004`}, {17.209, 
                1.9785000000000004`}, {21.026, 4.119500000000002}, {21.026, 
                6.7605}, {21.026, 18.2395}, {21.026, 20.880499999999998`}, {
                17.209, 23.0215}, {12.5, 23.0215}}}]}, {
               FaceForm[{
                 RGBColor[0.537, 0.537, 0.537], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
                 1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 
                 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
                 1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{20.552699999999998`, 10.5869}, {20.552699999999998`,
                  8.2539}, {16.8647, 6.2819}, {12.499699999999997`, 6.2819}, {
                 8.135699999999998, 6.2819}, {4.4476999999999975`, 8.2539}, {
                 4.4476999999999975`, 10.5869}, {4.4476999999999975`, 
                 12.0379}, {5.9087, 10.3139}, {8.926699999999999, 9.1519}, {
                 12.499699999999997`, 9.1519}, {16.073699999999995`, 
                 9.1519}, {19.0907, 10.3139}, {20.552699999999998`, 
                 12.0379}}, {{20.552699999999998`, 6.7609}, {
                 20.552699999999998`, 4.4279}, {16.8647, 
                 2.4559000000000015`}, {12.499699999999997`, 
                 2.4559000000000015`}, {8.135699999999998, 
                 2.4559000000000015`}, {4.4476999999999975`, 4.4279}, {
                 4.4476999999999975`, 6.7609}, {4.4476999999999975`, 
                 8.2119}, {5.9087, 6.4879}, {8.926699999999999, 5.3259}, {
                 12.499699999999997`, 5.3259}, {16.073699999999995`, 
                 5.3259}, {19.0907, 6.4879}, {20.552699999999998`, 
                 8.2119}}, CompressedData["
1:eJxTTMoPSmViYGBQBWIQPe/sqvNX2UwdUs7Eep/YbuTAFj/DR/SPCZxvLGhm
s5fJ1KE/uERler+RA0z9/NVrb8SnIfgbmJ/3aNgi+AqOH5PPrDV0UH3SPO/s
LRMH7xPstrNVDR1O13vsr+01cUj7/iRx4TIDOD+H8+eC9Ms6cP7sZ7LLX2ho
OLy4ueZXzF0DB4Eqs9V25ioOISCL/2vA+elKORVVrgpwvsPazHuFpwTh+mF8
mPkwPsz+G9I1iUZTBeDue/H6gKXyKX64+2F8mP9gfJj/OQrXdN9+wQ8PnwAD
rZXCAgLw8IOph/EzGlmO9m/khfMDatdtS/rP7RAC1P6/AcGH2Qfjc0rPi9Pk
lobzy+YsUt5Zw+dwbMbuaRPOyzpMANn//7s9LHxgfOWdf9q/dBvC+cDYCXtT
bwrXD+PDzIfxYfbD+DD3qfNzb13miUgv6OkHACYRDMY=
                 "]}]}, {
               FaceForm[{
                 RGBColor[0.8670000000000001, 0.067, 0.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 
                 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
                 1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}}, {CompressedData["
1:eJxTTMoPSmViYGAwBmIQ7fgx+UxstoGDtP5dFTZGXYdHx2fsniag4/AmcIdc
q7aBA1eGUk5FlIHDl79XKl6yYfIb1A61LS83dGBrnOrc/UbfYXbo/NVrdxjC
5bN8P/cFfzF0aBe7ee67sIHDPoOZWhKmxg5HFTYUZQgaEuQnx95xY7bQd/h0
yTdJIMLIIc+kYbvDIR2Hypdqhhw8xg5OazPvFXLpOjglPL2gZG3iwOjbwuuf
r+Ngc9+/d/o5UzhfFeTA06YORV19Tz7N13LY9hnoQE9TB6Durr4ULYfMiW9r
7E1NHW5J1yQaTdVwKN83X0p/r4lDHND6itPqDrd/1mXtKTF12Lj/zTybHHWH
DpB/Nps6LH/hofd/oRrE/GwzB7Hfp9+ddFZxKM4AGnjf1EHkgsuNDyVKDg+A
zsn7ZOIANI1bRUPR4fRC122f7xo7PPkkfyn/voIDKPhyjhs7uN748MVrpoKD
bFSK9f31xg4g63RCFByaD5xa6DrN2GG+jc6VWWoKDkIggVZjBzGPgD8Sn+Ud
RNe5P6wqMXZwWHJ/H98ceYdOR2CAJBk7aCzo3PDwpZzDGhmggfbGDmu2JdXf
tJVzAAXXbUljBy431VKmWbJQ9xk5eFU36/uoyToIRFhuOXHNyGEZyLjNMg7v
gKETt8vIIY0hv5HFVQYSPnONHBJCgtQXdEo6+JiDbDR04JCeF6fpLe6wt2Sy
BIuYocO71wcslb1EIe4LAaYH7W/T7woLOySBLHhh4PAGJH9K0IFJG5hC+gzh
fLD5tkZwPth9k0wc9h0UVwt2VYCEd7eZg8W1o7kmDJpw/uSVTYGedw3g/DJ/
ObGsXhO4fhgfZj6M/2H5MW/zlQYObEIi9sfuGDn0Tc8Tam7Qc0DPHwDu+047

                 "], {{12.500399999999999`, 20.349}, {13.1264, 20.689}, {
                 13.2204, 20.739}, {13.8234, 21.064}, {13.8704, 20.414}, {
                 13.8474, 20.076}, {13.776399999999999`, 
                 19.281000000000002`}, {13.4294, 19.478}, {
                 12.732399999999998`, 19.725}, {12.732399999999998`, 
                 19.725}, {12.732399999999998`, 19.725}, {12.593399999999999`,
                  20.18}, {12.500399999999999`, 20.349}}, CompressedData["
1:eJxTTMoPSmViYGCwAGIQ/UHMI+DPDAmHtteBO+Rc9R2u7HksIusp7fBNI6b/
kKmhQ9RloMBcOYcdcq2vA38YOQgu3XtQ/JmiQ9aekskSLcYOTY+Oz9gdpgyR
tzBxeDAHpELZocsx4ekFJ1OHePZzkoFRag429/17p58zdQhmXTzJilEdLp/a
kRx7h03DIeTx0tlHFEwc6np2ZnPu1HC487Mua88UYwcNkMBJbQe3bZ//Xtlh
5KDrLPP6kZmBQ+NU5+6c5YYOIvbH7mw9YujQfODUQlczQ4dTRkc26r0zdEgS
iLDcomHo8JP/5fb1ykYOb4Deaz1tgME3BirPazZ0eFdjbxoXZeBwZdYz2eUr
VB2qRda5P9xl4ABy/q1oVYdXaoYca/YYOJyYsXvaBH5VBzuu64sL9ho4/Dr9
7uThQypw/q5szp8LnivD+Tc+fPGKZFN28OJh0m7fZuDAXMGtovFP0QEkbbvK
wMF//ZTUjsVKDs8uKN3+KWfoALL+BYeKAzD0v2rUEOZDIkDJYZErMIC2GELD
X9FBHhgdO/YZOmwV/X36HaeSg+KGooyJbw0dGraDdCg5gIKzQtPI4drRXJOG
70oO6kDvyVgZOcwFaZ+u5LDq4yXfJAMjh4gVpmetz8k7zJoJBDeB4fvUfsl9
O3mI/ARDh43738yzeaPgAPKeWKWhw6V8YIzfVHRwAkavUjRhfk2iUahBloLD
L2B0l3w2cFj2wkPvv6KCQzHQtTX2mHxw+KarOJROlmAJyzNwmApKQHPUIe4J
MHDIAUlvVneYApTm8zVwkFsONGA/gh93x4254jSCDzL9b5kmJDw8DRwMtFYK
X2DRc3gATK55QToOoOD2yNNxSAalJw4dhwn8VWar92lBwveetoMFKAAZNOH8
eTY6wCSkDOdvePhy6qYeOYed4Pyh64Ce3wCDEYra
                 "], {{12.500399999999999`, 23.5}, {7.4533999999999985`, 
                 23.5}, {3.500399999999999, 21.189}, {3.500399999999999, 
                 18.239}, {3.500399999999999, 15.289000000000001`}, {
                 7.4533999999999985`, 12.979000000000001`}, {
                 12.500399999999999`, 12.979000000000001`}, {17.5464, 
                 12.979000000000001`}, {21.5004, 15.289000000000001`}, {
                 21.5004, 18.239}, {21.5004, 21.189}, {17.5464, 23.5}, {
                 12.500399999999999`, 23.5}}}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}}}, {{{14.2646, 17.915}, {13.7296, 18.136}, {13.1496, 
                18.369999999999997`}, {12.3616, 18.305999999999997`}, {
                12.2906, 18.188}, {12.2226, 18.096999999999998`}, {12.1756, 
                17.967}, {12.5466, 17.992}, {12.9416, 17.915}, {13.3826, 
                17.771}, {13.8006, 17.837}, {13.8476, 17.849999999999998`}, {
                14.2646, 17.915}}}]}}, AspectRatio -> Automatic, 
             ImageSize -> {25., 25.}, PlotRange -> {{0., 25.}, {0., 25.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"prokattovara\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Backend: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"MySQL\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Host: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"localhost\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"ID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"2tf94regb0yb\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Password: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"********\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Port: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3306", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Username: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"root\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  DatabaseReference[
   Association[
   "Backend" -> "mysql", "Name" -> "prokattovara", "Port" -> 3306, "Host" -> 
    "localhost", "Username" -> "root", "Password" -> "root"]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.8764634453792577`*^9, 3.876743666627757*^9, 
  3.876743704707552*^9, 3.876743857750361*^9, 3.876756569913718*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"0872398e-376a-41f6-9efa-9ee596218b78"]
}, Closed]],

Cell[CellGroupData[{

Cell["2) \:041f\:0440\:043e\:0432\:0435\:0440\:043a\:0430 \:0441\:043e\:0435\
\:0434\:0438\:043d\:0435\:043d\:0438\:044f", "Subsubsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.876756592039606*^9, 3.8767565924039955`*^9}, {
   3.8767566262661734`*^9, 3.8767566268607016`*^9}, {3.876756710355395*^9, 
   3.876756711537985*^9}, 
   3.8767574141839786`*^9},ExpressionUUID->"a0ea78f4-46f1-4642-84d2-\
5a2f8deb981a"],

Cell[BoxData[
 RowBox[{"DatabaseConnect", "[", "conn", "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.87675639156015*^9, 3.8767564193627477`*^9}, {
   3.8767564972234364`*^9, 3.876756503405791*^9}, {3.8767566248790345`*^9, 
   3.876756629345165*^9}, 3.8767574141849966`*^9},
 CellLabel->"In[30]:=",ExpressionUUID->"99f9617f-cdbb-4659-b295-fa518650fb92"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Success",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            FrameBox[
             StyleBox["\"\[Checkmark]\"", 
              Directive[
               RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
               25], StripOnInput -> False], ContentPadding -> False, 
             FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                 "\"Database connection was successful.\"", 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"DatabaseSuccess\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            FrameBox[
             StyleBox["\"\[Checkmark]\"", 
              Directive[
               RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
               25], StripOnInput -> False], ContentPadding -> False, 
             FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                 "\"Database connection was successful.\"", 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"DatabaseSuccess\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Success["DatabaseSuccess", 
   Association[
   "MessageTemplate" :> MessageName[DatabaseReference, "conn"], 
    "MessageParameters" :> {}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{3.876756505450736*^9, 3.876757326648254*^9, 
  3.8767574141849966`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"a49fea42-5907-478c-93f9-411d39880419"]
}, Closed]],

Cell[CellGroupData[{

Cell["3) \:0423\:0431\:0435\:0434\:0438\:043c\:0441\:044f, \:0447\:0442\:043e \
\:043c\:044b \:043f\:043e\:0434\:043a\:043b\:044e\:0447\:0435\:043d\:044b", \
"Subsubsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.8767565978241262`*^9, 3.8767565982120934`*^9}, {
   3.8767566704666057`*^9, 3.8767566813812413`*^9}, 
   3.87675740625776*^9},ExpressionUUID->"87f0e3c3-c92a-4cd3-aeb9-\
44d392c74b62"],

Cell[BoxData[
 RowBox[{"conn", "[", "\"\<Connected\>\"", "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.876756397489852*^9, 3.8767564415457425`*^9}, {
   3.8767566694118347`*^9, 3.876756693135202*^9}, 3.8767574062587852`*^9},
 CellLabel->"In[31]:=",ExpressionUUID->"067f454a-4ad9-418a-bcc6-8047124fc4b6"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.876756509803*^9, 3.876756696191909*^9, 
  3.876757333068971*^9, 3.8767574062587852`*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"04cd501a-535a-43fb-ab5b-5bc40ae1ef78"]
}, Closed]],

Cell[CellGroupData[{

Cell["4) \:0418\:0437\:0432\:043b\:0435\:0447\:0435\:043d\:0438\:0435 \:0441\
\:0440\:0430\:0437\:0443 \:043d\:0435\:0441\:043a\:043e\:043b\:044c\:043a\
\:0438\:0445 \:0441\:0432\:043e\:0439\:0441\:0442\:0432 \:0411\:0414", \
"Subsubsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.876757082221018*^9, 3.8767571060010667`*^9}, {
   3.876757707997878*^9, 3.876757708156912*^9}, 
   3.8767577415928555`*^9},ExpressionUUID->"c7b96faf-cefc-4b54-89b5-\
6c878bcd5d9a"],

Cell[BoxData[
 RowBox[{"conn", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<Username\>\"", ",", "\"\<Password\>\""}], "}"}], 
  "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.8767562719487653`*^9, 3.8767563167618494`*^9}, {
   3.8767570880691996`*^9, 3.8767571060021276`*^9}, 
   3.876757741593913*^9},ExpressionUUID->"88ac0490-099c-48ab-bd58-\
75434c6a1280"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Username\"\>", "\[Rule]", "\<\"root\"\>"}], ",", 
   RowBox[{"\<\"Password\"\>", "\[Rule]", "\<\"root\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.8767563196220465`*^9, 3.8767571060021276`*^9, 
  3.876757741593913*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"013846a8-9c74-42e5-a900-489c65e18e79"]
}, Closed]],

Cell[CellGroupData[{

Cell["5) \:0421\:043e\:0437\:0434\:0430\:0435\:0442\:0441\:044f \:043e\:0431\
\:044a\:0435\:043a\:0442 \:0411\:0414 MySQL \:043d\:0430 \:043e\:0441\:043d\
\:043e\:0432\:0435 \:043f\:043e\:0434\:043a\:043b\:044e\:0447\:0435\:043d\
\:0438\:044f", "Subsubsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.8767566039256315`*^9, 3.876756604298916*^9}, {
   3.8767567253502007`*^9, 3.8767567257621064`*^9}, {3.8767568035223303`*^9, 
   3.876756803853053*^9}, 3.8767574013120966`*^9, {3.8767577205975723`*^9, 
   3.876757720818524*^9}},ExpressionUUID->"f4522f8a-d082-434b-966e-\
e2ceb80c0122"],

Cell[BoxData[
 RowBox[{"rbd", "=", 
  RowBox[{"RelationalDatabase", "[", "conn", "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.876377108673745*^9, 3.8763771214339385`*^9}, {
  3.8763773483540154`*^9, 3.8763773585386505`*^9}, {3.8763776633633666`*^9, 
  3.876377694323717*^9}, {3.876377760043824*^9, 3.8763777663188357`*^9}, {
  3.8767567208615017`*^9, 3.876756723260659*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"f3a809e2-24b6-4eab-a120-4bcc01c0bf6f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["RelationalDatabase",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {
                8.151761718749999, {0., 8.151761718749999}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.04], {
               FaceForm[{
                 RGBColor[0.651, 0.651, 0.651], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                 1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {0, 
                 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{20.5, 4.}, {20.5, 3.724}, {20.276, 3.5}, {20., 
                 3.5}, {6., 3.5}, {5.724, 3.5}, {5.5, 3.724}, {5.5, 4.}, {5.5,
                  21.}, {5.5, 21.276}, {5.724, 21.5}, {6., 21.5}, {20., 
                 21.5}, {20.276, 21.5}, {20.5, 21.276}, {20.5, 21.}}, {{20.5, 
                 22.5}, {5.5, 22.5}, {4.947999999999999, 22.5}, {4.5, 
                 22.053}, {4.5, 21.5}, {4.5, 3.5}, {4.5, 2.947}, {
                 4.947999999999999, 2.5}, {5.5, 2.5}, {20.5, 2.5}, {21.052, 
                 2.5}, {21.5, 2.947}, {21.5, 3.5}, {21.5, 21.5}, {21.5, 
                 22.053}, {21.052, 22.5}, {20.5, 22.5}}}]}, {
               FaceForm[{
                 RGBColor[0.8670000000000001, 0.067, 0.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1,
                 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
                3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3,
                 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
                0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{
                0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
                1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1,
                 0}, {1, 3, 3}}}, CompressedData["
1:eJxtj69Lg1EYhT80CZ84xjSM68VN5tjGfjnFYPksJkUwiRYRrQoGs2Ay2AUR
m1YRGVjEYBCrf4DJ7L/g2N05l/egMC7Pju/Zc0oHJ9tH40mSTAw+U4PPWII/
lw2f8+XwJjny9XH+4u1zUvI0az7d/j6sRw5v5K/Ng9zOy5LcL0k/2JGfP85e
74qzknv2ge3vefrYe+S6D9wTn574IsfeyOGNHPwW5X5R+sGObH2Re/bZvT0y
fOw9ct0H7opPV3yRY2/k8EYOfh2570g/2JGtL3LPPru3S4aPvUeu+0aczFuf
ARtf5mm2d7j6vXVVlr2R72/e5x5PS3Jfkn6wIxtf5p59dm+ZDB97D1/dB66K
T1V8kWPvguyNHPwqcl+RfrAjW1/knn127wIZPvYevroP3BCfhvgix9667I0c
/GpyX5N+sCNbX+SefXZvnQwfew9f3Qdui09bfJGn2e6wvyV7Iwe/ptw3pR/s
yNYXuWef3dsiw8few1f3gWfEZ0Z8kaej3mnZWyBvrFyu7f/k5T4v/WBHtr7I
Pfvs3gIZPvYevrrPy/foL8p9Uf4PnCPbfchT9oFtT5r1R79j7+GVE46e1s/z
7f/7vcv+AMXQVQk=
                "]]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{20.5, 4.}, {20.5, 
                3.724}, {20.276, 3.5}, {20., 3.5}, {6., 3.5}, {5.724, 3.5}, {
                5.5, 3.724}, {5.5, 4.}, {5.5, 21.}, {5.5, 21.276}, {5.724, 
                21.5}, {6., 21.5}, {20., 21.5}, {20.276, 21.5}, {20.5, 
                21.276}, {20.5, 21.}}}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}}}, {{{13., 18.}, {10.239, 18.}, {8., 
                17.015}, {8., 15.8}, {8., 9.2}, {8., 7.984999999999999}, {
                10.239, 7.}, {13., 7.}, {15.761, 7.}, {18., 
                7.984999999999999}, {18., 9.2}, {18., 15.8}, {18., 17.015}, {
                15.761, 18.}, {13., 18.}}}]}, {
               FaceForm[{
                 RGBColor[0.537, 0.537, 0.537], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                 0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
                 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                 0}, {1, 3, 3}}}, {{{13., 10.8633}, {10.314, 10.8633}, {8.6, 
                 11.833300000000001`}, {8.6, 12.500300000000001`}, {8.6, 
                 14.1133}, {9.586, 13.4603}, {11.151, 13.0463}, {13., 
                 13.0463}, {14.849, 13.0463}, {16.414, 13.4603}, {17.4, 
                 14.1133}, {17.4, 12.500300000000001`}, {17.4, 
                 11.833300000000001`}, {15.686, 10.8633}, {13., 10.8633}}, {{
                 17.4, 9.2273}, {17.4, 8.560300000000002}, {15.686, 7.5913}, {
                 13., 7.5913}, {10.314, 7.5913}, {8.6, 8.560300000000002}, {
                 8.6, 9.2273}, {8.6, 10.8413}, {9.586, 10.1873}, {11.151, 
                 9.772300000000001}, {13., 9.772300000000001}, {14.849, 
                 9.772300000000001}, {16.414, 10.1873}, {17.4, 10.8413}}, {{
                 13., 17.4093}, {15.686, 17.4093}, {17.4, 
                 16.439300000000003`}, {17.4, 15.772300000000001`}, {17.4, 
                 15.1053}, {15.686, 14.1363}, {13., 14.1363}, {10.314, 
                 14.1363}, {8.6, 15.1053}, {8.6, 15.772300000000001`}, {8.6, 
                 16.439300000000003`}, {10.314, 17.4093}, {13., 17.4093}}, {{
                 13., 18.5003}, {9.864, 18.5003}, {7.5, 17.3273}, {7.5, 
                 15.772300000000001`}, {7.5, 9.2273}, {7.5, 
                 7.673300000000001}, {9.864, 6.500300000000001}, {13., 
                 6.500300000000001}, {16.136, 6.500300000000001}, {18.5, 
                 7.673300000000001}, {18.5, 9.2273}, {18.5, 
                 15.772300000000001`}, {18.5, 17.3273}, {16.136, 18.5003}, {
                 13., 18.5003}}}]}}, AspectRatio -> Automatic, 
             ImageSize -> {25., 25.}, PlotRange -> {{0., 25.}, {0., 25.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Table count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["6", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Backend: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"MySQL\"", "SummaryItem"]}]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
               ImageSizeCache -> {
                8.151761718749999, {0., 8.151761718749999}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.04], {
               FaceForm[{
                 RGBColor[0.651, 0.651, 0.651], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                 1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {0, 
                 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{20.5, 4.}, {20.5, 3.724}, {20.276, 3.5}, {20., 
                 3.5}, {6., 3.5}, {5.724, 3.5}, {5.5, 3.724}, {5.5, 4.}, {5.5,
                  21.}, {5.5, 21.276}, {5.724, 21.5}, {6., 21.5}, {20., 
                 21.5}, {20.276, 21.5}, {20.5, 21.276}, {20.5, 21.}}, {{20.5, 
                 22.5}, {5.5, 22.5}, {4.947999999999999, 22.5}, {4.5, 
                 22.053}, {4.5, 21.5}, {4.5, 3.5}, {4.5, 2.947}, {
                 4.947999999999999, 2.5}, {5.5, 2.5}, {20.5, 2.5}, {21.052, 
                 2.5}, {21.5, 2.947}, {21.5, 3.5}, {21.5, 21.5}, {21.5, 
                 22.053}, {21.052, 22.5}, {20.5, 22.5}}}]}, {
               FaceForm[{
                 RGBColor[0.8670000000000001, 0.067, 0.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1,
                 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
                3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3,
                 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
                0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{
                0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
                1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1,
                 0}, {1, 3, 3}}}, CompressedData["
1:eJxtj69Lg1EYhT80CZ84xjSM68VN5tjGfjnFYPksJkUwiRYRrQoGs2Ay2AUR
m1YRGVjEYBCrf4DJ7L/g2N05l/egMC7Pju/Zc0oHJ9tH40mSTAw+U4PPWII/
lw2f8+XwJjny9XH+4u1zUvI0az7d/j6sRw5v5K/Ng9zOy5LcL0k/2JGfP85e
74qzknv2ge3vefrYe+S6D9wTn574IsfeyOGNHPwW5X5R+sGObH2Re/bZvT0y
fOw9ct0H7opPV3yRY2/k8EYOfh2570g/2JGtL3LPPru3S4aPvUeu+0aczFuf
ARtf5mm2d7j6vXVVlr2R72/e5x5PS3Jfkn6wIxtf5p59dm+ZDB97D1/dB66K
T1V8kWPvguyNHPwqcl+RfrAjW1/knn127wIZPvYevroP3BCfhvgix9667I0c
/GpyX5N+sCNbX+SefXZvnQwfew9f3Qdui09bfJGn2e6wvyV7Iwe/ptw3pR/s
yNYXuWef3dsiw8few1f3gWfEZ0Z8kaej3mnZWyBvrFyu7f/k5T4v/WBHtr7I
Pfvs3gIZPvYevrrPy/foL8p9Uf4PnCPbfchT9oFtT5r1R79j7+GVE46e1s/z
7f/7vcv+AMXQVQk=
                "]]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{20.5, 4.}, {20.5, 
                3.724}, {20.276, 3.5}, {20., 3.5}, {6., 3.5}, {5.724, 3.5}, {
                5.5, 3.724}, {5.5, 4.}, {5.5, 21.}, {5.5, 21.276}, {5.724, 
                21.5}, {6., 21.5}, {20., 21.5}, {20.276, 21.5}, {20.5, 
                21.276}, {20.5, 21.}}}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}}}, {{{13., 18.}, {10.239, 18.}, {8., 
                17.015}, {8., 15.8}, {8., 9.2}, {8., 7.984999999999999}, {
                10.239, 7.}, {13., 7.}, {15.761, 7.}, {18., 
                7.984999999999999}, {18., 9.2}, {18., 15.8}, {18., 17.015}, {
                15.761, 18.}, {13., 18.}}}]}, {
               FaceForm[{
                 RGBColor[0.537, 0.537, 0.537], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                 0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
                 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                 0}, {1, 3, 3}}}, {{{13., 10.8633}, {10.314, 10.8633}, {8.6, 
                 11.833300000000001`}, {8.6, 12.500300000000001`}, {8.6, 
                 14.1133}, {9.586, 13.4603}, {11.151, 13.0463}, {13., 
                 13.0463}, {14.849, 13.0463}, {16.414, 13.4603}, {17.4, 
                 14.1133}, {17.4, 12.500300000000001`}, {17.4, 
                 11.833300000000001`}, {15.686, 10.8633}, {13., 10.8633}}, {{
                 17.4, 9.2273}, {17.4, 8.560300000000002}, {15.686, 7.5913}, {
                 13., 7.5913}, {10.314, 7.5913}, {8.6, 8.560300000000002}, {
                 8.6, 9.2273}, {8.6, 10.8413}, {9.586, 10.1873}, {11.151, 
                 9.772300000000001}, {13., 9.772300000000001}, {14.849, 
                 9.772300000000001}, {16.414, 10.1873}, {17.4, 10.8413}}, {{
                 13., 17.4093}, {15.686, 17.4093}, {17.4, 
                 16.439300000000003`}, {17.4, 15.772300000000001`}, {17.4, 
                 15.1053}, {15.686, 14.1363}, {13., 14.1363}, {10.314, 
                 14.1363}, {8.6, 15.1053}, {8.6, 15.772300000000001`}, {8.6, 
                 16.439300000000003`}, {10.314, 17.4093}, {13., 17.4093}}, {{
                 13., 18.5003}, {9.864, 18.5003}, {7.5, 17.3273}, {7.5, 
                 15.772300000000001`}, {7.5, 9.2273}, {7.5, 
                 7.673300000000001}, {9.864, 6.500300000000001}, {13., 
                 6.500300000000001}, {16.136, 6.500300000000001}, {18.5, 
                 7.673300000000001}, {18.5, 9.2273}, {18.5, 
                 15.772300000000001`}, {18.5, 17.3273}, {16.136, 18.5003}, {
                 13., 18.5003}}}]}}, AspectRatio -> Automatic, 
             ImageSize -> {25., 25.}, PlotRange -> {{0., 25.}, {0., 25.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Table count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["6", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Backend: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"MySQL\"", "SummaryItem"]}]}, {
               TagBox[
                TagBox[
                 GridBox[{{
                    TagBox["\"Tables: \"", "SummaryItemAnnotation"], 
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"indexes\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"indexes\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"id\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NativeTypeString:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"INTEGER(11)\""}, {
                    StyleBox[
                    "\"Default:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "None"}, {
                    StyleBox[
                    "\"Indexed:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "False"}, {
                    StyleBox[
                    "\"Name:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "\"id\""}, {
                    StyleBox[
                    "\"Nullable:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "False"}}, 
                    AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(11)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"data_id\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"data_id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NativeTypeString:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"INTEGER(20)\""}, {
                    StyleBox[
                    "\"Default:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "None"}, {
                    StyleBox[
                    "\"Indexed:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "False"}, {
                    StyleBox[
                    "\"Name:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"data_id\""}, {
                    StyleBox["\"Nullable:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "True"}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"data_id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(20)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "data_id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"prod_id\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"prod_id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NativeTypeString:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"INTEGER(20)\""}, {
                    StyleBox[
                    "\"Default:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "None"}, {
                    StyleBox[
                    "\"Indexed:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "False"}, {
                    StyleBox[
                    "\"Name:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"prod_id\""}, {
                    StyleBox[
                    "\"Nullable:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "True"}}, 
                    AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"prod_id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(20)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "prod_id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"work_id\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"work_id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NativeTypeString:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"INTEGER(20)\""}, {
                    StyleBox[
                    "\"Default:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "None"}, {
                    StyleBox[
                    "\"Indexed:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "False"}, {
                    StyleBox[
                    "\"Name:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"work_id\""}, {
                    StyleBox[
                    "\"Nullable:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "True"}}, 
                    AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"work_id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(20)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "work_id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"tovar_id\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"tovar_id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NativeTypeString:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"INTEGER(20)\""}, {
                    StyleBox[
                    "\"Default:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "None"}, {
                    StyleBox[
                    "\"Indexed:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "False"}, {
                    StyleBox[
                    "\"Name:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"tovar_id\""}, {
                    StyleBox[
                    "\"Nullable:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "True"}}, 
                    AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"tovar_id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(20)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "tovar_id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"indexes", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(11)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"data_id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(20)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "data_id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"prod_id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(20)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "prod_id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"work_id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(20)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "work_id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"tovar_id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(20)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "tovar_id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}]}]}, False]],
                     DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"dataintro\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"dataintro\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"id_d\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"id_d\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NativeTypeString:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"INTEGER(11)\""}, {
                    StyleBox[
                    "\"Default:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "None"}, {
                    StyleBox[
                    "\"Indexed:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "False"}, {
                    StyleBox[
                    "\"Name:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"id_d\""}, {
                    StyleBox["\"Nullable:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "False"}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"id_d", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(11)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id_d"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"count\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"count\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NativeTypeString:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"DOUBLE\""}, {
                    StyleBox[
                    "\"Default:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "None"}, {
                    StyleBox[
                    "\"Indexed:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "False"}, {
                    StyleBox[
                    "\"Name:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"count\""}, {
                    StyleBox[
                    "\"Nullable:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "True"}}, 
                    AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"count", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "DOUBLE"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "count"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"datareg\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"datareg\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NativeTypeString:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\""}, {
                    StyleBox[
                    "\"Default:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "None"}, {
                    StyleBox[
                    "\"Indexed:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "False"}, {
                    StyleBox[
                    "\"Name:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"datareg\""}, {
                    StyleBox[
                    "\"Nullable:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "True"}}, 
                    AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"datareg", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "datareg"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"dataintro", 
                    Column[{
                    OpenerView[{"id_d", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(11)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id_d"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"count", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "DOUBLE"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "count"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"datareg", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "datareg"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}]}]}, False]],
                     DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"tovar\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"tovar\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"id_t\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"id_t\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NativeTypeString:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"INTEGER(11)\""}, {
                    StyleBox[
                    "\"Default:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "None"}, {
                    StyleBox[
                    "\"Indexed:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "False"}, {
                    StyleBox[
                    "\"Name:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"id_t\""}, {
                    StyleBox[
                    "\"Nullable:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "False"}}, 
                    AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"id_t", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(11)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id_t"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"name\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NativeTypeString:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\""}, {
                    StyleBox[
                    "\"Default:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "None"}, {
                    StyleBox[
                    "\"Indexed:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "False"}, {
                    StyleBox[
                    "\"Name:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"name\""}, {
                    StyleBox[
                    "\"Nullable:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "True"}}, 
                    AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"kod\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"kod\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NativeTypeString:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"INTEGER(11)\""}, {
                    StyleBox[
                    "\"Default:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "None"}, {
                    StyleBox[
                    "\"Indexed:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "False"}, {
                    StyleBox[
                    "\"Name:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "\"kod\""}, {
                    StyleBox[
                    "\"Nullable:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "True"}}, 
                    AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"kod", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(11)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "kod"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"tovar", 
                    Column[{
                    OpenerView[{"id_t", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(11)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id_t"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"kod", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(11)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "kod"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}]}]}, False]],
                     DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"prokatinfo\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"prokatinfo\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"id_pr\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"id_pr\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NativeTypeString:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"INTEGER(11)\""}, {
                    StyleBox[
                    "\"Default:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "None"}, {
                    StyleBox[
                    "\"Indexed:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "False"}, {
                    StyleBox[
                    "\"Name:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"id_pr\""}, {
                    StyleBox[
                    "\"Nullable:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "False"}}, 
                    AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"id_pr", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(11)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id_pr"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"name\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NativeTypeString:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\""}, {
                    StyleBox[
                    "\"Default:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "None"}, {
                    StyleBox[
                    "\"Indexed:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "False"}, {
                    StyleBox[
                    "\"Name:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"name\""}, {
                    StyleBox[
                    "\"Nullable:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "True"}}, 
                    AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"kod\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"kod\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NativeTypeString:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"INTEGER(20)\""}, {
                    StyleBox[
                    "\"Default:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "None"}, {
                    StyleBox[
                    "\"Indexed:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "False"}, {
                    StyleBox[
                    "\"Name:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "\"kod\""}, {
                    StyleBox[
                    "\"Nullable:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "True"}}, 
                    AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"kod", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(20)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "kod"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"count\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"count\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NativeTypeString:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"DOUBLE\""}, {
                    StyleBox[
                    "\"Default:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "None"}, {
                    StyleBox[
                    "\"Indexed:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "False"}, {
                    StyleBox[
                    "\"Name:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"count\""}, {
                    StyleBox[
                    "\"Nullable:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "True"}}, 
                    AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"count", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "DOUBLE"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "count"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"starttime\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"starttime\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NativeTypeString:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\""}, {
                    StyleBox[
                    "\"Default:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "None"}, {
                    StyleBox[
                    "\"Indexed:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "False"}, {
                    StyleBox[
                    "\"Name:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"starttime\""}, {
                    StyleBox[
                    "\"Nullable:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "True"}}, 
                    AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"starttime", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "starttime"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"endtime\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"endtime\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NativeTypeString:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\""}, {
                    StyleBox[
                    "\"Default:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "None"}, {
                    StyleBox[
                    "\"Indexed:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "False"}, {
                    StyleBox[
                    "\"Name:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"endtime\""}, {
                    StyleBox[
                    "\"Nullable:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "True"}}, 
                    AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"endtime", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "endtime"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"datareg\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"datareg\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NativeTypeString:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\""}, {
                    StyleBox[
                    "\"Default:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "None"}, {
                    StyleBox[
                    "\"Indexed:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "False"}, {
                    StyleBox[
                    "\"Name:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"datareg\""}, {
                    StyleBox[
                    "\"Nullable:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "True"}}, 
                    AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"datareg", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "datareg"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"fnameprod\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"fnameprod\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NativeTypeString:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\""}, {
                    StyleBox["\"Default:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "None"}, {
                    StyleBox[
                    "\"Indexed:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "False"}, {
                    StyleBox[
                    "\"Name:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"fnameprod\""}, {
                    StyleBox[
                    "\"Nullable:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "True"}}, 
                    AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"fnameprod", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "fnameprod"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"lnameprod\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"lnameprod\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NativeTypeString:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\""}, {
                    StyleBox[
                    "\"Default:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "None"}, {
                    StyleBox[
                    "\"Indexed:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "False"}, {
                    StyleBox[
                    "\"Name:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"lnameprod\""}, {
                    StyleBox[
                    "\"Nullable:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "True"}}, 
                    AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"lnameprod", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "lnameprod"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"prokatinfo", 
                    Column[{
                    OpenerView[{"id_pr", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(11)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id_pr"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"kod", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(20)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "kod"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"count", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "DOUBLE"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "count"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"starttime", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "starttime"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"endtime", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "endtime"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"datareg", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "datareg"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"fnameprod", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "fnameprod"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"lnameprod", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "lnameprod"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}]}]}, False]],
                     DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"worktime\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"worktime\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"id_w\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"id_w\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NativeTypeString:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"INTEGER(11)\""}, {
                    StyleBox[
                    "\"Default:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "None"}, {
                    StyleBox[
                    "\"Indexed:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "False"}, {
                    StyleBox[
                    "\"Name:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"id_w\""}, {
                    StyleBox[
                    "\"Nullable:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "False"}}, 
                    AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"id_w", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(11)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id_w"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"starttime\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"starttime\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NativeTypeString:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\""}, {
                    StyleBox[
                    "\"Default:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "None"}, {
                    StyleBox[
                    "\"Indexed:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "False"}, {
                    StyleBox[
                    "\"Name:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"starttime\""}, {
                    StyleBox[
                    "\"Nullable:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "True"}}, 
                    AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"starttime", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "starttime"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"endtime\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"endtime\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NativeTypeString:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\""}, {
                    StyleBox[
                    "\"Default:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "None"}, {
                    StyleBox[
                    "\"Indexed:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "False"}, {
                    StyleBox[
                    "\"Name:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"endtime\""}, {
                    StyleBox[
                    "\"Nullable:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "True"}}, 
                    AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxBackground -> {
                    "Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"endtime", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "endtime"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"worktime", 
                    Column[{
                    OpenerView[{"id_w", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(11)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id_w"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"starttime", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "starttime"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"endtime", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "endtime"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}]}]}, False]],
                     DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"prodavec\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"prodavec\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"id_p\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"id_p\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NativeTypeString:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"INTEGER(11)\""}, {
                    StyleBox[
                    "\"Default:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "None"}, {
                    StyleBox[
                    "\"Indexed:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "False"}, {
                    StyleBox[
                    "\"Name:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"id_p\""}, {
                    StyleBox[
                    "\"Nullable:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "False"}}, 
                    AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"id_p", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(11)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id_p"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"fnameprod\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"fnameprod\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NativeTypeString:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\""}, {
                    StyleBox[
                    "\"Default:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "None"}, {
                    StyleBox[
                    "\"Indexed:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "False"}, {
                    StyleBox[
                    "\"Name:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"fnameprod\""}, {
                    StyleBox[
                    "\"Nullable:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "True"}}, 
                    AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"fnameprod", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "fnameprod"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"lnameprod\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"lnameprod\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NativeTypeString:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\""}, {
                    StyleBox[
                    "\"Default:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "None"}, {
                    StyleBox[
                    "\"Indexed:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "False"}, {
                    StyleBox[
                    "\"Name:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"lnameprod\""}, {
                    StyleBox[
                    "\"Nullable:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "True"}}, 
                    AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"lnameprod", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "lnameprod"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"prodavec", 
                    Column[{
                    OpenerView[{"id_p", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(11)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id_p"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"fnameprod", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "fnameprod"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"lnameprod", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "lnameprod"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}]}]}, False]],
                     DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]}}, AutoDelete -> False, 
                  GridBoxAlignment -> {"Rows" -> {{Top}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Grid"], "SummaryItem"]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  RelationalDatabase[
   Association[
   "Tables" -> Association[
     "indexes" -> 
      Association[
       "PrimaryKey" -> 
        Association["ConstraintName" -> None, "Columns" -> {"id"}], 
        "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
        "Columns" -> 
        Association[
         "id" -> Association[
           "Nullable" -> False, "BackendType" -> "Integer", 
            "NativeTypeString" -> "INTEGER(11)"], "data_id" -> 
          Association[
           "Nullable" -> True, "BackendType" -> "Integer", "NativeTypeString" -> 
            "INTEGER(20)"], "prod_id" -> 
          Association[
           "Nullable" -> True, "BackendType" -> "Integer", "NativeTypeString" -> 
            "INTEGER(20)"], "work_id" -> 
          Association[
           "Nullable" -> True, "BackendType" -> "Integer", "NativeTypeString" -> 
            "INTEGER(20)"], "tovar_id" -> 
          Association[
           "Nullable" -> True, "BackendType" -> "Integer", "NativeTypeString" -> 
            "INTEGER(20)"]], "Schema" -> None], "dataintro" -> 
      Association[
       "PrimaryKey" -> 
        Association["ConstraintName" -> None, "Columns" -> {"id_d"}], 
        "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
        "Columns" -> 
        Association[
         "id_d" -> Association[
           "Nullable" -> False, "BackendType" -> "Integer", 
            "NativeTypeString" -> "INTEGER(11)"], "count" -> 
          Association[
           "Nullable" -> True, "BackendType" -> "Real", "NativeTypeString" -> 
            "DOUBLE"], "datareg" -> 
          Association[
           "Nullable" -> True, 
            "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
            "NativeTypeString" -> "VARCHAR(255) COLLATE utf8mb4_unicode_ci"]],
         "Schema" -> None], "tovar" -> 
      Association[
       "PrimaryKey" -> 
        Association["ConstraintName" -> None, "Columns" -> {"id_t"}], 
        "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
        "Columns" -> 
        Association[
         "id_t" -> Association[
           "Nullable" -> False, "BackendType" -> "Integer", 
            "NativeTypeString" -> "INTEGER(11)"], "name" -> 
          Association[
           "Nullable" -> True, 
            "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
            "NativeTypeString" -> "VARCHAR(255) COLLATE utf8mb4_unicode_ci"], 
          "kod" -> Association[
           "Nullable" -> True, "BackendType" -> "Integer", "NativeTypeString" -> 
            "INTEGER(11)"]], "Schema" -> None], "prokatinfo" -> 
      Association[
       "PrimaryKey" -> 
        Association["ConstraintName" -> None, "Columns" -> {"id_pr"}], 
        "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
        "Columns" -> 
        Association[
         "id_pr" -> Association[
           "Nullable" -> False, "BackendType" -> "Integer", 
            "NativeTypeString" -> "INTEGER(11)"], "name" -> 
          Association[
           "Nullable" -> True, 
            "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
            "NativeTypeString" -> "VARCHAR(255) COLLATE utf8mb4_unicode_ci"], 
          "kod" -> Association[
           "Nullable" -> True, "BackendType" -> "Integer", "NativeTypeString" -> 
            "INTEGER(20)"], "count" -> 
          Association[
           "Nullable" -> True, "BackendType" -> "Real", "NativeTypeString" -> 
            "DOUBLE"], "starttime" -> 
          Association[
           "Nullable" -> True, 
            "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
            "NativeTypeString" -> "VARCHAR(255) COLLATE utf8mb4_unicode_ci"], 
          "endtime" -> 
          Association[
           "Nullable" -> True, 
            "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
            "NativeTypeString" -> "VARCHAR(255) COLLATE utf8mb4_unicode_ci"], 
          "datareg" -> 
          Association[
           "Nullable" -> True, 
            "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
            "NativeTypeString" -> "VARCHAR(255) COLLATE utf8mb4_unicode_ci"], 
          "fnameprod" -> 
          Association[
           "Nullable" -> True, 
            "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
            "NativeTypeString" -> "VARCHAR(255) COLLATE utf8mb4_unicode_ci"], 
          "lnameprod" -> 
          Association[
           "Nullable" -> True, 
            "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
            "NativeTypeString" -> "VARCHAR(255) COLLATE utf8mb4_unicode_ci"]],
         "Schema" -> None], "worktime" -> 
      Association[
       "PrimaryKey" -> 
        Association["ConstraintName" -> None, "Columns" -> {"id_w"}], 
        "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
        "Columns" -> 
        Association[
         "id_w" -> Association[
           "Nullable" -> False, "BackendType" -> "Integer", 
            "NativeTypeString" -> "INTEGER(11)"], "starttime" -> 
          Association[
           "Nullable" -> True, 
            "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
            "NativeTypeString" -> "VARCHAR(255) COLLATE utf8mb4_unicode_ci"], 
          "endtime" -> 
          Association[
           "Nullable" -> True, 
            "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
            "NativeTypeString" -> "VARCHAR(255) COLLATE utf8mb4_unicode_ci"]],
         "Schema" -> None], "prodavec" -> 
      Association[
       "PrimaryKey" -> 
        Association["ConstraintName" -> None, "Columns" -> {"id_p"}], 
        "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
        "Columns" -> 
        Association[
         "id_p" -> Association[
           "Nullable" -> False, "BackendType" -> "Integer", 
            "NativeTypeString" -> "INTEGER(11)"], "fnameprod" -> 
          Association[
           "Nullable" -> True, 
            "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
            "NativeTypeString" -> "VARCHAR(255) COLLATE utf8mb4_unicode_ci"], 
          "lnameprod" -> 
          Association[
           "Nullable" -> True, 
            "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
            "NativeTypeString" -> "VARCHAR(255) COLLATE utf8mb4_unicode_ci"]],
         "Schema" -> None]], "ID" -> "1pcgsvgchrs8c"], 
   DatabaseReference[
    Association[
    "Backend" -> "mysql", "Username" -> "root", "Password" -> "root", "Host" -> 
     "localhost", "Port" -> 3306, "Name" -> "prokattovara", "Options" -> 
     Association[]]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.876463537057685*^9, 3.876463551304245*^9}, {
   3.876743721825743*^9, 3.8767437243569565`*^9}, 3.8767437668266525`*^9, 
   3.8767438617119837`*^9, 3.8767569431451397`*^9, 3.8767573382662373`*^9, 
   3.8767574013120966`*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"8029d662-8a4e-4304-9329-ec2ad75c05ff"]
}, Closed]],

Cell[CellGroupData[{

Cell["6) \:0421\:043e\:0437\:0434\:0430\:0435\:0442\:0441\:044f \:043f\:043e\
\:0434\:0434\:0435\:0440\:0436\:0438\:0432\:0430\:0435\:043c\:044b\:0439 \
\:0431\:0430\:0437\:043e\:0439 \:0434\:0430\:043d\:043d\:044b\:0445 \:043e\
\:0431\:044a\:0435\:043a\:0442", "Subsubsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.8767566125013423`*^9, 3.876756612892502*^9}, {
   3.876756740524521*^9, 3.87675674122888*^9}, {3.876756808013755*^9, 
   3.876756808313243*^9}, 3.876757394766788*^9, {3.8767577180871286`*^9, 
   3.8767577187339063`*^9}},ExpressionUUID->"a09ce22f-a1ba-4a0e-8a3f-\
2593f758da02"],

Cell[BoxData[
 RowBox[{"es", "=", 
  RowBox[{"EntityStore", "[", "rbd", "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.8763771108737555`*^9, 3.8763771214339385`*^9}, {
   3.8763773722540193`*^9, 3.8763773941836834`*^9}, {3.8763777366038837`*^9, 
   3.8763777726406765`*^9}, {3.8767567343722277`*^9, 3.876756738293888*^9}, 
   3.876757394767807*^9},
 CellLabel->"In[33]:=",ExpressionUUID->"97051ca9-cbe5-4d5c-bf50-8e26797ad342"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["EntityStore",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {
                8.151761718749999, {0., 8.151761718749999}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.04], {
               FaceForm[{
                 RGBColor[0.984, 0.969, 0.91], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{17., 10.}, {
                6., 10.}, {4.343, 10.}, {3., 11.343}, {3., 13.}, {3., 20.}, {
                3., 21.657}, {4.343, 23.}, {6., 23.}, {17., 23.}, {18.657, 
                23.}, {20., 21.657}, {20., 20.}, {20., 13.}, {20., 11.343}, {
                18.657, 10.}, {17., 10.}}}]}, {
               FaceForm[{
                 RGBColor[0.996, 0.506, 0.004], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                 1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {0, 
                 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{6., 22.5}, {4.622, 22.5}, {3.5, 21.379}, {3.5, 
                 20.}, {3.5, 13.}, {3.5, 11.620999999999999`}, {4.622, 
                 10.5}, {6., 10.5}, {17., 10.5}, {18.379, 10.5}, {19.5, 
                 11.620999999999999`}, {19.5, 13.}, {19.5, 20.}, {19.5, 
                 21.379}, {18.379, 22.5}, {17., 22.5}}, {{17., 9.5}, {6., 
                 9.5}, {4.07, 9.5}, {2.5, 11.07}, {2.5, 13.}, {2.5, 20.}, {
                 2.5, 21.93}, {4.07, 23.5}, {6., 23.5}, {17., 23.5}, {18.93, 
                 23.5}, {20.5, 21.93}, {20.5, 20.}, {20.5, 13.}, {20.5, 
                 11.07}, {18.93, 9.5}, {17., 9.5}}}]}, {
               FaceForm[{
                 RGBColor[0.012, 0.612, 0.996], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5, 12.5}, {14.5, 12.5}, {
                14.5, 14.5}, {12.5, 14.5}}, {{8.5, 14.5}, {10.5, 14.5}, {10.5,
                 12.5}, {8.5, 12.5}}}]}, {
               FaceForm[{
                 RGBColor[0.537, 0.537, 0.537], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAFdBwitD6EbDLDzGwwdUNRj8E2gfE0cfCM0
9UZo5hsRoE3Q1MPMl0LjC+HgG6Gph/FVobQ+qnvR+XD/qqLxpdDUK2Lno6vH
MM8ITT063wRNvYkDAOvQJ0o=
                "]]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}}}, {{{18., 12.}, {15.791, 12.}, {14., 
                11.104}, {14., 10.}, {14., 4.}, {14., 2.896000000000001}, {
                15.791, 2.}, {18., 2.}, {20.209, 2.}, {22., 
                2.896000000000001}, {22., 4.}, {22., 10.}, {22., 11.104}, {
                20.209, 12.}, {18., 12.}}}]}, {
               FaceForm[{
                 RGBColor[0.537, 0.537, 0.537], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                 0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
                 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                 0}, {1, 3, 3}}}, {{{18., 5.5}, {15.997, 5.5}, {14.5, 
                 6.292}, {14.5, 7.}, {14.5, 8.411}, {15.312, 7.853}, {16.547, 
                 7.5}, {18., 7.5}, {19.453, 7.5}, {20.688, 7.853}, {21.5, 
                 8.411}, {21.5, 7.}, {21.5, 6.292}, {20.003, 5.5}, {18., 
                 5.5}}, {{21.5, 4.}, {21.5, 3.292}, {20.003, 2.5}, {18., 
                 2.5}, {15.997, 2.5}, {14.5, 3.292}, {14.5, 4.}, {14.5, 
                 5.411}, {15.312, 4.853}, {16.547, 4.5}, {18., 4.5}, {19.453, 
                 4.5}, {20.688, 4.853}, {21.5, 5.411}}, {{18., 11.5}, {20.003,
                  11.5}, {21.5, 10.708}, {21.5, 10.}, {21.5, 9.292}, {20.003, 
                 8.5}, {18., 8.5}, {15.997, 8.5}, {14.5, 9.292}, {14.5, 
                 10.}, {14.5, 10.708}, {15.997, 11.5}, {18., 11.5}}, {{18., 
                 12.5}, {15.435, 12.5}, {13.5, 11.425}, {13.5, 10.}, {13.5, 
                 4.}, {13.5, 2.575}, {15.435, 1.5}, {18., 1.5}, {20.565, 
                 1.5}, {22.5, 2.575}, {22.5, 4.}, {22.5, 10.}, {22.5, 
                 11.425}, {20.565, 12.5}, {18., 12.5}}}]}}, AspectRatio -> 
             Automatic, ImageSize -> {25., 25.}, 
             PlotRange -> {{0., 25.}, {0., 25.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Type count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["6", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"RelationalDatabase: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"MySQL\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"MySQL\""}, {"", 
                    PaneBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["RelationalDatabase", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04], {
                    FaceForm[{
                    RGBColor[0.651, 0.651, 0.651], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{20.5, 4.}, {20.5, 3.724}, {20.276, 
                    3.5}, {20., 3.5}, {6., 3.5}, {5.724, 3.5}, {5.5, 3.724}, {
                    5.5, 4.}, {5.5, 21.}, {5.5, 21.276}, {5.724, 21.5}, {6., 
                    21.5}, {20., 21.5}, {20.276, 21.5}, {20.5, 21.276}, {20.5,
                     21.}}, {{20.5, 22.5}, {5.5, 22.5}, {4.947999999999999, 
                    22.5}, {4.5, 22.053}, {4.5, 21.5}, {4.5, 3.5}, {4.5, 
                    2.947}, {4.947999999999999, 2.5}, {5.5, 2.5}, {20.5, 
                    2.5}, {21.052, 2.5}, {21.5, 2.947}, {21.5, 3.5}, {21.5, 
                    21.5}, {21.5, 22.053}, {21.052, 22.5}, {20.5, 22.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.8670000000000001, 0.067, 0.], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, CompressedData["
1:eJxtj69Lg1EYhT80CZ84xjSM68VN5tjGfjnFYPksJkUwiRYRrQoGs2Ay2AUR
m1YRGVjEYBCrf4DJ7L/g2N05l/egMC7Pju/Zc0oHJ9tH40mSTAw+U4PPWII/
lw2f8+XwJjny9XH+4u1zUvI0az7d/j6sRw5v5K/Ng9zOy5LcL0k/2JGfP85e
74qzknv2ge3vefrYe+S6D9wTn574IsfeyOGNHPwW5X5R+sGObH2Re/bZvT0y
fOw9ct0H7opPV3yRY2/k8EYOfh2570g/2JGtL3LPPru3S4aPvUeu+0aczFuf
ARtf5mm2d7j6vXVVlr2R72/e5x5PS3Jfkn6wIxtf5p59dm+ZDB97D1/dB66K
T1V8kWPvguyNHPwqcl+RfrAjW1/knn127wIZPvYevroP3BCfhvgix9667I0c
/GpyX5N+sCNbX+SefXZvnQwfew9f3Qdui09bfJGn2e6wvyV7Iwe/ptw3pR/s
yNYXuWef3dsiw8few1f3gWfEZ0Z8kaej3mnZWyBvrFyu7f/k5T4v/WBHtr7I
Pfvs3gIZPvYevrrPy/foL8p9Uf4PnCPbfchT9oFtT5r1R79j7+GVE46e1s/z
7f/7vcv+AMXQVQk=
                    "]]}, {
                    FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{20.5, 4.}, {
                    20.5, 3.724}, {20.276, 3.5}, {20., 3.5}, {6., 3.5}, {
                    5.724, 3.5}, {5.5, 3.724}, {5.5, 4.}, {5.5, 21.}, {5.5, 
                    21.276}, {5.724, 21.5}, {6., 21.5}, {20., 21.5}, {20.276, 
                    21.5}, {20.5, 21.276}, {20.5, 21.}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}}}, {{{13., 18.}, {10.239, 18.}, {
                    8., 17.015}, {8., 15.8}, {8., 9.2}, {8., 
                    7.984999999999999}, {10.239, 7.}, {13., 7.}, {15.761, 
                    7.}, {18., 7.984999999999999}, {18., 9.2}, {18., 15.8}, {
                    18., 17.015}, {15.761, 18.}, {13., 18.}}}]}, {
                    FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}}}, {{{13., 10.8633}, {10.314, 
                    10.8633}, {8.6, 11.833300000000001`}, {8.6, 
                    12.500300000000001`}, {8.6, 14.1133}, {9.586, 13.4603}, {
                    11.151, 13.0463}, {13., 13.0463}, {14.849, 13.0463}, {
                    16.414, 13.4603}, {17.4, 14.1133}, {17.4, 
                    12.500300000000001`}, {17.4, 11.833300000000001`}, {
                    15.686, 10.8633}, {13., 10.8633}}, {{17.4, 9.2273}, {17.4,
                     8.560300000000002}, {15.686, 7.5913}, {13., 7.5913}, {
                    10.314, 7.5913}, {8.6, 8.560300000000002}, {8.6, 
                    9.2273}, {8.6, 10.8413}, {9.586, 10.1873}, {11.151, 
                    9.772300000000001}, {13., 9.772300000000001}, {14.849, 
                    9.772300000000001}, {16.414, 10.1873}, {17.4, 
                    10.8413}}, {{13., 17.4093}, {15.686, 17.4093}, {17.4, 
                    16.439300000000003`}, {17.4, 15.772300000000001`}, {17.4, 
                    15.1053}, {15.686, 14.1363}, {13., 14.1363}, {10.314, 
                    14.1363}, {8.6, 15.1053}, {8.6, 15.772300000000001`}, {
                    8.6, 16.439300000000003`}, {10.314, 17.4093}, {13., 
                    17.4093}}, {{13., 18.5003}, {9.864, 18.5003}, {7.5, 
                    17.3273}, {7.5, 15.772300000000001`}, {7.5, 9.2273}, {7.5,
                     7.673300000000001}, {9.864, 6.500300000000001}, {13., 
                    6.500300000000001}, {16.136, 6.500300000000001}, {18.5, 
                    7.673300000000001}, {18.5, 9.2273}, {18.5, 
                    15.772300000000001`}, {18.5, 17.3273}, {16.136, 
                    18.5003}, {13., 18.5003}}}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 25.}, {0., 25.}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Table count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["6", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Backend: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"MySQL\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04], {
                    FaceForm[{
                    RGBColor[0.651, 0.651, 0.651], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{20.5, 4.}, {20.5, 3.724}, {20.276, 
                    3.5}, {20., 3.5}, {6., 3.5}, {5.724, 3.5}, {5.5, 3.724}, {
                    5.5, 4.}, {5.5, 21.}, {5.5, 21.276}, {5.724, 21.5}, {6., 
                    21.5}, {20., 21.5}, {20.276, 21.5}, {20.5, 21.276}, {20.5,
                     21.}}, {{20.5, 22.5}, {5.5, 22.5}, {4.947999999999999, 
                    22.5}, {4.5, 22.053}, {4.5, 21.5}, {4.5, 3.5}, {4.5, 
                    2.947}, {4.947999999999999, 2.5}, {5.5, 2.5}, {20.5, 
                    2.5}, {21.052, 2.5}, {21.5, 2.947}, {21.5, 3.5}, {21.5, 
                    21.5}, {21.5, 22.053}, {21.052, 22.5}, {20.5, 22.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.8670000000000001, 0.067, 0.], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, CompressedData["
1:eJxtj69Lg1EYhT80CZ84xjSM68VN5tjGfjnFYPksJkUwiRYRrQoGs2Ay2AUR
m1YRGVjEYBCrf4DJ7L/g2N05l/egMC7Pju/Zc0oHJ9tH40mSTAw+U4PPWII/
lw2f8+XwJjny9XH+4u1zUvI0az7d/j6sRw5v5K/Ng9zOy5LcL0k/2JGfP85e
74qzknv2ge3vefrYe+S6D9wTn574IsfeyOGNHPwW5X5R+sGObH2Re/bZvT0y
fOw9ct0H7opPV3yRY2/k8EYOfh2570g/2JGtL3LPPru3S4aPvUeu+0aczFuf
ARtf5mm2d7j6vXVVlr2R72/e5x5PS3Jfkn6wIxtf5p59dm+ZDB97D1/dB66K
T1V8kWPvguyNHPwqcl+RfrAjW1/knn127wIZPvYevroP3BCfhvgix9667I0c
/GpyX5N+sCNbX+SefXZvnQwfew9f3Qdui09bfJGn2e6wvyV7Iwe/ptw3pR/s
yNYXuWef3dsiw8few1f3gWfEZ0Z8kaej3mnZWyBvrFyu7f/k5T4v/WBHtr7I
Pfvs3gIZPvYevrrPy/foL8p9Uf4PnCPbfchT9oFtT5r1R79j7+GVE46e1s/z
7f/7vcv+AMXQVQk=
                    "]]}, {
                    FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{20.5, 4.}, {
                    20.5, 3.724}, {20.276, 3.5}, {20., 3.5}, {6., 3.5}, {
                    5.724, 3.5}, {5.5, 3.724}, {5.5, 4.}, {5.5, 21.}, {5.5, 
                    21.276}, {5.724, 21.5}, {6., 21.5}, {20., 21.5}, {20.276, 
                    21.5}, {20.5, 21.276}, {20.5, 21.}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}}}, {{{13., 18.}, {10.239, 18.}, {
                    8., 17.015}, {8., 15.8}, {8., 9.2}, {8., 
                    7.984999999999999}, {10.239, 7.}, {13., 7.}, {15.761, 
                    7.}, {18., 7.984999999999999}, {18., 9.2}, {18., 15.8}, {
                    18., 17.015}, {15.761, 18.}, {13., 18.}}}]}, {
                    FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}}}, {{{13., 10.8633}, {10.314, 
                    10.8633}, {8.6, 11.833300000000001`}, {8.6, 
                    12.500300000000001`}, {8.6, 14.1133}, {9.586, 13.4603}, {
                    11.151, 13.0463}, {13., 13.0463}, {14.849, 13.0463}, {
                    16.414, 13.4603}, {17.4, 14.1133}, {17.4, 
                    12.500300000000001`}, {17.4, 11.833300000000001`}, {
                    15.686, 10.8633}, {13., 10.8633}}, {{17.4, 9.2273}, {17.4,
                     8.560300000000002}, {15.686, 7.5913}, {13., 7.5913}, {
                    10.314, 7.5913}, {8.6, 8.560300000000002}, {8.6, 
                    9.2273}, {8.6, 10.8413}, {9.586, 10.1873}, {11.151, 
                    9.772300000000001}, {13., 9.772300000000001}, {14.849, 
                    9.772300000000001}, {16.414, 10.1873}, {17.4, 
                    10.8413}}, {{13., 17.4093}, {15.686, 17.4093}, {17.4, 
                    16.439300000000003`}, {17.4, 15.772300000000001`}, {17.4, 
                    15.1053}, {15.686, 14.1363}, {13., 14.1363}, {10.314, 
                    14.1363}, {8.6, 15.1053}, {8.6, 15.772300000000001`}, {
                    8.6, 16.439300000000003`}, {10.314, 17.4093}, {13., 
                    17.4093}}, {{13., 18.5003}, {9.864, 18.5003}, {7.5, 
                    17.3273}, {7.5, 15.772300000000001`}, {7.5, 9.2273}, {7.5,
                     7.673300000000001}, {9.864, 6.500300000000001}, {13., 
                    6.500300000000001}, {16.136, 6.500300000000001}, {18.5, 
                    7.673300000000001}, {18.5, 9.2273}, {18.5, 
                    15.772300000000001`}, {18.5, 17.3273}, {16.136, 
                    18.5003}, {13., 18.5003}}}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 25.}, {0., 25.}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Table count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["6", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Backend: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"MySQL\"", "SummaryItem"]}]}, {
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox["\"Tables: \"", "SummaryItemAnnotation"], 
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"indexes\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"indexes\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"INTEGER(11)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(11)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"data_id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"data_id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"INTEGER(20)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"data_id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"data_id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(20)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "data_id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"prod_id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"prod_id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"INTEGER(20)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"prod_id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"prod_id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(20)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "prod_id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"work_id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"work_id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"INTEGER(20)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"work_id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"work_id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(20)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "work_id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"tovar_id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"tovar_id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"INTEGER(20)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"tovar_id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"tovar_id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(20)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "tovar_id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"indexes", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(11)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"data_id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(20)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "data_id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"prod_id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(20)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "prod_id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"work_id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(20)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "work_id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"tovar_id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(20)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "tovar_id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}]}]}, False]],
                     DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"dataintro\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"dataintro\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id_d\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id_d\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"INTEGER(11)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id_d\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id_d", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(11)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id_d"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"count\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"count\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"DOUBLE\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"count\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"count", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "DOUBLE"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "count"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"datareg\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"datareg\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"datareg\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"datareg", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "datareg"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"dataintro", 
                    Column[{
                    OpenerView[{"id_d", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(11)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id_d"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"count", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "DOUBLE"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "count"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"datareg", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "datareg"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}]}]}, False]],
                     DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"tovar\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"tovar\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id_t\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id_t\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"INTEGER(11)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id_t\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id_t", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(11)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id_t"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"name\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"name\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"kod\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"kod\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"INTEGER(11)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"kod\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"kod", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(11)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "kod"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"tovar", 
                    Column[{
                    OpenerView[{"id_t", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(11)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id_t"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"kod", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(11)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "kod"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}]}]}, False]],
                     DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"prokatinfo\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"prokatinfo\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id_pr\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id_pr\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"INTEGER(11)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id_pr\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id_pr", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(11)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id_pr"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"name\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"name\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"kod\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"kod\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"INTEGER(20)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"kod\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"kod", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(20)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "kod"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"count\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"count\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"DOUBLE\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"count\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"count", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "DOUBLE"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "count"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"starttime\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"starttime\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"starttime\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"starttime", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "starttime"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"endtime\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"endtime\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"endtime\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"endtime", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "endtime"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"datareg\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"datareg\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"datareg\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"datareg", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "datareg"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"fnameprod\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"fnameprod\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"fnameprod\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"fnameprod", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "fnameprod"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"lnameprod\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"lnameprod\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"lnameprod\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"lnameprod", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "lnameprod"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"prokatinfo", 
                    Column[{
                    OpenerView[{"id_pr", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(11)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id_pr"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"kod", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(20)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "kod"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"count", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "DOUBLE"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "count"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"starttime", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "starttime"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"endtime", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "endtime"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"datareg", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "datareg"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"fnameprod", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "fnameprod"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"lnameprod", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "lnameprod"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}]}]}, False]],
                     DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"worktime\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"worktime\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id_w\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id_w\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"INTEGER(11)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id_w\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id_w", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(11)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id_w"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"starttime\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"starttime\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"starttime\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"starttime", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "starttime"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"endtime\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"endtime\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"endtime\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"endtime", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "endtime"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"worktime", 
                    Column[{
                    OpenerView[{"id_w", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(11)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id_w"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"starttime", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "starttime"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"endtime", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "endtime"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}]}]}, False]],
                     DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"prodavec\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"prodavec\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id_p\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id_p\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"INTEGER(11)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id_p\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id_p", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(11)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id_p"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"fnameprod\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"fnameprod\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"fnameprod\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"fnameprod", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "fnameprod"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"lnameprod\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"lnameprod\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"lnameprod\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"lnameprod", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "lnameprod"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"prodavec", 
                    Column[{
                    OpenerView[{"id_p", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(11)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id_p"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"fnameprod", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "fnameprod"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"lnameprod", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "lnameprod"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}]}]}, False]],
                     DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]}}, GridBoxAlignment -> {"Rows" -> {{Top}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    RelationalDatabase[
                    Association[
                    "Tables" -> Association[
                    "indexes" -> Association[
                    "PrimaryKey" -> Association[
                    "ConstraintName" -> None, "Columns" -> {"id"}], 
                    "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, 
                    "Indexes" -> {}, "Columns" -> 
                    Association["id" -> Association[
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER(11)"], "data_id" -> 
                    Association["Nullable" -> True, "BackendType" -> 
                    "Integer", "NativeTypeString" -> "INTEGER(20)"], 
                    "prod_id" -> Association[
                    "Nullable" -> True, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER(20)"], "work_id" -> 
                    Association["Nullable" -> True, "BackendType" -> 
                    "Integer", "NativeTypeString" -> "INTEGER(20)"], 
                    "tovar_id" -> Association[
                    "Nullable" -> True, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER(20)"]], "Schema" -> None], 
                    "dataintro" -> Association[
                    "PrimaryKey" -> Association[
                    "ConstraintName" -> None, "Columns" -> {"id_d"}], 
                    "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, 
                    "Indexes" -> {}, "Columns" -> 
                    Association["id_d" -> 
                    Association["Nullable" -> False, "BackendType" -> 
                    "Integer", "NativeTypeString" -> "INTEGER(11)"], "count" -> 
                    Association["Nullable" -> True, "BackendType" -> "Real", 
                    "NativeTypeString" -> "DOUBLE"], "datareg" -> 
                    Association["Nullable" -> True, 
                    "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
                    "NativeTypeString" -> 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"]], "Schema" -> 
                    None], "tovar" -> 
                    Association["PrimaryKey" -> 
                    Association["ConstraintName" -> None, 
                    "Columns" -> {"id_t"}], "ForeignKeys" -> {}, 
                    "UniquenessConstraints" -> {}, "Indexes" -> {}, "Columns" -> 
                    Association["id_t" -> 
                    Association["Nullable" -> False, "BackendType" -> 
                    "Integer", "NativeTypeString" -> "INTEGER(11)"], "name" -> 
                    Association["Nullable" -> True, 
                    "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
                    "NativeTypeString" -> 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"], "kod" -> 
                    Association["Nullable" -> True, "BackendType" -> 
                    "Integer", "NativeTypeString" -> "INTEGER(11)"]], 
                    "Schema" -> None], "prokatinfo" -> 
                    Association["PrimaryKey" -> 
                    Association["ConstraintName" -> None, 
                    "Columns" -> {"id_pr"}], "ForeignKeys" -> {}, 
                    "UniquenessConstraints" -> {}, "Indexes" -> {}, "Columns" -> 
                    Association["id_pr" -> 
                    Association["Nullable" -> False, "BackendType" -> 
                    "Integer", "NativeTypeString" -> "INTEGER(11)"], "name" -> 
                    Association["Nullable" -> True, 
                    "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
                    "NativeTypeString" -> 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"], "kod" -> 
                    Association["Nullable" -> True, "BackendType" -> 
                    "Integer", "NativeTypeString" -> "INTEGER(20)"], "count" -> 
                    Association["Nullable" -> True, "BackendType" -> "Real", 
                    "NativeTypeString" -> "DOUBLE"], "starttime" -> 
                    Association["Nullable" -> True, 
                    "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
                    "NativeTypeString" -> 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"], "endtime" -> 
                    Association["Nullable" -> True, 
                    "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
                    "NativeTypeString" -> 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"], "datareg" -> 
                    Association["Nullable" -> True, 
                    "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
                    "NativeTypeString" -> 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"], "fnameprod" -> 
                    Association["Nullable" -> True, 
                    "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
                    "NativeTypeString" -> 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"], "lnameprod" -> 
                    Association["Nullable" -> True, 
                    "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
                    "NativeTypeString" -> 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"]], "Schema" -> 
                    None], "worktime" -> 
                    Association["PrimaryKey" -> 
                    Association["ConstraintName" -> None, 
                    "Columns" -> {"id_w"}], "ForeignKeys" -> {}, 
                    "UniquenessConstraints" -> {}, "Indexes" -> {}, "Columns" -> 
                    Association["id_w" -> 
                    Association["Nullable" -> False, "BackendType" -> 
                    "Integer", "NativeTypeString" -> "INTEGER(11)"], 
                    "starttime" -> Association[
                    "Nullable" -> True, 
                    "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
                    "NativeTypeString" -> 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"], "endtime" -> 
                    Association["Nullable" -> True, 
                    "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
                    "NativeTypeString" -> 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"]], "Schema" -> 
                    None], "prodavec" -> 
                    Association["PrimaryKey" -> 
                    Association["ConstraintName" -> None, 
                    "Columns" -> {"id_p"}], "ForeignKeys" -> {}, 
                    "UniquenessConstraints" -> {}, "Indexes" -> {}, "Columns" -> 
                    Association["id_p" -> 
                    Association["Nullable" -> False, "BackendType" -> 
                    "Integer", "NativeTypeString" -> "INTEGER(11)"], 
                    "fnameprod" -> Association[
                    "Nullable" -> True, 
                    "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
                    "NativeTypeString" -> 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"], "lnameprod" -> 
                    Association["Nullable" -> True, 
                    "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
                    "NativeTypeString" -> 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"]], "Schema" -> 
                    None]], "ID" -> "1pcgsvgchrs8c"], 
                    DatabaseReference[
                    Association[
                    "Backend" -> "mysql", "Username" -> "root", "Password" -> 
                    "root", "Host" -> "localhost", "Port" -> 3306, "Name" -> 
                    "prokattovara", "Options" -> Association[]]]], Editable -> 
                    False, SelectWithContents -> True, Selectable -> False], 
                    ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"MySQL", 
                    RelationalDatabase[
                    Association[
                    "Tables" -> 
                    Association[
                    "indexes" -> 
                    Association[
                    "PrimaryKey" -> 
                    Association[
                    "ConstraintName" -> None, "Columns" -> {"id"}], 
                    "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, 
                    "Indexes" -> {}, "Columns" -> 
                    Association[
                    "id" -> Association[
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER(11)"], "data_id" -> 
                    Association[
                    "Nullable" -> True, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER(20)"], "prod_id" -> 
                    Association[
                    "Nullable" -> True, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER(20)"], "work_id" -> 
                    Association[
                    "Nullable" -> True, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER(20)"], "tovar_id" -> 
                    Association[
                    "Nullable" -> True, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER(20)"]], "Schema" -> None], 
                    "dataintro" -> 
                    Association[
                    "PrimaryKey" -> 
                    Association[
                    "ConstraintName" -> None, "Columns" -> {"id_d"}], 
                    "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, 
                    "Indexes" -> {}, "Columns" -> 
                    Association[
                    "id_d" -> Association[
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER(11)"], "count" -> 
                    Association[
                    "Nullable" -> True, "BackendType" -> "Real", 
                    "NativeTypeString" -> "DOUBLE"], "datareg" -> 
                    Association[
                    "Nullable" -> True, 
                    "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
                    "NativeTypeString" -> 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"]], "Schema" -> 
                    None], "tovar" -> 
                    Association[
                    "PrimaryKey" -> 
                    Association[
                    "ConstraintName" -> None, "Columns" -> {"id_t"}], 
                    "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, 
                    "Indexes" -> {}, "Columns" -> 
                    Association[
                    "id_t" -> Association[
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER(11)"], "name" -> 
                    Association[
                    "Nullable" -> True, 
                    "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
                    "NativeTypeString" -> 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"], "kod" -> 
                    Association[
                    "Nullable" -> True, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER(11)"]], "Schema" -> None], 
                    "prokatinfo" -> 
                    Association[
                    "PrimaryKey" -> 
                    Association[
                    "ConstraintName" -> None, "Columns" -> {"id_pr"}], 
                    "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, 
                    "Indexes" -> {}, "Columns" -> 
                    Association[
                    "id_pr" -> Association[
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER(11)"], "name" -> 
                    Association[
                    "Nullable" -> True, 
                    "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
                    "NativeTypeString" -> 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"], "kod" -> 
                    Association[
                    "Nullable" -> True, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER(20)"], "count" -> 
                    Association[
                    "Nullable" -> True, "BackendType" -> "Real", 
                    "NativeTypeString" -> "DOUBLE"], "starttime" -> 
                    Association[
                    "Nullable" -> True, 
                    "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
                    "NativeTypeString" -> 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"], "endtime" -> 
                    Association[
                    "Nullable" -> True, 
                    "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
                    "NativeTypeString" -> 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"], "datareg" -> 
                    Association[
                    "Nullable" -> True, 
                    "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
                    "NativeTypeString" -> 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"], "fnameprod" -> 
                    Association[
                    "Nullable" -> True, 
                    "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
                    "NativeTypeString" -> 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"], "lnameprod" -> 
                    Association[
                    "Nullable" -> True, 
                    "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
                    "NativeTypeString" -> 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"]], "Schema" -> 
                    None], "worktime" -> 
                    Association[
                    "PrimaryKey" -> 
                    Association[
                    "ConstraintName" -> None, "Columns" -> {"id_w"}], 
                    "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, 
                    "Indexes" -> {}, "Columns" -> 
                    Association[
                    "id_w" -> Association[
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER(11)"], "starttime" -> 
                    Association[
                    "Nullable" -> True, 
                    "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
                    "NativeTypeString" -> 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"], "endtime" -> 
                    Association[
                    "Nullable" -> True, 
                    "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
                    "NativeTypeString" -> 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"]], "Schema" -> 
                    None], "prodavec" -> 
                    Association[
                    "PrimaryKey" -> 
                    Association[
                    "ConstraintName" -> None, "Columns" -> {"id_p"}], 
                    "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, 
                    "Indexes" -> {}, "Columns" -> 
                    Association[
                    "id_p" -> Association[
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER(11)"], "fnameprod" -> 
                    Association[
                    "Nullable" -> True, 
                    "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
                    "NativeTypeString" -> 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"], "lnameprod" -> 
                    Association[
                    "Nullable" -> True, 
                    "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
                    "NativeTypeString" -> 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"]], "Schema" -> 
                    None]], "ID" -> "1pcgsvgchrs8c"], 
                    DatabaseReference[
                    Association[
                    "Backend" -> "mysql", "Username" -> "root", "Password" -> 
                    "root", "Host" -> "localhost", "Port" -> 3306, "Name" -> 
                    "prokattovara", "Options" -> Association[]]]]}, False]], 
                    DynamicModuleValues :> {}], Setting[#, {0}]& ], 
                  "SummaryItem"]}]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.04], {
               FaceForm[{
                 RGBColor[0.984, 0.969, 0.91], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{17., 10.}, {
                6., 10.}, {4.343, 10.}, {3., 11.343}, {3., 13.}, {3., 20.}, {
                3., 21.657}, {4.343, 23.}, {6., 23.}, {17., 23.}, {18.657, 
                23.}, {20., 21.657}, {20., 20.}, {20., 13.}, {20., 11.343}, {
                18.657, 10.}, {17., 10.}}}]}, {
               FaceForm[{
                 RGBColor[0.996, 0.506, 0.004], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                 1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {0, 
                 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{6., 22.5}, {4.622, 22.5}, {3.5, 21.379}, {3.5, 
                 20.}, {3.5, 13.}, {3.5, 11.620999999999999`}, {4.622, 
                 10.5}, {6., 10.5}, {17., 10.5}, {18.379, 10.5}, {19.5, 
                 11.620999999999999`}, {19.5, 13.}, {19.5, 20.}, {19.5, 
                 21.379}, {18.379, 22.5}, {17., 22.5}}, {{17., 9.5}, {6., 
                 9.5}, {4.07, 9.5}, {2.5, 11.07}, {2.5, 13.}, {2.5, 20.}, {
                 2.5, 21.93}, {4.07, 23.5}, {6., 23.5}, {17., 23.5}, {18.93, 
                 23.5}, {20.5, 21.93}, {20.5, 20.}, {20.5, 13.}, {20.5, 
                 11.07}, {18.93, 9.5}, {17., 9.5}}}]}, {
               FaceForm[{
                 RGBColor[0.012, 0.612, 0.996], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5, 12.5}, {14.5, 12.5}, {
                14.5, 14.5}, {12.5, 14.5}}, {{8.5, 14.5}, {10.5, 14.5}, {10.5,
                 12.5}, {8.5, 12.5}}}]}, {
               FaceForm[{
                 RGBColor[0.537, 0.537, 0.537], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAFdBwitD6EbDLDzGwwdUNRj8E2gfE0cfCM0
9UZo5hsRoE3Q1MPMl0LjC+HgG6Gph/FVobQ+qnvR+XD/qqLxpdDUK2Lno6vH
MM8ITT063wRNvYkDAOvQJ0o=
                "]]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}}}, {{{18., 12.}, {15.791, 12.}, {14., 
                11.104}, {14., 10.}, {14., 4.}, {14., 2.896000000000001}, {
                15.791, 2.}, {18., 2.}, {20.209, 2.}, {22., 
                2.896000000000001}, {22., 4.}, {22., 10.}, {22., 11.104}, {
                20.209, 12.}, {18., 12.}}}]}, {
               FaceForm[{
                 RGBColor[0.537, 0.537, 0.537], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                 0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
                 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                 0}, {1, 3, 3}}}, {{{18., 5.5}, {15.997, 5.5}, {14.5, 
                 6.292}, {14.5, 7.}, {14.5, 8.411}, {15.312, 7.853}, {16.547, 
                 7.5}, {18., 7.5}, {19.453, 7.5}, {20.688, 7.853}, {21.5, 
                 8.411}, {21.5, 7.}, {21.5, 6.292}, {20.003, 5.5}, {18., 
                 5.5}}, {{21.5, 4.}, {21.5, 3.292}, {20.003, 2.5}, {18., 
                 2.5}, {15.997, 2.5}, {14.5, 3.292}, {14.5, 4.}, {14.5, 
                 5.411}, {15.312, 4.853}, {16.547, 4.5}, {18., 4.5}, {19.453, 
                 4.5}, {20.688, 4.853}, {21.5, 5.411}}, {{18., 11.5}, {20.003,
                  11.5}, {21.5, 10.708}, {21.5, 10.}, {21.5, 9.292}, {20.003, 
                 8.5}, {18., 8.5}, {15.997, 8.5}, {14.5, 9.292}, {14.5, 
                 10.}, {14.5, 10.708}, {15.997, 11.5}, {18., 11.5}}, {{18., 
                 12.5}, {15.435, 12.5}, {13.5, 11.425}, {13.5, 10.}, {13.5, 
                 4.}, {13.5, 2.575}, {15.435, 1.5}, {18., 1.5}, {20.565, 
                 1.5}, {22.5, 2.575}, {22.5, 4.}, {22.5, 10.}, {22.5, 
                 11.425}, {20.565, 12.5}, {18., 12.5}}}]}}, AspectRatio -> 
             Automatic, ImageSize -> {25., 25.}, 
             PlotRange -> {{0., 25.}, {0., 25.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Type count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["6", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"RelationalDatabase: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"MySQL\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"MySQL\""}, {"", 
                    PaneBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["RelationalDatabase", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04], {
                    FaceForm[{
                    RGBColor[0.651, 0.651, 0.651], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{20.5, 4.}, {20.5, 3.724}, {20.276, 
                    3.5}, {20., 3.5}, {6., 3.5}, {5.724, 3.5}, {5.5, 3.724}, {
                    5.5, 4.}, {5.5, 21.}, {5.5, 21.276}, {5.724, 21.5}, {6., 
                    21.5}, {20., 21.5}, {20.276, 21.5}, {20.5, 21.276}, {20.5,
                     21.}}, {{20.5, 22.5}, {5.5, 22.5}, {4.947999999999999, 
                    22.5}, {4.5, 22.053}, {4.5, 21.5}, {4.5, 3.5}, {4.5, 
                    2.947}, {4.947999999999999, 2.5}, {5.5, 2.5}, {20.5, 
                    2.5}, {21.052, 2.5}, {21.5, 2.947}, {21.5, 3.5}, {21.5, 
                    21.5}, {21.5, 22.053}, {21.052, 22.5}, {20.5, 22.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.8670000000000001, 0.067, 0.], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, CompressedData["
1:eJxtj69Lg1EYhT80CZ84xjSM68VN5tjGfjnFYPksJkUwiRYRrQoGs2Ay2AUR
m1YRGVjEYBCrf4DJ7L/g2N05l/egMC7Pju/Zc0oHJ9tH40mSTAw+U4PPWII/
lw2f8+XwJjny9XH+4u1zUvI0az7d/j6sRw5v5K/Ng9zOy5LcL0k/2JGfP85e
74qzknv2ge3vefrYe+S6D9wTn574IsfeyOGNHPwW5X5R+sGObH2Re/bZvT0y
fOw9ct0H7opPV3yRY2/k8EYOfh2570g/2JGtL3LPPru3S4aPvUeu+0aczFuf
ARtf5mm2d7j6vXVVlr2R72/e5x5PS3Jfkn6wIxtf5p59dm+ZDB97D1/dB66K
T1V8kWPvguyNHPwqcl+RfrAjW1/knn127wIZPvYevroP3BCfhvgix9667I0c
/GpyX5N+sCNbX+SefXZvnQwfew9f3Qdui09bfJGn2e6wvyV7Iwe/ptw3pR/s
yNYXuWef3dsiw8few1f3gWfEZ0Z8kaej3mnZWyBvrFyu7f/k5T4v/WBHtr7I
Pfvs3gIZPvYevrrPy/foL8p9Uf4PnCPbfchT9oFtT5r1R79j7+GVE46e1s/z
7f/7vcv+AMXQVQk=
                    "]]}, {
                    FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{20.5, 4.}, {
                    20.5, 3.724}, {20.276, 3.5}, {20., 3.5}, {6., 3.5}, {
                    5.724, 3.5}, {5.5, 3.724}, {5.5, 4.}, {5.5, 21.}, {5.5, 
                    21.276}, {5.724, 21.5}, {6., 21.5}, {20., 21.5}, {20.276, 
                    21.5}, {20.5, 21.276}, {20.5, 21.}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}}}, {{{13., 18.}, {10.239, 18.}, {
                    8., 17.015}, {8., 15.8}, {8., 9.2}, {8., 
                    7.984999999999999}, {10.239, 7.}, {13., 7.}, {15.761, 
                    7.}, {18., 7.984999999999999}, {18., 9.2}, {18., 15.8}, {
                    18., 17.015}, {15.761, 18.}, {13., 18.}}}]}, {
                    FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}}}, {{{13., 10.8633}, {10.314, 
                    10.8633}, {8.6, 11.833300000000001`}, {8.6, 
                    12.500300000000001`}, {8.6, 14.1133}, {9.586, 13.4603}, {
                    11.151, 13.0463}, {13., 13.0463}, {14.849, 13.0463}, {
                    16.414, 13.4603}, {17.4, 14.1133}, {17.4, 
                    12.500300000000001`}, {17.4, 11.833300000000001`}, {
                    15.686, 10.8633}, {13., 10.8633}}, {{17.4, 9.2273}, {17.4,
                     8.560300000000002}, {15.686, 7.5913}, {13., 7.5913}, {
                    10.314, 7.5913}, {8.6, 8.560300000000002}, {8.6, 
                    9.2273}, {8.6, 10.8413}, {9.586, 10.1873}, {11.151, 
                    9.772300000000001}, {13., 9.772300000000001}, {14.849, 
                    9.772300000000001}, {16.414, 10.1873}, {17.4, 
                    10.8413}}, {{13., 17.4093}, {15.686, 17.4093}, {17.4, 
                    16.439300000000003`}, {17.4, 15.772300000000001`}, {17.4, 
                    15.1053}, {15.686, 14.1363}, {13., 14.1363}, {10.314, 
                    14.1363}, {8.6, 15.1053}, {8.6, 15.772300000000001`}, {
                    8.6, 16.439300000000003`}, {10.314, 17.4093}, {13., 
                    17.4093}}, {{13., 18.5003}, {9.864, 18.5003}, {7.5, 
                    17.3273}, {7.5, 15.772300000000001`}, {7.5, 9.2273}, {7.5,
                     7.673300000000001}, {9.864, 6.500300000000001}, {13., 
                    6.500300000000001}, {16.136, 6.500300000000001}, {18.5, 
                    7.673300000000001}, {18.5, 9.2273}, {18.5, 
                    15.772300000000001`}, {18.5, 17.3273}, {16.136, 
                    18.5003}, {13., 18.5003}}}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 25.}, {0., 25.}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Table count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["6", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Backend: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"MySQL\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04], {
                    FaceForm[{
                    RGBColor[0.651, 0.651, 0.651], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{20.5, 4.}, {20.5, 3.724}, {20.276, 
                    3.5}, {20., 3.5}, {6., 3.5}, {5.724, 3.5}, {5.5, 3.724}, {
                    5.5, 4.}, {5.5, 21.}, {5.5, 21.276}, {5.724, 21.5}, {6., 
                    21.5}, {20., 21.5}, {20.276, 21.5}, {20.5, 21.276}, {20.5,
                     21.}}, {{20.5, 22.5}, {5.5, 22.5}, {4.947999999999999, 
                    22.5}, {4.5, 22.053}, {4.5, 21.5}, {4.5, 3.5}, {4.5, 
                    2.947}, {4.947999999999999, 2.5}, {5.5, 2.5}, {20.5, 
                    2.5}, {21.052, 2.5}, {21.5, 2.947}, {21.5, 3.5}, {21.5, 
                    21.5}, {21.5, 22.053}, {21.052, 22.5}, {20.5, 22.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.8670000000000001, 0.067, 0.], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, CompressedData["
1:eJxtj69Lg1EYhT80CZ84xjSM68VN5tjGfjnFYPksJkUwiRYRrQoGs2Ay2AUR
m1YRGVjEYBCrf4DJ7L/g2N05l/egMC7Pju/Zc0oHJ9tH40mSTAw+U4PPWII/
lw2f8+XwJjny9XH+4u1zUvI0az7d/j6sRw5v5K/Ng9zOy5LcL0k/2JGfP85e
74qzknv2ge3vefrYe+S6D9wTn574IsfeyOGNHPwW5X5R+sGObH2Re/bZvT0y
fOw9ct0H7opPV3yRY2/k8EYOfh2570g/2JGtL3LPPru3S4aPvUeu+0aczFuf
ARtf5mm2d7j6vXVVlr2R72/e5x5PS3Jfkn6wIxtf5p59dm+ZDB97D1/dB66K
T1V8kWPvguyNHPwqcl+RfrAjW1/knn127wIZPvYevroP3BCfhvgix9667I0c
/GpyX5N+sCNbX+SefXZvnQwfew9f3Qdui09bfJGn2e6wvyV7Iwe/ptw3pR/s
yNYXuWef3dsiw8few1f3gWfEZ0Z8kaej3mnZWyBvrFyu7f/k5T4v/WBHtr7I
Pfvs3gIZPvYevrrPy/foL8p9Uf4PnCPbfchT9oFtT5r1R79j7+GVE46e1s/z
7f/7vcv+AMXQVQk=
                    "]]}, {
                    FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{20.5, 4.}, {
                    20.5, 3.724}, {20.276, 3.5}, {20., 3.5}, {6., 3.5}, {
                    5.724, 3.5}, {5.5, 3.724}, {5.5, 4.}, {5.5, 21.}, {5.5, 
                    21.276}, {5.724, 21.5}, {6., 21.5}, {20., 21.5}, {20.276, 
                    21.5}, {20.5, 21.276}, {20.5, 21.}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}}}, {{{13., 18.}, {10.239, 18.}, {
                    8., 17.015}, {8., 15.8}, {8., 9.2}, {8., 
                    7.984999999999999}, {10.239, 7.}, {13., 7.}, {15.761, 
                    7.}, {18., 7.984999999999999}, {18., 9.2}, {18., 15.8}, {
                    18., 17.015}, {15.761, 18.}, {13., 18.}}}]}, {
                    FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}}}, {{{13., 10.8633}, {10.314, 
                    10.8633}, {8.6, 11.833300000000001`}, {8.6, 
                    12.500300000000001`}, {8.6, 14.1133}, {9.586, 13.4603}, {
                    11.151, 13.0463}, {13., 13.0463}, {14.849, 13.0463}, {
                    16.414, 13.4603}, {17.4, 14.1133}, {17.4, 
                    12.500300000000001`}, {17.4, 11.833300000000001`}, {
                    15.686, 10.8633}, {13., 10.8633}}, {{17.4, 9.2273}, {17.4,
                     8.560300000000002}, {15.686, 7.5913}, {13., 7.5913}, {
                    10.314, 7.5913}, {8.6, 8.560300000000002}, {8.6, 
                    9.2273}, {8.6, 10.8413}, {9.586, 10.1873}, {11.151, 
                    9.772300000000001}, {13., 9.772300000000001}, {14.849, 
                    9.772300000000001}, {16.414, 10.1873}, {17.4, 
                    10.8413}}, {{13., 17.4093}, {15.686, 17.4093}, {17.4, 
                    16.439300000000003`}, {17.4, 15.772300000000001`}, {17.4, 
                    15.1053}, {15.686, 14.1363}, {13., 14.1363}, {10.314, 
                    14.1363}, {8.6, 15.1053}, {8.6, 15.772300000000001`}, {
                    8.6, 16.439300000000003`}, {10.314, 17.4093}, {13., 
                    17.4093}}, {{13., 18.5003}, {9.864, 18.5003}, {7.5, 
                    17.3273}, {7.5, 15.772300000000001`}, {7.5, 9.2273}, {7.5,
                     7.673300000000001}, {9.864, 6.500300000000001}, {13., 
                    6.500300000000001}, {16.136, 6.500300000000001}, {18.5, 
                    7.673300000000001}, {18.5, 9.2273}, {18.5, 
                    15.772300000000001`}, {18.5, 17.3273}, {16.136, 
                    18.5003}, {13., 18.5003}}}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 25.}, {0., 25.}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Table count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["6", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Backend: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"MySQL\"", "SummaryItem"]}]}, {
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox["\"Tables: \"", "SummaryItemAnnotation"], 
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"indexes\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"indexes\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"INTEGER(11)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(11)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"data_id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"data_id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"INTEGER(20)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"data_id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"data_id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(20)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "data_id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"prod_id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"prod_id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"INTEGER(20)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"prod_id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"prod_id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(20)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "prod_id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"work_id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"work_id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"INTEGER(20)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"work_id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"work_id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(20)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "work_id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"tovar_id\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"tovar_id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"INTEGER(20)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"tovar_id\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"tovar_id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(20)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "tovar_id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"indexes", 
                    Column[{
                    OpenerView[{"id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(11)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"data_id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(20)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "data_id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"prod_id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(20)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "prod_id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"work_id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(20)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "work_id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"tovar_id", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(20)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "tovar_id"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}]}]}, False]],
                     DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"dataintro\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"dataintro\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id_d\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id_d\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"INTEGER(11)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id_d\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id_d", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(11)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id_d"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"count\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"count\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"DOUBLE\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"count\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"count", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "DOUBLE"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "count"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"datareg\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"datareg\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"datareg\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"datareg", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "datareg"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"dataintro", 
                    Column[{
                    OpenerView[{"id_d", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(11)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id_d"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"count", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "DOUBLE"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "count"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"datareg", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "datareg"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}]}]}, False]],
                     DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"tovar\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"tovar\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id_t\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id_t\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"INTEGER(11)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id_t\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id_t", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(11)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id_t"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"name\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"name\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"kod\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"kod\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"INTEGER(11)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"kod\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"kod", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(11)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "kod"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"tovar", 
                    Column[{
                    OpenerView[{"id_t", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(11)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id_t"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"kod", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(11)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "kod"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}]}]}, False]],
                     DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"prokatinfo\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"prokatinfo\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id_pr\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id_pr\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"INTEGER(11)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id_pr\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id_pr", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(11)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id_pr"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"name\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"name\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"kod\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"kod\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"INTEGER(20)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"kod\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"kod", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(20)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "kod"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"count\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"count\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"DOUBLE\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"count\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"count", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "DOUBLE"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "count"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"starttime\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"starttime\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"starttime\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"starttime", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "starttime"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"endtime\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"endtime\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"endtime\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"endtime", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "endtime"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"datareg\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"datareg\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"datareg\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"datareg", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "datareg"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"fnameprod\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"fnameprod\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"fnameprod\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"fnameprod", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "fnameprod"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"lnameprod\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"lnameprod\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"lnameprod\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"lnameprod", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "lnameprod"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"prokatinfo", 
                    Column[{
                    OpenerView[{"id_pr", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(11)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id_pr"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"name", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "name"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"kod", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(20)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "kod"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"count", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "DOUBLE"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "count"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"starttime", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "starttime"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"endtime", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "endtime"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"datareg", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "datareg"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"fnameprod", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "fnameprod"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"lnameprod", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "lnameprod"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}]}]}, False]],
                     DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"worktime\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"worktime\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id_w\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id_w\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"INTEGER(11)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id_w\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    ImageSize -> Automatic, ImageMargins -> 0, 
                    BaseStyle -> {}, DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> Baseline], Deployed -> False, 
                    StripOnInput -> False], 
                    OpenerView[{"id_w", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(11)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id_w"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"starttime\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"starttime\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"starttime\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"starttime", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "starttime"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"endtime\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"endtime\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"endtime\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"endtime", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "endtime"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"worktime", 
                    Column[{
                    OpenerView[{"id_w", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(11)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id_w"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"starttime", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "starttime"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"endtime", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "endtime"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}]}]}, False]],
                     DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"prodavec\""}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"prodavec\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id_p\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"id_p\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"INTEGER(11)\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"id_p\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"id_p", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(11)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id_p"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"fnameprod\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"fnameprod\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"fnameprod\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"fnameprod", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "fnameprod"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"lnameprod\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], "\"lnameprod\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NativeTypeString:\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\""}, {
                    StyleBox["\"Default:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "None"}, {
                    StyleBox["\"Indexed:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "False"}, {
                    StyleBox["\"Name:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\"lnameprod\""}, {
                    StyleBox["\"Nullable:\"", 
                    GrayLevel[0.5], StripOnInput -> False], "True"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"lnameprod", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "lnameprod"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{"prodavec", 
                    Column[{
                    OpenerView[{"id_p", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], "INTEGER(11)"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "id_p"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], False}}, Alignment -> Left]}], 
                    OpenerView[{"fnameprod", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "fnameprod"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}], 
                    OpenerView[{"lnameprod", 
                    Grid[{{
                    Style["NativeTypeString:", 
                    GrayLevel[0.5]], 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"}, {
                    Style["Default:", 
                    GrayLevel[0.5]], None}, {
                    Style["Indexed:", 
                    GrayLevel[0.5]], False}, {
                    Style["Name:", 
                    GrayLevel[0.5]], "lnameprod"}, {
                    Style["Nullable:", 
                    GrayLevel[0.5]], True}}, Alignment -> Left]}]}]}, False]],
                     DynamicModuleValues -> Automatic], Setting[#, {0}]& ]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]}}, GridBoxAlignment -> {"Rows" -> {{Top}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    RelationalDatabase[
                    Association[
                    "Tables" -> Association[
                    "indexes" -> Association[
                    "PrimaryKey" -> Association[
                    "ConstraintName" -> None, "Columns" -> {"id"}], 
                    "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, 
                    "Indexes" -> {}, "Columns" -> 
                    Association["id" -> Association[
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER(11)"], "data_id" -> 
                    Association["Nullable" -> True, "BackendType" -> 
                    "Integer", "NativeTypeString" -> "INTEGER(20)"], 
                    "prod_id" -> Association[
                    "Nullable" -> True, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER(20)"], "work_id" -> 
                    Association["Nullable" -> True, "BackendType" -> 
                    "Integer", "NativeTypeString" -> "INTEGER(20)"], 
                    "tovar_id" -> Association[
                    "Nullable" -> True, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER(20)"]], "Schema" -> None], 
                    "dataintro" -> Association[
                    "PrimaryKey" -> Association[
                    "ConstraintName" -> None, "Columns" -> {"id_d"}], 
                    "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, 
                    "Indexes" -> {}, "Columns" -> 
                    Association["id_d" -> 
                    Association["Nullable" -> False, "BackendType" -> 
                    "Integer", "NativeTypeString" -> "INTEGER(11)"], "count" -> 
                    Association["Nullable" -> True, "BackendType" -> "Real", 
                    "NativeTypeString" -> "DOUBLE"], "datareg" -> 
                    Association["Nullable" -> True, 
                    "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
                    "NativeTypeString" -> 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"]], "Schema" -> 
                    None], "tovar" -> 
                    Association["PrimaryKey" -> 
                    Association["ConstraintName" -> None, 
                    "Columns" -> {"id_t"}], "ForeignKeys" -> {}, 
                    "UniquenessConstraints" -> {}, "Indexes" -> {}, "Columns" -> 
                    Association["id_t" -> 
                    Association["Nullable" -> False, "BackendType" -> 
                    "Integer", "NativeTypeString" -> "INTEGER(11)"], "name" -> 
                    Association["Nullable" -> True, 
                    "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
                    "NativeTypeString" -> 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"], "kod" -> 
                    Association["Nullable" -> True, "BackendType" -> 
                    "Integer", "NativeTypeString" -> "INTEGER(11)"]], 
                    "Schema" -> None], "prokatinfo" -> 
                    Association["PrimaryKey" -> 
                    Association["ConstraintName" -> None, 
                    "Columns" -> {"id_pr"}], "ForeignKeys" -> {}, 
                    "UniquenessConstraints" -> {}, "Indexes" -> {}, "Columns" -> 
                    Association["id_pr" -> 
                    Association["Nullable" -> False, "BackendType" -> 
                    "Integer", "NativeTypeString" -> "INTEGER(11)"], "name" -> 
                    Association["Nullable" -> True, 
                    "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
                    "NativeTypeString" -> 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"], "kod" -> 
                    Association["Nullable" -> True, "BackendType" -> 
                    "Integer", "NativeTypeString" -> "INTEGER(20)"], "count" -> 
                    Association["Nullable" -> True, "BackendType" -> "Real", 
                    "NativeTypeString" -> "DOUBLE"], "starttime" -> 
                    Association["Nullable" -> True, 
                    "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
                    "NativeTypeString" -> 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"], "endtime" -> 
                    Association["Nullable" -> True, 
                    "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
                    "NativeTypeString" -> 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"], "datareg" -> 
                    Association["Nullable" -> True, 
                    "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
                    "NativeTypeString" -> 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"], "fnameprod" -> 
                    Association["Nullable" -> True, 
                    "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
                    "NativeTypeString" -> 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"], "lnameprod" -> 
                    Association["Nullable" -> True, 
                    "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
                    "NativeTypeString" -> 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"]], "Schema" -> 
                    None], "worktime" -> 
                    Association["PrimaryKey" -> 
                    Association["ConstraintName" -> None, 
                    "Columns" -> {"id_w"}], "ForeignKeys" -> {}, 
                    "UniquenessConstraints" -> {}, "Indexes" -> {}, "Columns" -> 
                    Association["id_w" -> 
                    Association["Nullable" -> False, "BackendType" -> 
                    "Integer", "NativeTypeString" -> "INTEGER(11)"], 
                    "starttime" -> Association[
                    "Nullable" -> True, 
                    "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
                    "NativeTypeString" -> 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"], "endtime" -> 
                    Association["Nullable" -> True, 
                    "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
                    "NativeTypeString" -> 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"]], "Schema" -> 
                    None], "prodavec" -> 
                    Association["PrimaryKey" -> 
                    Association["ConstraintName" -> None, 
                    "Columns" -> {"id_p"}], "ForeignKeys" -> {}, 
                    "UniquenessConstraints" -> {}, "Indexes" -> {}, "Columns" -> 
                    Association["id_p" -> 
                    Association["Nullable" -> False, "BackendType" -> 
                    "Integer", "NativeTypeString" -> "INTEGER(11)"], 
                    "fnameprod" -> Association[
                    "Nullable" -> True, 
                    "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
                    "NativeTypeString" -> 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"], "lnameprod" -> 
                    Association["Nullable" -> True, 
                    "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
                    "NativeTypeString" -> 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"]], "Schema" -> 
                    None]], "ID" -> "1pcgsvgchrs8c"], 
                    DatabaseReference[
                    Association[
                    "Backend" -> "mysql", "Username" -> "root", "Password" -> 
                    "root", "Host" -> "localhost", "Port" -> 3306, "Name" -> 
                    "prokattovara", "Options" -> Association[]]]], Editable -> 
                    False, SelectWithContents -> True, Selectable -> False], 
                    ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"MySQL", 
                    RelationalDatabase[
                    Association[
                    "Tables" -> 
                    Association[
                    "indexes" -> 
                    Association[
                    "PrimaryKey" -> 
                    Association[
                    "ConstraintName" -> None, "Columns" -> {"id"}], 
                    "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, 
                    "Indexes" -> {}, "Columns" -> 
                    Association[
                    "id" -> Association[
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER(11)"], "data_id" -> 
                    Association[
                    "Nullable" -> True, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER(20)"], "prod_id" -> 
                    Association[
                    "Nullable" -> True, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER(20)"], "work_id" -> 
                    Association[
                    "Nullable" -> True, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER(20)"], "tovar_id" -> 
                    Association[
                    "Nullable" -> True, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER(20)"]], "Schema" -> None], 
                    "dataintro" -> 
                    Association[
                    "PrimaryKey" -> 
                    Association[
                    "ConstraintName" -> None, "Columns" -> {"id_d"}], 
                    "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, 
                    "Indexes" -> {}, "Columns" -> 
                    Association[
                    "id_d" -> Association[
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER(11)"], "count" -> 
                    Association[
                    "Nullable" -> True, "BackendType" -> "Real", 
                    "NativeTypeString" -> "DOUBLE"], "datareg" -> 
                    Association[
                    "Nullable" -> True, 
                    "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
                    "NativeTypeString" -> 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"]], "Schema" -> 
                    None], "tovar" -> 
                    Association[
                    "PrimaryKey" -> 
                    Association[
                    "ConstraintName" -> None, "Columns" -> {"id_t"}], 
                    "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, 
                    "Indexes" -> {}, "Columns" -> 
                    Association[
                    "id_t" -> Association[
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER(11)"], "name" -> 
                    Association[
                    "Nullable" -> True, 
                    "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
                    "NativeTypeString" -> 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"], "kod" -> 
                    Association[
                    "Nullable" -> True, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER(11)"]], "Schema" -> None], 
                    "prokatinfo" -> 
                    Association[
                    "PrimaryKey" -> 
                    Association[
                    "ConstraintName" -> None, "Columns" -> {"id_pr"}], 
                    "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, 
                    "Indexes" -> {}, "Columns" -> 
                    Association[
                    "id_pr" -> Association[
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER(11)"], "name" -> 
                    Association[
                    "Nullable" -> True, 
                    "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
                    "NativeTypeString" -> 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"], "kod" -> 
                    Association[
                    "Nullable" -> True, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER(20)"], "count" -> 
                    Association[
                    "Nullable" -> True, "BackendType" -> "Real", 
                    "NativeTypeString" -> "DOUBLE"], "starttime" -> 
                    Association[
                    "Nullable" -> True, 
                    "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
                    "NativeTypeString" -> 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"], "endtime" -> 
                    Association[
                    "Nullable" -> True, 
                    "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
                    "NativeTypeString" -> 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"], "datareg" -> 
                    Association[
                    "Nullable" -> True, 
                    "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
                    "NativeTypeString" -> 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"], "fnameprod" -> 
                    Association[
                    "Nullable" -> True, 
                    "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
                    "NativeTypeString" -> 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"], "lnameprod" -> 
                    Association[
                    "Nullable" -> True, 
                    "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
                    "NativeTypeString" -> 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"]], "Schema" -> 
                    None], "worktime" -> 
                    Association[
                    "PrimaryKey" -> 
                    Association[
                    "ConstraintName" -> None, "Columns" -> {"id_w"}], 
                    "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, 
                    "Indexes" -> {}, "Columns" -> 
                    Association[
                    "id_w" -> Association[
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER(11)"], "starttime" -> 
                    Association[
                    "Nullable" -> True, 
                    "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
                    "NativeTypeString" -> 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"], "endtime" -> 
                    Association[
                    "Nullable" -> True, 
                    "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
                    "NativeTypeString" -> 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"]], "Schema" -> 
                    None], "prodavec" -> 
                    Association[
                    "PrimaryKey" -> 
                    Association[
                    "ConstraintName" -> None, "Columns" -> {"id_p"}], 
                    "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, 
                    "Indexes" -> {}, "Columns" -> 
                    Association[
                    "id_p" -> Association[
                    "Nullable" -> False, "BackendType" -> "Integer", 
                    "NativeTypeString" -> "INTEGER(11)"], "fnameprod" -> 
                    Association[
                    "Nullable" -> True, 
                    "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
                    "NativeTypeString" -> 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"], "lnameprod" -> 
                    Association[
                    "Nullable" -> True, 
                    "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
                    "NativeTypeString" -> 
                    "VARCHAR(255) COLLATE utf8mb4_unicode_ci"]], "Schema" -> 
                    None]], "ID" -> "1pcgsvgchrs8c"], 
                    DatabaseReference[
                    Association[
                    "Backend" -> "mysql", "Username" -> "root", "Password" -> 
                    "root", "Host" -> "localhost", "Port" -> 3306, "Name" -> 
                    "prokattovara", "Options" -> Association[]]]]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ], 
                  "SummaryItem"]}]}, {
               TagBox[
                TagBox[
                 GridBox[{{
                    TagBox["\"Types: \"", "SummaryItemAnnotation"], 
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"indexes\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"indexes\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox["\"id\"", StripOnInput -> False, FontWeight -> 
                    Bold]}}, AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"id\"", StripOnInput -> False, FontWeight -> Bold]}, {
                    "", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"indexes\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "\"id\""}}, 
                    AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Style["id", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "indexes"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id"}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"data_id\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"data_id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"indexes\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"data_id\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"data_id", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "indexes"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "data_id"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"prod_id\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"prod_id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"indexes\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"prod_id\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"prod_id", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "indexes"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "prod_id"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"work_id\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"work_id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"indexes\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"work_id\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"work_id", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "indexes"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "work_id"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"tovar_id\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"tovar_id\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"indexes\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"tovar_id\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"tovar_id", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "indexes"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "tovar_id"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}}, DefaultBaseStyle -> "Column", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"indexes", 
                    Column[{
                    OpenerView[{
                    Style["id", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "indexes"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id"}}, Alignment -> Left]}], 
                    OpenerView[{"data_id", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "indexes"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "data_id"}}, Alignment -> Left]}], 
                    OpenerView[{"prod_id", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "indexes"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "prod_id"}}, Alignment -> Left]}], 
                    OpenerView[{"work_id", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "indexes"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "work_id"}}, Alignment -> Left]}], 
                    OpenerView[{"tovar_id", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "indexes"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "tovar_id"}}, Alignment -> Left]}]}]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"dataintro\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"dataintro\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"id_d\"", StripOnInput -> False, FontWeight -> Bold]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"id_d\"", StripOnInput -> False, FontWeight -> Bold]}, {
                    "", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"dataintro\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"id_d\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Style["id_d", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "dataintro"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id_d"}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"count\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"count\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"dataintro\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"count\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"count", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "dataintro"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "count"}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"datareg\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"datareg\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"dataintro\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"datareg\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"datareg", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "dataintro"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "datareg"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}}, DefaultBaseStyle -> "Column", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"dataintro", 
                    Column[{
                    OpenerView[{
                    Style["id_d", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "dataintro"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id_d"}}, Alignment -> Left]}], 
                    OpenerView[{"count", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "dataintro"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "count"}}, Alignment -> Left]}], 
                    OpenerView[{"datareg", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "dataintro"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "datareg"}}, Alignment -> Left]}]}]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"tovar\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"tovar\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"id_t\"", StripOnInput -> False, FontWeight -> Bold]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"id_t\"", StripOnInput -> False, FontWeight -> Bold]}, {
                    "", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"tovar\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"id_t\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Style["id_t", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "tovar"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id_t"}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"name\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"tovar\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"name\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"name", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "tovar"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "name"}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"kod\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"kod\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"tovar\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "\"kod\""}},
                     AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"kod", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "tovar"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "kod"}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"tovar", 
                    Column[{
                    OpenerView[{
                    Style["id_t", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "tovar"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id_t"}}, Alignment -> Left]}], 
                    OpenerView[{"name", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "tovar"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "name"}}, Alignment -> Left]}], 
                    OpenerView[{"kod", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "tovar"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "kod"}}, Alignment -> Left]}]}]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"prokatinfo\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"prokatinfo\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"id_pr\"", StripOnInput -> False, FontWeight -> Bold]}},
                     AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"id_pr\"", StripOnInput -> False, FontWeight -> 
                    Bold]}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"prokatinfo\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"id_pr\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Style["id_pr", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "prokatinfo"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id_pr"}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"name\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"name\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"prokatinfo\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"name\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"name", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "prokatinfo"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "name"}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"kod\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"kod\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"prokatinfo\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], "\"kod\""}},
                     AutoDelete -> False, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"kod", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "prokatinfo"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "kod"}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"count\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"count\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"prokatinfo\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"count\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"count", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "prokatinfo"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "count"}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"starttime\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"starttime\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"prokatinfo\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"starttime\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"starttime", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "prokatinfo"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "starttime"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"endtime\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"endtime\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"prokatinfo\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"endtime\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"endtime", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "prokatinfo"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "endtime"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"datareg\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"datareg\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"prokatinfo\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"datareg\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"datareg", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "prokatinfo"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "datareg"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"fnameprod\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"fnameprod\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"prokatinfo\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"fnameprod\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"fnameprod", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "prokatinfo"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "fnameprod"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> A\
utomatic], "\"lnameprod\""}}, AutoDelete -> False, BaselinePosition -> {1, 1},
                     GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"lnameprod\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"prokatinfo\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"lnameprod\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"lnameprod", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "prokatinfo"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "lnameprod"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}}, DefaultBaseStyle -> "Column", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"prokatinfo", 
                    Column[{
                    OpenerView[{
                    Style["id_pr", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "prokatinfo"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id_pr"}}, Alignment -> Left]}], 
                    OpenerView[{"name", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "prokatinfo"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "name"}}, Alignment -> Left]}], 
                    OpenerView[{"kod", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "prokatinfo"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "kod"}}, Alignment -> Left]}], 
                    OpenerView[{"count", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "prokatinfo"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "count"}}, Alignment -> Left]}], 
                    OpenerView[{"starttime", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "prokatinfo"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "starttime"}}, Alignment -> Left]}], 
                    OpenerView[{"endtime", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "prokatinfo"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "endtime"}}, Alignment -> Left]}], 
                    OpenerView[{"datareg", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "prokatinfo"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "datareg"}}, Alignment -> Left]}], 
                    OpenerView[{"fnameprod", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "prokatinfo"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "fnameprod"}}, Alignment -> Left]}], 
                    OpenerView[{"lnameprod", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "prokatinfo"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "lnameprod"}}, Alignment -> Left]}]}]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"worktime\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"worktime\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"id_w\"", StripOnInput -> False, FontWeight -> Bold]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"id_w\"", StripOnInput -> False, FontWeight -> Bold]}, {
                    "", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox["\"ColumnPrefix:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"worktime\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"id_w\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Style["id_w", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "worktime"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id_w"}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"starttime\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"starttime\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"worktime\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"starttime\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"starttime", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "worktime"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "starttime"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"endtime\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"endtime\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"worktime\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"endtime\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"endtime", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "worktime"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "endtime"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}}, DefaultBaseStyle -> "Column", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"worktime", 
                    Column[{
                    OpenerView[{
                    Style["id_w", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "worktime"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id_w"}}, Alignment -> Left]}], 
                    OpenerView[{"starttime", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "worktime"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "starttime"}}, Alignment -> Left]}], 
                    OpenerView[{"endtime", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "worktime"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "endtime"}}, Alignment -> Left]}]}]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"prodavec\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"prodavec\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"id_p\"", StripOnInput -> False, FontWeight -> Bold]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], 
                    StyleBox[
                    "\"id_p\"", StripOnInput -> False, FontWeight -> Bold]}, {
                    "", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"prodavec\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"id_p\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{
                    Style["id_p", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "prodavec"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id_p"}}, Alignment -> Left]}, False]], 
                    DynamicModuleValues :> Automatic], Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"fnameprod\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"fnameprod\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"prodavec\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"fnameprod\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"fnameprod", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "prodavec"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "fnameprod"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}, {
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"lnameprod\""}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True -> 
                    GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, 
                    AutoAction -> False, ContinuousAction -> False, Enabled -> 
                    Automatic], "\"lnameprod\""}, {"", 
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PropertySourceType:\"", StripOnInput -> False, 
                    LineColor -> GrayLevel[0.5], FrontFaceColor -> 
                    GrayLevel[0.5], BackFaceColor -> GrayLevel[0.5], 
                    GraphicsColor -> GrayLevel[0.5], FontColor -> 
                    GrayLevel[0.5]], "\"Column\""}, {
                    StyleBox[
                    "\"ColumnPrefix:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"prodavec\""}, {
                    StyleBox[
                    "\"ColumnName:\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], 
                    BackFaceColor -> GrayLevel[0.5], GraphicsColor -> 
                    GrayLevel[0.5], FontColor -> GrayLevel[0.5]], 
                    "\"lnameprod\""}}, AutoDelete -> False, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Grid"], ImageMargins -> 0]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"lnameprod", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "prodavec"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "lnameprod"}}, Alignment -> Left]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}}, DefaultBaseStyle -> "Column", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0]}}, AutoDelete -> False, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], 
                    OpenerView[{"prodavec", 
                    Column[{
                    OpenerView[{
                    Style["id_p", Bold], 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "prodavec"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "id_p"}}, Alignment -> Left]}], 
                    OpenerView[{"fnameprod", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "prodavec"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "fnameprod"}}, Alignment -> Left]}], 
                    OpenerView[{"lnameprod", 
                    Grid[{{
                    Style["PropertySourceType:", 
                    GrayLevel[0.5]], "Column"}, {
                    Style["ColumnPrefix:", 
                    GrayLevel[0.5]], "prodavec"}, {
                    Style["ColumnName:", 
                    GrayLevel[0.5]], "lnameprod"}}, Alignment -> Left]}]}]}, 
                    False]], DynamicModuleValues :> Automatic], 
                    Setting[#, {0}]& ]}}, DefaultBaseStyle -> "Column", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]}}, AutoDelete -> False, 
                  GridBoxAlignment -> {"Rows" -> {{Top}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Grid"], "SummaryItem"]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  EntityStore[
   Association[
   "Types" -> Association[
     "indexes" -> 
      Association[
       "EntityTypeExtractor" -> "indexes", 
        "CanonicalNameProperties" -> {"id"}, "Properties" -> 
        Association[
         "id" -> Association[
           "ColumnPrefix" -> "indexes", "ColumnName" -> "id"], "data_id" -> 
          Association["ColumnPrefix" -> "indexes", "ColumnName" -> "data_id"],
           "prod_id" -> 
          Association["ColumnPrefix" -> "indexes", "ColumnName" -> "prod_id"],
           "work_id" -> 
          Association["ColumnPrefix" -> "indexes", "ColumnName" -> "work_id"],
           "tovar_id" -> 
          Association[
           "ColumnPrefix" -> "indexes", "ColumnName" -> "tovar_id"]]], 
      "dataintro" -> 
      Association[
       "EntityTypeExtractor" -> "dataintro", 
        "CanonicalNameProperties" -> {"id_d"}, "Properties" -> 
        Association[
         "id_d" -> Association[
           "ColumnPrefix" -> "dataintro", "ColumnName" -> "id_d"], "count" -> 
          Association["ColumnPrefix" -> "dataintro", "ColumnName" -> "count"],
           "datareg" -> 
          Association[
           "ColumnPrefix" -> "dataintro", "ColumnName" -> "datareg"]]], 
      "tovar" -> Association[
       "EntityTypeExtractor" -> "tovar", 
        "CanonicalNameProperties" -> {"id_t"}, "Properties" -> 
        Association[
         "id_t" -> Association[
           "ColumnPrefix" -> "tovar", "ColumnName" -> "id_t"], "name" -> 
          Association["ColumnPrefix" -> "tovar", "ColumnName" -> "name"], 
          "kod" -> Association[
           "ColumnPrefix" -> "tovar", "ColumnName" -> "kod"]]], "prokatinfo" -> 
      Association[
       "EntityTypeExtractor" -> "prokatinfo", 
        "CanonicalNameProperties" -> {"id_pr"}, "Properties" -> 
        Association[
         "id_pr" -> Association[
           "ColumnPrefix" -> "prokatinfo", "ColumnName" -> "id_pr"], "name" -> 
          Association["ColumnPrefix" -> "prokatinfo", "ColumnName" -> "name"],
           "kod" -> Association[
           "ColumnPrefix" -> "prokatinfo", "ColumnName" -> "kod"], "count" -> 
          Association[
           "ColumnPrefix" -> "prokatinfo", "ColumnName" -> "count"], 
          "starttime" -> 
          Association[
           "ColumnPrefix" -> "prokatinfo", "ColumnName" -> "starttime"], 
          "endtime" -> 
          Association[
           "ColumnPrefix" -> "prokatinfo", "ColumnName" -> "endtime"], 
          "datareg" -> 
          Association[
           "ColumnPrefix" -> "prokatinfo", "ColumnName" -> "datareg"], 
          "fnameprod" -> 
          Association[
           "ColumnPrefix" -> "prokatinfo", "ColumnName" -> "fnameprod"], 
          "lnameprod" -> 
          Association[
           "ColumnPrefix" -> "prokatinfo", "ColumnName" -> "lnameprod"]]], 
      "worktime" -> 
      Association[
       "EntityTypeExtractor" -> "worktime", 
        "CanonicalNameProperties" -> {"id_w"}, "Properties" -> 
        Association[
         "id_w" -> Association[
           "ColumnPrefix" -> "worktime", "ColumnName" -> "id_w"], "starttime" -> 
          Association[
           "ColumnPrefix" -> "worktime", "ColumnName" -> "starttime"], 
          "endtime" -> 
          Association[
           "ColumnPrefix" -> "worktime", "ColumnName" -> "endtime"]]], 
      "prodavec" -> 
      Association[
       "EntityTypeExtractor" -> "prodavec", 
        "CanonicalNameProperties" -> {"id_p"}, "Properties" -> 
        Association[
         "id_p" -> Association[
           "ColumnPrefix" -> "prodavec", "ColumnName" -> "id_p"], "fnameprod" -> 
          Association[
           "ColumnPrefix" -> "prodavec", "ColumnName" -> "fnameprod"], 
          "lnameprod" -> 
          Association[
           "ColumnPrefix" -> "prodavec", "ColumnName" -> "lnameprod"]]]]], 
   RelationalDatabase[
    Association[
    "Tables" -> Association[
      "indexes" -> 
       Association[
        "PrimaryKey" -> 
         Association["ConstraintName" -> None, "Columns" -> {"id"}], 
         "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
         "Columns" -> 
         Association[
          "id" -> Association[
            "Nullable" -> False, "BackendType" -> "Integer", 
             "NativeTypeString" -> "INTEGER(11)"], "data_id" -> 
           Association[
            "Nullable" -> True, "BackendType" -> "Integer", 
             "NativeTypeString" -> "INTEGER(20)"], "prod_id" -> 
           Association[
            "Nullable" -> True, "BackendType" -> "Integer", 
             "NativeTypeString" -> "INTEGER(20)"], "work_id" -> 
           Association[
            "Nullable" -> True, "BackendType" -> "Integer", 
             "NativeTypeString" -> "INTEGER(20)"], "tovar_id" -> 
           Association[
            "Nullable" -> True, "BackendType" -> "Integer", 
             "NativeTypeString" -> "INTEGER(20)"]], "Schema" -> None], 
       "dataintro" -> 
       Association[
        "PrimaryKey" -> 
         Association["ConstraintName" -> None, "Columns" -> {"id_d"}], 
         "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
         "Columns" -> 
         Association[
          "id_d" -> Association[
            "Nullable" -> False, "BackendType" -> "Integer", 
             "NativeTypeString" -> "INTEGER(11)"], "count" -> 
           Association[
            "Nullable" -> True, "BackendType" -> "Real", "NativeTypeString" -> 
             "DOUBLE"], "datareg" -> 
           Association[
            "Nullable" -> True, 
             "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
             "NativeTypeString" -> 
             "VARCHAR(255) COLLATE utf8mb4_unicode_ci"]], "Schema" -> None], 
       "tovar" -> Association[
        "PrimaryKey" -> 
         Association["ConstraintName" -> None, "Columns" -> {"id_t"}], 
         "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
         "Columns" -> 
         Association[
          "id_t" -> Association[
            "Nullable" -> False, "BackendType" -> "Integer", 
             "NativeTypeString" -> "INTEGER(11)"], "name" -> 
           Association[
            "Nullable" -> True, 
             "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
             "NativeTypeString" -> "VARCHAR(255) COLLATE utf8mb4_unicode_ci"],
            "kod" -> Association[
            "Nullable" -> True, "BackendType" -> "Integer", 
             "NativeTypeString" -> "INTEGER(11)"]], "Schema" -> None], 
       "prokatinfo" -> 
       Association[
        "PrimaryKey" -> 
         Association["ConstraintName" -> None, "Columns" -> {"id_pr"}], 
         "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
         "Columns" -> 
         Association[
          "id_pr" -> Association[
            "Nullable" -> False, "BackendType" -> "Integer", 
             "NativeTypeString" -> "INTEGER(11)"], "name" -> 
           Association[
            "Nullable" -> True, 
             "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
             "NativeTypeString" -> "VARCHAR(255) COLLATE utf8mb4_unicode_ci"],
            "kod" -> Association[
            "Nullable" -> True, "BackendType" -> "Integer", 
             "NativeTypeString" -> "INTEGER(20)"], "count" -> 
           Association[
            "Nullable" -> True, "BackendType" -> "Real", "NativeTypeString" -> 
             "DOUBLE"], "starttime" -> 
           Association[
            "Nullable" -> True, 
             "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
             "NativeTypeString" -> "VARCHAR(255) COLLATE utf8mb4_unicode_ci"],
            "endtime" -> 
           Association[
            "Nullable" -> True, 
             "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
             "NativeTypeString" -> "VARCHAR(255) COLLATE utf8mb4_unicode_ci"],
            "datareg" -> 
           Association[
            "Nullable" -> True, 
             "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
             "NativeTypeString" -> "VARCHAR(255) COLLATE utf8mb4_unicode_ci"],
            "fnameprod" -> 
           Association[
            "Nullable" -> True, 
             "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
             "NativeTypeString" -> "VARCHAR(255) COLLATE utf8mb4_unicode_ci"],
            "lnameprod" -> 
           Association[
            "Nullable" -> True, 
             "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
             "NativeTypeString" -> 
             "VARCHAR(255) COLLATE utf8mb4_unicode_ci"]], "Schema" -> None], 
       "worktime" -> 
       Association[
        "PrimaryKey" -> 
         Association["ConstraintName" -> None, "Columns" -> {"id_w"}], 
         "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
         "Columns" -> 
         Association[
          "id_w" -> Association[
            "Nullable" -> False, "BackendType" -> "Integer", 
             "NativeTypeString" -> "INTEGER(11)"], "starttime" -> 
           Association[
            "Nullable" -> True, 
             "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
             "NativeTypeString" -> "VARCHAR(255) COLLATE utf8mb4_unicode_ci"],
            "endtime" -> 
           Association[
            "Nullable" -> True, 
             "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
             "NativeTypeString" -> 
             "VARCHAR(255) COLLATE utf8mb4_unicode_ci"]], "Schema" -> None], 
       "prodavec" -> 
       Association[
        "PrimaryKey" -> 
         Association["ConstraintName" -> None, "Columns" -> {"id_p"}], 
         "ForeignKeys" -> {}, "UniquenessConstraints" -> {}, "Indexes" -> {}, 
         "Columns" -> 
         Association[
          "id_p" -> Association[
            "Nullable" -> False, "BackendType" -> "Integer", 
             "NativeTypeString" -> "INTEGER(11)"], "fnameprod" -> 
           Association[
            "Nullable" -> True, 
             "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
             "NativeTypeString" -> "VARCHAR(255) COLLATE utf8mb4_unicode_ci"],
            "lnameprod" -> 
           Association[
            "Nullable" -> True, 
             "BackendType" -> {"String", 255, "utf8mb4_unicode_ci"}, 
             "NativeTypeString" -> 
             "VARCHAR(255) COLLATE utf8mb4_unicode_ci"]], "Schema" -> None]], 
     "ID" -> "1pcgsvgchrs8c"], 
    DatabaseReference[
     Association[
     "Backend" -> "mysql", "Username" -> "root", "Password" -> "root", "Host" -> 
      "localhost", "Port" -> 3306, "Name" -> "prokattovara", "Options" -> 
      Association[]]]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.876463556649583*^9, {3.876463600504859*^9, 3.876463608356377*^9}, 
   3.8767438662378345`*^9, 3.8767569512174597`*^9, 3.8767573462139783`*^9, 
   3.876757394767807*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"034e2a82-9f6e-424c-b468-6e3a00b23a8c"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
7) \:041f\:0440\:0438 \:044d\:0442\:043e\:043c \:0440\:0435\:0433\:0438\:0441\
\:0442\:0440\:0438\:0440\:0443\:0435\:0442\:0441\:044f \:0432 EntityStore, \
\:0442\:043e \:0435\:0441\:0442\:044c \:043f\:043e\:043b\:0443\:0447\:0430\
\:0435\:043c \:0441\:043f\:0438\:0441\:043e\:043a \:0442\:0430\:0431\:043b\
\:0438\:0446 \:0411\:0414\
\>", "Subsubsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.876756617892394*^9, 3.8767566183260326`*^9}, {
   3.876756757513997*^9, 3.8767567581059427`*^9}, {3.876756810396055*^9, 
   3.876756810802333*^9}, 3.8767573826447296`*^9, {3.8767577157661734`*^9, 
   3.8767577165212073`*^9}},ExpressionUUID->"63fc6abb-991c-4cfc-bacb-\
c8f54cf3b63c"],

Cell[BoxData[
 RowBox[{"EntityRegister", "[", "es", "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.8763771140614524`*^9, 3.8763771214385366`*^9}, {
  3.876377413063878*^9, 3.876377427573613*^9}, {3.87637779385357*^9, 
  3.876377831738556*^9}, {3.8767567531856737`*^9, 3.876756755148363*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"6da47c4f-de79-400b-aa30-3c37ceff54cc"],

Cell[BoxData[
 TemplateBox[{
  "EntityRegister", "shadow", 
   "\"Types \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"\\\\\\\"indexes\\\\\\\"\\\
\", \\\",\\\", \\\"\\\\\\\"dataintro\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"tovar\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"prokatinfo\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"worktime\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"prodavec\\\\\\\"\\\"}], \\\"}\\\"}]\\) in \
\\!\\(\\*InterpretationBox[RowBox[{TagBox[\\\"EntityStore\\\", \
\\\"SummaryHead\\\"], \\\"[\\\", DynamicModuleBox[{Typeset`open$$ = False, \
Set[Typeset`embedState$$, \\\"Ready\\\"]}, \
TemplateBox[List[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource[\\\"\
FEBitmaps\\\", \\\"SummaryBoxOpener\\\"]], RuleDelayed[ButtonFunction, \
Set[Typeset`open$$, True]], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[Evaluator, Automatic], Rule[Method, \\\"Preemptive\\\"]], \
Rule[Alignment, List[Center, Center]], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, \
Times[CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]]], \
GraphicsBox[List[Thickness[0.04`], List[FaceForm[List[RGBColor[0.984`, \
0.969`, 0.91`], Opacity[1.`]]], FilledCurveBox[List[List[List[0, 2, 0], \
List[1, 3, 3], List[0, 1, 0], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3], \
List[0, 1, 0], List[1, 3, 3]]], List[List[List[17.`, 10.`], List[6.`, 10.`], \
List[4.343`, 10.`], List[3.`, 11.343`], List[3.`, 13.`], List[3.`, 20.`], \
List[3.`, 21.657`], List[4.343`, 23.`], List[6.`, 23.`], List[17.`, 23.`], \
List[18.657`, 23.`], List[20.`, 21.657`], List[20.`, 20.`], List[20.`, 13.`], \
List[20.`, 11.343`], List[18.657`, 10.`], List[17.`, 10.`]]]]], \
List[FaceForm[List[RGBColor[0.996`, 0.506`, 0.004`], Opacity[1.`]]], \
FilledCurveBox[List[List[List[1, 4, 3], List[0, 1, 0], List[1, 3, 3], List[0, \
1, 0], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3]], List[List[0, 2, 0], \
List[1, 3, 3], List[0, 1, 0], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3], \
List[0, 1, 0], List[1, 3, 3]]], List[List[List[6.`, 22.5`], List[4.622`, \
22.5`], List[3.5`, 21.379`], List[3.5`, 20.`], List[3.5`, 13.`], List[3.5`, \
11.620999999999999`], List[4.622`, 10.5`], List[6.`, 10.5`], List[17.`, \
10.5`], List[18.379`, 10.5`], List[19.5`, 11.620999999999999`], List[19.5`, \
13.`], List[19.5`, 20.`], List[19.5`, 21.379`], List[18.379`, 22.5`], \
List[17.`, 22.5`]], List[List[17.`, 9.5`], List[6.`, 9.5`], List[4.07`, \
9.5`], List[2.5`, 11.07`], List[2.5`, 13.`], List[2.5`, 20.`], List[2.5`, \
21.93`], List[4.07`, 23.5`], List[6.`, 23.5`], List[17.`, 23.5`], \
List[18.93`, 23.5`], List[20.5`, 21.93`], List[20.5`, 20.`], List[20.5`, \
13.`], List[20.5`, 11.07`], List[18.93`, 9.5`], List[17.`, 9.5`]]]]], \
List[FaceForm[List[RGBColor[0.012`, 0.612`, 0.996`], Opacity[1.`]]], \
FilledCurveBox[List[List[List[0, 2, 0], List[0, 1, 0], List[0, 1, 0]], \
List[List[0, 2, 0], List[0, 1, 0], List[0, 1, 0]]], List[List[List[12.5`, \
12.5`], List[14.5`, 12.5`], List[14.5`, 14.5`], List[12.5`, 14.5`]], \
List[List[8.5`, 14.5`], List[10.5`, 14.5`], List[10.5`, 12.5`], List[8.5`, \
12.5`]]]]], List[FaceForm[List[RGBColor[0.537`, 0.537`, 0.537`], \
Opacity[1.`]]], FilledCurveBox[List[List[List[0, 2, 0], List[0, 1, 0], \
List[0, 1, 0]], List[List[0, 2, 0], List[0, 1, 0], List[0, 1, 0]], \
List[List[0, 2, 0], List[0, 1, 0], List[0, 1, 0]], List[List[0, 2, 0], \
List[0, 1, 0], List[0, 1, 0]], List[List[0, 2, 0], List[0, 1, 0], List[0, 1, \
0]], List[List[0, 2, 0], List[0, 1, 0], List[0, 1, 0]], List[List[0, 2, 0], \
List[0, 1, 0], List[0, 1, 0]]], List[List[List[14.5`, 15.5`], List[16.5`, \
15.5`], List[16.5`, 17.5`], List[14.5`, 17.5`]], List[List[14.5`, 20.5`], \
List[12.5`, 20.5`], List[12.5`, 18.5`], List[14.5`, 18.5`]], List[List[16.5`, \
18.5`], List[18.5`, 18.5`], List[18.5`, 20.5`], List[16.5`, 20.5`]], \
List[List[6.5`, 20.5`], List[4.5`, 20.5`], List[4.5`, 18.5`], List[6.5`, \
18.5`]], List[List[10.5`, 15.5`], List[12.5`, 15.5`], List[12.5`, 17.5`], \
List[10.5`, 17.5`]], List[List[6.5`, 15.5`], List[8.5`, 15.5`], List[8.5`, \
17.5`], List[6.5`, 17.5`]], List[List[10.5`, 18.5`], List[8.5`, 18.5`], \
List[8.5`, 20.5`], List[10.5`, 20.5`]]]]], List[FaceForm[List[RGBColor[1.`, \
1.`, 1.`], Opacity[1.`]]], FilledCurveBox[List[List[List[1, 4, 3], List[0, 1, \
0], List[1, 3, 3], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3]]], \
List[List[List[18.`, 12.`], List[15.791`, 12.`], List[14.`, 11.104`], \
List[14.`, 10.`], List[14.`, 4.`], List[14.`, 2.896000000000001`], \
List[15.791`, 2.`], List[18.`, 2.`], List[20.209`, 2.`], List[22.`, \
2.896000000000001`], List[22.`, 4.`], List[22.`, 10.`], List[22.`, 11.104`], \
List[20.209`, 12.`], List[18.`, 12.`]]]]], \
List[FaceForm[List[RGBColor[0.537`, 0.537`, 0.537`], Opacity[1.`]]], \
FilledCurveBox[List[List[List[1, 4, 3], List[0, 1, 0], List[1, 3, 3], List[1, \
3, 3], List[0, 1, 0], List[1, 3, 3]], List[List[1, 4, 3], List[1, 3, 3], \
List[0, 1, 0], List[1, 3, 3], List[1, 3, 3]], List[List[1, 4, 3], List[1, 3, \
3], List[1, 3, 3], List[1, 3, 3]], List[List[1, 4, 3], List[0, 1, 0], List[1, \
3, 3], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3]]], List[List[List[18.`, \
5.5`], List[15.997`, 5.5`], List[14.5`, 6.292`], List[14.5`, 7.`], \
List[14.5`, 8.411`], List[15.312`, 7.853`], List[16.547`, 7.5`], List[18.`, \
7.5`], List[19.453`, 7.5`], List[20.688`, 7.853`], List[21.5`, 8.411`], \
List[21.5`, 7.`], List[21.5`, 6.292`], List[20.003`, 5.5`], List[18.`, \
5.5`]], List[List[21.5`, 4.`], List[21.5`, 3.292`], List[20.003`, 2.5`], \
List[18.`, 2.5`], List[15.997`, 2.5`], List[14.5`, 3.292`], List[14.5`, 4.`], \
List[14.5`, 5.411`], List[15.312`, 4.853`], List[16.547`, 4.5`], List[18.`, \
4.5`], List[19.453`, 4.5`], List[20.688`, 4.853`], List[21.5`, 5.411`]], \
List[List[18.`, 11.5`], List[20.003`, 11.5`], List[21.5`, 10.708`], \
List[21.5`, 10.`], List[21.5`, 9.292`], List[20.003`, 8.5`], List[18.`, \
8.5`], List[15.997`, 8.5`], List[14.5`, 9.292`], List[14.5`, 10.`], \
List[14.5`, 10.708`], List[15.997`, 11.5`], List[18.`, 11.5`]], \
List[List[18.`, 12.5`], List[15.435`, 12.5`], List[13.5`, 11.425`], \
List[13.5`, 10.`], List[13.5`, 4.`], List[13.5`, 2.575`], List[15.435`, \
1.5`], List[18.`, 1.5`], List[20.565`, 1.5`], List[22.5`, 2.575`], \
List[22.5`, 4.`], List[22.5`, 10.`], List[22.5`, 11.425`], List[20.565`, \
12.5`], List[18.`, 12.5`]]]]]], Rule[AspectRatio, Automatic], Rule[ImageSize, \
List[25.`, 25.`]], Rule[PlotRange, List[List[0.`, 25.`], List[0.`, 25.`]]]], \
GridBox[List[List[RowBox[List[TagBox[\\\"\\\\\\\"Type count: \\\\\\\"\\\", \\\
\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"6\\\", \
\\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"RelationalDatabase: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"MySQL\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"MySQL\\\\\\\"\\\"], List[\
\\\"\\\", PaneBox[InterpretationBox[RowBox[List[TagBox[\\\"RelationalDatabase\
\\\", \\\"SummaryHead\\\"], \\\"[\\\", \
DynamicModuleBox[List[Set[Typeset`open$$, False], Set[Typeset`embedState$$, \
\\\"Ready\\\"]], TemplateBox[List[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource[\\\"\
FEBitmaps\\\", \\\"SummaryBoxOpener\\\"]], RuleDelayed[ButtonFunction, \
Set[Typeset`open$$, True]], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[Evaluator, Automatic], Rule[Method, \\\"Preemptive\\\"]], \
Rule[Alignment, List[Center, Center]], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, \
Times[CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]]], \
GraphicsBox[List[Thickness[0.04`], List[FaceForm[List[RGBColor[0.651`, \
0.651`, 0.651`], Opacity[1.`]]], FilledCurveBox[List[List[List[1, 4, 3], \
List[0, 1, 0], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3], List[0, 1, 0], \
List[1, 3, 3]], List[List[0, 2, 0], List[1, 3, 3], List[0, 1, 0], List[1, 3, \
3], List[0, 1, 0], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3]]], \
List[List[List[20.5`, 4.`], List[20.5`, 3.724`], List[20.276`, 3.5`], \
List[20.`, 3.5`], List[6.`, 3.5`], List[5.724`, 3.5`], List[5.5`, 3.724`], \
List[5.5`, 4.`], List[5.5`, 21.`], List[5.5`, 21.276`], List[5.724`, 21.5`], \
List[6.`, 21.5`], List[20.`, 21.5`], List[20.276`, 21.5`], List[20.5`, \
21.276`], List[20.5`, 21.`]], List[List[20.5`, 22.5`], List[5.5`, 22.5`], \
List[4.947999999999999`, 22.5`], List[4.5`, 22.053`], List[4.5`, 21.5`], \
List[4.5`, 3.5`], List[4.5`, 2.947`], List[4.947999999999999`, 2.5`], \
List[5.5`, 2.5`], List[20.5`, 2.5`], List[21.052`, 2.5`], List[21.5`, \
2.947`], List[21.5`, 3.5`], List[21.5`, 21.5`], List[21.5`, 22.053`], \
List[21.052`, 22.5`], List[20.5`, 22.5`]]]]], \
List[FaceForm[List[RGBColor[0.8670000000000001`, 0.067`, 0.`], \
Opacity[1.`]]], FilledCurveBox[List[List[List[0, 2, 0], List[1, 3, 3], \
List[1, 3, 3], List[0, 1, 0], List[1, 3, 3], List[1, 3, 3]], List[List[0, 2, \
0], List[1, 3, 3], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3], List[1, 3, \
3]], List[List[0, 2, 0], List[1, 3, 3], List[1, 3, 3], List[0, 1, 0], List[1, \
3, 3], List[1, 3, 3]], List[List[0, 2, 0], List[1, 3, 3], List[1, 3, 3], \
List[0, 1, 0], List[1, 3, 3], List[1, 3, 3]], List[List[0, 2, 0], List[1, 3, \
3], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3], List[1, 3, 3]], List[List[0, \
2, 0], List[1, 3, 3], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3], List[1, 3, \
3]], List[List[0, 2, 0], List[1, 3, 3], List[1, 3, 3], List[0, 1, 0], List[1, \
3, 3], List[1, 3, 3]], List[List[0, 2, 0], List[1, 3, 3], List[1, 3, 3], \
List[0, 1, 0], List[1, 3, 3], List[1, 3, 3]], List[List[1, 4, 3], List[0, 1, \
0], List[1, 3, 3], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3]]], \
List[List[List[7.`, 21.5`], List[4.`, 21.5`], List[3.724`, 21.5`], List[3.5`, \
21.276`], List[3.5`, 21.`], List[3.5`, 20.724`], List[3.724`, 20.5`], \
List[4.`, 20.5`], List[7.`, 20.5`], List[7.276`, 20.5`], List[7.5`, 20.724`], \
List[7.5`, 21.`], List[7.5`, 21.276`], List[7.276`, 21.5`], List[7.`, \
21.5`]], List[List[7.`, 19.5`], List[4.`, 19.5`], List[3.724`, 19.5`], \
List[3.5`, 19.276`], List[3.5`, 19.`], List[3.5`, 18.724`], List[3.724`, \
18.5`], List[4.`, 18.5`], List[7.`, 18.5`], List[7.276`, 18.5`], List[7.5`, \
18.724`], List[7.5`, 19.`], List[7.5`, 19.276`], List[7.276`, 19.5`], \
List[7.`, 19.5`]], List[List[7.`, 17.5`], List[4.`, 17.5`], List[3.724`, \
17.5`], List[3.5`, 17.276`], List[3.5`, 17.`], List[3.5`, 16.724`], \
List[3.724`, 16.5`], List[4.`, 16.5`], List[7.`, 16.5`], List[7.276`, 16.5`], \
List[7.5`, 16.724`], List[7.5`, 17.`], List[7.5`, 17.276`], List[7.276`, \
17.5`], List[7.`, 17.5`]], List[List[7.`, 9.5`], List[4.`, 9.5`], \
List[3.724`, 9.5`], List[3.5`, 9.276000000000002`], List[3.5`, 9.`], \
List[3.5`, 8.724`], List[3.724`, 8.5`], List[4.`, 8.5`], List[7.`, 8.5`], \
List[7.276`, 8.5`], List[7.5`, 8.724`], List[7.5`, 9.`], List[7.5`, \
9.276000000000002`], List[7.276`, 9.5`], List[7.`, 9.5`]], List[List[7.`, \
11.5`], List[4.`, 11.5`], List[3.724`, 11.5`], List[3.5`, \
11.276000000000002`], List[3.5`, 11.`], List[3.5`, 10.724`], List[3.724`, \
10.5`], List[4.`, 10.5`], List[7.`, 10.5`], List[7.276`, 10.5`], List[7.5`, \
10.724`], List[7.5`, 11.`], List[7.5`, 11.276000000000002`], List[7.276`, \
11.5`], List[7.`, 11.5`]], List[List[7.`, 13.5`], List[4.`, 13.5`], \
List[3.724`, 13.5`], List[3.5`, 13.276000000000002`], List[3.5`, 13.`], \
List[3.5`, 12.724`], List[3.724`, 12.5`], List[4.`, 12.5`], List[7.`, 12.5`], \
List[7.276`, 12.5`], List[7.5`, 12.724`], List[7.5`, 13.`], List[7.5`, \
13.276000000000002`], List[7.276`, 13.5`], List[7.`, 13.5`]], List[List[7.`, \
15.5`], List[4.`, 15.5`], List[3.724`, 15.5`], List[3.5`, 15.276`], \
List[3.5`, 15.`], List[3.5`, 14.724`], List[3.724`, 14.5`], List[4.`, 14.5`], \
List[7.`, 14.5`], List[7.276`, 14.5`], List[7.5`, 14.724`], List[7.5`, 15.`], \
List[7.5`, 15.276`], List[7.276`, 15.5`], List[7.`, 15.5`]], List[List[7.`, \
5.5`], List[4.`, 5.5`], List[3.724`, 5.5`], List[3.5`, 5.276`], List[3.5`, \
5.`], List[3.5`, 4.724`], List[3.724`, 4.5`], List[4.`, 4.5`], List[7.`, \
4.5`], List[7.276`, 4.5`], List[7.5`, 4.724`], List[7.5`, 5.`], List[7.5`, \
5.276`], List[7.276`, 5.5`], List[7.`, 5.5`]], List[List[7.5`, 7.`], \
List[7.5`, 6.724`], List[7.276`, 6.5`], List[7.`, 6.5`], List[4.`, 6.5`], \
List[3.724`, 6.5`], List[3.5`, 6.724`], List[3.5`, 7.`], List[3.5`, \
7.276000000000002`], List[3.724`, 7.5`], List[4.`, 7.5`], List[7.`, 7.5`], \
List[7.276`, 7.5`], List[7.5`, 7.276000000000002`], List[7.5`, 7.`]]]]], \
List[FaceForm[List[RGBColor[1.`, 1.`, 1.`], Opacity[1.`]]], \
FilledCurveBox[List[List[List[1, 4, 3], List[0, 1, 0], List[1, 3, 3], List[0, \
1, 0], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3]]], List[List[List[20.5`, \
4.`], List[20.5`, 3.724`], List[20.276`, 3.5`], List[20.`, 3.5`], List[6.`, \
3.5`], List[5.724`, 3.5`], List[5.5`, 3.724`], List[5.5`, 4.`], List[5.5`, \
21.`], List[5.5`, 21.276`], List[5.724`, 21.5`], List[6.`, 21.5`], List[20.`, \
21.5`], List[20.276`, 21.5`], List[20.5`, 21.276`], List[20.5`, 21.`]]]], \
FilledCurveBox[List[List[List[1, 4, 3], List[0, 1, 0], List[1, 3, 3], List[1, \
3, 3], List[0, 1, 0], List[1, 3, 3]]], List[List[List[13.`, 18.`], \
List[10.239`, 18.`], List[8.`, 17.015`], List[8.`, 15.8`], List[8.`, 9.2`], \
List[8.`, 7.984999999999999`], List[10.239`, 7.`], List[13.`, 7.`], \
List[15.761`, 7.`], List[18.`, 7.984999999999999`], List[18.`, 9.2`], \
List[18.`, 15.8`], List[18.`, 17.015`], List[15.761`, 18.`], List[13.`, \
18.`]]]]], List[FaceForm[List[RGBColor[0.537`, 0.537`, 0.537`], \
Opacity[1.`]]], FilledCurveBox[List[List[List[1, 4, 3], List[0, 1, 0], \
List[1, 3, 3], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3]], List[List[1, 4, \
3], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3], List[1, 3, 3]], List[List[1, \
4, 3], List[1, 3, 3], List[1, 3, 3], List[1, 3, 3]], List[List[1, 4, 3], \
List[0, 1, 0], List[1, 3, 3], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3]]], \
List[List[List[13.`, 10.8633`], List[10.314`, 10.8633`], List[8.6`, \
11.833300000000001`], List[8.6`, 12.500300000000001`], List[8.6`, 14.1133`], \
List[9.586`, 13.4603`], List[11.151`, 13.0463`], List[13.`, 13.0463`], \
List[14.849`, 13.0463`], List[16.414`, 13.4603`], List[17.4`, 14.1133`], \
List[17.4`, 12.500300000000001`], List[17.4`, 11.833300000000001`], \
List[15.686`, 10.8633`], List[13.`, 10.8633`]], List[List[17.4`, 9.2273`], \
List[17.4`, 8.560300000000002`], List[15.686`, 7.5913`], List[13.`, 7.5913`], \
List[10.314`, 7.5913`], List[8.6`, 8.560300000000002`], List[8.6`, 9.2273`], \
List[8.6`, 10.8413`], List[9.586`, 10.1873`], List[11.151`, \
9.772300000000001`], List[13.`, 9.772300000000001`], List[14.849`, \
9.772300000000001`], List[16.414`, 10.1873`], List[17.4`, 10.8413`]], \
List[List[13.`, 17.4093`], List[15.686`, 17.4093`], List[17.4`, \
16.439300000000003`], List[17.4`, 15.772300000000001`], List[17.4`, \
15.1053`], List[15.686`, 14.1363`], List[13.`, 14.1363`], List[10.314`, \
14.1363`], List[8.6`, 15.1053`], List[8.6`, 15.772300000000001`], List[8.6`, \
16.439300000000003`], List[10.314`, 17.4093`], List[13.`, 17.4093`]], \
List[List[13.`, 18.5003`], List[9.864`, 18.5003`], List[7.5`, 17.3273`], \
List[7.5`, 15.772300000000001`], List[7.5`, 9.2273`], List[7.5`, \
7.673300000000001`], List[9.864`, 6.500300000000001`], List[13.`, \
6.500300000000001`], List[16.136`, 6.500300000000001`], List[18.5`, \
7.673300000000001`], List[18.5`, 9.2273`], List[18.5`, 15.772300000000001`], \
List[18.5`, 17.3273`], List[16.136`, 18.5003`], List[13.`, 18.5003`]]]]]], \
Rule[AspectRatio, Automatic], Rule[ImageSize, List[25.`, 25.`]], \
Rule[PlotRange, List[List[0.`, 25.`], List[0.`, 25.`]]]], \
GridBox[List[List[RowBox[List[TagBox[\\\"\\\\\\\"Table count: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[\\\"6\\\", \\\"SummaryItem\\\"]]]], List[RowBox[List[TagBox[\\\"\\\\\\\
\"Backend: \\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \
\\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"\\\\\\\"MySQL\\\\\\\"\\\", \
\\\"SummaryItem\\\"]]]]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[2]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaseStyle, \
List[Rule[ShowStringCharacters, False], Rule[NumberMarks, False], \
Rule[PrintPrecision, 3], Rule[ShowSyntaxStyles, False]]]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]], \
Rule[\\\"Rows\\\", List[List[Top]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaselinePosition, List[1, \
1]]]], Rule[True, \
GridBox[List[List[PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource[\\\"\
FEBitmaps\\\", \\\"SummaryBoxCloser\\\"]], RuleDelayed[ButtonFunction, \
Set[Typeset`open$$, False]], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[Evaluator, Automatic], Rule[Method, \\\"Preemptive\\\"]], \
Rule[Alignment, List[Center, Center]], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, \
Times[CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]]], \
GraphicsBox[List[Thickness[0.04`], List[FaceForm[List[RGBColor[0.651`, \
0.651`, 0.651`], Opacity[1.`]]], FilledCurveBox[List[List[List[1, 4, 3], \
List[0, 1, 0], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3], List[0, 1, 0], \
List[1, 3, 3]], List[List[0, 2, 0], List[1, 3, 3], List[0, 1, 0], List[1, 3, \
3], List[0, 1, 0], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3]]], \
List[List[List[20.5`, 4.`], List[20.5`, 3.724`], List[20.276`, 3.5`], \
List[20.`, 3.5`], List[6.`, 3.5`], List[5.724`, 3.5`], List[5.5`, 3.724`], \
List[5.5`, 4.`], List[5.5`, 21.`], List[5.5`, 21.276`], List[5.724`, 21.5`], \
List[6.`, 21.5`], List[20.`, 21.5`], List[20.276`, 21.5`], List[20.5`, \
21.276`], List[20.5`, 21.`]], List[List[20.5`, 22.5`], List[5.5`, 22.5`], \
List[4.947999999999999`, 22.5`], List[4.5`, 22.053`], List[4.5`, 21.5`], \
List[4.5`, 3.5`], List[4.5`, 2.947`], List[4.947999999999999`, 2.5`], \
List[5.5`, 2.5`], List[20.5`, 2.5`], List[21.052`, 2.5`], List[21.5`, \
2.947`], List[21.5`, 3.5`], List[21.5`, 21.5`], List[21.5`, 22.053`], \
List[21.052`, 22.5`], List[20.5`, 22.5`]]]]], \
List[FaceForm[List[RGBColor[0.8670000000000001`, 0.067`, 0.`], \
Opacity[1.`]]], FilledCurveBox[List[List[List[0, 2, 0], List[1, 3, 3], \
List[1, 3, 3], List[0, 1, 0], List[1, 3, 3], List[1, 3, 3]], List[List[0, 2, \
0], List[1, 3, 3], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3], List[1, 3, \
3]], List[List[0, 2, 0], List[1, 3, 3], List[1, 3, 3], List[0, 1, 0], List[1, \
3, 3], List[1, 3, 3]], List[List[0, 2, 0], List[1, 3, 3], List[1, 3, 3], \
List[0, 1, 0], List[1, 3, 3], List[1, 3, 3]], List[List[0, 2, 0], List[1, 3, \
3], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3], List[1, 3, 3]], List[List[0, \
2, 0], List[1, 3, 3], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3], List[1, 3, \
3]], List[List[0, 2, 0], List[1, 3, 3], List[1, 3, 3], List[0, 1, 0], List[1, \
3, 3], List[1, 3, 3]], List[List[0, 2, 0], List[1, 3, 3], List[1, 3, 3], \
List[0, 1, 0], List[1, 3, 3], List[1, 3, 3]], List[List[1, 4, 3], List[0, 1, \
0], List[1, 3, 3], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3]]], \
List[List[List[7.`, 21.5`], List[4.`, 21.5`], List[3.724`, 21.5`], List[3.5`, \
21.276`], List[3.5`, 21.`], List[3.5`, 20.724`], List[3.724`, 20.5`], \
List[4.`, 20.5`], List[7.`, 20.5`], List[7.276`, 20.5`], List[7.5`, 20.724`], \
List[7.5`, 21.`], List[7.5`, 21.276`], List[7.276`, 21.5`], List[7.`, \
21.5`]], List[List[7.`, 19.5`], List[4.`, 19.5`], List[3.724`, 19.5`], \
List[3.5`, 19.276`], List[3.5`, 19.`], List[3.5`, 18.724`], List[3.724`, \
18.5`], List[4.`, 18.5`], List[7.`, 18.5`], List[7.276`, 18.5`], List[7.5`, \
18.724`], List[7.5`, 19.`], List[7.5`, 19.276`], List[7.276`, 19.5`], \
List[7.`, 19.5`]], List[List[7.`, 17.5`], List[4.`, 17.5`], List[3.724`, \
17.5`], List[3.5`, 17.276`], List[3.5`, 17.`], List[3.5`, 16.724`], \
List[3.724`, 16.5`], List[4.`, 16.5`], List[7.`, 16.5`], List[7.276`, 16.5`], \
List[7.5`, 16.724`], List[7.5`, 17.`], List[7.5`, 17.276`], List[7.276`, \
17.5`], List[7.`, 17.5`]], List[List[7.`, 9.5`], List[4.`, 9.5`], \
List[3.724`, 9.5`], List[3.5`, 9.276000000000002`], List[3.5`, 9.`], \
List[3.5`, 8.724`], List[3.724`, 8.5`], List[4.`, 8.5`], List[7.`, 8.5`], \
List[7.276`, 8.5`], List[7.5`, 8.724`], List[7.5`, 9.`], List[7.5`, \
9.276000000000002`], List[7.276`, 9.5`], List[7.`, 9.5`]], List[List[7.`, \
11.5`], List[4.`, 11.5`], List[3.724`, 11.5`], List[3.5`, \
11.276000000000002`], List[3.5`, 11.`], List[3.5`, 10.724`], List[3.724`, \
10.5`], List[4.`, 10.5`], List[7.`, 10.5`], List[7.276`, 10.5`], List[7.5`, \
10.724`], List[7.5`, 11.`], List[7.5`, 11.276000000000002`], List[7.276`, \
11.5`], List[7.`, 11.5`]], List[List[7.`, 13.5`], List[4.`, 13.5`], \
List[3.724`, 13.5`], List[3.5`, 13.276000000000002`], List[3.5`, 13.`], \
List[3.5`, 12.724`], List[3.724`, 12.5`], List[4.`, 12.5`], List[7.`, 12.5`], \
List[7.276`, 12.5`], List[7.5`, 12.724`], List[7.5`, 13.`], List[7.5`, \
13.276000000000002`], List[7.276`, 13.5`], List[7.`, 13.5`]], List[List[7.`, \
15.5`], List[4.`, 15.5`], List[3.724`, 15.5`], List[3.5`, 15.276`], \
List[3.5`, 15.`], List[3.5`, 14.724`], List[3.724`, 14.5`], List[4.`, 14.5`], \
List[7.`, 14.5`], List[7.276`, 14.5`], List[7.5`, 14.724`], List[7.5`, 15.`], \
List[7.5`, 15.276`], List[7.276`, 15.5`], List[7.`, 15.5`]], List[List[7.`, \
5.5`], List[4.`, 5.5`], List[3.724`, 5.5`], List[3.5`, 5.276`], List[3.5`, \
5.`], List[3.5`, 4.724`], List[3.724`, 4.5`], List[4.`, 4.5`], List[7.`, \
4.5`], List[7.276`, 4.5`], List[7.5`, 4.724`], List[7.5`, 5.`], List[7.5`, \
5.276`], List[7.276`, 5.5`], List[7.`, 5.5`]], List[List[7.5`, 7.`], \
List[7.5`, 6.724`], List[7.276`, 6.5`], List[7.`, 6.5`], List[4.`, 6.5`], \
List[3.724`, 6.5`], List[3.5`, 6.724`], List[3.5`, 7.`], List[3.5`, \
7.276000000000002`], List[3.724`, 7.5`], List[4.`, 7.5`], List[7.`, 7.5`], \
List[7.276`, 7.5`], List[7.5`, 7.276000000000002`], List[7.5`, 7.`]]]]], \
List[FaceForm[List[RGBColor[1.`, 1.`, 1.`], Opacity[1.`]]], \
FilledCurveBox[List[List[List[1, 4, 3], List[0, 1, 0], List[1, 3, 3], List[0, \
1, 0], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3]]], List[List[List[20.5`, \
4.`], List[20.5`, 3.724`], List[20.276`, 3.5`], List[20.`, 3.5`], List[6.`, \
3.5`], List[5.724`, 3.5`], List[5.5`, 3.724`], List[5.5`, 4.`], List[5.5`, \
21.`], List[5.5`, 21.276`], List[5.724`, 21.5`], List[6.`, 21.5`], List[20.`, \
21.5`], List[20.276`, 21.5`], List[20.5`, 21.276`], List[20.5`, 21.`]]]], \
FilledCurveBox[List[List[List[1, 4, 3], List[0, 1, 0], List[1, 3, 3], List[1, \
3, 3], List[0, 1, 0], List[1, 3, 3]]], List[List[List[13.`, 18.`], \
List[10.239`, 18.`], List[8.`, 17.015`], List[8.`, 15.8`], List[8.`, 9.2`], \
List[8.`, 7.984999999999999`], List[10.239`, 7.`], List[13.`, 7.`], \
List[15.761`, 7.`], List[18.`, 7.984999999999999`], List[18.`, 9.2`], \
List[18.`, 15.8`], List[18.`, 17.015`], List[15.761`, 18.`], List[13.`, \
18.`]]]]], List[FaceForm[List[RGBColor[0.537`, 0.537`, 0.537`], \
Opacity[1.`]]], FilledCurveBox[List[List[List[1, 4, 3], List[0, 1, 0], \
List[1, 3, 3], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3]], List[List[1, 4, \
3], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3], List[1, 3, 3]], List[List[1, \
4, 3], List[1, 3, 3], List[1, 3, 3], List[1, 3, 3]], List[List[1, 4, 3], \
List[0, 1, 0], List[1, 3, 3], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3]]], \
List[List[List[13.`, 10.8633`], List[10.314`, 10.8633`], List[8.6`, \
11.833300000000001`], List[8.6`, 12.500300000000001`], List[8.6`, 14.1133`], \
List[9.586`, 13.4603`], List[11.151`, 13.0463`], List[13.`, 13.0463`], \
List[14.849`, 13.0463`], List[16.414`, 13.4603`], List[17.4`, 14.1133`], \
List[17.4`, 12.500300000000001`], List[17.4`, 11.833300000000001`], \
List[15.686`, 10.8633`], List[13.`, 10.8633`]], List[List[17.4`, 9.2273`], \
List[17.4`, 8.560300000000002`], List[15.686`, 7.5913`], List[13.`, 7.5913`], \
List[10.314`, 7.5913`], List[8.6`, 8.560300000000002`], List[8.6`, 9.2273`], \
List[8.6`, 10.8413`], List[9.586`, 10.1873`], List[11.151`, \
9.772300000000001`], List[13.`, 9.772300000000001`], List[14.849`, \
9.772300000000001`], List[16.414`, 10.1873`], List[17.4`, 10.8413`]], \
List[List[13.`, 17.4093`], List[15.686`, 17.4093`], List[17.4`, \
16.439300000000003`], List[17.4`, 15.772300000000001`], List[17.4`, \
15.1053`], List[15.686`, 14.1363`], List[13.`, 14.1363`], List[10.314`, \
14.1363`], List[8.6`, 15.1053`], List[8.6`, 15.772300000000001`], List[8.6`, \
16.439300000000003`], List[10.314`, 17.4093`], List[13.`, 17.4093`]], \
List[List[13.`, 18.5003`], List[9.864`, 18.5003`], List[7.5`, 17.3273`], \
List[7.5`, 15.772300000000001`], List[7.5`, 9.2273`], List[7.5`, \
7.673300000000001`], List[9.864`, 6.500300000000001`], List[13.`, \
6.500300000000001`], List[16.136`, 6.500300000000001`], List[18.5`, \
7.673300000000001`], List[18.5`, 9.2273`], List[18.5`, 15.772300000000001`], \
List[18.5`, 17.3273`], List[16.136`, 18.5003`], List[13.`, 18.5003`]]]]]], \
Rule[AspectRatio, Automatic], Rule[ImageSize, List[25.`, 25.`]], \
Rule[PlotRange, List[List[0.`, 25.`], List[0.`, 25.`]]]], \
GridBox[List[List[RowBox[List[TagBox[\\\"\\\\\\\"Table count: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[\\\"6\\\", \\\"SummaryItem\\\"]]]], List[RowBox[List[TagBox[\\\"\\\\\\\
\"Backend: \\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \
\\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"\\\\\\\"MySQL\\\\\\\"\\\", \
\\\"SummaryItem\\\"]]]], List[TagBox[TagBox[GridBox[List[List[TagBox[\\\"\\\\\
\\\"Tables: \\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \
TagBox[GridBox[List[List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, \
False]], InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"indexes\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"indexes\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[TagBox[DynamicModuleBox[List[Set[Typeset`var$\
$, False]], InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"id\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"id\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"NativeTypeString:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"INTEGER(11)\\\\\\\"\\\"], \
List[StyleBox[\\\"\\\\\\\"Default:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"None\\\"], List[StyleBox[\\\"\\\\\\\"Indexed:\
\\\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"False\\\"], \
List[StyleBox[\\\"\\\\\\\"Name:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"\\\\\\\"id\\\\\\\"\\\"], List[StyleBox[\\\"\\\
\\\\\"Nullable:\\\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"False\\\"]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]]], \\\"Grid\\\"], Rule[ImageMargins, 0]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, \
1]]]]], Dynamic[Typeset`var$$], Rule[Alignment, Automatic], Rule[ImageSize, \
Automatic], Rule[ImageMargins, 0], Rule[BaseStyle, List[]], \
Rule[DefaultBaseStyle, \\\"OpenerView\\\"], Rule[BaselinePosition, \
Baseline]], Rule[Deployed, False], Rule[StripOnInput, False]], \
OpenerView[List[\\\"id\\\", Grid[List[List[Style[\\\"NativeTypeString:\\\", \
GrayLevel[0.5`]], \\\"INTEGER(11)\\\"], List[Style[\\\"Default:\\\", \
GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], \
False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \\\"id\\\"], \
List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], False]], Rule[Alignment, \
Left]]], False]], Rule[DynamicModuleValues, Automatic]], \
Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"data_id\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"data_id\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"NativeTypeString:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"INTEGER(20)\\\\\\\"\\\"], \
List[StyleBox[\\\"\\\\\\\"Default:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"None\\\"], List[StyleBox[\\\"\\\\\\\"Indexed:\
\\\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"False\\\"], \
List[StyleBox[\\\"\\\\\\\"Name:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"\\\\\\\"data_id\\\\\\\"\\\"], \
List[StyleBox[\\\"\\\\\\\"Nullable:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"True\\\"]], Rule[GridBoxAlignment, List[Rule[\
\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \\\"Grid\\\"], \
Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxBackground, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"data_id\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"INTEGER(20)\\\"], List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], \
List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\
\", GrayLevel[0.5`]], \\\"data_id\\\"], List[Style[\\\"Nullable:\\\", \
GrayLevel[0.5`]], True]], Rule[Alignment, Left]]], False]], \
Rule[DynamicModuleValues, Automatic]], Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"prod_id\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"prod_id\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"NativeTypeString:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"INTEGER(20)\\\\\\\"\\\"], \
List[StyleBox[\\\"\\\\\\\"Default:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"None\\\"], List[StyleBox[\\\"\\\\\\\"Indexed:\
\\\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"False\\\"], \
List[StyleBox[\\\"\\\\\\\"Name:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"\\\\\\\"prod_id\\\\\\\"\\\"], \
List[StyleBox[\\\"\\\\\\\"Nullable:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"True\\\"]], Rule[GridBoxAlignment, List[Rule[\
\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \\\"Grid\\\"], \
Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxBackground, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"prod_id\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"INTEGER(20)\\\"], List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], \
List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\
\", GrayLevel[0.5`]], \\\"prod_id\\\"], List[Style[\\\"Nullable:\\\", \
GrayLevel[0.5`]], True]], Rule[Alignment, Left]]], False]], \
Rule[DynamicModuleValues, Automatic]], Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"work_id\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"work_id\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"NativeTypeString:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"INTEGER(20)\\\\\\\"\\\"], \
List[StyleBox[\\\"\\\\\\\"Default:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"None\\\"], List[StyleBox[\\\"\\\\\\\"Indexed:\
\\\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"False\\\"], \
List[StyleBox[\\\"\\\\\\\"Name:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"\\\\\\\"work_id\\\\\\\"\\\"], \
List[StyleBox[\\\"\\\\\\\"Nullable:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"True\\\"]], Rule[GridBoxAlignment, List[Rule[\
\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \\\"Grid\\\"], \
Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxBackground, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"work_id\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"INTEGER(20)\\\"], List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], \
List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\
\", GrayLevel[0.5`]], \\\"work_id\\\"], List[Style[\\\"Nullable:\\\", \
GrayLevel[0.5`]], True]], Rule[Alignment, Left]]], False]], \
Rule[DynamicModuleValues, Automatic]], Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"tovar_id\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"tovar_id\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"NativeTypeString:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"INTEGER(20)\\\\\\\"\\\"], \
List[StyleBox[\\\"\\\\\\\"Default:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"None\\\"], List[StyleBox[\\\"\\\\\\\"Indexed:\
\\\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"False\\\"], \
List[StyleBox[\\\"\\\\\\\"Name:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"\\\\\\\"tovar_id\\\\\\\"\\\"], List[StyleBox[\
\\\"\\\\\\\"Nullable:\\\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, \
False]], \\\"True\\\"]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]]], \\\"Grid\\\"], Rule[ImageMargins, 0]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, \
1]]]]], Dynamic[Typeset`var$$], Rule[Alignment, Automatic], Rule[ImageSize, \
Automatic], Rule[ImageMargins, 0], Rule[BaseStyle, List[]], \
Rule[DefaultBaseStyle, \\\"OpenerView\\\"], Rule[BaselinePosition, \
Baseline]], Rule[Deployed, False], Rule[StripOnInput, False]], \
OpenerView[List[\\\"tovar_id\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"INTEGER(20)\\\"], List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], \
List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\
\", GrayLevel[0.5`]], \\\"tovar_id\\\"], List[Style[\\\"Nullable:\\\", \
GrayLevel[0.5`]], True]], Rule[Alignment, Left]]], False]], \
Rule[DynamicModuleValues, Automatic]], Function[Setting[Slot[1], \
List[0]]]]]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[DefaultBaseStyle, \\\"Column\\\"], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \\\"Column\\\"], \
Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxBackground, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"indexes\\\", \
Column[List[OpenerView[List[\\\"id\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"INTEGER(11)\\\"], List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], \
List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\
\", GrayLevel[0.5`]], \\\"id\\\"], List[Style[\\\"Nullable:\\\", \
GrayLevel[0.5`]], False]], Rule[Alignment, Left]]]], \
OpenerView[List[\\\"data_id\\\", Grid[List[List[Style[\\\"NativeTypeString:\\\
\", GrayLevel[0.5`]], \\\"INTEGER(20)\\\"], List[Style[\\\"Default:\\\", \
GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], \
False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \\\"data_id\\\"], \
List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], True]], Rule[Alignment, \
Left]]]], OpenerView[List[\\\"prod_id\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"INTEGER(20)\\\"], List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], \
List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\
\", GrayLevel[0.5`]], \\\"prod_id\\\"], List[Style[\\\"Nullable:\\\", \
GrayLevel[0.5`]], True]], Rule[Alignment, Left]]]], \
OpenerView[List[\\\"work_id\\\", Grid[List[List[Style[\\\"NativeTypeString:\\\
\", GrayLevel[0.5`]], \\\"INTEGER(20)\\\"], List[Style[\\\"Default:\\\", \
GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], \
False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \\\"work_id\\\"], \
List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], True]], Rule[Alignment, \
Left]]]], OpenerView[List[\\\"tovar_id\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"INTEGER(20)\\\"], List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], \
List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\
\", GrayLevel[0.5`]], \\\"tovar_id\\\"], List[Style[\\\"Nullable:\\\", \
GrayLevel[0.5`]], True]], Rule[Alignment, Left]]]]]]], False]], \
Rule[DynamicModuleValues, Automatic]], Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"dataintro\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"dataintro\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[TagBox[DynamicModuleBox[List[Set[Typeset`var$\
$, False]], InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"id_d\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"id_d\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"NativeTypeString:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"INTEGER(11)\\\\\\\"\\\"], \
List[StyleBox[\\\"\\\\\\\"Default:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"None\\\"], List[StyleBox[\\\"\\\\\\\"Indexed:\
\\\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"False\\\"], \
List[StyleBox[\\\"\\\\\\\"Name:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"\\\\\\\"id_d\\\\\\\"\\\"], List[StyleBox[\\\"\
\\\\\\\"Nullable:\\\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"False\\\"]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]]], \\\"Grid\\\"], Rule[ImageMargins, 0]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, \
1]]]]], Dynamic[Typeset`var$$], Rule[Alignment, Automatic], Rule[ImageSize, \
Automatic], Rule[ImageMargins, 0], Rule[BaseStyle, List[]], \
Rule[DefaultBaseStyle, \\\"OpenerView\\\"], Rule[BaselinePosition, \
Baseline]], Rule[Deployed, False], Rule[StripOnInput, False]], \
OpenerView[List[\\\"id_d\\\", Grid[List[List[Style[\\\"NativeTypeString:\\\", \
GrayLevel[0.5`]], \\\"INTEGER(11)\\\"], List[Style[\\\"Default:\\\", \
GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], \
False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \\\"id_d\\\"], \
List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], False]], Rule[Alignment, \
Left]]], False]], Rule[DynamicModuleValues, Automatic]], \
Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"count\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"count\\\\\\\"\\\"], List[\
\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"NativeTypeString:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"DOUBLE\\\\\\\
\"\\\"], List[StyleBox[\\\"\\\\\\\"Default:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"None\\\"], List[StyleBox[\\\"\\\\\\\"Indexed:\
\\\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"False\\\"], \
List[StyleBox[\\\"\\\\\\\"Name:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"\\\\\\\"count\\\\\\\"\\\"], \
List[StyleBox[\\\"\\\\\\\"Nullable:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"True\\\"]], Rule[GridBoxAlignment, List[Rule[\
\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \\\"Grid\\\"], \
Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxBackground, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"count\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"DOUBLE\\\"], List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], \
List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\
\", GrayLevel[0.5`]], \\\"count\\\"], List[Style[\\\"Nullable:\\\", \
GrayLevel[0.5`]], True]], Rule[Alignment, Left]]], False]], \
Rule[DynamicModuleValues, Automatic]], Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"datareg\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"datareg\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"NativeTypeString:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\\\\\"\\\"], List[StyleBox[\\\"\\\\\\\"Default:\\\
\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"None\\\"], \
List[StyleBox[\\\"\\\\\\\"Indexed:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"False\\\"], List[StyleBox[\\\"\\\\\\\"Name:\\\
\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"datareg\\\\\\\"\\\"], List[StyleBox[\\\"\\\\\\\"Nullable:\\\\\\\"\
\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"True\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Grid\\\"], Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"datareg\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\\\"], \
List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\
\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \
\\\"datareg\\\"], List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], True]], \
Rule[Alignment, Left]]], False]], Rule[DynamicModuleValues, Automatic]], \
Function[Setting[Slot[1], List[0]]]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[DefaultBaseStyle, \
\\\"Column\\\"], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Column\\\"], Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"dataintro\\\", \
Column[List[OpenerView[List[\\\"id_d\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"INTEGER(11)\\\"], List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], \
List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\
\", GrayLevel[0.5`]], \\\"id_d\\\"], List[Style[\\\"Nullable:\\\", \
GrayLevel[0.5`]], False]], Rule[Alignment, Left]]]], \
OpenerView[List[\\\"count\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"DOUBLE\\\"], List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], \
List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\
\", GrayLevel[0.5`]], \\\"count\\\"], List[Style[\\\"Nullable:\\\", \
GrayLevel[0.5`]], True]], Rule[Alignment, Left]]]], \
OpenerView[List[\\\"datareg\\\", Grid[List[List[Style[\\\"NativeTypeString:\\\
\", GrayLevel[0.5`]], \\\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\\\"], \
List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\
\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \
\\\"datareg\\\"], List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], True]], \
Rule[Alignment, Left]]]]]]], False]], Rule[DynamicModuleValues, Automatic]], \
Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"tovar\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"tovar\\\\\\\"\\\"], List[\
\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[TagBox[DynamicModuleBox[List[Set[Typeset`var$\
$, False]], InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"id_t\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"id_t\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"NativeTypeString:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"INTEGER(11)\\\\\\\"\\\"], \
List[StyleBox[\\\"\\\\\\\"Default:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"None\\\"], List[StyleBox[\\\"\\\\\\\"Indexed:\
\\\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"False\\\"], \
List[StyleBox[\\\"\\\\\\\"Name:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"\\\\\\\"id_t\\\\\\\"\\\"], List[StyleBox[\\\"\
\\\\\\\"Nullable:\\\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"False\\\"]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]]], \\\"Grid\\\"], Rule[ImageMargins, 0]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, \
1]]]]], Dynamic[Typeset`var$$], Rule[Alignment, Automatic], Rule[ImageSize, \
Automatic], Rule[ImageMargins, 0], Rule[BaseStyle, List[]], \
Rule[DefaultBaseStyle, \\\"OpenerView\\\"], Rule[BaselinePosition, \
Baseline]], Rule[Deployed, False], Rule[StripOnInput, False]], \
OpenerView[List[\\\"id_t\\\", Grid[List[List[Style[\\\"NativeTypeString:\\\", \
GrayLevel[0.5`]], \\\"INTEGER(11)\\\"], List[Style[\\\"Default:\\\", \
GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], \
False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \\\"id_t\\\"], \
List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], False]], Rule[Alignment, \
Left]]], False]], Rule[DynamicModuleValues, Automatic]], \
Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"name\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"name\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"NativeTypeString:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\\\\\"\\\"], List[StyleBox[\\\"\\\\\\\"Default:\\\
\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"None\\\"], \
List[StyleBox[\\\"\\\\\\\"Indexed:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"False\\\"], List[StyleBox[\\\"\\\\\\\"Name:\\\
\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"name\\\\\
\\\"\\\"], List[StyleBox[\\\"\\\\\\\"Nullable:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"True\\\"]], Rule[GridBoxAlignment, List[Rule[\
\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \\\"Grid\\\"], \
Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxBackground, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"name\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\\\"], \
List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\
\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \
\\\"name\\\"], List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], True]], \
Rule[Alignment, Left]]], False]], Rule[DynamicModuleValues, Automatic]], \
Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"kod\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"kod\\\\\\\"\\\"], List[\\\
\"\\\", PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"\
NativeTypeString:\\\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"INTEGER(11)\\\\\\\"\\\"], \
List[StyleBox[\\\"\\\\\\\"Default:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"None\\\"], List[StyleBox[\\\"\\\\\\\"Indexed:\
\\\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"False\\\"], \
List[StyleBox[\\\"\\\\\\\"Name:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"\\\\\\\"kod\\\\\\\"\\\"], \
List[StyleBox[\\\"\\\\\\\"Nullable:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"True\\\"]], Rule[GridBoxAlignment, List[Rule[\
\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \\\"Grid\\\"], \
Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxBackground, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"kod\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"INTEGER(11)\\\"], List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], \
List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\
\", GrayLevel[0.5`]], \\\"kod\\\"], List[Style[\\\"Nullable:\\\", \
GrayLevel[0.5`]], True]], Rule[Alignment, Left]]], False]], \
Rule[DynamicModuleValues, Automatic]], Function[Setting[Slot[1], \
List[0]]]]]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[DefaultBaseStyle, \\\"Column\\\"], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \\\"Column\\\"], \
Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxBackground, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"tovar\\\", \
Column[List[OpenerView[List[\\\"id_t\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"INTEGER(11)\\\"], List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], \
List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\
\", GrayLevel[0.5`]], \\\"id_t\\\"], List[Style[\\\"Nullable:\\\", \
GrayLevel[0.5`]], False]], Rule[Alignment, Left]]]], OpenerView[List[\\\"name\
\\\", Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\\\"], \
List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\
\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \
\\\"name\\\"], List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], True]], \
Rule[Alignment, Left]]]], OpenerView[List[\\\"kod\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"INTEGER(11)\\\"], List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], \
List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\
\", GrayLevel[0.5`]], \\\"kod\\\"], List[Style[\\\"Nullable:\\\", \
GrayLevel[0.5`]], True]], Rule[Alignment, Left]]]]]]], False]], \
Rule[DynamicModuleValues, Automatic]], Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"prokatinfo\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"prokatinfo\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[TagBox[DynamicModuleBox[List[Set[Typeset`var$\
$, False]], InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"id_pr\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"id_pr\\\\\\\"\\\"], List[\
\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"NativeTypeString:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"INTEGER(11)\\\\\\\"\\\"], \
List[StyleBox[\\\"\\\\\\\"Default:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"None\\\"], List[StyleBox[\\\"\\\\\\\"Indexed:\
\\\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"False\\\"], \
List[StyleBox[\\\"\\\\\\\"Name:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"\\\\\\\"id_pr\\\\\\\"\\\"], \
List[StyleBox[\\\"\\\\\\\"Nullable:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"False\\\"]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \\\"Grid\\\"], \
Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxBackground, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"id_pr\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"INTEGER(11)\\\"], List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], \
List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\
\", GrayLevel[0.5`]], \\\"id_pr\\\"], List[Style[\\\"Nullable:\\\", \
GrayLevel[0.5`]], False]], Rule[Alignment, Left]]], False]], \
Rule[DynamicModuleValues, Automatic]], Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"name\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"name\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"NativeTypeString:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\\\\\"\\\"], List[StyleBox[\\\"\\\\\\\"Default:\\\
\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"None\\\"], \
List[StyleBox[\\\"\\\\\\\"Indexed:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"False\\\"], List[StyleBox[\\\"\\\\\\\"Name:\\\
\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"name\\\\\
\\\"\\\"], List[StyleBox[\\\"\\\\\\\"Nullable:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"True\\\"]], Rule[GridBoxAlignment, List[Rule[\
\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \\\"Grid\\\"], \
Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxBackground, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"name\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\\\"], \
List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\
\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \
\\\"name\\\"], List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], True]], \
Rule[Alignment, Left]]], False]], Rule[DynamicModuleValues, Automatic]], \
Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"kod\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"kod\\\\\\\"\\\"], List[\\\
\"\\\", PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"\
NativeTypeString:\\\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"INTEGER(20)\\\\\\\"\\\"], \
List[StyleBox[\\\"\\\\\\\"Default:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"None\\\"], List[StyleBox[\\\"\\\\\\\"Indexed:\
\\\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"False\\\"], \
List[StyleBox[\\\"\\\\\\\"Name:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"\\\\\\\"kod\\\\\\\"\\\"], \
List[StyleBox[\\\"\\\\\\\"Nullable:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"True\\\"]], Rule[GridBoxAlignment, List[Rule[\
\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \\\"Grid\\\"], \
Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxBackground, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"kod\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"INTEGER(20)\\\"], List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], \
List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\
\", GrayLevel[0.5`]], \\\"kod\\\"], List[Style[\\\"Nullable:\\\", \
GrayLevel[0.5`]], True]], Rule[Alignment, Left]]], False]], \
Rule[DynamicModuleValues, Automatic]], Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"count\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"count\\\\\\\"\\\"], List[\
\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"NativeTypeString:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"DOUBLE\\\\\\\
\"\\\"], List[StyleBox[\\\"\\\\\\\"Default:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"None\\\"], List[StyleBox[\\\"\\\\\\\"Indexed:\
\\\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"False\\\"], \
List[StyleBox[\\\"\\\\\\\"Name:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"\\\\\\\"count\\\\\\\"\\\"], \
List[StyleBox[\\\"\\\\\\\"Nullable:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"True\\\"]], Rule[GridBoxAlignment, List[Rule[\
\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \\\"Grid\\\"], \
Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxBackground, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"count\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"DOUBLE\\\"], List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], \
List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\
\", GrayLevel[0.5`]], \\\"count\\\"], List[Style[\\\"Nullable:\\\", \
GrayLevel[0.5`]], True]], Rule[Alignment, Left]]], False]], \
Rule[DynamicModuleValues, Automatic]], Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"starttime\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"starttime\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"NativeTypeString:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\\\\\"\\\"], List[StyleBox[\\\"\\\\\\\"Default:\\\
\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"None\\\"], \
List[StyleBox[\\\"\\\\\\\"Indexed:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"False\\\"], List[StyleBox[\\\"\\\\\\\"Name:\\\
\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"starttime\\\\\\\"\\\"], List[StyleBox[\\\"\\\\\\\"Nullable:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"True\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Grid\\\"], Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"starttime\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\\\"], \
List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\
\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \
\\\"starttime\\\"], List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], True]], \
Rule[Alignment, Left]]], False]], Rule[DynamicModuleValues, Automatic]], \
Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"endtime\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"endtime\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"NativeTypeString:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\\\\\"\\\"], List[StyleBox[\\\"\\\\\\\"Default:\\\
\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"None\\\"], \
List[StyleBox[\\\"\\\\\\\"Indexed:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"False\\\"], List[StyleBox[\\\"\\\\\\\"Name:\\\
\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"endtime\\\\\\\"\\\"], List[StyleBox[\\\"\\\\\\\"Nullable:\\\\\\\"\
\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"True\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Grid\\\"], Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"endtime\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\\\"], \
List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\
\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \
\\\"endtime\\\"], List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], True]], \
Rule[Alignment, Left]]], False]], Rule[DynamicModuleValues, Automatic]], \
Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"datareg\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"datareg\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"NativeTypeString:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\\\\\"\\\"], List[StyleBox[\\\"\\\\\\\"Default:\\\
\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"None\\\"], \
List[StyleBox[\\\"\\\\\\\"Indexed:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"False\\\"], List[StyleBox[\\\"\\\\\\\"Name:\\\
\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"datareg\\\\\\\"\\\"], List[StyleBox[\\\"\\\\\\\"Nullable:\\\\\\\"\
\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"True\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Grid\\\"], Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"datareg\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\\\"], \
List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\
\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \
\\\"datareg\\\"], List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], True]], \
Rule[Alignment, Left]]], False]], Rule[DynamicModuleValues, Automatic]], \
Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"fnameprod\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"fnameprod\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"NativeTypeString:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\\\\\"\\\"], List[StyleBox[\\\"\\\\\\\"Default:\\\
\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"None\\\"], \
List[StyleBox[\\\"\\\\\\\"Indexed:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"False\\\"], List[StyleBox[\\\"\\\\\\\"Name:\\\
\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"fnameprod\\\\\\\"\\\"], List[StyleBox[\\\"\\\\\\\"Nullable:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"True\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Grid\\\"], Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"fnameprod\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\\\"], \
List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\
\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \
\\\"fnameprod\\\"], List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], True]], \
Rule[Alignment, Left]]], False]], Rule[DynamicModuleValues, Automatic]], \
Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"lnameprod\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"lnameprod\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"NativeTypeString:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\\\\\"\\\"], List[StyleBox[\\\"\\\\\\\"Default:\\\
\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"None\\\"], \
List[StyleBox[\\\"\\\\\\\"Indexed:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"False\\\"], List[StyleBox[\\\"\\\\\\\"Name:\\\
\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"lnameprod\\\\\\\"\\\"], List[StyleBox[\\\"\\\\\\\"Nullable:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"True\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Grid\\\"], Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"lnameprod\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\\\"], \
List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\
\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \
\\\"lnameprod\\\"], List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], True]], \
Rule[Alignment, Left]]], False]], Rule[DynamicModuleValues, Automatic]], \
Function[Setting[Slot[1], List[0]]]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[DefaultBaseStyle, \
\\\"Column\\\"], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Column\\\"], Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"prokatinfo\\\", \
Column[List[OpenerView[List[\\\"id_pr\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"INTEGER(11)\\\"], List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], \
List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\
\", GrayLevel[0.5`]], \\\"id_pr\\\"], List[Style[\\\"Nullable:\\\", \
GrayLevel[0.5`]], False]], Rule[Alignment, Left]]]], OpenerView[List[\\\"name\
\\\", Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\\\"], \
List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\
\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \
\\\"name\\\"], List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], True]], \
Rule[Alignment, Left]]]], OpenerView[List[\\\"kod\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"INTEGER(20)\\\"], List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], \
List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\
\", GrayLevel[0.5`]], \\\"kod\\\"], List[Style[\\\"Nullable:\\\", \
GrayLevel[0.5`]], True]], Rule[Alignment, Left]]]], OpenerView[List[\\\"count\
\\\", Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"DOUBLE\\\"], List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], \
List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\
\", GrayLevel[0.5`]], \\\"count\\\"], List[Style[\\\"Nullable:\\\", \
GrayLevel[0.5`]], True]], Rule[Alignment, Left]]]], \
OpenerView[List[\\\"starttime\\\", Grid[List[List[Style[\\\"NativeTypeString:\
\\\", GrayLevel[0.5`]], \\\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\\\"], \
List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\
\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \
\\\"starttime\\\"], List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], True]], \
Rule[Alignment, Left]]]], OpenerView[List[\\\"endtime\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\\\"], \
List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\
\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \
\\\"endtime\\\"], List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], True]], \
Rule[Alignment, Left]]]], OpenerView[List[\\\"datareg\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\\\"], \
List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\
\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \
\\\"datareg\\\"], List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], True]], \
Rule[Alignment, Left]]]], OpenerView[List[\\\"fnameprod\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\\\"], \
List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\
\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \
\\\"fnameprod\\\"], List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], True]], \
Rule[Alignment, Left]]]], OpenerView[List[\\\"lnameprod\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\\\"], \
List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\
\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \
\\\"lnameprod\\\"], List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], True]], \
Rule[Alignment, Left]]]]]]], False]], Rule[DynamicModuleValues, Automatic]], \
Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"worktime\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"worktime\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[TagBox[DynamicModuleBox[List[Set[Typeset`var$\
$, False]], InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"id_w\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"id_w\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"NativeTypeString:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"INTEGER(11)\\\\\\\"\\\"], \
List[StyleBox[\\\"\\\\\\\"Default:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"None\\\"], List[StyleBox[\\\"\\\\\\\"Indexed:\
\\\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"False\\\"], \
List[StyleBox[\\\"\\\\\\\"Name:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"\\\\\\\"id_w\\\\\\\"\\\"], List[StyleBox[\\\"\
\\\\\\\"Nullable:\\\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"False\\\"]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]]], \\\"Grid\\\"], Rule[ImageMargins, 0]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, \
1]]]]], Dynamic[Typeset`var$$], Rule[Alignment, Automatic], Rule[ImageSize, \
Automatic], Rule[ImageMargins, 0], Rule[BaseStyle, List[]], \
Rule[DefaultBaseStyle, \\\"OpenerView\\\"], Rule[BaselinePosition, \
Baseline]], Rule[Deployed, False], Rule[StripOnInput, False]], \
OpenerView[List[\\\"id_w\\\", Grid[List[List[Style[\\\"NativeTypeString:\\\", \
GrayLevel[0.5`]], \\\"INTEGER(11)\\\"], List[Style[\\\"Default:\\\", \
GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], \
False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \\\"id_w\\\"], \
List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], False]], Rule[Alignment, \
Left]]], False]], Rule[DynamicModuleValues, Automatic]], \
Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"starttime\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"starttime\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"NativeTypeString:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\\\\\"\\\"], List[StyleBox[\\\"\\\\\\\"Default:\\\
\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"None\\\"], \
List[StyleBox[\\\"\\\\\\\"Indexed:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"False\\\"], List[StyleBox[\\\"\\\\\\\"Name:\\\
\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"starttime\\\\\\\"\\\"], List[StyleBox[\\\"\\\\\\\"Nullable:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"True\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Grid\\\"], Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"starttime\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\\\"], \
List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\
\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \
\\\"starttime\\\"], List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], True]], \
Rule[Alignment, Left]]], False]], Rule[DynamicModuleValues, Automatic]], \
Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"endtime\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"endtime\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"NativeTypeString:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\\\\\"\\\"], List[StyleBox[\\\"\\\\\\\"Default:\\\
\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"None\\\"], \
List[StyleBox[\\\"\\\\\\\"Indexed:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"False\\\"], List[StyleBox[\\\"\\\\\\\"Name:\\\
\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"endtime\\\\\\\"\\\"], List[StyleBox[\\\"\\\\\\\"Nullable:\\\\\\\"\
\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"True\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Grid\\\"], Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"endtime\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\\\"], \
List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\
\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \
\\\"endtime\\\"], List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], True]], \
Rule[Alignment, Left]]], False]], Rule[DynamicModuleValues, Automatic]], \
Function[Setting[Slot[1], List[0]]]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[DefaultBaseStyle, \
\\\"Column\\\"], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Column\\\"], Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"worktime\\\", \
Column[List[OpenerView[List[\\\"id_w\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"INTEGER(11)\\\"], List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], \
List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\
\", GrayLevel[0.5`]], \\\"id_w\\\"], List[Style[\\\"Nullable:\\\", \
GrayLevel[0.5`]], False]], Rule[Alignment, Left]]]], \
OpenerView[List[\\\"starttime\\\", Grid[List[List[Style[\\\"NativeTypeString:\
\\\", GrayLevel[0.5`]], \\\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\\\"], \
List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\
\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \
\\\"starttime\\\"], List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], True]], \
Rule[Alignment, Left]]]], OpenerView[List[\\\"endtime\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\\\"], \
List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\
\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \
\\\"endtime\\\"], List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], True]], \
Rule[Alignment, Left]]]]]]], False]], Rule[DynamicModuleValues, Automatic]], \
Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"prodavec\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"prodavec\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[TagBox[DynamicModuleBox[List[Set[Typeset`var$\
$, False]], InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"id_p\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"id_p\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"NativeTypeString:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"INTEGER(11)\\\\\\\"\\\"], \
List[StyleBox[\\\"\\\\\\\"Default:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"None\\\"], List[StyleBox[\\\"\\\\\\\"Indexed:\
\\\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"False\\\"], \
List[StyleBox[\\\"\\\\\\\"Name:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"\\\\\\\"id_p\\\\\\\"\\\"], List[StyleBox[\\\"\
\\\\\\\"Nullable:\\\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"False\\\"]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]]], \\\"Grid\\\"], Rule[ImageMargins, 0]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, \
1]]]]], Dynamic[Typeset`var$$], Rule[Alignment, Automatic], Rule[ImageSize, \
Automatic], Rule[ImageMargins, 0], Rule[BaseStyle, List[]], \
Rule[DefaultBaseStyle, \\\"OpenerView\\\"], Rule[BaselinePosition, \
Baseline]], Rule[Deployed, False], Rule[StripOnInput, False]], \
OpenerView[List[\\\"id_p\\\", Grid[List[List[Style[\\\"NativeTypeString:\\\", \
GrayLevel[0.5`]], \\\"INTEGER(11)\\\"], List[Style[\\\"Default:\\\", \
GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], \
False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \\\"id_p\\\"], \
List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], False]], Rule[Alignment, \
Left]]], False]], Rule[DynamicModuleValues, Automatic]], \
Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"fnameprod\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"fnameprod\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"NativeTypeString:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\\\\\"\\\"], List[StyleBox[\\\"\\\\\\\"Default:\\\
\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"None\\\"], \
List[StyleBox[\\\"\\\\\\\"Indexed:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"False\\\"], List[StyleBox[\\\"\\\\\\\"Name:\\\
\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"fnameprod\\\\\\\"\\\"], List[StyleBox[\\\"\\\\\\\"Nullable:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"True\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Grid\\\"], Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"fnameprod\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\\\"], \
List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\
\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \
\\\"fnameprod\\\"], List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], True]], \
Rule[Alignment, Left]]], False]], Rule[DynamicModuleValues, Automatic]], \
Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"lnameprod\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"lnameprod\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"NativeTypeString:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\\\\\"\\\"], List[StyleBox[\\\"\\\\\\\"Default:\\\
\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"None\\\"], \
List[StyleBox[\\\"\\\\\\\"Indexed:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"False\\\"], List[StyleBox[\\\"\\\\\\\"Name:\\\
\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"lnameprod\\\\\\\"\\\"], List[StyleBox[\\\"\\\\\\\"Nullable:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"True\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Grid\\\"], Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"lnameprod\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\\\"], \
List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\
\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \
\\\"lnameprod\\\"], List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], True]], \
Rule[Alignment, Left]]], False]], Rule[DynamicModuleValues, Automatic]], \
Function[Setting[Slot[1], List[0]]]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[DefaultBaseStyle, \
\\\"Column\\\"], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Column\\\"], Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"prodavec\\\", \
Column[List[OpenerView[List[\\\"id_p\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"INTEGER(11)\\\"], List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], \
List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\
\", GrayLevel[0.5`]], \\\"id_p\\\"], List[Style[\\\"Nullable:\\\", \
GrayLevel[0.5`]], False]], Rule[Alignment, Left]]]], \
OpenerView[List[\\\"fnameprod\\\", Grid[List[List[Style[\\\"NativeTypeString:\
\\\", GrayLevel[0.5`]], \\\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\\\"], \
List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\
\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \
\\\"fnameprod\\\"], List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], True]], \
Rule[Alignment, Left]]]], OpenerView[List[\\\"lnameprod\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\\\"], \
List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\
\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \
\\\"lnameprod\\\"], List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], True]], \
Rule[Alignment, Left]]]]]]], False]], Rule[DynamicModuleValues, Automatic]], \
Function[Setting[Slot[1], List[0]]]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[DefaultBaseStyle, \
\\\"Column\\\"], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Column\\\"]]], Rule[GridBoxAlignment, List[Rule[\\\"Rows\\\", \
List[List[Top]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\
\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]]], \\\"Grid\\\"], \\\"SummaryItem\\\"]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[2]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[BaseStyle, List[Rule[ShowStringCharacters, False], Rule[NumberMarks, \
False], Rule[PrintPrecision, 3], Rule[ShowSyntaxStyles, False]]]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]], \
Rule[\\\"Rows\\\", List[List[Top]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaselinePosition, List[1, \
1]]]]], Dynamic[Typeset`open$$], Rule[ImageSize, Automatic]]], \
\\\"SummaryPanel\\\"], RuleDelayed[DynamicModuleValues, List[]]], \
\\\"]\\\"]], RelationalDatabase[Association[Rule[\\\"Tables\\\", \
Association[Rule[\\\"indexes\\\", Association[Rule[\\\"PrimaryKey\\\", \
Association[Rule[\\\"ConstraintName\\\", None], Rule[\\\"Columns\\\", List[\\\
\"id\\\"]]]], Rule[\\\"ForeignKeys\\\", List[]], \
Rule[\\\"UniquenessConstraints\\\", List[]], Rule[\\\"Indexes\\\", List[]], \
Rule[\\\"Columns\\\", Association[Rule[\\\"id\\\", \
Association[Rule[\\\"Nullable\\\", False], Rule[\\\"BackendType\\\", \
\\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\"INTEGER(11)\\\"]]], \
Rule[\\\"data_id\\\", Association[Rule[\\\"Nullable\\\", True], \
Rule[\\\"BackendType\\\", \\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\
\"INTEGER(20)\\\"]]], Rule[\\\"prod_id\\\", \
Association[Rule[\\\"Nullable\\\", True], Rule[\\\"BackendType\\\", \
\\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\"INTEGER(20)\\\"]]], \
Rule[\\\"work_id\\\", Association[Rule[\\\"Nullable\\\", True], \
Rule[\\\"BackendType\\\", \\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\
\"INTEGER(20)\\\"]]], Rule[\\\"tovar_id\\\", \
Association[Rule[\\\"Nullable\\\", True], Rule[\\\"BackendType\\\", \
\\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\"INTEGER(20)\\\"]]]]], \
Rule[\\\"Schema\\\", None]]], Rule[\\\"dataintro\\\", \
Association[Rule[\\\"PrimaryKey\\\", Association[Rule[\\\"ConstraintName\\\", \
None], Rule[\\\"Columns\\\", List[\\\"id_d\\\"]]]], Rule[\\\"ForeignKeys\\\", \
List[]], Rule[\\\"UniquenessConstraints\\\", List[]], Rule[\\\"Indexes\\\", \
List[]], Rule[\\\"Columns\\\", Association[Rule[\\\"id_d\\\", \
Association[Rule[\\\"Nullable\\\", False], Rule[\\\"BackendType\\\", \
\\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\"INTEGER(11)\\\"]]], \
Rule[\\\"count\\\", Association[Rule[\\\"Nullable\\\", True], \
Rule[\\\"BackendType\\\", \\\"Real\\\"], Rule[\\\"NativeTypeString\\\", \
\\\"DOUBLE\\\"]]], Rule[\\\"datareg\\\", Association[Rule[\\\"Nullable\\\", \
True], Rule[\\\"BackendType\\\", List[\\\"String\\\", 255, \
\\\"utf8mb4_unicode_ci\\\"]], Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\"]]]]], Rule[\\\"Schema\\\", None]]], \
Rule[\\\"tovar\\\", Association[Rule[\\\"PrimaryKey\\\", \
Association[Rule[\\\"ConstraintName\\\", None], Rule[\\\"Columns\\\", List[\\\
\"id_t\\\"]]]], Rule[\\\"ForeignKeys\\\", List[]], \
Rule[\\\"UniquenessConstraints\\\", List[]], Rule[\\\"Indexes\\\", List[]], \
Rule[\\\"Columns\\\", Association[Rule[\\\"id_t\\\", \
Association[Rule[\\\"Nullable\\\", False], Rule[\\\"BackendType\\\", \
\\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\"INTEGER(11)\\\"]]], \
Rule[\\\"name\\\", Association[Rule[\\\"Nullable\\\", True], \
Rule[\\\"BackendType\\\", List[\\\"String\\\", 255, \
\\\"utf8mb4_unicode_ci\\\"]], Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\"]]], Rule[\\\"kod\\\", \
Association[Rule[\\\"Nullable\\\", True], Rule[\\\"BackendType\\\", \
\\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\"INTEGER(11)\\\"]]]]], \
Rule[\\\"Schema\\\", None]]], Rule[\\\"prokatinfo\\\", \
Association[Rule[\\\"PrimaryKey\\\", Association[Rule[\\\"ConstraintName\\\", \
None], Rule[\\\"Columns\\\", List[\\\"id_pr\\\"]]]], \
Rule[\\\"ForeignKeys\\\", List[]], Rule[\\\"UniquenessConstraints\\\", \
List[]], Rule[\\\"Indexes\\\", List[]], Rule[\\\"Columns\\\", \
Association[Rule[\\\"id_pr\\\", Association[Rule[\\\"Nullable\\\", False], \
Rule[\\\"BackendType\\\", \\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\
\"INTEGER(11)\\\"]]], Rule[\\\"name\\\", Association[Rule[\\\"Nullable\\\", \
True], Rule[\\\"BackendType\\\", List[\\\"String\\\", 255, \
\\\"utf8mb4_unicode_ci\\\"]], Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\"]]], Rule[\\\"kod\\\", \
Association[Rule[\\\"Nullable\\\", True], Rule[\\\"BackendType\\\", \
\\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\"INTEGER(20)\\\"]]], \
Rule[\\\"count\\\", Association[Rule[\\\"Nullable\\\", True], \
Rule[\\\"BackendType\\\", \\\"Real\\\"], Rule[\\\"NativeTypeString\\\", \
\\\"DOUBLE\\\"]]], Rule[\\\"starttime\\\", Association[Rule[\\\"Nullable\\\", \
True], Rule[\\\"BackendType\\\", List[\\\"String\\\", 255, \
\\\"utf8mb4_unicode_ci\\\"]], Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\"]]], Rule[\\\"endtime\\\", \
Association[Rule[\\\"Nullable\\\", True], Rule[\\\"BackendType\\\", \
List[\\\"String\\\", 255, \\\"utf8mb4_unicode_ci\\\"]], \
Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) COLLATE \
utf8mb4_unicode_ci\\\"]]], Rule[\\\"datareg\\\", \
Association[Rule[\\\"Nullable\\\", True], Rule[\\\"BackendType\\\", \
List[\\\"String\\\", 255, \\\"utf8mb4_unicode_ci\\\"]], \
Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) COLLATE \
utf8mb4_unicode_ci\\\"]]], Rule[\\\"fnameprod\\\", \
Association[Rule[\\\"Nullable\\\", True], Rule[\\\"BackendType\\\", \
List[\\\"String\\\", 255, \\\"utf8mb4_unicode_ci\\\"]], \
Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) COLLATE \
utf8mb4_unicode_ci\\\"]]], Rule[\\\"lnameprod\\\", \
Association[Rule[\\\"Nullable\\\", True], Rule[\\\"BackendType\\\", \
List[\\\"String\\\", 255, \\\"utf8mb4_unicode_ci\\\"]], \
Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) COLLATE \
utf8mb4_unicode_ci\\\"]]]]], Rule[\\\"Schema\\\", None]]], \
Rule[\\\"worktime\\\", Association[Rule[\\\"PrimaryKey\\\", Association[Rule[\
\\\"ConstraintName\\\", None], Rule[\\\"Columns\\\", List[\\\"id_w\\\"]]]], \
Rule[\\\"ForeignKeys\\\", List[]], Rule[\\\"UniquenessConstraints\\\", \
List[]], Rule[\\\"Indexes\\\", List[]], Rule[\\\"Columns\\\", \
Association[Rule[\\\"id_w\\\", Association[Rule[\\\"Nullable\\\", False], \
Rule[\\\"BackendType\\\", \\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\
\"INTEGER(11)\\\"]]], Rule[\\\"starttime\\\", Association[Rule[\\\"Nullable\\\
\", True], Rule[\\\"BackendType\\\", List[\\\"String\\\", 255, \
\\\"utf8mb4_unicode_ci\\\"]], Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\"]]], Rule[\\\"endtime\\\", \
Association[Rule[\\\"Nullable\\\", True], Rule[\\\"BackendType\\\", \
List[\\\"String\\\", 255, \\\"utf8mb4_unicode_ci\\\"]], \
Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) COLLATE \
utf8mb4_unicode_ci\\\"]]]]], Rule[\\\"Schema\\\", None]]], \
Rule[\\\"prodavec\\\", Association[Rule[\\\"PrimaryKey\\\", Association[Rule[\
\\\"ConstraintName\\\", None], Rule[\\\"Columns\\\", List[\\\"id_p\\\"]]]], \
Rule[\\\"ForeignKeys\\\", List[]], Rule[\\\"UniquenessConstraints\\\", \
List[]], Rule[\\\"Indexes\\\", List[]], Rule[\\\"Columns\\\", \
Association[Rule[\\\"id_p\\\", Association[Rule[\\\"Nullable\\\", False], \
Rule[\\\"BackendType\\\", \\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\
\"INTEGER(11)\\\"]]], Rule[\\\"fnameprod\\\", Association[Rule[\\\"Nullable\\\
\", True], Rule[\\\"BackendType\\\", List[\\\"String\\\", 255, \
\\\"utf8mb4_unicode_ci\\\"]], Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\"]]], Rule[\\\"lnameprod\\\", \
Association[Rule[\\\"Nullable\\\", True], Rule[\\\"BackendType\\\", \
List[\\\"String\\\", 255, \\\"utf8mb4_unicode_ci\\\"]], \
Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) COLLATE \
utf8mb4_unicode_ci\\\"]]]]], Rule[\\\"Schema\\\", None]]]]], Rule[\\\"ID\\\", \
\\\"1pcgsvgchrs8c\\\"]], DatabaseReference[Association[Rule[\\\"Backend\\\", \
\\\"mysql\\\"], Rule[\\\"Username\\\", \\\"root\\\"], Rule[\\\"Password\\\", \
\\\"root\\\"], Rule[\\\"Host\\\", \\\"localhost\\\"], Rule[\\\"Port\\\", \
3306], Rule[\\\"Name\\\", \\\"prokattovara\\\"], Rule[\\\"Options\\\", \
Association[]]]]], Rule[Selectable, False], Rule[Editable, False], \
Rule[SelectWithContents, True]], Rule[ImageMargins, 0]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, \
1]]]]], Dynamic[Typeset`var$$], Rule[Alignment, Automatic], Rule[ImageSize, \
Automatic], Rule[ImageMargins, 0], Rule[BaseStyle, List[]], \
Rule[DefaultBaseStyle, \\\"OpenerView\\\"], Rule[BaselinePosition, \
Baseline]], Rule[Deployed, False], Rule[StripOnInput, False]], \
OpenerView[List[\\\"MySQL\\\", RelationalDatabase[Association[Rule[\\\"Tables\
\\\", Association[Rule[\\\"indexes\\\", Association[Rule[\\\"PrimaryKey\\\", \
Association[Rule[\\\"ConstraintName\\\", None], Rule[\\\"Columns\\\", List[\\\
\"id\\\"]]]], Rule[\\\"ForeignKeys\\\", List[]], \
Rule[\\\"UniquenessConstraints\\\", List[]], Rule[\\\"Indexes\\\", List[]], \
Rule[\\\"Columns\\\", Association[Rule[\\\"id\\\", \
Association[Rule[\\\"Nullable\\\", False], Rule[\\\"BackendType\\\", \
\\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\"INTEGER(11)\\\"]]], \
Rule[\\\"data_id\\\", Association[Rule[\\\"Nullable\\\", True], \
Rule[\\\"BackendType\\\", \\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\
\"INTEGER(20)\\\"]]], Rule[\\\"prod_id\\\", \
Association[Rule[\\\"Nullable\\\", True], Rule[\\\"BackendType\\\", \
\\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\"INTEGER(20)\\\"]]], \
Rule[\\\"work_id\\\", Association[Rule[\\\"Nullable\\\", True], \
Rule[\\\"BackendType\\\", \\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\
\"INTEGER(20)\\\"]]], Rule[\\\"tovar_id\\\", \
Association[Rule[\\\"Nullable\\\", True], Rule[\\\"BackendType\\\", \
\\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\"INTEGER(20)\\\"]]]]], \
Rule[\\\"Schema\\\", None]]], Rule[\\\"dataintro\\\", \
Association[Rule[\\\"PrimaryKey\\\", Association[Rule[\\\"ConstraintName\\\", \
None], Rule[\\\"Columns\\\", List[\\\"id_d\\\"]]]], Rule[\\\"ForeignKeys\\\", \
List[]], Rule[\\\"UniquenessConstraints\\\", List[]], Rule[\\\"Indexes\\\", \
List[]], Rule[\\\"Columns\\\", Association[Rule[\\\"id_d\\\", \
Association[Rule[\\\"Nullable\\\", False], Rule[\\\"BackendType\\\", \
\\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\"INTEGER(11)\\\"]]], \
Rule[\\\"count\\\", Association[Rule[\\\"Nullable\\\", True], \
Rule[\\\"BackendType\\\", \\\"Real\\\"], Rule[\\\"NativeTypeString\\\", \
\\\"DOUBLE\\\"]]], Rule[\\\"datareg\\\", Association[Rule[\\\"Nullable\\\", \
True], Rule[\\\"BackendType\\\", List[\\\"String\\\", 255, \
\\\"utf8mb4_unicode_ci\\\"]], Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\"]]]]], Rule[\\\"Schema\\\", None]]], \
Rule[\\\"tovar\\\", Association[Rule[\\\"PrimaryKey\\\", \
Association[Rule[\\\"ConstraintName\\\", None], Rule[\\\"Columns\\\", List[\\\
\"id_t\\\"]]]], Rule[\\\"ForeignKeys\\\", List[]], \
Rule[\\\"UniquenessConstraints\\\", List[]], Rule[\\\"Indexes\\\", List[]], \
Rule[\\\"Columns\\\", Association[Rule[\\\"id_t\\\", \
Association[Rule[\\\"Nullable\\\", False], Rule[\\\"BackendType\\\", \
\\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\"INTEGER(11)\\\"]]], \
Rule[\\\"name\\\", Association[Rule[\\\"Nullable\\\", True], \
Rule[\\\"BackendType\\\", List[\\\"String\\\", 255, \
\\\"utf8mb4_unicode_ci\\\"]], Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\"]]], Rule[\\\"kod\\\", \
Association[Rule[\\\"Nullable\\\", True], Rule[\\\"BackendType\\\", \
\\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\"INTEGER(11)\\\"]]]]], \
Rule[\\\"Schema\\\", None]]], Rule[\\\"prokatinfo\\\", \
Association[Rule[\\\"PrimaryKey\\\", Association[Rule[\\\"ConstraintName\\\", \
None], Rule[\\\"Columns\\\", List[\\\"id_pr\\\"]]]], \
Rule[\\\"ForeignKeys\\\", List[]], Rule[\\\"UniquenessConstraints\\\", \
List[]], Rule[\\\"Indexes\\\", List[]], Rule[\\\"Columns\\\", \
Association[Rule[\\\"id_pr\\\", Association[Rule[\\\"Nullable\\\", False], \
Rule[\\\"BackendType\\\", \\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\
\"INTEGER(11)\\\"]]], Rule[\\\"name\\\", Association[Rule[\\\"Nullable\\\", \
True], Rule[\\\"BackendType\\\", List[\\\"String\\\", 255, \
\\\"utf8mb4_unicode_ci\\\"]], Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\"]]], Rule[\\\"kod\\\", \
Association[Rule[\\\"Nullable\\\", True], Rule[\\\"BackendType\\\", \
\\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\"INTEGER(20)\\\"]]], \
Rule[\\\"count\\\", Association[Rule[\\\"Nullable\\\", True], \
Rule[\\\"BackendType\\\", \\\"Real\\\"], Rule[\\\"NativeTypeString\\\", \
\\\"DOUBLE\\\"]]], Rule[\\\"starttime\\\", Association[Rule[\\\"Nullable\\\", \
True], Rule[\\\"BackendType\\\", List[\\\"String\\\", 255, \
\\\"utf8mb4_unicode_ci\\\"]], Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\"]]], Rule[\\\"endtime\\\", \
Association[Rule[\\\"Nullable\\\", True], Rule[\\\"BackendType\\\", \
List[\\\"String\\\", 255, \\\"utf8mb4_unicode_ci\\\"]], \
Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) COLLATE \
utf8mb4_unicode_ci\\\"]]], Rule[\\\"datareg\\\", \
Association[Rule[\\\"Nullable\\\", True], Rule[\\\"BackendType\\\", \
List[\\\"String\\\", 255, \\\"utf8mb4_unicode_ci\\\"]], \
Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) COLLATE \
utf8mb4_unicode_ci\\\"]]], Rule[\\\"fnameprod\\\", \
Association[Rule[\\\"Nullable\\\", True], Rule[\\\"BackendType\\\", \
List[\\\"String\\\", 255, \\\"utf8mb4_unicode_ci\\\"]], \
Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) COLLATE \
utf8mb4_unicode_ci\\\"]]], Rule[\\\"lnameprod\\\", \
Association[Rule[\\\"Nullable\\\", True], Rule[\\\"BackendType\\\", \
List[\\\"String\\\", 255, \\\"utf8mb4_unicode_ci\\\"]], \
Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) COLLATE \
utf8mb4_unicode_ci\\\"]]]]], Rule[\\\"Schema\\\", None]]], \
Rule[\\\"worktime\\\", Association[Rule[\\\"PrimaryKey\\\", Association[Rule[\
\\\"ConstraintName\\\", None], Rule[\\\"Columns\\\", List[\\\"id_w\\\"]]]], \
Rule[\\\"ForeignKeys\\\", List[]], Rule[\\\"UniquenessConstraints\\\", \
List[]], Rule[\\\"Indexes\\\", List[]], Rule[\\\"Columns\\\", \
Association[Rule[\\\"id_w\\\", Association[Rule[\\\"Nullable\\\", False], \
Rule[\\\"BackendType\\\", \\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\
\"INTEGER(11)\\\"]]], Rule[\\\"starttime\\\", Association[Rule[\\\"Nullable\\\
\", True], Rule[\\\"BackendType\\\", List[\\\"String\\\", 255, \
\\\"utf8mb4_unicode_ci\\\"]], Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\"]]], Rule[\\\"endtime\\\", \
Association[Rule[\\\"Nullable\\\", True], Rule[\\\"BackendType\\\", \
List[\\\"String\\\", 255, \\\"utf8mb4_unicode_ci\\\"]], \
Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) COLLATE \
utf8mb4_unicode_ci\\\"]]]]], Rule[\\\"Schema\\\", None]]], \
Rule[\\\"prodavec\\\", Association[Rule[\\\"PrimaryKey\\\", Association[Rule[\
\\\"ConstraintName\\\", None], Rule[\\\"Columns\\\", List[\\\"id_p\\\"]]]], \
Rule[\\\"ForeignKeys\\\", List[]], Rule[\\\"UniquenessConstraints\\\", \
List[]], Rule[\\\"Indexes\\\", List[]], Rule[\\\"Columns\\\", \
Association[Rule[\\\"id_p\\\", Association[Rule[\\\"Nullable\\\", False], \
Rule[\\\"BackendType\\\", \\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\
\"INTEGER(11)\\\"]]], Rule[\\\"fnameprod\\\", Association[Rule[\\\"Nullable\\\
\", True], Rule[\\\"BackendType\\\", List[\\\"String\\\", 255, \
\\\"utf8mb4_unicode_ci\\\"]], Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\"]]], Rule[\\\"lnameprod\\\", \
Association[Rule[\\\"Nullable\\\", True], Rule[\\\"BackendType\\\", \
List[\\\"String\\\", 255, \\\"utf8mb4_unicode_ci\\\"]], \
Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) COLLATE \
utf8mb4_unicode_ci\\\"]]]]], Rule[\\\"Schema\\\", None]]]]], Rule[\\\"ID\\\", \
\\\"1pcgsvgchrs8c\\\"]], DatabaseReference[Association[Rule[\\\"Backend\\\", \
\\\"mysql\\\"], Rule[\\\"Username\\\", \\\"root\\\"], Rule[\\\"Password\\\", \
\\\"root\\\"], Rule[\\\"Host\\\", \\\"localhost\\\"], Rule[\\\"Port\\\", \
3306], Rule[\\\"Name\\\", \\\"prokattovara\\\"], Rule[\\\"Options\\\", \
Association[]]]]]], False]], Rule[DynamicModuleValues, Automatic]], \
Function[Setting[Slot[1], List[0]]]], \\\"SummaryItem\\\"]]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[2]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[BaseStyle, List[Rule[ShowStringCharacters, False], Rule[NumberMarks, \
False], Rule[PrintPrecision, 3], Rule[ShowSyntaxStyles, False]]]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]], \
Rule[\\\"Rows\\\", List[List[Top]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaselinePosition, List[1, \
1]]]], Rule[True, \
GridBox[List[List[PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource[\\\"\
FEBitmaps\\\", \\\"SummaryBoxCloser\\\"]], RuleDelayed[ButtonFunction, \
Set[Typeset`open$$, False]], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[Evaluator, Automatic], Rule[Method, \\\"Preemptive\\\"]], \
Rule[Alignment, List[Center, Center]], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, \
Times[CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]]], \
GraphicsBox[List[Thickness[0.04`], List[FaceForm[List[RGBColor[0.984`, \
0.969`, 0.91`], Opacity[1.`]]], FilledCurveBox[List[List[List[0, 2, 0], \
List[1, 3, 3], List[0, 1, 0], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3], \
List[0, 1, 0], List[1, 3, 3]]], List[List[List[17.`, 10.`], List[6.`, 10.`], \
List[4.343`, 10.`], List[3.`, 11.343`], List[3.`, 13.`], List[3.`, 20.`], \
List[3.`, 21.657`], List[4.343`, 23.`], List[6.`, 23.`], List[17.`, 23.`], \
List[18.657`, 23.`], List[20.`, 21.657`], List[20.`, 20.`], List[20.`, 13.`], \
List[20.`, 11.343`], List[18.657`, 10.`], List[17.`, 10.`]]]]], \
List[FaceForm[List[RGBColor[0.996`, 0.506`, 0.004`], Opacity[1.`]]], \
FilledCurveBox[List[List[List[1, 4, 3], List[0, 1, 0], List[1, 3, 3], List[0, \
1, 0], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3]], List[List[0, 2, 0], \
List[1, 3, 3], List[0, 1, 0], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3], \
List[0, 1, 0], List[1, 3, 3]]], List[List[List[6.`, 22.5`], List[4.622`, \
22.5`], List[3.5`, 21.379`], List[3.5`, 20.`], List[3.5`, 13.`], List[3.5`, \
11.620999999999999`], List[4.622`, 10.5`], List[6.`, 10.5`], List[17.`, \
10.5`], List[18.379`, 10.5`], List[19.5`, 11.620999999999999`], List[19.5`, \
13.`], List[19.5`, 20.`], List[19.5`, 21.379`], List[18.379`, 22.5`], \
List[17.`, 22.5`]], List[List[17.`, 9.5`], List[6.`, 9.5`], List[4.07`, \
9.5`], List[2.5`, 11.07`], List[2.5`, 13.`], List[2.5`, 20.`], List[2.5`, \
21.93`], List[4.07`, 23.5`], List[6.`, 23.5`], List[17.`, 23.5`], \
List[18.93`, 23.5`], List[20.5`, 21.93`], List[20.5`, 20.`], List[20.5`, \
13.`], List[20.5`, 11.07`], List[18.93`, 9.5`], List[17.`, 9.5`]]]]], \
List[FaceForm[List[RGBColor[0.012`, 0.612`, 0.996`], Opacity[1.`]]], \
FilledCurveBox[List[List[List[0, 2, 0], List[0, 1, 0], List[0, 1, 0]], \
List[List[0, 2, 0], List[0, 1, 0], List[0, 1, 0]]], List[List[List[12.5`, \
12.5`], List[14.5`, 12.5`], List[14.5`, 14.5`], List[12.5`, 14.5`]], \
List[List[8.5`, 14.5`], List[10.5`, 14.5`], List[10.5`, 12.5`], List[8.5`, \
12.5`]]]]], List[FaceForm[List[RGBColor[0.537`, 0.537`, 0.537`], \
Opacity[1.`]]], FilledCurveBox[List[List[List[0, 2, 0], List[0, 1, 0], \
List[0, 1, 0]], List[List[0, 2, 0], List[0, 1, 0], List[0, 1, 0]], \
List[List[0, 2, 0], List[0, 1, 0], List[0, 1, 0]], List[List[0, 2, 0], \
List[0, 1, 0], List[0, 1, 0]], List[List[0, 2, 0], List[0, 1, 0], List[0, 1, \
0]], List[List[0, 2, 0], List[0, 1, 0], List[0, 1, 0]], List[List[0, 2, 0], \
List[0, 1, 0], List[0, 1, 0]]], List[List[List[14.5`, 15.5`], List[16.5`, \
15.5`], List[16.5`, 17.5`], List[14.5`, 17.5`]], List[List[14.5`, 20.5`], \
List[12.5`, 20.5`], List[12.5`, 18.5`], List[14.5`, 18.5`]], List[List[16.5`, \
18.5`], List[18.5`, 18.5`], List[18.5`, 20.5`], List[16.5`, 20.5`]], \
List[List[6.5`, 20.5`], List[4.5`, 20.5`], List[4.5`, 18.5`], List[6.5`, \
18.5`]], List[List[10.5`, 15.5`], List[12.5`, 15.5`], List[12.5`, 17.5`], \
List[10.5`, 17.5`]], List[List[6.5`, 15.5`], List[8.5`, 15.5`], List[8.5`, \
17.5`], List[6.5`, 17.5`]], List[List[10.5`, 18.5`], List[8.5`, 18.5`], \
List[8.5`, 20.5`], List[10.5`, 20.5`]]]]], List[FaceForm[List[RGBColor[1.`, \
1.`, 1.`], Opacity[1.`]]], FilledCurveBox[List[List[List[1, 4, 3], List[0, 1, \
0], List[1, 3, 3], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3]]], \
List[List[List[18.`, 12.`], List[15.791`, 12.`], List[14.`, 11.104`], \
List[14.`, 10.`], List[14.`, 4.`], List[14.`, 2.896000000000001`], \
List[15.791`, 2.`], List[18.`, 2.`], List[20.209`, 2.`], List[22.`, \
2.896000000000001`], List[22.`, 4.`], List[22.`, 10.`], List[22.`, 11.104`], \
List[20.209`, 12.`], List[18.`, 12.`]]]]], \
List[FaceForm[List[RGBColor[0.537`, 0.537`, 0.537`], Opacity[1.`]]], \
FilledCurveBox[List[List[List[1, 4, 3], List[0, 1, 0], List[1, 3, 3], List[1, \
3, 3], List[0, 1, 0], List[1, 3, 3]], List[List[1, 4, 3], List[1, 3, 3], \
List[0, 1, 0], List[1, 3, 3], List[1, 3, 3]], List[List[1, 4, 3], List[1, 3, \
3], List[1, 3, 3], List[1, 3, 3]], List[List[1, 4, 3], List[0, 1, 0], List[1, \
3, 3], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3]]], List[List[List[18.`, \
5.5`], List[15.997`, 5.5`], List[14.5`, 6.292`], List[14.5`, 7.`], \
List[14.5`, 8.411`], List[15.312`, 7.853`], List[16.547`, 7.5`], List[18.`, \
7.5`], List[19.453`, 7.5`], List[20.688`, 7.853`], List[21.5`, 8.411`], \
List[21.5`, 7.`], List[21.5`, 6.292`], List[20.003`, 5.5`], List[18.`, \
5.5`]], List[List[21.5`, 4.`], List[21.5`, 3.292`], List[20.003`, 2.5`], \
List[18.`, 2.5`], List[15.997`, 2.5`], List[14.5`, 3.292`], List[14.5`, 4.`], \
List[14.5`, 5.411`], List[15.312`, 4.853`], List[16.547`, 4.5`], List[18.`, \
4.5`], List[19.453`, 4.5`], List[20.688`, 4.853`], List[21.5`, 5.411`]], \
List[List[18.`, 11.5`], List[20.003`, 11.5`], List[21.5`, 10.708`], \
List[21.5`, 10.`], List[21.5`, 9.292`], List[20.003`, 8.5`], List[18.`, \
8.5`], List[15.997`, 8.5`], List[14.5`, 9.292`], List[14.5`, 10.`], \
List[14.5`, 10.708`], List[15.997`, 11.5`], List[18.`, 11.5`]], \
List[List[18.`, 12.5`], List[15.435`, 12.5`], List[13.5`, 11.425`], \
List[13.5`, 10.`], List[13.5`, 4.`], List[13.5`, 2.575`], List[15.435`, \
1.5`], List[18.`, 1.5`], List[20.565`, 1.5`], List[22.5`, 2.575`], \
List[22.5`, 4.`], List[22.5`, 10.`], List[22.5`, 11.425`], List[20.565`, \
12.5`], List[18.`, 12.5`]]]]]], Rule[AspectRatio, Automatic], Rule[ImageSize, \
List[25.`, 25.`]], Rule[PlotRange, List[List[0.`, 25.`], List[0.`, 25.`]]]], \
GridBox[List[List[RowBox[List[TagBox[\\\"\\\\\\\"Type count: \\\\\\\"\\\", \\\
\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"6\\\", \
\\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"RelationalDatabase: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"MySQL\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"MySQL\\\\\\\"\\\"], List[\
\\\"\\\", PaneBox[InterpretationBox[RowBox[List[TagBox[\\\"RelationalDatabase\
\\\", \\\"SummaryHead\\\"], \\\"[\\\", \
DynamicModuleBox[List[Set[Typeset`open$$, False], Set[Typeset`embedState$$, \
\\\"Ready\\\"]], TemplateBox[List[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource[\\\"\
FEBitmaps\\\", \\\"SummaryBoxOpener\\\"]], RuleDelayed[ButtonFunction, \
Set[Typeset`open$$, True]], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[Evaluator, Automatic], Rule[Method, \\\"Preemptive\\\"]], \
Rule[Alignment, List[Center, Center]], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, \
Times[CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]]], \
GraphicsBox[List[Thickness[0.04`], List[FaceForm[List[RGBColor[0.651`, \
0.651`, 0.651`], Opacity[1.`]]], FilledCurveBox[List[List[List[1, 4, 3], \
List[0, 1, 0], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3], List[0, 1, 0], \
List[1, 3, 3]], List[List[0, 2, 0], List[1, 3, 3], List[0, 1, 0], List[1, 3, \
3], List[0, 1, 0], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3]]], \
List[List[List[20.5`, 4.`], List[20.5`, 3.724`], List[20.276`, 3.5`], \
List[20.`, 3.5`], List[6.`, 3.5`], List[5.724`, 3.5`], List[5.5`, 3.724`], \
List[5.5`, 4.`], List[5.5`, 21.`], List[5.5`, 21.276`], List[5.724`, 21.5`], \
List[6.`, 21.5`], List[20.`, 21.5`], List[20.276`, 21.5`], List[20.5`, \
21.276`], List[20.5`, 21.`]], List[List[20.5`, 22.5`], List[5.5`, 22.5`], \
List[4.947999999999999`, 22.5`], List[4.5`, 22.053`], List[4.5`, 21.5`], \
List[4.5`, 3.5`], List[4.5`, 2.947`], List[4.947999999999999`, 2.5`], \
List[5.5`, 2.5`], List[20.5`, 2.5`], List[21.052`, 2.5`], List[21.5`, \
2.947`], List[21.5`, 3.5`], List[21.5`, 21.5`], List[21.5`, 22.053`], \
List[21.052`, 22.5`], List[20.5`, 22.5`]]]]], \
List[FaceForm[List[RGBColor[0.8670000000000001`, 0.067`, 0.`], \
Opacity[1.`]]], FilledCurveBox[List[List[List[0, 2, 0], List[1, 3, 3], \
List[1, 3, 3], List[0, 1, 0], List[1, 3, 3], List[1, 3, 3]], List[List[0, 2, \
0], List[1, 3, 3], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3], List[1, 3, \
3]], List[List[0, 2, 0], List[1, 3, 3], List[1, 3, 3], List[0, 1, 0], List[1, \
3, 3], List[1, 3, 3]], List[List[0, 2, 0], List[1, 3, 3], List[1, 3, 3], \
List[0, 1, 0], List[1, 3, 3], List[1, 3, 3]], List[List[0, 2, 0], List[1, 3, \
3], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3], List[1, 3, 3]], List[List[0, \
2, 0], List[1, 3, 3], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3], List[1, 3, \
3]], List[List[0, 2, 0], List[1, 3, 3], List[1, 3, 3], List[0, 1, 0], List[1, \
3, 3], List[1, 3, 3]], List[List[0, 2, 0], List[1, 3, 3], List[1, 3, 3], \
List[0, 1, 0], List[1, 3, 3], List[1, 3, 3]], List[List[1, 4, 3], List[0, 1, \
0], List[1, 3, 3], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3]]], \
List[List[List[7.`, 21.5`], List[4.`, 21.5`], List[3.724`, 21.5`], List[3.5`, \
21.276`], List[3.5`, 21.`], List[3.5`, 20.724`], List[3.724`, 20.5`], \
List[4.`, 20.5`], List[7.`, 20.5`], List[7.276`, 20.5`], List[7.5`, 20.724`], \
List[7.5`, 21.`], List[7.5`, 21.276`], List[7.276`, 21.5`], List[7.`, \
21.5`]], List[List[7.`, 19.5`], List[4.`, 19.5`], List[3.724`, 19.5`], \
List[3.5`, 19.276`], List[3.5`, 19.`], List[3.5`, 18.724`], List[3.724`, \
18.5`], List[4.`, 18.5`], List[7.`, 18.5`], List[7.276`, 18.5`], List[7.5`, \
18.724`], List[7.5`, 19.`], List[7.5`, 19.276`], List[7.276`, 19.5`], \
List[7.`, 19.5`]], List[List[7.`, 17.5`], List[4.`, 17.5`], List[3.724`, \
17.5`], List[3.5`, 17.276`], List[3.5`, 17.`], List[3.5`, 16.724`], \
List[3.724`, 16.5`], List[4.`, 16.5`], List[7.`, 16.5`], List[7.276`, 16.5`], \
List[7.5`, 16.724`], List[7.5`, 17.`], List[7.5`, 17.276`], List[7.276`, \
17.5`], List[7.`, 17.5`]], List[List[7.`, 9.5`], List[4.`, 9.5`], \
List[3.724`, 9.5`], List[3.5`, 9.276000000000002`], List[3.5`, 9.`], \
List[3.5`, 8.724`], List[3.724`, 8.5`], List[4.`, 8.5`], List[7.`, 8.5`], \
List[7.276`, 8.5`], List[7.5`, 8.724`], List[7.5`, 9.`], List[7.5`, \
9.276000000000002`], List[7.276`, 9.5`], List[7.`, 9.5`]], List[List[7.`, \
11.5`], List[4.`, 11.5`], List[3.724`, 11.5`], List[3.5`, \
11.276000000000002`], List[3.5`, 11.`], List[3.5`, 10.724`], List[3.724`, \
10.5`], List[4.`, 10.5`], List[7.`, 10.5`], List[7.276`, 10.5`], List[7.5`, \
10.724`], List[7.5`, 11.`], List[7.5`, 11.276000000000002`], List[7.276`, \
11.5`], List[7.`, 11.5`]], List[List[7.`, 13.5`], List[4.`, 13.5`], \
List[3.724`, 13.5`], List[3.5`, 13.276000000000002`], List[3.5`, 13.`], \
List[3.5`, 12.724`], List[3.724`, 12.5`], List[4.`, 12.5`], List[7.`, 12.5`], \
List[7.276`, 12.5`], List[7.5`, 12.724`], List[7.5`, 13.`], List[7.5`, \
13.276000000000002`], List[7.276`, 13.5`], List[7.`, 13.5`]], List[List[7.`, \
15.5`], List[4.`, 15.5`], List[3.724`, 15.5`], List[3.5`, 15.276`], \
List[3.5`, 15.`], List[3.5`, 14.724`], List[3.724`, 14.5`], List[4.`, 14.5`], \
List[7.`, 14.5`], List[7.276`, 14.5`], List[7.5`, 14.724`], List[7.5`, 15.`], \
List[7.5`, 15.276`], List[7.276`, 15.5`], List[7.`, 15.5`]], List[List[7.`, \
5.5`], List[4.`, 5.5`], List[3.724`, 5.5`], List[3.5`, 5.276`], List[3.5`, \
5.`], List[3.5`, 4.724`], List[3.724`, 4.5`], List[4.`, 4.5`], List[7.`, \
4.5`], List[7.276`, 4.5`], List[7.5`, 4.724`], List[7.5`, 5.`], List[7.5`, \
5.276`], List[7.276`, 5.5`], List[7.`, 5.5`]], List[List[7.5`, 7.`], \
List[7.5`, 6.724`], List[7.276`, 6.5`], List[7.`, 6.5`], List[4.`, 6.5`], \
List[3.724`, 6.5`], List[3.5`, 6.724`], List[3.5`, 7.`], List[3.5`, \
7.276000000000002`], List[3.724`, 7.5`], List[4.`, 7.5`], List[7.`, 7.5`], \
List[7.276`, 7.5`], List[7.5`, 7.276000000000002`], List[7.5`, 7.`]]]]], \
List[FaceForm[List[RGBColor[1.`, 1.`, 1.`], Opacity[1.`]]], \
FilledCurveBox[List[List[List[1, 4, 3], List[0, 1, 0], List[1, 3, 3], List[0, \
1, 0], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3]]], List[List[List[20.5`, \
4.`], List[20.5`, 3.724`], List[20.276`, 3.5`], List[20.`, 3.5`], List[6.`, \
3.5`], List[5.724`, 3.5`], List[5.5`, 3.724`], List[5.5`, 4.`], List[5.5`, \
21.`], List[5.5`, 21.276`], List[5.724`, 21.5`], List[6.`, 21.5`], List[20.`, \
21.5`], List[20.276`, 21.5`], List[20.5`, 21.276`], List[20.5`, 21.`]]]], \
FilledCurveBox[List[List[List[1, 4, 3], List[0, 1, 0], List[1, 3, 3], List[1, \
3, 3], List[0, 1, 0], List[1, 3, 3]]], List[List[List[13.`, 18.`], \
List[10.239`, 18.`], List[8.`, 17.015`], List[8.`, 15.8`], List[8.`, 9.2`], \
List[8.`, 7.984999999999999`], List[10.239`, 7.`], List[13.`, 7.`], \
List[15.761`, 7.`], List[18.`, 7.984999999999999`], List[18.`, 9.2`], \
List[18.`, 15.8`], List[18.`, 17.015`], List[15.761`, 18.`], List[13.`, \
18.`]]]]], List[FaceForm[List[RGBColor[0.537`, 0.537`, 0.537`], \
Opacity[1.`]]], FilledCurveBox[List[List[List[1, 4, 3], List[0, 1, 0], \
List[1, 3, 3], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3]], List[List[1, 4, \
3], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3], List[1, 3, 3]], List[List[1, \
4, 3], List[1, 3, 3], List[1, 3, 3], List[1, 3, 3]], List[List[1, 4, 3], \
List[0, 1, 0], List[1, 3, 3], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3]]], \
List[List[List[13.`, 10.8633`], List[10.314`, 10.8633`], List[8.6`, \
11.833300000000001`], List[8.6`, 12.500300000000001`], List[8.6`, 14.1133`], \
List[9.586`, 13.4603`], List[11.151`, 13.0463`], List[13.`, 13.0463`], \
List[14.849`, 13.0463`], List[16.414`, 13.4603`], List[17.4`, 14.1133`], \
List[17.4`, 12.500300000000001`], List[17.4`, 11.833300000000001`], \
List[15.686`, 10.8633`], List[13.`, 10.8633`]], List[List[17.4`, 9.2273`], \
List[17.4`, 8.560300000000002`], List[15.686`, 7.5913`], List[13.`, 7.5913`], \
List[10.314`, 7.5913`], List[8.6`, 8.560300000000002`], List[8.6`, 9.2273`], \
List[8.6`, 10.8413`], List[9.586`, 10.1873`], List[11.151`, \
9.772300000000001`], List[13.`, 9.772300000000001`], List[14.849`, \
9.772300000000001`], List[16.414`, 10.1873`], List[17.4`, 10.8413`]], \
List[List[13.`, 17.4093`], List[15.686`, 17.4093`], List[17.4`, \
16.439300000000003`], List[17.4`, 15.772300000000001`], List[17.4`, \
15.1053`], List[15.686`, 14.1363`], List[13.`, 14.1363`], List[10.314`, \
14.1363`], List[8.6`, 15.1053`], List[8.6`, 15.772300000000001`], List[8.6`, \
16.439300000000003`], List[10.314`, 17.4093`], List[13.`, 17.4093`]], \
List[List[13.`, 18.5003`], List[9.864`, 18.5003`], List[7.5`, 17.3273`], \
List[7.5`, 15.772300000000001`], List[7.5`, 9.2273`], List[7.5`, \
7.673300000000001`], List[9.864`, 6.500300000000001`], List[13.`, \
6.500300000000001`], List[16.136`, 6.500300000000001`], List[18.5`, \
7.673300000000001`], List[18.5`, 9.2273`], List[18.5`, 15.772300000000001`], \
List[18.5`, 17.3273`], List[16.136`, 18.5003`], List[13.`, 18.5003`]]]]]], \
Rule[AspectRatio, Automatic], Rule[ImageSize, List[25.`, 25.`]], \
Rule[PlotRange, List[List[0.`, 25.`], List[0.`, 25.`]]]], \
GridBox[List[List[RowBox[List[TagBox[\\\"\\\\\\\"Table count: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[\\\"6\\\", \\\"SummaryItem\\\"]]]], List[RowBox[List[TagBox[\\\"\\\\\\\
\"Backend: \\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \
\\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"\\\\\\\"MySQL\\\\\\\"\\\", \
\\\"SummaryItem\\\"]]]]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[2]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaseStyle, \
List[Rule[ShowStringCharacters, False], Rule[NumberMarks, False], \
Rule[PrintPrecision, 3], Rule[ShowSyntaxStyles, False]]]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]], \
Rule[\\\"Rows\\\", List[List[Top]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaselinePosition, List[1, \
1]]]], Rule[True, \
GridBox[List[List[PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource[\\\"\
FEBitmaps\\\", \\\"SummaryBoxCloser\\\"]], RuleDelayed[ButtonFunction, \
Set[Typeset`open$$, False]], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[Evaluator, Automatic], Rule[Method, \\\"Preemptive\\\"]], \
Rule[Alignment, List[Center, Center]], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, \
Times[CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]]], \
GraphicsBox[List[Thickness[0.04`], List[FaceForm[List[RGBColor[0.651`, \
0.651`, 0.651`], Opacity[1.`]]], FilledCurveBox[List[List[List[1, 4, 3], \
List[0, 1, 0], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3], List[0, 1, 0], \
List[1, 3, 3]], List[List[0, 2, 0], List[1, 3, 3], List[0, 1, 0], List[1, 3, \
3], List[0, 1, 0], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3]]], \
List[List[List[20.5`, 4.`], List[20.5`, 3.724`], List[20.276`, 3.5`], \
List[20.`, 3.5`], List[6.`, 3.5`], List[5.724`, 3.5`], List[5.5`, 3.724`], \
List[5.5`, 4.`], List[5.5`, 21.`], List[5.5`, 21.276`], List[5.724`, 21.5`], \
List[6.`, 21.5`], List[20.`, 21.5`], List[20.276`, 21.5`], List[20.5`, \
21.276`], List[20.5`, 21.`]], List[List[20.5`, 22.5`], List[5.5`, 22.5`], \
List[4.947999999999999`, 22.5`], List[4.5`, 22.053`], List[4.5`, 21.5`], \
List[4.5`, 3.5`], List[4.5`, 2.947`], List[4.947999999999999`, 2.5`], \
List[5.5`, 2.5`], List[20.5`, 2.5`], List[21.052`, 2.5`], List[21.5`, \
2.947`], List[21.5`, 3.5`], List[21.5`, 21.5`], List[21.5`, 22.053`], \
List[21.052`, 22.5`], List[20.5`, 22.5`]]]]], \
List[FaceForm[List[RGBColor[0.8670000000000001`, 0.067`, 0.`], \
Opacity[1.`]]], FilledCurveBox[List[List[List[0, 2, 0], List[1, 3, 3], \
List[1, 3, 3], List[0, 1, 0], List[1, 3, 3], List[1, 3, 3]], List[List[0, 2, \
0], List[1, 3, 3], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3], List[1, 3, \
3]], List[List[0, 2, 0], List[1, 3, 3], List[1, 3, 3], List[0, 1, 0], List[1, \
3, 3], List[1, 3, 3]], List[List[0, 2, 0], List[1, 3, 3], List[1, 3, 3], \
List[0, 1, 0], List[1, 3, 3], List[1, 3, 3]], List[List[0, 2, 0], List[1, 3, \
3], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3], List[1, 3, 3]], List[List[0, \
2, 0], List[1, 3, 3], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3], List[1, 3, \
3]], List[List[0, 2, 0], List[1, 3, 3], List[1, 3, 3], List[0, 1, 0], List[1, \
3, 3], List[1, 3, 3]], List[List[0, 2, 0], List[1, 3, 3], List[1, 3, 3], \
List[0, 1, 0], List[1, 3, 3], List[1, 3, 3]], List[List[1, 4, 3], List[0, 1, \
0], List[1, 3, 3], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3]]], \
List[List[List[7.`, 21.5`], List[4.`, 21.5`], List[3.724`, 21.5`], List[3.5`, \
21.276`], List[3.5`, 21.`], List[3.5`, 20.724`], List[3.724`, 20.5`], \
List[4.`, 20.5`], List[7.`, 20.5`], List[7.276`, 20.5`], List[7.5`, 20.724`], \
List[7.5`, 21.`], List[7.5`, 21.276`], List[7.276`, 21.5`], List[7.`, \
21.5`]], List[List[7.`, 19.5`], List[4.`, 19.5`], List[3.724`, 19.5`], \
List[3.5`, 19.276`], List[3.5`, 19.`], List[3.5`, 18.724`], List[3.724`, \
18.5`], List[4.`, 18.5`], List[7.`, 18.5`], List[7.276`, 18.5`], List[7.5`, \
18.724`], List[7.5`, 19.`], List[7.5`, 19.276`], List[7.276`, 19.5`], \
List[7.`, 19.5`]], List[List[7.`, 17.5`], List[4.`, 17.5`], List[3.724`, \
17.5`], List[3.5`, 17.276`], List[3.5`, 17.`], List[3.5`, 16.724`], \
List[3.724`, 16.5`], List[4.`, 16.5`], List[7.`, 16.5`], List[7.276`, 16.5`], \
List[7.5`, 16.724`], List[7.5`, 17.`], List[7.5`, 17.276`], List[7.276`, \
17.5`], List[7.`, 17.5`]], List[List[7.`, 9.5`], List[4.`, 9.5`], \
List[3.724`, 9.5`], List[3.5`, 9.276000000000002`], List[3.5`, 9.`], \
List[3.5`, 8.724`], List[3.724`, 8.5`], List[4.`, 8.5`], List[7.`, 8.5`], \
List[7.276`, 8.5`], List[7.5`, 8.724`], List[7.5`, 9.`], List[7.5`, \
9.276000000000002`], List[7.276`, 9.5`], List[7.`, 9.5`]], List[List[7.`, \
11.5`], List[4.`, 11.5`], List[3.724`, 11.5`], List[3.5`, \
11.276000000000002`], List[3.5`, 11.`], List[3.5`, 10.724`], List[3.724`, \
10.5`], List[4.`, 10.5`], List[7.`, 10.5`], List[7.276`, 10.5`], List[7.5`, \
10.724`], List[7.5`, 11.`], List[7.5`, 11.276000000000002`], List[7.276`, \
11.5`], List[7.`, 11.5`]], List[List[7.`, 13.5`], List[4.`, 13.5`], \
List[3.724`, 13.5`], List[3.5`, 13.276000000000002`], List[3.5`, 13.`], \
List[3.5`, 12.724`], List[3.724`, 12.5`], List[4.`, 12.5`], List[7.`, 12.5`], \
List[7.276`, 12.5`], List[7.5`, 12.724`], List[7.5`, 13.`], List[7.5`, \
13.276000000000002`], List[7.276`, 13.5`], List[7.`, 13.5`]], List[List[7.`, \
15.5`], List[4.`, 15.5`], List[3.724`, 15.5`], List[3.5`, 15.276`], \
List[3.5`, 15.`], List[3.5`, 14.724`], List[3.724`, 14.5`], List[4.`, 14.5`], \
List[7.`, 14.5`], List[7.276`, 14.5`], List[7.5`, 14.724`], List[7.5`, 15.`], \
List[7.5`, 15.276`], List[7.276`, 15.5`], List[7.`, 15.5`]], List[List[7.`, \
5.5`], List[4.`, 5.5`], List[3.724`, 5.5`], List[3.5`, 5.276`], List[3.5`, \
5.`], List[3.5`, 4.724`], List[3.724`, 4.5`], List[4.`, 4.5`], List[7.`, \
4.5`], List[7.276`, 4.5`], List[7.5`, 4.724`], List[7.5`, 5.`], List[7.5`, \
5.276`], List[7.276`, 5.5`], List[7.`, 5.5`]], List[List[7.5`, 7.`], \
List[7.5`, 6.724`], List[7.276`, 6.5`], List[7.`, 6.5`], List[4.`, 6.5`], \
List[3.724`, 6.5`], List[3.5`, 6.724`], List[3.5`, 7.`], List[3.5`, \
7.276000000000002`], List[3.724`, 7.5`], List[4.`, 7.5`], List[7.`, 7.5`], \
List[7.276`, 7.5`], List[7.5`, 7.276000000000002`], List[7.5`, 7.`]]]]], \
List[FaceForm[List[RGBColor[1.`, 1.`, 1.`], Opacity[1.`]]], \
FilledCurveBox[List[List[List[1, 4, 3], List[0, 1, 0], List[1, 3, 3], List[0, \
1, 0], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3]]], List[List[List[20.5`, \
4.`], List[20.5`, 3.724`], List[20.276`, 3.5`], List[20.`, 3.5`], List[6.`, \
3.5`], List[5.724`, 3.5`], List[5.5`, 3.724`], List[5.5`, 4.`], List[5.5`, \
21.`], List[5.5`, 21.276`], List[5.724`, 21.5`], List[6.`, 21.5`], List[20.`, \
21.5`], List[20.276`, 21.5`], List[20.5`, 21.276`], List[20.5`, 21.`]]]], \
FilledCurveBox[List[List[List[1, 4, 3], List[0, 1, 0], List[1, 3, 3], List[1, \
3, 3], List[0, 1, 0], List[1, 3, 3]]], List[List[List[13.`, 18.`], \
List[10.239`, 18.`], List[8.`, 17.015`], List[8.`, 15.8`], List[8.`, 9.2`], \
List[8.`, 7.984999999999999`], List[10.239`, 7.`], List[13.`, 7.`], \
List[15.761`, 7.`], List[18.`, 7.984999999999999`], List[18.`, 9.2`], \
List[18.`, 15.8`], List[18.`, 17.015`], List[15.761`, 18.`], List[13.`, \
18.`]]]]], List[FaceForm[List[RGBColor[0.537`, 0.537`, 0.537`], \
Opacity[1.`]]], FilledCurveBox[List[List[List[1, 4, 3], List[0, 1, 0], \
List[1, 3, 3], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3]], List[List[1, 4, \
3], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3], List[1, 3, 3]], List[List[1, \
4, 3], List[1, 3, 3], List[1, 3, 3], List[1, 3, 3]], List[List[1, 4, 3], \
List[0, 1, 0], List[1, 3, 3], List[1, 3, 3], List[0, 1, 0], List[1, 3, 3]]], \
List[List[List[13.`, 10.8633`], List[10.314`, 10.8633`], List[8.6`, \
11.833300000000001`], List[8.6`, 12.500300000000001`], List[8.6`, 14.1133`], \
List[9.586`, 13.4603`], List[11.151`, 13.0463`], List[13.`, 13.0463`], \
List[14.849`, 13.0463`], List[16.414`, 13.4603`], List[17.4`, 14.1133`], \
List[17.4`, 12.500300000000001`], List[17.4`, 11.833300000000001`], \
List[15.686`, 10.8633`], List[13.`, 10.8633`]], List[List[17.4`, 9.2273`], \
List[17.4`, 8.560300000000002`], List[15.686`, 7.5913`], List[13.`, 7.5913`], \
List[10.314`, 7.5913`], List[8.6`, 8.560300000000002`], List[8.6`, 9.2273`], \
List[8.6`, 10.8413`], List[9.586`, 10.1873`], List[11.151`, \
9.772300000000001`], List[13.`, 9.772300000000001`], List[14.849`, \
9.772300000000001`], List[16.414`, 10.1873`], List[17.4`, 10.8413`]], \
List[List[13.`, 17.4093`], List[15.686`, 17.4093`], List[17.4`, \
16.439300000000003`], List[17.4`, 15.772300000000001`], List[17.4`, \
15.1053`], List[15.686`, 14.1363`], List[13.`, 14.1363`], List[10.314`, \
14.1363`], List[8.6`, 15.1053`], List[8.6`, 15.772300000000001`], List[8.6`, \
16.439300000000003`], List[10.314`, 17.4093`], List[13.`, 17.4093`]], \
List[List[13.`, 18.5003`], List[9.864`, 18.5003`], List[7.5`, 17.3273`], \
List[7.5`, 15.772300000000001`], List[7.5`, 9.2273`], List[7.5`, \
7.673300000000001`], List[9.864`, 6.500300000000001`], List[13.`, \
6.500300000000001`], List[16.136`, 6.500300000000001`], List[18.5`, \
7.673300000000001`], List[18.5`, 9.2273`], List[18.5`, 15.772300000000001`], \
List[18.5`, 17.3273`], List[16.136`, 18.5003`], List[13.`, 18.5003`]]]]]], \
Rule[AspectRatio, Automatic], Rule[ImageSize, List[25.`, 25.`]], \
Rule[PlotRange, List[List[0.`, 25.`], List[0.`, 25.`]]]], \
GridBox[List[List[RowBox[List[TagBox[\\\"\\\\\\\"Table count: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[\\\"6\\\", \\\"SummaryItem\\\"]]]], List[RowBox[List[TagBox[\\\"\\\\\\\
\"Backend: \\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \
\\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"\\\\\\\"MySQL\\\\\\\"\\\", \
\\\"SummaryItem\\\"]]]], List[TagBox[TagBox[GridBox[List[List[TagBox[\\\"\\\\\
\\\"Tables: \\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \
TagBox[GridBox[List[List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, \
False]], InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"indexes\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"indexes\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[TagBox[DynamicModuleBox[List[Set[Typeset`var$\
$, False]], InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"id\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"id\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"NativeTypeString:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"INTEGER(11)\\\\\\\"\\\"], \
List[StyleBox[\\\"\\\\\\\"Default:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"None\\\"], List[StyleBox[\\\"\\\\\\\"Indexed:\
\\\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"False\\\"], \
List[StyleBox[\\\"\\\\\\\"Name:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"\\\\\\\"id\\\\\\\"\\\"], List[StyleBox[\\\"\\\
\\\\\"Nullable:\\\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"False\\\"]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]]], \\\"Grid\\\"], Rule[ImageMargins, 0]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, \
1]]]]], Dynamic[Typeset`var$$], Rule[Alignment, Automatic], Rule[ImageSize, \
Automatic], Rule[ImageMargins, 0], Rule[BaseStyle, List[]], \
Rule[DefaultBaseStyle, \\\"OpenerView\\\"], Rule[BaselinePosition, \
Baseline]], Rule[Deployed, False], Rule[StripOnInput, False]], \
OpenerView[List[\\\"id\\\", Grid[List[List[Style[\\\"NativeTypeString:\\\", \
GrayLevel[0.5`]], \\\"INTEGER(11)\\\"], List[Style[\\\"Default:\\\", \
GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], \
False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \\\"id\\\"], \
List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], False]], Rule[Alignment, \
Left]]], False]], Rule[DynamicModuleValues, Automatic]], \
Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"data_id\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"data_id\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"NativeTypeString:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"INTEGER(20)\\\\\\\"\\\"], \
List[StyleBox[\\\"\\\\\\\"Default:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"None\\\"], List[StyleBox[\\\"\\\\\\\"Indexed:\
\\\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"False\\\"], \
List[StyleBox[\\\"\\\\\\\"Name:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"\\\\\\\"data_id\\\\\\\"\\\"], \
List[StyleBox[\\\"\\\\\\\"Nullable:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"True\\\"]], Rule[GridBoxAlignment, List[Rule[\
\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \\\"Grid\\\"], \
Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxBackground, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"data_id\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"INTEGER(20)\\\"], List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], \
List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\
\", GrayLevel[0.5`]], \\\"data_id\\\"], List[Style[\\\"Nullable:\\\", \
GrayLevel[0.5`]], True]], Rule[Alignment, Left]]], False]], \
Rule[DynamicModuleValues, Automatic]], Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"prod_id\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"prod_id\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"NativeTypeString:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"INTEGER(20)\\\\\\\"\\\"], \
List[StyleBox[\\\"\\\\\\\"Default:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"None\\\"], List[StyleBox[\\\"\\\\\\\"Indexed:\
\\\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"False\\\"], \
List[StyleBox[\\\"\\\\\\\"Name:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"\\\\\\\"prod_id\\\\\\\"\\\"], \
List[StyleBox[\\\"\\\\\\\"Nullable:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"True\\\"]], Rule[GridBoxAlignment, List[Rule[\
\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \\\"Grid\\\"], \
Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxBackground, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"prod_id\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"INTEGER(20)\\\"], List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], \
List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\
\", GrayLevel[0.5`]], \\\"prod_id\\\"], List[Style[\\\"Nullable:\\\", \
GrayLevel[0.5`]], True]], Rule[Alignment, Left]]], False]], \
Rule[DynamicModuleValues, Automatic]], Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"work_id\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"work_id\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"NativeTypeString:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"INTEGER(20)\\\\\\\"\\\"], \
List[StyleBox[\\\"\\\\\\\"Default:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"None\\\"], List[StyleBox[\\\"\\\\\\\"Indexed:\
\\\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"False\\\"], \
List[StyleBox[\\\"\\\\\\\"Name:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"\\\\\\\"work_id\\\\\\\"\\\"], \
List[StyleBox[\\\"\\\\\\\"Nullable:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"True\\\"]], Rule[GridBoxAlignment, List[Rule[\
\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \\\"Grid\\\"], \
Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxBackground, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"work_id\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"INTEGER(20)\\\"], List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], \
List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\
\", GrayLevel[0.5`]], \\\"work_id\\\"], List[Style[\\\"Nullable:\\\", \
GrayLevel[0.5`]], True]], Rule[Alignment, Left]]], False]], \
Rule[DynamicModuleValues, Automatic]], Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"tovar_id\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"tovar_id\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"NativeTypeString:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"INTEGER(20)\\\\\\\"\\\"], \
List[StyleBox[\\\"\\\\\\\"Default:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"None\\\"], List[StyleBox[\\\"\\\\\\\"Indexed:\
\\\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"False\\\"], \
List[StyleBox[\\\"\\\\\\\"Name:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"\\\\\\\"tovar_id\\\\\\\"\\\"], List[StyleBox[\
\\\"\\\\\\\"Nullable:\\\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, \
False]], \\\"True\\\"]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]]], \\\"Grid\\\"], Rule[ImageMargins, 0]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, \
1]]]]], Dynamic[Typeset`var$$], Rule[Alignment, Automatic], Rule[ImageSize, \
Automatic], Rule[ImageMargins, 0], Rule[BaseStyle, List[]], \
Rule[DefaultBaseStyle, \\\"OpenerView\\\"], Rule[BaselinePosition, \
Baseline]], Rule[Deployed, False], Rule[StripOnInput, False]], \
OpenerView[List[\\\"tovar_id\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"INTEGER(20)\\\"], List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], \
List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\
\", GrayLevel[0.5`]], \\\"tovar_id\\\"], List[Style[\\\"Nullable:\\\", \
GrayLevel[0.5`]], True]], Rule[Alignment, Left]]], False]], \
Rule[DynamicModuleValues, Automatic]], Function[Setting[Slot[1], \
List[0]]]]]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[DefaultBaseStyle, \\\"Column\\\"], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \\\"Column\\\"], \
Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxBackground, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"indexes\\\", \
Column[List[OpenerView[List[\\\"id\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"INTEGER(11)\\\"], List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], \
List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\
\", GrayLevel[0.5`]], \\\"id\\\"], List[Style[\\\"Nullable:\\\", \
GrayLevel[0.5`]], False]], Rule[Alignment, Left]]]], \
OpenerView[List[\\\"data_id\\\", Grid[List[List[Style[\\\"NativeTypeString:\\\
\", GrayLevel[0.5`]], \\\"INTEGER(20)\\\"], List[Style[\\\"Default:\\\", \
GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], \
False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \\\"data_id\\\"], \
List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], True]], Rule[Alignment, \
Left]]]], OpenerView[List[\\\"prod_id\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"INTEGER(20)\\\"], List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], \
List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\
\", GrayLevel[0.5`]], \\\"prod_id\\\"], List[Style[\\\"Nullable:\\\", \
GrayLevel[0.5`]], True]], Rule[Alignment, Left]]]], \
OpenerView[List[\\\"work_id\\\", Grid[List[List[Style[\\\"NativeTypeString:\\\
\", GrayLevel[0.5`]], \\\"INTEGER(20)\\\"], List[Style[\\\"Default:\\\", \
GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], \
False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \\\"work_id\\\"], \
List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], True]], Rule[Alignment, \
Left]]]], OpenerView[List[\\\"tovar_id\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"INTEGER(20)\\\"], List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], \
List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\
\", GrayLevel[0.5`]], \\\"tovar_id\\\"], List[Style[\\\"Nullable:\\\", \
GrayLevel[0.5`]], True]], Rule[Alignment, Left]]]]]]], False]], \
Rule[DynamicModuleValues, Automatic]], Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"dataintro\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"dataintro\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[TagBox[DynamicModuleBox[List[Set[Typeset`var$\
$, False]], InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"id_d\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"id_d\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"NativeTypeString:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"INTEGER(11)\\\\\\\"\\\"], \
List[StyleBox[\\\"\\\\\\\"Default:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"None\\\"], List[StyleBox[\\\"\\\\\\\"Indexed:\
\\\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"False\\\"], \
List[StyleBox[\\\"\\\\\\\"Name:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"\\\\\\\"id_d\\\\\\\"\\\"], List[StyleBox[\\\"\
\\\\\\\"Nullable:\\\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"False\\\"]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]]], \\\"Grid\\\"], Rule[ImageMargins, 0]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, \
1]]]]], Dynamic[Typeset`var$$], Rule[Alignment, Automatic], Rule[ImageSize, \
Automatic], Rule[ImageMargins, 0], Rule[BaseStyle, List[]], \
Rule[DefaultBaseStyle, \\\"OpenerView\\\"], Rule[BaselinePosition, \
Baseline]], Rule[Deployed, False], Rule[StripOnInput, False]], \
OpenerView[List[\\\"id_d\\\", Grid[List[List[Style[\\\"NativeTypeString:\\\", \
GrayLevel[0.5`]], \\\"INTEGER(11)\\\"], List[Style[\\\"Default:\\\", \
GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], \
False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \\\"id_d\\\"], \
List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], False]], Rule[Alignment, \
Left]]], False]], Rule[DynamicModuleValues, Automatic]], \
Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"count\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"count\\\\\\\"\\\"], List[\
\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"NativeTypeString:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"DOUBLE\\\\\\\
\"\\\"], List[StyleBox[\\\"\\\\\\\"Default:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"None\\\"], List[StyleBox[\\\"\\\\\\\"Indexed:\
\\\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"False\\\"], \
List[StyleBox[\\\"\\\\\\\"Name:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"\\\\\\\"count\\\\\\\"\\\"], \
List[StyleBox[\\\"\\\\\\\"Nullable:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"True\\\"]], Rule[GridBoxAlignment, List[Rule[\
\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \\\"Grid\\\"], \
Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxBackground, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"count\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"DOUBLE\\\"], List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], \
List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\
\", GrayLevel[0.5`]], \\\"count\\\"], List[Style[\\\"Nullable:\\\", \
GrayLevel[0.5`]], True]], Rule[Alignment, Left]]], False]], \
Rule[DynamicModuleValues, Automatic]], Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"datareg\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"datareg\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"NativeTypeString:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\\\\\"\\\"], List[StyleBox[\\\"\\\\\\\"Default:\\\
\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"None\\\"], \
List[StyleBox[\\\"\\\\\\\"Indexed:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"False\\\"], List[StyleBox[\\\"\\\\\\\"Name:\\\
\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"datareg\\\\\\\"\\\"], List[StyleBox[\\\"\\\\\\\"Nullable:\\\\\\\"\
\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"True\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Grid\\\"], Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"datareg\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\\\"], \
List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\
\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \
\\\"datareg\\\"], List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], True]], \
Rule[Alignment, Left]]], False]], Rule[DynamicModuleValues, Automatic]], \
Function[Setting[Slot[1], List[0]]]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[DefaultBaseStyle, \
\\\"Column\\\"], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Column\\\"], Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"dataintro\\\", \
Column[List[OpenerView[List[\\\"id_d\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"INTEGER(11)\\\"], List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], \
List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\
\", GrayLevel[0.5`]], \\\"id_d\\\"], List[Style[\\\"Nullable:\\\", \
GrayLevel[0.5`]], False]], Rule[Alignment, Left]]]], \
OpenerView[List[\\\"count\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"DOUBLE\\\"], List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], \
List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\
\", GrayLevel[0.5`]], \\\"count\\\"], List[Style[\\\"Nullable:\\\", \
GrayLevel[0.5`]], True]], Rule[Alignment, Left]]]], \
OpenerView[List[\\\"datareg\\\", Grid[List[List[Style[\\\"NativeTypeString:\\\
\", GrayLevel[0.5`]], \\\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\\\"], \
List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\
\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \
\\\"datareg\\\"], List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], True]], \
Rule[Alignment, Left]]]]]]], False]], Rule[DynamicModuleValues, Automatic]], \
Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"tovar\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"tovar\\\\\\\"\\\"], List[\
\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[TagBox[DynamicModuleBox[List[Set[Typeset`var$\
$, False]], InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"id_t\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"id_t\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"NativeTypeString:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"INTEGER(11)\\\\\\\"\\\"], \
List[StyleBox[\\\"\\\\\\\"Default:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"None\\\"], List[StyleBox[\\\"\\\\\\\"Indexed:\
\\\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"False\\\"], \
List[StyleBox[\\\"\\\\\\\"Name:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"\\\\\\\"id_t\\\\\\\"\\\"], List[StyleBox[\\\"\
\\\\\\\"Nullable:\\\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"False\\\"]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]]], \\\"Grid\\\"], Rule[ImageMargins, 0]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, \
1]]]]], Dynamic[Typeset`var$$], Rule[Alignment, Automatic], Rule[ImageSize, \
Automatic], Rule[ImageMargins, 0], Rule[BaseStyle, List[]], \
Rule[DefaultBaseStyle, \\\"OpenerView\\\"], Rule[BaselinePosition, \
Baseline]], Rule[Deployed, False], Rule[StripOnInput, False]], \
OpenerView[List[\\\"id_t\\\", Grid[List[List[Style[\\\"NativeTypeString:\\\", \
GrayLevel[0.5`]], \\\"INTEGER(11)\\\"], List[Style[\\\"Default:\\\", \
GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], \
False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \\\"id_t\\\"], \
List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], False]], Rule[Alignment, \
Left]]], False]], Rule[DynamicModuleValues, Automatic]], \
Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"name\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"name\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"NativeTypeString:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\\\\\"\\\"], List[StyleBox[\\\"\\\\\\\"Default:\\\
\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"None\\\"], \
List[StyleBox[\\\"\\\\\\\"Indexed:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"False\\\"], List[StyleBox[\\\"\\\\\\\"Name:\\\
\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"name\\\\\
\\\"\\\"], List[StyleBox[\\\"\\\\\\\"Nullable:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"True\\\"]], Rule[GridBoxAlignment, List[Rule[\
\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \\\"Grid\\\"], \
Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxBackground, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"name\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\\\"], \
List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\
\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \
\\\"name\\\"], List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], True]], \
Rule[Alignment, Left]]], False]], Rule[DynamicModuleValues, Automatic]], \
Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"kod\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"kod\\\\\\\"\\\"], List[\\\
\"\\\", PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"\
NativeTypeString:\\\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"INTEGER(11)\\\\\\\"\\\"], \
List[StyleBox[\\\"\\\\\\\"Default:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"None\\\"], List[StyleBox[\\\"\\\\\\\"Indexed:\
\\\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"False\\\"], \
List[StyleBox[\\\"\\\\\\\"Name:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"\\\\\\\"kod\\\\\\\"\\\"], \
List[StyleBox[\\\"\\\\\\\"Nullable:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"True\\\"]], Rule[GridBoxAlignment, List[Rule[\
\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \\\"Grid\\\"], \
Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxBackground, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"kod\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"INTEGER(11)\\\"], List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], \
List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\
\", GrayLevel[0.5`]], \\\"kod\\\"], List[Style[\\\"Nullable:\\\", \
GrayLevel[0.5`]], True]], Rule[Alignment, Left]]], False]], \
Rule[DynamicModuleValues, Automatic]], Function[Setting[Slot[1], \
List[0]]]]]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[DefaultBaseStyle, \\\"Column\\\"], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \\\"Column\\\"], \
Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxBackground, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"tovar\\\", \
Column[List[OpenerView[List[\\\"id_t\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"INTEGER(11)\\\"], List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], \
List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\
\", GrayLevel[0.5`]], \\\"id_t\\\"], List[Style[\\\"Nullable:\\\", \
GrayLevel[0.5`]], False]], Rule[Alignment, Left]]]], OpenerView[List[\\\"name\
\\\", Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\\\"], \
List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\
\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \
\\\"name\\\"], List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], True]], \
Rule[Alignment, Left]]]], OpenerView[List[\\\"kod\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"INTEGER(11)\\\"], List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], \
List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\
\", GrayLevel[0.5`]], \\\"kod\\\"], List[Style[\\\"Nullable:\\\", \
GrayLevel[0.5`]], True]], Rule[Alignment, Left]]]]]]], False]], \
Rule[DynamicModuleValues, Automatic]], Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"prokatinfo\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"prokatinfo\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[TagBox[DynamicModuleBox[List[Set[Typeset`var$\
$, False]], InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"id_pr\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"id_pr\\\\\\\"\\\"], List[\
\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"NativeTypeString:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"INTEGER(11)\\\\\\\"\\\"], \
List[StyleBox[\\\"\\\\\\\"Default:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"None\\\"], List[StyleBox[\\\"\\\\\\\"Indexed:\
\\\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"False\\\"], \
List[StyleBox[\\\"\\\\\\\"Name:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"\\\\\\\"id_pr\\\\\\\"\\\"], \
List[StyleBox[\\\"\\\\\\\"Nullable:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"False\\\"]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \\\"Grid\\\"], \
Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxBackground, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"id_pr\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"INTEGER(11)\\\"], List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], \
List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\
\", GrayLevel[0.5`]], \\\"id_pr\\\"], List[Style[\\\"Nullable:\\\", \
GrayLevel[0.5`]], False]], Rule[Alignment, Left]]], False]], \
Rule[DynamicModuleValues, Automatic]], Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"name\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"name\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"NativeTypeString:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\\\\\"\\\"], List[StyleBox[\\\"\\\\\\\"Default:\\\
\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"None\\\"], \
List[StyleBox[\\\"\\\\\\\"Indexed:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"False\\\"], List[StyleBox[\\\"\\\\\\\"Name:\\\
\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"name\\\\\
\\\"\\\"], List[StyleBox[\\\"\\\\\\\"Nullable:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"True\\\"]], Rule[GridBoxAlignment, List[Rule[\
\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \\\"Grid\\\"], \
Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxBackground, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"name\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\\\"], \
List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\
\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \
\\\"name\\\"], List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], True]], \
Rule[Alignment, Left]]], False]], Rule[DynamicModuleValues, Automatic]], \
Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"kod\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"kod\\\\\\\"\\\"], List[\\\
\"\\\", PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"\
NativeTypeString:\\\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"INTEGER(20)\\\\\\\"\\\"], \
List[StyleBox[\\\"\\\\\\\"Default:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"None\\\"], List[StyleBox[\\\"\\\\\\\"Indexed:\
\\\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"False\\\"], \
List[StyleBox[\\\"\\\\\\\"Name:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"\\\\\\\"kod\\\\\\\"\\\"], \
List[StyleBox[\\\"\\\\\\\"Nullable:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"True\\\"]], Rule[GridBoxAlignment, List[Rule[\
\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \\\"Grid\\\"], \
Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxBackground, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"kod\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"INTEGER(20)\\\"], List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], \
List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\
\", GrayLevel[0.5`]], \\\"kod\\\"], List[Style[\\\"Nullable:\\\", \
GrayLevel[0.5`]], True]], Rule[Alignment, Left]]], False]], \
Rule[DynamicModuleValues, Automatic]], Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"count\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"count\\\\\\\"\\\"], List[\
\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"NativeTypeString:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"DOUBLE\\\\\\\
\"\\\"], List[StyleBox[\\\"\\\\\\\"Default:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"None\\\"], List[StyleBox[\\\"\\\\\\\"Indexed:\
\\\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"False\\\"], \
List[StyleBox[\\\"\\\\\\\"Name:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"\\\\\\\"count\\\\\\\"\\\"], \
List[StyleBox[\\\"\\\\\\\"Nullable:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"True\\\"]], Rule[GridBoxAlignment, List[Rule[\
\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \\\"Grid\\\"], \
Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxBackground, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"count\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"DOUBLE\\\"], List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], \
List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\
\", GrayLevel[0.5`]], \\\"count\\\"], List[Style[\\\"Nullable:\\\", \
GrayLevel[0.5`]], True]], Rule[Alignment, Left]]], False]], \
Rule[DynamicModuleValues, Automatic]], Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"starttime\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"starttime\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"NativeTypeString:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\\\\\"\\\"], List[StyleBox[\\\"\\\\\\\"Default:\\\
\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"None\\\"], \
List[StyleBox[\\\"\\\\\\\"Indexed:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"False\\\"], List[StyleBox[\\\"\\\\\\\"Name:\\\
\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"starttime\\\\\\\"\\\"], List[StyleBox[\\\"\\\\\\\"Nullable:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"True\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Grid\\\"], Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"starttime\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\\\"], \
List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\
\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \
\\\"starttime\\\"], List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], True]], \
Rule[Alignment, Left]]], False]], Rule[DynamicModuleValues, Automatic]], \
Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"endtime\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"endtime\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"NativeTypeString:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\\\\\"\\\"], List[StyleBox[\\\"\\\\\\\"Default:\\\
\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"None\\\"], \
List[StyleBox[\\\"\\\\\\\"Indexed:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"False\\\"], List[StyleBox[\\\"\\\\\\\"Name:\\\
\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"endtime\\\\\\\"\\\"], List[StyleBox[\\\"\\\\\\\"Nullable:\\\\\\\"\
\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"True\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Grid\\\"], Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"endtime\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\\\"], \
List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\
\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \
\\\"endtime\\\"], List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], True]], \
Rule[Alignment, Left]]], False]], Rule[DynamicModuleValues, Automatic]], \
Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"datareg\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"datareg\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"NativeTypeString:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\\\\\"\\\"], List[StyleBox[\\\"\\\\\\\"Default:\\\
\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"None\\\"], \
List[StyleBox[\\\"\\\\\\\"Indexed:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"False\\\"], List[StyleBox[\\\"\\\\\\\"Name:\\\
\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"datareg\\\\\\\"\\\"], List[StyleBox[\\\"\\\\\\\"Nullable:\\\\\\\"\
\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"True\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Grid\\\"], Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"datareg\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\\\"], \
List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\
\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \
\\\"datareg\\\"], List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], True]], \
Rule[Alignment, Left]]], False]], Rule[DynamicModuleValues, Automatic]], \
Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"fnameprod\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"fnameprod\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"NativeTypeString:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\\\\\"\\\"], List[StyleBox[\\\"\\\\\\\"Default:\\\
\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"None\\\"], \
List[StyleBox[\\\"\\\\\\\"Indexed:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"False\\\"], List[StyleBox[\\\"\\\\\\\"Name:\\\
\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"fnameprod\\\\\\\"\\\"], List[StyleBox[\\\"\\\\\\\"Nullable:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"True\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Grid\\\"], Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"fnameprod\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\\\"], \
List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\
\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \
\\\"fnameprod\\\"], List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], True]], \
Rule[Alignment, Left]]], False]], Rule[DynamicModuleValues, Automatic]], \
Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"lnameprod\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"lnameprod\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"NativeTypeString:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\\\\\"\\\"], List[StyleBox[\\\"\\\\\\\"Default:\\\
\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"None\\\"], \
List[StyleBox[\\\"\\\\\\\"Indexed:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"False\\\"], List[StyleBox[\\\"\\\\\\\"Name:\\\
\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"lnameprod\\\\\\\"\\\"], List[StyleBox[\\\"\\\\\\\"Nullable:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"True\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Grid\\\"], Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"lnameprod\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\\\"], \
List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\
\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \
\\\"lnameprod\\\"], List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], True]], \
Rule[Alignment, Left]]], False]], Rule[DynamicModuleValues, Automatic]], \
Function[Setting[Slot[1], List[0]]]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[DefaultBaseStyle, \
\\\"Column\\\"], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Column\\\"], Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"prokatinfo\\\", \
Column[List[OpenerView[List[\\\"id_pr\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"INTEGER(11)\\\"], List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], \
List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\
\", GrayLevel[0.5`]], \\\"id_pr\\\"], List[Style[\\\"Nullable:\\\", \
GrayLevel[0.5`]], False]], Rule[Alignment, Left]]]], OpenerView[List[\\\"name\
\\\", Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\\\"], \
List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\
\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \
\\\"name\\\"], List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], True]], \
Rule[Alignment, Left]]]], OpenerView[List[\\\"kod\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"INTEGER(20)\\\"], List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], \
List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\
\", GrayLevel[0.5`]], \\\"kod\\\"], List[Style[\\\"Nullable:\\\", \
GrayLevel[0.5`]], True]], Rule[Alignment, Left]]]], OpenerView[List[\\\"count\
\\\", Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"DOUBLE\\\"], List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], \
List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\
\", GrayLevel[0.5`]], \\\"count\\\"], List[Style[\\\"Nullable:\\\", \
GrayLevel[0.5`]], True]], Rule[Alignment, Left]]]], \
OpenerView[List[\\\"starttime\\\", Grid[List[List[Style[\\\"NativeTypeString:\
\\\", GrayLevel[0.5`]], \\\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\\\"], \
List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\
\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \
\\\"starttime\\\"], List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], True]], \
Rule[Alignment, Left]]]], OpenerView[List[\\\"endtime\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\\\"], \
List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\
\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \
\\\"endtime\\\"], List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], True]], \
Rule[Alignment, Left]]]], OpenerView[List[\\\"datareg\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\\\"], \
List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\
\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \
\\\"datareg\\\"], List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], True]], \
Rule[Alignment, Left]]]], OpenerView[List[\\\"fnameprod\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\\\"], \
List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\
\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \
\\\"fnameprod\\\"], List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], True]], \
Rule[Alignment, Left]]]], OpenerView[List[\\\"lnameprod\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\\\"], \
List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\
\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \
\\\"lnameprod\\\"], List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], True]], \
Rule[Alignment, Left]]]]]]], False]], Rule[DynamicModuleValues, Automatic]], \
Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"worktime\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"worktime\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[TagBox[DynamicModuleBox[List[Set[Typeset`var$\
$, False]], InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"id_w\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"id_w\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"NativeTypeString:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"INTEGER(11)\\\\\\\"\\\"], \
List[StyleBox[\\\"\\\\\\\"Default:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"None\\\"], List[StyleBox[\\\"\\\\\\\"Indexed:\
\\\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"False\\\"], \
List[StyleBox[\\\"\\\\\\\"Name:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"\\\\\\\"id_w\\\\\\\"\\\"], List[StyleBox[\\\"\
\\\\\\\"Nullable:\\\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"False\\\"]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]]], \\\"Grid\\\"], Rule[ImageMargins, 0]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, \
1]]]]], Dynamic[Typeset`var$$], Rule[Alignment, Automatic], Rule[ImageSize, \
Automatic], Rule[ImageMargins, 0], Rule[BaseStyle, List[]], \
Rule[DefaultBaseStyle, \\\"OpenerView\\\"], Rule[BaselinePosition, \
Baseline]], Rule[Deployed, False], Rule[StripOnInput, False]], \
OpenerView[List[\\\"id_w\\\", Grid[List[List[Style[\\\"NativeTypeString:\\\", \
GrayLevel[0.5`]], \\\"INTEGER(11)\\\"], List[Style[\\\"Default:\\\", \
GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], \
False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \\\"id_w\\\"], \
List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], False]], Rule[Alignment, \
Left]]], False]], Rule[DynamicModuleValues, Automatic]], \
Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"starttime\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"starttime\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"NativeTypeString:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\\\\\"\\\"], List[StyleBox[\\\"\\\\\\\"Default:\\\
\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"None\\\"], \
List[StyleBox[\\\"\\\\\\\"Indexed:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"False\\\"], List[StyleBox[\\\"\\\\\\\"Name:\\\
\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"starttime\\\\\\\"\\\"], List[StyleBox[\\\"\\\\\\\"Nullable:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"True\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Grid\\\"], Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"starttime\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\\\"], \
List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\
\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \
\\\"starttime\\\"], List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], True]], \
Rule[Alignment, Left]]], False]], Rule[DynamicModuleValues, Automatic]], \
Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"endtime\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"endtime\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"NativeTypeString:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\\\\\"\\\"], List[StyleBox[\\\"\\\\\\\"Default:\\\
\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"None\\\"], \
List[StyleBox[\\\"\\\\\\\"Indexed:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"False\\\"], List[StyleBox[\\\"\\\\\\\"Name:\\\
\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"endtime\\\\\\\"\\\"], List[StyleBox[\\\"\\\\\\\"Nullable:\\\\\\\"\
\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"True\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Grid\\\"], Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"endtime\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\\\"], \
List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\
\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \
\\\"endtime\\\"], List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], True]], \
Rule[Alignment, Left]]], False]], Rule[DynamicModuleValues, Automatic]], \
Function[Setting[Slot[1], List[0]]]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[DefaultBaseStyle, \
\\\"Column\\\"], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Column\\\"], Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"worktime\\\", \
Column[List[OpenerView[List[\\\"id_w\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"INTEGER(11)\\\"], List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], \
List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\
\", GrayLevel[0.5`]], \\\"id_w\\\"], List[Style[\\\"Nullable:\\\", \
GrayLevel[0.5`]], False]], Rule[Alignment, Left]]]], \
OpenerView[List[\\\"starttime\\\", Grid[List[List[Style[\\\"NativeTypeString:\
\\\", GrayLevel[0.5`]], \\\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\\\"], \
List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\
\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \
\\\"starttime\\\"], List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], True]], \
Rule[Alignment, Left]]]], OpenerView[List[\\\"endtime\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\\\"], \
List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\
\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \
\\\"endtime\\\"], List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], True]], \
Rule[Alignment, Left]]]]]]], False]], Rule[DynamicModuleValues, Automatic]], \
Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"prodavec\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"prodavec\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[TagBox[DynamicModuleBox[List[Set[Typeset`var$\
$, False]], InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"id_p\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"id_p\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"NativeTypeString:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"INTEGER(11)\\\\\\\"\\\"], \
List[StyleBox[\\\"\\\\\\\"Default:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"None\\\"], List[StyleBox[\\\"\\\\\\\"Indexed:\
\\\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"False\\\"], \
List[StyleBox[\\\"\\\\\\\"Name:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"\\\\\\\"id_p\\\\\\\"\\\"], List[StyleBox[\\\"\
\\\\\\\"Nullable:\\\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"False\\\"]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]]], \\\"Grid\\\"], Rule[ImageMargins, 0]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, \
1]]]]], Dynamic[Typeset`var$$], Rule[Alignment, Automatic], Rule[ImageSize, \
Automatic], Rule[ImageMargins, 0], Rule[BaseStyle, List[]], \
Rule[DefaultBaseStyle, \\\"OpenerView\\\"], Rule[BaselinePosition, \
Baseline]], Rule[Deployed, False], Rule[StripOnInput, False]], \
OpenerView[List[\\\"id_p\\\", Grid[List[List[Style[\\\"NativeTypeString:\\\", \
GrayLevel[0.5`]], \\\"INTEGER(11)\\\"], List[Style[\\\"Default:\\\", \
GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], \
False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \\\"id_p\\\"], \
List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], False]], Rule[Alignment, \
Left]]], False]], Rule[DynamicModuleValues, Automatic]], \
Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"fnameprod\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"fnameprod\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"NativeTypeString:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\\\\\"\\\"], List[StyleBox[\\\"\\\\\\\"Default:\\\
\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"None\\\"], \
List[StyleBox[\\\"\\\\\\\"Indexed:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"False\\\"], List[StyleBox[\\\"\\\\\\\"Name:\\\
\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"fnameprod\\\\\\\"\\\"], List[StyleBox[\\\"\\\\\\\"Nullable:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"True\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Grid\\\"], Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"fnameprod\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\\\"], \
List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\
\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \
\\\"fnameprod\\\"], List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], True]], \
Rule[Alignment, Left]]], False]], Rule[DynamicModuleValues, Automatic]], \
Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"lnameprod\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"lnameprod\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"NativeTypeString:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\\\\\"\\\"], List[StyleBox[\\\"\\\\\\\"Default:\\\
\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"None\\\"], \
List[StyleBox[\\\"\\\\\\\"Indexed:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"False\\\"], List[StyleBox[\\\"\\\\\\\"Name:\\\
\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"lnameprod\\\\\\\"\\\"], List[StyleBox[\\\"\\\\\\\"Nullable:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"True\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Grid\\\"], Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"lnameprod\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\\\"], \
List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\
\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \
\\\"lnameprod\\\"], List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], True]], \
Rule[Alignment, Left]]], False]], Rule[DynamicModuleValues, Automatic]], \
Function[Setting[Slot[1], List[0]]]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[DefaultBaseStyle, \
\\\"Column\\\"], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Column\\\"], Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"prodavec\\\", \
Column[List[OpenerView[List[\\\"id_p\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"INTEGER(11)\\\"], List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], \
List[Style[\\\"Indexed:\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\
\", GrayLevel[0.5`]], \\\"id_p\\\"], List[Style[\\\"Nullable:\\\", \
GrayLevel[0.5`]], False]], Rule[Alignment, Left]]]], \
OpenerView[List[\\\"fnameprod\\\", Grid[List[List[Style[\\\"NativeTypeString:\
\\\", GrayLevel[0.5`]], \\\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\\\"], \
List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\
\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \
\\\"fnameprod\\\"], List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], True]], \
Rule[Alignment, Left]]]], OpenerView[List[\\\"lnameprod\\\", \
Grid[List[List[Style[\\\"NativeTypeString:\\\", GrayLevel[0.5`]], \
\\\"VARCHAR(255) COLLATE utf8mb4_unicode_ci\\\"], \
List[Style[\\\"Default:\\\", GrayLevel[0.5`]], None], List[Style[\\\"Indexed:\
\\\", GrayLevel[0.5`]], False], List[Style[\\\"Name:\\\", GrayLevel[0.5`]], \
\\\"lnameprod\\\"], List[Style[\\\"Nullable:\\\", GrayLevel[0.5`]], True]], \
Rule[Alignment, Left]]]]]]], False]], Rule[DynamicModuleValues, Automatic]], \
Function[Setting[Slot[1], List[0]]]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[DefaultBaseStyle, \
\\\"Column\\\"], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Column\\\"]]], Rule[GridBoxAlignment, List[Rule[\\\"Rows\\\", \
List[List[Top]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\
\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]]], \\\"Grid\\\"], \\\"SummaryItem\\\"]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[2]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[BaseStyle, List[Rule[ShowStringCharacters, False], Rule[NumberMarks, \
False], Rule[PrintPrecision, 3], Rule[ShowSyntaxStyles, False]]]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]], \
Rule[\\\"Rows\\\", List[List[Top]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaselinePosition, List[1, \
1]]]]], Dynamic[Typeset`open$$], Rule[ImageSize, Automatic]]], \
\\\"SummaryPanel\\\"], RuleDelayed[DynamicModuleValues, List[]]], \
\\\"]\\\"]], RelationalDatabase[Association[Rule[\\\"Tables\\\", \
Association[Rule[\\\"indexes\\\", Association[Rule[\\\"PrimaryKey\\\", \
Association[Rule[\\\"ConstraintName\\\", None], Rule[\\\"Columns\\\", List[\\\
\"id\\\"]]]], Rule[\\\"ForeignKeys\\\", List[]], \
Rule[\\\"UniquenessConstraints\\\", List[]], Rule[\\\"Indexes\\\", List[]], \
Rule[\\\"Columns\\\", Association[Rule[\\\"id\\\", \
Association[Rule[\\\"Nullable\\\", False], Rule[\\\"BackendType\\\", \
\\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\"INTEGER(11)\\\"]]], \
Rule[\\\"data_id\\\", Association[Rule[\\\"Nullable\\\", True], \
Rule[\\\"BackendType\\\", \\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\
\"INTEGER(20)\\\"]]], Rule[\\\"prod_id\\\", \
Association[Rule[\\\"Nullable\\\", True], Rule[\\\"BackendType\\\", \
\\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\"INTEGER(20)\\\"]]], \
Rule[\\\"work_id\\\", Association[Rule[\\\"Nullable\\\", True], \
Rule[\\\"BackendType\\\", \\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\
\"INTEGER(20)\\\"]]], Rule[\\\"tovar_id\\\", \
Association[Rule[\\\"Nullable\\\", True], Rule[\\\"BackendType\\\", \
\\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\"INTEGER(20)\\\"]]]]], \
Rule[\\\"Schema\\\", None]]], Rule[\\\"dataintro\\\", \
Association[Rule[\\\"PrimaryKey\\\", Association[Rule[\\\"ConstraintName\\\", \
None], Rule[\\\"Columns\\\", List[\\\"id_d\\\"]]]], Rule[\\\"ForeignKeys\\\", \
List[]], Rule[\\\"UniquenessConstraints\\\", List[]], Rule[\\\"Indexes\\\", \
List[]], Rule[\\\"Columns\\\", Association[Rule[\\\"id_d\\\", \
Association[Rule[\\\"Nullable\\\", False], Rule[\\\"BackendType\\\", \
\\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\"INTEGER(11)\\\"]]], \
Rule[\\\"count\\\", Association[Rule[\\\"Nullable\\\", True], \
Rule[\\\"BackendType\\\", \\\"Real\\\"], Rule[\\\"NativeTypeString\\\", \
\\\"DOUBLE\\\"]]], Rule[\\\"datareg\\\", Association[Rule[\\\"Nullable\\\", \
True], Rule[\\\"BackendType\\\", List[\\\"String\\\", 255, \
\\\"utf8mb4_unicode_ci\\\"]], Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\"]]]]], Rule[\\\"Schema\\\", None]]], \
Rule[\\\"tovar\\\", Association[Rule[\\\"PrimaryKey\\\", \
Association[Rule[\\\"ConstraintName\\\", None], Rule[\\\"Columns\\\", List[\\\
\"id_t\\\"]]]], Rule[\\\"ForeignKeys\\\", List[]], \
Rule[\\\"UniquenessConstraints\\\", List[]], Rule[\\\"Indexes\\\", List[]], \
Rule[\\\"Columns\\\", Association[Rule[\\\"id_t\\\", \
Association[Rule[\\\"Nullable\\\", False], Rule[\\\"BackendType\\\", \
\\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\"INTEGER(11)\\\"]]], \
Rule[\\\"name\\\", Association[Rule[\\\"Nullable\\\", True], \
Rule[\\\"BackendType\\\", List[\\\"String\\\", 255, \
\\\"utf8mb4_unicode_ci\\\"]], Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\"]]], Rule[\\\"kod\\\", \
Association[Rule[\\\"Nullable\\\", True], Rule[\\\"BackendType\\\", \
\\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\"INTEGER(11)\\\"]]]]], \
Rule[\\\"Schema\\\", None]]], Rule[\\\"prokatinfo\\\", \
Association[Rule[\\\"PrimaryKey\\\", Association[Rule[\\\"ConstraintName\\\", \
None], Rule[\\\"Columns\\\", List[\\\"id_pr\\\"]]]], \
Rule[\\\"ForeignKeys\\\", List[]], Rule[\\\"UniquenessConstraints\\\", \
List[]], Rule[\\\"Indexes\\\", List[]], Rule[\\\"Columns\\\", \
Association[Rule[\\\"id_pr\\\", Association[Rule[\\\"Nullable\\\", False], \
Rule[\\\"BackendType\\\", \\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\
\"INTEGER(11)\\\"]]], Rule[\\\"name\\\", Association[Rule[\\\"Nullable\\\", \
True], Rule[\\\"BackendType\\\", List[\\\"String\\\", 255, \
\\\"utf8mb4_unicode_ci\\\"]], Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\"]]], Rule[\\\"kod\\\", \
Association[Rule[\\\"Nullable\\\", True], Rule[\\\"BackendType\\\", \
\\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\"INTEGER(20)\\\"]]], \
Rule[\\\"count\\\", Association[Rule[\\\"Nullable\\\", True], \
Rule[\\\"BackendType\\\", \\\"Real\\\"], Rule[\\\"NativeTypeString\\\", \
\\\"DOUBLE\\\"]]], Rule[\\\"starttime\\\", Association[Rule[\\\"Nullable\\\", \
True], Rule[\\\"BackendType\\\", List[\\\"String\\\", 255, \
\\\"utf8mb4_unicode_ci\\\"]], Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\"]]], Rule[\\\"endtime\\\", \
Association[Rule[\\\"Nullable\\\", True], Rule[\\\"BackendType\\\", \
List[\\\"String\\\", 255, \\\"utf8mb4_unicode_ci\\\"]], \
Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) COLLATE \
utf8mb4_unicode_ci\\\"]]], Rule[\\\"datareg\\\", \
Association[Rule[\\\"Nullable\\\", True], Rule[\\\"BackendType\\\", \
List[\\\"String\\\", 255, \\\"utf8mb4_unicode_ci\\\"]], \
Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) COLLATE \
utf8mb4_unicode_ci\\\"]]], Rule[\\\"fnameprod\\\", \
Association[Rule[\\\"Nullable\\\", True], Rule[\\\"BackendType\\\", \
List[\\\"String\\\", 255, \\\"utf8mb4_unicode_ci\\\"]], \
Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) COLLATE \
utf8mb4_unicode_ci\\\"]]], Rule[\\\"lnameprod\\\", \
Association[Rule[\\\"Nullable\\\", True], Rule[\\\"BackendType\\\", \
List[\\\"String\\\", 255, \\\"utf8mb4_unicode_ci\\\"]], \
Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) COLLATE \
utf8mb4_unicode_ci\\\"]]]]], Rule[\\\"Schema\\\", None]]], \
Rule[\\\"worktime\\\", Association[Rule[\\\"PrimaryKey\\\", Association[Rule[\
\\\"ConstraintName\\\", None], Rule[\\\"Columns\\\", List[\\\"id_w\\\"]]]], \
Rule[\\\"ForeignKeys\\\", List[]], Rule[\\\"UniquenessConstraints\\\", \
List[]], Rule[\\\"Indexes\\\", List[]], Rule[\\\"Columns\\\", \
Association[Rule[\\\"id_w\\\", Association[Rule[\\\"Nullable\\\", False], \
Rule[\\\"BackendType\\\", \\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\
\"INTEGER(11)\\\"]]], Rule[\\\"starttime\\\", Association[Rule[\\\"Nullable\\\
\", True], Rule[\\\"BackendType\\\", List[\\\"String\\\", 255, \
\\\"utf8mb4_unicode_ci\\\"]], Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\"]]], Rule[\\\"endtime\\\", \
Association[Rule[\\\"Nullable\\\", True], Rule[\\\"BackendType\\\", \
List[\\\"String\\\", 255, \\\"utf8mb4_unicode_ci\\\"]], \
Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) COLLATE \
utf8mb4_unicode_ci\\\"]]]]], Rule[\\\"Schema\\\", None]]], \
Rule[\\\"prodavec\\\", Association[Rule[\\\"PrimaryKey\\\", Association[Rule[\
\\\"ConstraintName\\\", None], Rule[\\\"Columns\\\", List[\\\"id_p\\\"]]]], \
Rule[\\\"ForeignKeys\\\", List[]], Rule[\\\"UniquenessConstraints\\\", \
List[]], Rule[\\\"Indexes\\\", List[]], Rule[\\\"Columns\\\", \
Association[Rule[\\\"id_p\\\", Association[Rule[\\\"Nullable\\\", False], \
Rule[\\\"BackendType\\\", \\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\
\"INTEGER(11)\\\"]]], Rule[\\\"fnameprod\\\", Association[Rule[\\\"Nullable\\\
\", True], Rule[\\\"BackendType\\\", List[\\\"String\\\", 255, \
\\\"utf8mb4_unicode_ci\\\"]], Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\"]]], Rule[\\\"lnameprod\\\", \
Association[Rule[\\\"Nullable\\\", True], Rule[\\\"BackendType\\\", \
List[\\\"String\\\", 255, \\\"utf8mb4_unicode_ci\\\"]], \
Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) COLLATE \
utf8mb4_unicode_ci\\\"]]]]], Rule[\\\"Schema\\\", None]]]]], Rule[\\\"ID\\\", \
\\\"1pcgsvgchrs8c\\\"]], DatabaseReference[Association[Rule[\\\"Backend\\\", \
\\\"mysql\\\"], Rule[\\\"Username\\\", \\\"root\\\"], Rule[\\\"Password\\\", \
\\\"root\\\"], Rule[\\\"Host\\\", \\\"localhost\\\"], Rule[\\\"Port\\\", \
3306], Rule[\\\"Name\\\", \\\"prokattovara\\\"], Rule[\\\"Options\\\", \
Association[]]]]], Rule[Selectable, False], Rule[Editable, False], \
Rule[SelectWithContents, True]], Rule[ImageMargins, 0]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, \
1]]]]], Dynamic[Typeset`var$$], Rule[Alignment, Automatic], Rule[ImageSize, \
Automatic], Rule[ImageMargins, 0], Rule[BaseStyle, List[]], \
Rule[DefaultBaseStyle, \\\"OpenerView\\\"], Rule[BaselinePosition, \
Baseline]], Rule[Deployed, False], Rule[StripOnInput, False]], \
OpenerView[List[\\\"MySQL\\\", RelationalDatabase[Association[Rule[\\\"Tables\
\\\", Association[Rule[\\\"indexes\\\", Association[Rule[\\\"PrimaryKey\\\", \
Association[Rule[\\\"ConstraintName\\\", None], Rule[\\\"Columns\\\", List[\\\
\"id\\\"]]]], Rule[\\\"ForeignKeys\\\", List[]], \
Rule[\\\"UniquenessConstraints\\\", List[]], Rule[\\\"Indexes\\\", List[]], \
Rule[\\\"Columns\\\", Association[Rule[\\\"id\\\", \
Association[Rule[\\\"Nullable\\\", False], Rule[\\\"BackendType\\\", \
\\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\"INTEGER(11)\\\"]]], \
Rule[\\\"data_id\\\", Association[Rule[\\\"Nullable\\\", True], \
Rule[\\\"BackendType\\\", \\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\
\"INTEGER(20)\\\"]]], Rule[\\\"prod_id\\\", \
Association[Rule[\\\"Nullable\\\", True], Rule[\\\"BackendType\\\", \
\\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\"INTEGER(20)\\\"]]], \
Rule[\\\"work_id\\\", Association[Rule[\\\"Nullable\\\", True], \
Rule[\\\"BackendType\\\", \\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\
\"INTEGER(20)\\\"]]], Rule[\\\"tovar_id\\\", \
Association[Rule[\\\"Nullable\\\", True], Rule[\\\"BackendType\\\", \
\\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\"INTEGER(20)\\\"]]]]], \
Rule[\\\"Schema\\\", None]]], Rule[\\\"dataintro\\\", \
Association[Rule[\\\"PrimaryKey\\\", Association[Rule[\\\"ConstraintName\\\", \
None], Rule[\\\"Columns\\\", List[\\\"id_d\\\"]]]], Rule[\\\"ForeignKeys\\\", \
List[]], Rule[\\\"UniquenessConstraints\\\", List[]], Rule[\\\"Indexes\\\", \
List[]], Rule[\\\"Columns\\\", Association[Rule[\\\"id_d\\\", \
Association[Rule[\\\"Nullable\\\", False], Rule[\\\"BackendType\\\", \
\\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\"INTEGER(11)\\\"]]], \
Rule[\\\"count\\\", Association[Rule[\\\"Nullable\\\", True], \
Rule[\\\"BackendType\\\", \\\"Real\\\"], Rule[\\\"NativeTypeString\\\", \
\\\"DOUBLE\\\"]]], Rule[\\\"datareg\\\", Association[Rule[\\\"Nullable\\\", \
True], Rule[\\\"BackendType\\\", List[\\\"String\\\", 255, \
\\\"utf8mb4_unicode_ci\\\"]], Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\"]]]]], Rule[\\\"Schema\\\", None]]], \
Rule[\\\"tovar\\\", Association[Rule[\\\"PrimaryKey\\\", \
Association[Rule[\\\"ConstraintName\\\", None], Rule[\\\"Columns\\\", List[\\\
\"id_t\\\"]]]], Rule[\\\"ForeignKeys\\\", List[]], \
Rule[\\\"UniquenessConstraints\\\", List[]], Rule[\\\"Indexes\\\", List[]], \
Rule[\\\"Columns\\\", Association[Rule[\\\"id_t\\\", \
Association[Rule[\\\"Nullable\\\", False], Rule[\\\"BackendType\\\", \
\\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\"INTEGER(11)\\\"]]], \
Rule[\\\"name\\\", Association[Rule[\\\"Nullable\\\", True], \
Rule[\\\"BackendType\\\", List[\\\"String\\\", 255, \
\\\"utf8mb4_unicode_ci\\\"]], Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\"]]], Rule[\\\"kod\\\", \
Association[Rule[\\\"Nullable\\\", True], Rule[\\\"BackendType\\\", \
\\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\"INTEGER(11)\\\"]]]]], \
Rule[\\\"Schema\\\", None]]], Rule[\\\"prokatinfo\\\", \
Association[Rule[\\\"PrimaryKey\\\", Association[Rule[\\\"ConstraintName\\\", \
None], Rule[\\\"Columns\\\", List[\\\"id_pr\\\"]]]], \
Rule[\\\"ForeignKeys\\\", List[]], Rule[\\\"UniquenessConstraints\\\", \
List[]], Rule[\\\"Indexes\\\", List[]], Rule[\\\"Columns\\\", \
Association[Rule[\\\"id_pr\\\", Association[Rule[\\\"Nullable\\\", False], \
Rule[\\\"BackendType\\\", \\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\
\"INTEGER(11)\\\"]]], Rule[\\\"name\\\", Association[Rule[\\\"Nullable\\\", \
True], Rule[\\\"BackendType\\\", List[\\\"String\\\", 255, \
\\\"utf8mb4_unicode_ci\\\"]], Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\"]]], Rule[\\\"kod\\\", \
Association[Rule[\\\"Nullable\\\", True], Rule[\\\"BackendType\\\", \
\\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\"INTEGER(20)\\\"]]], \
Rule[\\\"count\\\", Association[Rule[\\\"Nullable\\\", True], \
Rule[\\\"BackendType\\\", \\\"Real\\\"], Rule[\\\"NativeTypeString\\\", \
\\\"DOUBLE\\\"]]], Rule[\\\"starttime\\\", Association[Rule[\\\"Nullable\\\", \
True], Rule[\\\"BackendType\\\", List[\\\"String\\\", 255, \
\\\"utf8mb4_unicode_ci\\\"]], Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\"]]], Rule[\\\"endtime\\\", \
Association[Rule[\\\"Nullable\\\", True], Rule[\\\"BackendType\\\", \
List[\\\"String\\\", 255, \\\"utf8mb4_unicode_ci\\\"]], \
Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) COLLATE \
utf8mb4_unicode_ci\\\"]]], Rule[\\\"datareg\\\", \
Association[Rule[\\\"Nullable\\\", True], Rule[\\\"BackendType\\\", \
List[\\\"String\\\", 255, \\\"utf8mb4_unicode_ci\\\"]], \
Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) COLLATE \
utf8mb4_unicode_ci\\\"]]], Rule[\\\"fnameprod\\\", \
Association[Rule[\\\"Nullable\\\", True], Rule[\\\"BackendType\\\", \
List[\\\"String\\\", 255, \\\"utf8mb4_unicode_ci\\\"]], \
Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) COLLATE \
utf8mb4_unicode_ci\\\"]]], Rule[\\\"lnameprod\\\", \
Association[Rule[\\\"Nullable\\\", True], Rule[\\\"BackendType\\\", \
List[\\\"String\\\", 255, \\\"utf8mb4_unicode_ci\\\"]], \
Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) COLLATE \
utf8mb4_unicode_ci\\\"]]]]], Rule[\\\"Schema\\\", None]]], \
Rule[\\\"worktime\\\", Association[Rule[\\\"PrimaryKey\\\", Association[Rule[\
\\\"ConstraintName\\\", None], Rule[\\\"Columns\\\", List[\\\"id_w\\\"]]]], \
Rule[\\\"ForeignKeys\\\", List[]], Rule[\\\"UniquenessConstraints\\\", \
List[]], Rule[\\\"Indexes\\\", List[]], Rule[\\\"Columns\\\", \
Association[Rule[\\\"id_w\\\", Association[Rule[\\\"Nullable\\\", False], \
Rule[\\\"BackendType\\\", \\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\
\"INTEGER(11)\\\"]]], Rule[\\\"starttime\\\", Association[Rule[\\\"Nullable\\\
\", True], Rule[\\\"BackendType\\\", List[\\\"String\\\", 255, \
\\\"utf8mb4_unicode_ci\\\"]], Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\"]]], Rule[\\\"endtime\\\", \
Association[Rule[\\\"Nullable\\\", True], Rule[\\\"BackendType\\\", \
List[\\\"String\\\", 255, \\\"utf8mb4_unicode_ci\\\"]], \
Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) COLLATE \
utf8mb4_unicode_ci\\\"]]]]], Rule[\\\"Schema\\\", None]]], \
Rule[\\\"prodavec\\\", Association[Rule[\\\"PrimaryKey\\\", Association[Rule[\
\\\"ConstraintName\\\", None], Rule[\\\"Columns\\\", List[\\\"id_p\\\"]]]], \
Rule[\\\"ForeignKeys\\\", List[]], Rule[\\\"UniquenessConstraints\\\", \
List[]], Rule[\\\"Indexes\\\", List[]], Rule[\\\"Columns\\\", \
Association[Rule[\\\"id_p\\\", Association[Rule[\\\"Nullable\\\", False], \
Rule[\\\"BackendType\\\", \\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\
\"INTEGER(11)\\\"]]], Rule[\\\"fnameprod\\\", Association[Rule[\\\"Nullable\\\
\", True], Rule[\\\"BackendType\\\", List[\\\"String\\\", 255, \
\\\"utf8mb4_unicode_ci\\\"]], Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\"]]], Rule[\\\"lnameprod\\\", \
Association[Rule[\\\"Nullable\\\", True], Rule[\\\"BackendType\\\", \
List[\\\"String\\\", 255, \\\"utf8mb4_unicode_ci\\\"]], \
Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) COLLATE \
utf8mb4_unicode_ci\\\"]]]]], Rule[\\\"Schema\\\", None]]]]], Rule[\\\"ID\\\", \
\\\"1pcgsvgchrs8c\\\"]], DatabaseReference[Association[Rule[\\\"Backend\\\", \
\\\"mysql\\\"], Rule[\\\"Username\\\", \\\"root\\\"], Rule[\\\"Password\\\", \
\\\"root\\\"], Rule[\\\"Host\\\", \\\"localhost\\\"], Rule[\\\"Port\\\", \
3306], Rule[\\\"Name\\\", \\\"prokattovara\\\"], Rule[\\\"Options\\\", \
Association[]]]]]], False]], Rule[DynamicModuleValues, Automatic]], \
Function[Setting[Slot[1], List[0]]]], \\\"SummaryItem\\\"]]]], \
List[TagBox[TagBox[GridBox[List[List[TagBox[\\\"\\\\\\\"Types: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \
TagBox[GridBox[List[List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, \
False]], InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"indexes\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"indexes\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[TagBox[DynamicModuleBox[List[Set[Typeset`var$\
$, False]], InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], StyleBox[\\\"\\\\\\\"id\\\\\\\"\\\", Bold, \
Rule[StripOnInput, False]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]], Rule[True, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], StyleBox[\\\"\\\\\\\"id\\\\\\\"\\\", Bold, \
Rule[StripOnInput, False]]], List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"PropertySourceType:\\\\\
\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"Column\\\\\
\\\"\\\"], List[StyleBox[\\\"\\\\\\\"ColumnPrefix:\\\\\\\"\\\", \
GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"indexes\\\\\\\"\\\"], List[StyleBox[\\\"\\\\\\\"ColumnName:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"id\\\\\\\"\\\
\"]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Grid\\\"], Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[Style[\\\"id\\\", Bold], \
Grid[List[List[Style[\\\"PropertySourceType:\\\", GrayLevel[0.5`]], \
\\\"Column\\\"], List[Style[\\\"ColumnPrefix:\\\", GrayLevel[0.5`]], \
\\\"indexes\\\"], List[Style[\\\"ColumnName:\\\", GrayLevel[0.5`]], \
\\\"id\\\"]], Rule[Alignment, Left]]], False]], Rule[DynamicModuleValues, \
Automatic]], Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"data_id\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"data_id\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"PropertySourceType:\\\\\
\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"Column\\\\\
\\\"\\\"], List[StyleBox[\\\"\\\\\\\"ColumnPrefix:\\\\\\\"\\\", \
GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"indexes\\\\\\\"\\\"], List[StyleBox[\\\"\\\\\\\"ColumnName:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"data_id\\\\\\\"\\\"]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \\\"Grid\\\"], \
Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxBackground, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"data_id\\\", \
Grid[List[List[Style[\\\"PropertySourceType:\\\", GrayLevel[0.5`]], \
\\\"Column\\\"], List[Style[\\\"ColumnPrefix:\\\", GrayLevel[0.5`]], \
\\\"indexes\\\"], List[Style[\\\"ColumnName:\\\", GrayLevel[0.5`]], \
\\\"data_id\\\"]], Rule[Alignment, Left]]], False]], \
Rule[DynamicModuleValues, Automatic]], Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"prod_id\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"prod_id\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"PropertySourceType:\\\\\
\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"Column\\\\\
\\\"\\\"], List[StyleBox[\\\"\\\\\\\"ColumnPrefix:\\\\\\\"\\\", \
GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"indexes\\\\\\\"\\\"], List[StyleBox[\\\"\\\\\\\"ColumnName:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"prod_id\\\\\\\"\\\"]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \\\"Grid\\\"], \
Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxBackground, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"prod_id\\\", \
Grid[List[List[Style[\\\"PropertySourceType:\\\", GrayLevel[0.5`]], \
\\\"Column\\\"], List[Style[\\\"ColumnPrefix:\\\", GrayLevel[0.5`]], \
\\\"indexes\\\"], List[Style[\\\"ColumnName:\\\", GrayLevel[0.5`]], \
\\\"prod_id\\\"]], Rule[Alignment, Left]]], False]], \
Rule[DynamicModuleValues, Automatic]], Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"work_id\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"work_id\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"PropertySourceType:\\\\\
\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"Column\\\\\
\\\"\\\"], List[StyleBox[\\\"\\\\\\\"ColumnPrefix:\\\\\\\"\\\", \
GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"indexes\\\\\\\"\\\"], List[StyleBox[\\\"\\\\\\\"ColumnName:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"work_id\\\\\\\"\\\"]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \\\"Grid\\\"], \
Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxBackground, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"work_id\\\", \
Grid[List[List[Style[\\\"PropertySourceType:\\\", GrayLevel[0.5`]], \
\\\"Column\\\"], List[Style[\\\"ColumnPrefix:\\\", GrayLevel[0.5`]], \
\\\"indexes\\\"], List[Style[\\\"ColumnName:\\\", GrayLevel[0.5`]], \
\\\"work_id\\\"]], Rule[Alignment, Left]]], False]], \
Rule[DynamicModuleValues, Automatic]], Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"tovar_id\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"tovar_id\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"PropertySourceType:\\\\\
\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"Column\\\\\
\\\"\\\"], List[StyleBox[\\\"\\\\\\\"ColumnPrefix:\\\\\\\"\\\", \
GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"indexes\\\\\\\"\\\"], List[StyleBox[\\\"\\\\\\\"ColumnName:\\\\\\\
\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"tovar_id\\\\\
\\\"\\\"]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]]], \\\"Grid\\\"], Rule[ImageMargins, 0]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, \
1]]]]], Dynamic[Typeset`var$$], Rule[Alignment, Automatic], Rule[ImageSize, \
Automatic], Rule[ImageMargins, 0], Rule[BaseStyle, List[]], \
Rule[DefaultBaseStyle, \\\"OpenerView\\\"], Rule[BaselinePosition, \
Baseline]], Rule[Deployed, False], Rule[StripOnInput, False]], \
OpenerView[List[\\\"tovar_id\\\", \
Grid[List[List[Style[\\\"PropertySourceType:\\\", GrayLevel[0.5`]], \
\\\"Column\\\"], List[Style[\\\"ColumnPrefix:\\\", GrayLevel[0.5`]], \
\\\"indexes\\\"], List[Style[\\\"ColumnName:\\\", GrayLevel[0.5`]], \
\\\"tovar_id\\\"]], Rule[Alignment, Left]]], False]], \
Rule[DynamicModuleValues, Automatic]], Function[Setting[Slot[1], \
List[0]]]]]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[DefaultBaseStyle, \\\"Column\\\"], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \\\"Column\\\"], \
Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxBackground, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"indexes\\\", \
Column[List[OpenerView[List[Style[\\\"id\\\", Bold], \
Grid[List[List[Style[\\\"PropertySourceType:\\\", GrayLevel[0.5`]], \
\\\"Column\\\"], List[Style[\\\"ColumnPrefix:\\\", GrayLevel[0.5`]], \
\\\"indexes\\\"], List[Style[\\\"ColumnName:\\\", GrayLevel[0.5`]], \
\\\"id\\\"]], Rule[Alignment, Left]]]], OpenerView[List[\\\"data_id\\\", \
Grid[List[List[Style[\\\"PropertySourceType:\\\", GrayLevel[0.5`]], \
\\\"Column\\\"], List[Style[\\\"ColumnPrefix:\\\", GrayLevel[0.5`]], \
\\\"indexes\\\"], List[Style[\\\"ColumnName:\\\", GrayLevel[0.5`]], \
\\\"data_id\\\"]], Rule[Alignment, Left]]]], OpenerView[List[\\\"prod_id\\\", \
Grid[List[List[Style[\\\"PropertySourceType:\\\", GrayLevel[0.5`]], \
\\\"Column\\\"], List[Style[\\\"ColumnPrefix:\\\", GrayLevel[0.5`]], \
\\\"indexes\\\"], List[Style[\\\"ColumnName:\\\", GrayLevel[0.5`]], \
\\\"prod_id\\\"]], Rule[Alignment, Left]]]], OpenerView[List[\\\"work_id\\\", \
Grid[List[List[Style[\\\"PropertySourceType:\\\", GrayLevel[0.5`]], \
\\\"Column\\\"], List[Style[\\\"ColumnPrefix:\\\", GrayLevel[0.5`]], \
\\\"indexes\\\"], List[Style[\\\"ColumnName:\\\", GrayLevel[0.5`]], \
\\\"work_id\\\"]], Rule[Alignment, Left]]]], \
OpenerView[List[\\\"tovar_id\\\", \
Grid[List[List[Style[\\\"PropertySourceType:\\\", GrayLevel[0.5`]], \
\\\"Column\\\"], List[Style[\\\"ColumnPrefix:\\\", GrayLevel[0.5`]], \
\\\"indexes\\\"], List[Style[\\\"ColumnName:\\\", GrayLevel[0.5`]], \
\\\"tovar_id\\\"]], Rule[Alignment, Left]]]]]]], False]], \
Rule[DynamicModuleValues, Automatic]], Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"dataintro\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"dataintro\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[TagBox[DynamicModuleBox[List[Set[Typeset`var$\
$, False]], InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], StyleBox[\\\"\\\\\\\"id_d\\\\\\\"\\\", Bold, \
Rule[StripOnInput, False]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]], Rule[True, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], StyleBox[\\\"\\\\\\\"id_d\\\\\\\"\\\", Bold, \
Rule[StripOnInput, False]]], List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"PropertySourceType:\\\\\
\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"Column\\\\\
\\\"\\\"], List[StyleBox[\\\"\\\\\\\"ColumnPrefix:\\\\\\\"\\\", \
GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"dataintro\\\\\\\"\\\"], List[StyleBox[\\\"\\\\\\\"ColumnName:\\\\\
\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"id_d\\\\\\\
\"\\\"]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]]], \\\"Grid\\\"], Rule[ImageMargins, 0]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, \
1]]]]], Dynamic[Typeset`var$$], Rule[Alignment, Automatic], Rule[ImageSize, \
Automatic], Rule[ImageMargins, 0], Rule[BaseStyle, List[]], \
Rule[DefaultBaseStyle, \\\"OpenerView\\\"], Rule[BaselinePosition, \
Baseline]], Rule[Deployed, False], Rule[StripOnInput, False]], \
OpenerView[List[Style[\\\"id_d\\\", Bold], \
Grid[List[List[Style[\\\"PropertySourceType:\\\", GrayLevel[0.5`]], \
\\\"Column\\\"], List[Style[\\\"ColumnPrefix:\\\", GrayLevel[0.5`]], \
\\\"dataintro\\\"], List[Style[\\\"ColumnName:\\\", GrayLevel[0.5`]], \
\\\"id_d\\\"]], Rule[Alignment, Left]]], False]], Rule[DynamicModuleValues, \
Automatic]], Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"count\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"count\\\\\\\"\\\"], List[\
\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"PropertySourceType:\\\\\
\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"Column\\\\\
\\\"\\\"], List[StyleBox[\\\"\\\\\\\"ColumnPrefix:\\\\\\\"\\\", \
GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"dataintro\\\\\\\"\\\"], List[StyleBox[\\\"\\\\\\\"ColumnName:\\\\\
\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"count\\\\\\\"\\\"]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\
\\\", List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]]], \\\"Grid\\\"], Rule[ImageMargins, 0]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, \
1]]]]], Dynamic[Typeset`var$$], Rule[Alignment, Automatic], Rule[ImageSize, \
Automatic], Rule[ImageMargins, 0], Rule[BaseStyle, List[]], \
Rule[DefaultBaseStyle, \\\"OpenerView\\\"], Rule[BaselinePosition, \
Baseline]], Rule[Deployed, False], Rule[StripOnInput, False]], \
OpenerView[List[\\\"count\\\", Grid[List[List[Style[\\\"PropertySourceType:\\\
\", GrayLevel[0.5`]], \\\"Column\\\"], List[Style[\\\"ColumnPrefix:\\\", \
GrayLevel[0.5`]], \\\"dataintro\\\"], List[Style[\\\"ColumnName:\\\", \
GrayLevel[0.5`]], \\\"count\\\"]], Rule[Alignment, Left]]], False]], \
Rule[DynamicModuleValues, Automatic]], Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"datareg\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"datareg\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"PropertySourceType:\\\\\
\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"Column\\\\\
\\\"\\\"], List[StyleBox[\\\"\\\\\\\"ColumnPrefix:\\\\\\\"\\\", \
GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"dataintro\\\\\\\"\\\"], List[StyleBox[\\\"\\\\\\\"ColumnName:\\\\\
\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"datareg\\\\\\\"\\\"]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \\\"Grid\\\"], \
Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxBackground, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"datareg\\\", \
Grid[List[List[Style[\\\"PropertySourceType:\\\", GrayLevel[0.5`]], \
\\\"Column\\\"], List[Style[\\\"ColumnPrefix:\\\", GrayLevel[0.5`]], \
\\\"dataintro\\\"], List[Style[\\\"ColumnName:\\\", GrayLevel[0.5`]], \
\\\"datareg\\\"]], Rule[Alignment, Left]]], False]], \
Rule[DynamicModuleValues, Automatic]], Function[Setting[Slot[1], \
List[0]]]]]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[DefaultBaseStyle, \\\"Column\\\"], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \\\"Column\\\"], \
Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxBackground, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"dataintro\\\", \
Column[List[OpenerView[List[Style[\\\"id_d\\\", Bold], \
Grid[List[List[Style[\\\"PropertySourceType:\\\", GrayLevel[0.5`]], \
\\\"Column\\\"], List[Style[\\\"ColumnPrefix:\\\", GrayLevel[0.5`]], \
\\\"dataintro\\\"], List[Style[\\\"ColumnName:\\\", GrayLevel[0.5`]], \
\\\"id_d\\\"]], Rule[Alignment, Left]]]], OpenerView[List[\\\"count\\\", \
Grid[List[List[Style[\\\"PropertySourceType:\\\", GrayLevel[0.5`]], \
\\\"Column\\\"], List[Style[\\\"ColumnPrefix:\\\", GrayLevel[0.5`]], \
\\\"dataintro\\\"], List[Style[\\\"ColumnName:\\\", GrayLevel[0.5`]], \
\\\"count\\\"]], Rule[Alignment, Left]]]], OpenerView[List[\\\"datareg\\\", \
Grid[List[List[Style[\\\"PropertySourceType:\\\", GrayLevel[0.5`]], \
\\\"Column\\\"], List[Style[\\\"ColumnPrefix:\\\", GrayLevel[0.5`]], \
\\\"dataintro\\\"], List[Style[\\\"ColumnName:\\\", GrayLevel[0.5`]], \
\\\"datareg\\\"]], Rule[Alignment, Left]]]]]]], False]], \
Rule[DynamicModuleValues, Automatic]], Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"tovar\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"tovar\\\\\\\"\\\"], List[\
\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[TagBox[DynamicModuleBox[List[Set[Typeset`var$\
$, False]], InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], StyleBox[\\\"\\\\\\\"id_t\\\\\\\"\\\", Bold, \
Rule[StripOnInput, False]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]], Rule[True, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], StyleBox[\\\"\\\\\\\"id_t\\\\\\\"\\\", Bold, \
Rule[StripOnInput, False]]], List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"PropertySourceType:\\\\\
\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"Column\\\\\
\\\"\\\"], List[StyleBox[\\\"\\\\\\\"ColumnPrefix:\\\\\\\"\\\", \
GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"tovar\\\\\\\"\\\"], \
List[StyleBox[\\\"\\\\\\\"ColumnName:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"\\\\\\\"id_t\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Grid\\\"], Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[Style[\\\"id_t\\\", Bold], \
Grid[List[List[Style[\\\"PropertySourceType:\\\", GrayLevel[0.5`]], \
\\\"Column\\\"], List[Style[\\\"ColumnPrefix:\\\", GrayLevel[0.5`]], \
\\\"tovar\\\"], List[Style[\\\"ColumnName:\\\", GrayLevel[0.5`]], \
\\\"id_t\\\"]], Rule[Alignment, Left]]], False]], Rule[DynamicModuleValues, \
Automatic]], Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"name\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"name\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"PropertySourceType:\\\\\
\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"Column\\\\\
\\\"\\\"], List[StyleBox[\\\"\\\\\\\"ColumnPrefix:\\\\\\\"\\\", \
GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"tovar\\\\\\\"\\\"], \
List[StyleBox[\\\"\\\\\\\"ColumnName:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"\\\\\\\"name\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Grid\\\"], Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"name\\\", \
Grid[List[List[Style[\\\"PropertySourceType:\\\", GrayLevel[0.5`]], \
\\\"Column\\\"], List[Style[\\\"ColumnPrefix:\\\", GrayLevel[0.5`]], \
\\\"tovar\\\"], List[Style[\\\"ColumnName:\\\", GrayLevel[0.5`]], \
\\\"name\\\"]], Rule[Alignment, Left]]], False]], Rule[DynamicModuleValues, \
Automatic]], Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"kod\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"kod\\\\\\\"\\\"], List[\\\
\"\\\", PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"\
PropertySourceType:\\\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"Column\\\\\\\"\\\"], \
List[StyleBox[\\\"\\\\\\\"ColumnPrefix:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"\\\\\\\"tovar\\\\\\\"\\\"], \
List[StyleBox[\\\"\\\\\\\"ColumnName:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"\\\\\\\"kod\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Grid\\\"], Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"kod\\\", \
Grid[List[List[Style[\\\"PropertySourceType:\\\", GrayLevel[0.5`]], \
\\\"Column\\\"], List[Style[\\\"ColumnPrefix:\\\", GrayLevel[0.5`]], \
\\\"tovar\\\"], List[Style[\\\"ColumnName:\\\", GrayLevel[0.5`]], \
\\\"kod\\\"]], Rule[Alignment, Left]]], False]], Rule[DynamicModuleValues, \
Automatic]], Function[Setting[Slot[1], List[0]]]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[DefaultBaseStyle, \
\\\"Column\\\"], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Column\\\"], Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"tovar\\\", \
Column[List[OpenerView[List[Style[\\\"id_t\\\", Bold], \
Grid[List[List[Style[\\\"PropertySourceType:\\\", GrayLevel[0.5`]], \
\\\"Column\\\"], List[Style[\\\"ColumnPrefix:\\\", GrayLevel[0.5`]], \
\\\"tovar\\\"], List[Style[\\\"ColumnName:\\\", GrayLevel[0.5`]], \
\\\"id_t\\\"]], Rule[Alignment, Left]]]], OpenerView[List[\\\"name\\\", \
Grid[List[List[Style[\\\"PropertySourceType:\\\", GrayLevel[0.5`]], \
\\\"Column\\\"], List[Style[\\\"ColumnPrefix:\\\", GrayLevel[0.5`]], \
\\\"tovar\\\"], List[Style[\\\"ColumnName:\\\", GrayLevel[0.5`]], \
\\\"name\\\"]], Rule[Alignment, Left]]]], OpenerView[List[\\\"kod\\\", \
Grid[List[List[Style[\\\"PropertySourceType:\\\", GrayLevel[0.5`]], \
\\\"Column\\\"], List[Style[\\\"ColumnPrefix:\\\", GrayLevel[0.5`]], \
\\\"tovar\\\"], List[Style[\\\"ColumnName:\\\", GrayLevel[0.5`]], \
\\\"kod\\\"]], Rule[Alignment, Left]]]]]]], False]], \
Rule[DynamicModuleValues, Automatic]], Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"prokatinfo\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"prokatinfo\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[TagBox[DynamicModuleBox[List[Set[Typeset`var$\
$, False]], InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], StyleBox[\\\"\\\\\\\"id_pr\\\\\\\"\\\", Bold, \
Rule[StripOnInput, False]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]], Rule[True, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], StyleBox[\\\"\\\\\\\"id_pr\\\\\\\"\\\", Bold, \
Rule[StripOnInput, False]]], List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"PropertySourceType:\\\\\
\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"Column\\\\\
\\\"\\\"], List[StyleBox[\\\"\\\\\\\"ColumnPrefix:\\\\\\\"\\\", \
GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"prokatinfo\\\\\\\"\\\
\"], List[StyleBox[\\\"\\\\\\\"ColumnName:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"\\\\\\\"id_pr\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Grid\\\"], Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[Style[\\\"id_pr\\\", Bold], \
Grid[List[List[Style[\\\"PropertySourceType:\\\", GrayLevel[0.5`]], \
\\\"Column\\\"], List[Style[\\\"ColumnPrefix:\\\", GrayLevel[0.5`]], \
\\\"prokatinfo\\\"], List[Style[\\\"ColumnName:\\\", GrayLevel[0.5`]], \
\\\"id_pr\\\"]], Rule[Alignment, Left]]], False]], Rule[DynamicModuleValues, \
Automatic]], Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"name\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"name\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"PropertySourceType:\\\\\
\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"Column\\\\\
\\\"\\\"], List[StyleBox[\\\"\\\\\\\"ColumnPrefix:\\\\\\\"\\\", \
GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"prokatinfo\\\\\\\"\\\
\"], List[StyleBox[\\\"\\\\\\\"ColumnName:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"\\\\\\\"name\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Grid\\\"], Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"name\\\", \
Grid[List[List[Style[\\\"PropertySourceType:\\\", GrayLevel[0.5`]], \
\\\"Column\\\"], List[Style[\\\"ColumnPrefix:\\\", GrayLevel[0.5`]], \
\\\"prokatinfo\\\"], List[Style[\\\"ColumnName:\\\", GrayLevel[0.5`]], \
\\\"name\\\"]], Rule[Alignment, Left]]], False]], Rule[DynamicModuleValues, \
Automatic]], Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"kod\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"kod\\\\\\\"\\\"], List[\\\
\"\\\", PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"\
PropertySourceType:\\\\\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"Column\\\\\\\"\\\"], \
List[StyleBox[\\\"\\\\\\\"ColumnPrefix:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"\\\\\\\"prokatinfo\\\\\\\"\\\"], \
List[StyleBox[\\\"\\\\\\\"ColumnName:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"\\\\\\\"kod\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Grid\\\"], Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"kod\\\", \
Grid[List[List[Style[\\\"PropertySourceType:\\\", GrayLevel[0.5`]], \
\\\"Column\\\"], List[Style[\\\"ColumnPrefix:\\\", GrayLevel[0.5`]], \
\\\"prokatinfo\\\"], List[Style[\\\"ColumnName:\\\", GrayLevel[0.5`]], \
\\\"kod\\\"]], Rule[Alignment, Left]]], False]], Rule[DynamicModuleValues, \
Automatic]], Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"count\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"count\\\\\\\"\\\"], List[\
\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"PropertySourceType:\\\\\
\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"Column\\\\\
\\\"\\\"], List[StyleBox[\\\"\\\\\\\"ColumnPrefix:\\\\\\\"\\\", \
GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"prokatinfo\\\\\\\"\\\
\"], List[StyleBox[\\\"\\\\\\\"ColumnName:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"\\\\\\\"count\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Grid\\\"], Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"count\\\", \
Grid[List[List[Style[\\\"PropertySourceType:\\\", GrayLevel[0.5`]], \
\\\"Column\\\"], List[Style[\\\"ColumnPrefix:\\\", GrayLevel[0.5`]], \
\\\"prokatinfo\\\"], List[Style[\\\"ColumnName:\\\", GrayLevel[0.5`]], \
\\\"count\\\"]], Rule[Alignment, Left]]], False]], Rule[DynamicModuleValues, \
Automatic]], Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"starttime\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"starttime\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"PropertySourceType:\\\\\
\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"Column\\\\\
\\\"\\\"], List[StyleBox[\\\"\\\\\\\"ColumnPrefix:\\\\\\\"\\\", \
GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"prokatinfo\\\\\\\"\\\
\"], List[StyleBox[\\\"\\\\\\\"ColumnName:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"\\\\\\\"starttime\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Grid\\\"], Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"starttime\\\", \
Grid[List[List[Style[\\\"PropertySourceType:\\\", GrayLevel[0.5`]], \
\\\"Column\\\"], List[Style[\\\"ColumnPrefix:\\\", GrayLevel[0.5`]], \
\\\"prokatinfo\\\"], List[Style[\\\"ColumnName:\\\", GrayLevel[0.5`]], \
\\\"starttime\\\"]], Rule[Alignment, Left]]], False]], \
Rule[DynamicModuleValues, Automatic]], Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"endtime\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"endtime\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"PropertySourceType:\\\\\
\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"Column\\\\\
\\\"\\\"], List[StyleBox[\\\"\\\\\\\"ColumnPrefix:\\\\\\\"\\\", \
GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"prokatinfo\\\\\\\"\\\
\"], List[StyleBox[\\\"\\\\\\\"ColumnName:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"\\\\\\\"endtime\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Grid\\\"], Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"endtime\\\", \
Grid[List[List[Style[\\\"PropertySourceType:\\\", GrayLevel[0.5`]], \
\\\"Column\\\"], List[Style[\\\"ColumnPrefix:\\\", GrayLevel[0.5`]], \
\\\"prokatinfo\\\"], List[Style[\\\"ColumnName:\\\", GrayLevel[0.5`]], \
\\\"endtime\\\"]], Rule[Alignment, Left]]], False]], \
Rule[DynamicModuleValues, Automatic]], Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"datareg\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"datareg\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"PropertySourceType:\\\\\
\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"Column\\\\\
\\\"\\\"], List[StyleBox[\\\"\\\\\\\"ColumnPrefix:\\\\\\\"\\\", \
GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"prokatinfo\\\\\\\"\\\
\"], List[StyleBox[\\\"\\\\\\\"ColumnName:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"\\\\\\\"datareg\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Grid\\\"], Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"datareg\\\", \
Grid[List[List[Style[\\\"PropertySourceType:\\\", GrayLevel[0.5`]], \
\\\"Column\\\"], List[Style[\\\"ColumnPrefix:\\\", GrayLevel[0.5`]], \
\\\"prokatinfo\\\"], List[Style[\\\"ColumnName:\\\", GrayLevel[0.5`]], \
\\\"datareg\\\"]], Rule[Alignment, Left]]], False]], \
Rule[DynamicModuleValues, Automatic]], Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"fnameprod\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"fnameprod\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"PropertySourceType:\\\\\
\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"Column\\\\\
\\\"\\\"], List[StyleBox[\\\"\\\\\\\"ColumnPrefix:\\\\\\\"\\\", \
GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"prokatinfo\\\\\\\"\\\
\"], List[StyleBox[\\\"\\\\\\\"ColumnName:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"\\\\\\\"fnameprod\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Grid\\\"], Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"fnameprod\\\", \
Grid[List[List[Style[\\\"PropertySourceType:\\\", GrayLevel[0.5`]], \
\\\"Column\\\"], List[Style[\\\"ColumnPrefix:\\\", GrayLevel[0.5`]], \
\\\"prokatinfo\\\"], List[Style[\\\"ColumnName:\\\", GrayLevel[0.5`]], \
\\\"fnameprod\\\"]], Rule[Alignment, Left]]], False]], \
Rule[DynamicModuleValues, Automatic]], Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"lnameprod\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"lnameprod\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"PropertySourceType:\\\\\
\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"Column\\\\\
\\\"\\\"], List[StyleBox[\\\"\\\\\\\"ColumnPrefix:\\\\\\\"\\\", \
GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"prokatinfo\\\\\\\"\\\
\"], List[StyleBox[\\\"\\\\\\\"ColumnName:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"\\\\\\\"lnameprod\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Grid\\\"], Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"lnameprod\\\", \
Grid[List[List[Style[\\\"PropertySourceType:\\\", GrayLevel[0.5`]], \
\\\"Column\\\"], List[Style[\\\"ColumnPrefix:\\\", GrayLevel[0.5`]], \
\\\"prokatinfo\\\"], List[Style[\\\"ColumnName:\\\", GrayLevel[0.5`]], \
\\\"lnameprod\\\"]], Rule[Alignment, Left]]], False]], \
Rule[DynamicModuleValues, Automatic]], Function[Setting[Slot[1], \
List[0]]]]]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[DefaultBaseStyle, \\\"Column\\\"], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \\\"Column\\\"], \
Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxBackground, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"prokatinfo\\\", \
Column[List[OpenerView[List[Style[\\\"id_pr\\\", Bold], Grid[List[List[Style[\
\\\"PropertySourceType:\\\", GrayLevel[0.5`]], \\\"Column\\\"], List[Style[\\\
\"ColumnPrefix:\\\", GrayLevel[0.5`]], \\\"prokatinfo\\\"], \
List[Style[\\\"ColumnName:\\\", GrayLevel[0.5`]], \\\"id_pr\\\"]], \
Rule[Alignment, Left]]]], OpenerView[List[\\\"name\\\", Grid[List[List[Style[\
\\\"PropertySourceType:\\\", GrayLevel[0.5`]], \\\"Column\\\"], List[Style[\\\
\"ColumnPrefix:\\\", GrayLevel[0.5`]], \\\"prokatinfo\\\"], \
List[Style[\\\"ColumnName:\\\", GrayLevel[0.5`]], \\\"name\\\"]], \
Rule[Alignment, Left]]]], OpenerView[List[\\\"kod\\\", \
Grid[List[List[Style[\\\"PropertySourceType:\\\", GrayLevel[0.5`]], \
\\\"Column\\\"], List[Style[\\\"ColumnPrefix:\\\", GrayLevel[0.5`]], \
\\\"prokatinfo\\\"], List[Style[\\\"ColumnName:\\\", GrayLevel[0.5`]], \
\\\"kod\\\"]], Rule[Alignment, Left]]]], OpenerView[List[\\\"count\\\", \
Grid[List[List[Style[\\\"PropertySourceType:\\\", GrayLevel[0.5`]], \
\\\"Column\\\"], List[Style[\\\"ColumnPrefix:\\\", GrayLevel[0.5`]], \
\\\"prokatinfo\\\"], List[Style[\\\"ColumnName:\\\", GrayLevel[0.5`]], \
\\\"count\\\"]], Rule[Alignment, Left]]]], OpenerView[List[\\\"starttime\\\", \
Grid[List[List[Style[\\\"PropertySourceType:\\\", GrayLevel[0.5`]], \
\\\"Column\\\"], List[Style[\\\"ColumnPrefix:\\\", GrayLevel[0.5`]], \
\\\"prokatinfo\\\"], List[Style[\\\"ColumnName:\\\", GrayLevel[0.5`]], \
\\\"starttime\\\"]], Rule[Alignment, Left]]]], \
OpenerView[List[\\\"endtime\\\", Grid[List[List[Style[\\\"PropertySourceType:\
\\\", GrayLevel[0.5`]], \\\"Column\\\"], List[Style[\\\"ColumnPrefix:\\\", \
GrayLevel[0.5`]], \\\"prokatinfo\\\"], List[Style[\\\"ColumnName:\\\", \
GrayLevel[0.5`]], \\\"endtime\\\"]], Rule[Alignment, Left]]]], \
OpenerView[List[\\\"datareg\\\", Grid[List[List[Style[\\\"PropertySourceType:\
\\\", GrayLevel[0.5`]], \\\"Column\\\"], List[Style[\\\"ColumnPrefix:\\\", \
GrayLevel[0.5`]], \\\"prokatinfo\\\"], List[Style[\\\"ColumnName:\\\", \
GrayLevel[0.5`]], \\\"datareg\\\"]], Rule[Alignment, Left]]]], \
OpenerView[List[\\\"fnameprod\\\", \
Grid[List[List[Style[\\\"PropertySourceType:\\\", GrayLevel[0.5`]], \
\\\"Column\\\"], List[Style[\\\"ColumnPrefix:\\\", GrayLevel[0.5`]], \
\\\"prokatinfo\\\"], List[Style[\\\"ColumnName:\\\", GrayLevel[0.5`]], \
\\\"fnameprod\\\"]], Rule[Alignment, Left]]]], \
OpenerView[List[\\\"lnameprod\\\", \
Grid[List[List[Style[\\\"PropertySourceType:\\\", GrayLevel[0.5`]], \
\\\"Column\\\"], List[Style[\\\"ColumnPrefix:\\\", GrayLevel[0.5`]], \
\\\"prokatinfo\\\"], List[Style[\\\"ColumnName:\\\", GrayLevel[0.5`]], \
\\\"lnameprod\\\"]], Rule[Alignment, Left]]]]]]], False]], \
Rule[DynamicModuleValues, Automatic]], Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"worktime\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"worktime\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[TagBox[DynamicModuleBox[List[Set[Typeset`var$\
$, False]], InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], StyleBox[\\\"\\\\\\\"id_w\\\\\\\"\\\", Bold, \
Rule[StripOnInput, False]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]], Rule[True, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], StyleBox[\\\"\\\\\\\"id_w\\\\\\\"\\\", Bold, \
Rule[StripOnInput, False]]], List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"PropertySourceType:\\\\\
\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"Column\\\\\
\\\"\\\"], List[StyleBox[\\\"\\\\\\\"ColumnPrefix:\\\\\\\"\\\", \
GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"worktime\\\\\\\"\\\"], \
List[StyleBox[\\\"\\\\\\\"ColumnName:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"\\\\\\\"id_w\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Grid\\\"], Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[Style[\\\"id_w\\\", Bold], \
Grid[List[List[Style[\\\"PropertySourceType:\\\", GrayLevel[0.5`]], \
\\\"Column\\\"], List[Style[\\\"ColumnPrefix:\\\", GrayLevel[0.5`]], \
\\\"worktime\\\"], List[Style[\\\"ColumnName:\\\", GrayLevel[0.5`]], \\\"id_w\
\\\"]], Rule[Alignment, Left]]], False]], Rule[DynamicModuleValues, \
Automatic]], Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"starttime\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"starttime\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"PropertySourceType:\\\\\
\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"Column\\\\\
\\\"\\\"], List[StyleBox[\\\"\\\\\\\"ColumnPrefix:\\\\\\\"\\\", \
GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"worktime\\\\\\\"\\\"], \
List[StyleBox[\\\"\\\\\\\"ColumnName:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"\\\\\\\"starttime\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Grid\\\"], Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"starttime\\\", \
Grid[List[List[Style[\\\"PropertySourceType:\\\", GrayLevel[0.5`]], \
\\\"Column\\\"], List[Style[\\\"ColumnPrefix:\\\", GrayLevel[0.5`]], \
\\\"worktime\\\"], List[Style[\\\"ColumnName:\\\", GrayLevel[0.5`]], \
\\\"starttime\\\"]], Rule[Alignment, Left]]], False]], \
Rule[DynamicModuleValues, Automatic]], Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"endtime\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"endtime\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"PropertySourceType:\\\\\
\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"Column\\\\\
\\\"\\\"], List[StyleBox[\\\"\\\\\\\"ColumnPrefix:\\\\\\\"\\\", \
GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"worktime\\\\\\\"\\\"], \
List[StyleBox[\\\"\\\\\\\"ColumnName:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"\\\\\\\"endtime\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Grid\\\"], Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"endtime\\\", \
Grid[List[List[Style[\\\"PropertySourceType:\\\", GrayLevel[0.5`]], \
\\\"Column\\\"], List[Style[\\\"ColumnPrefix:\\\", GrayLevel[0.5`]], \
\\\"worktime\\\"], List[Style[\\\"ColumnName:\\\", GrayLevel[0.5`]], \
\\\"endtime\\\"]], Rule[Alignment, Left]]], False]], \
Rule[DynamicModuleValues, Automatic]], Function[Setting[Slot[1], \
List[0]]]]]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[DefaultBaseStyle, \\\"Column\\\"], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \\\"Column\\\"], \
Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxBackground, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"worktime\\\", Column[List[OpenerView[List[Style[\
\\\"id_w\\\", Bold], Grid[List[List[Style[\\\"PropertySourceType:\\\", \
GrayLevel[0.5`]], \\\"Column\\\"], List[Style[\\\"ColumnPrefix:\\\", \
GrayLevel[0.5`]], \\\"worktime\\\"], List[Style[\\\"ColumnName:\\\", \
GrayLevel[0.5`]], \\\"id_w\\\"]], Rule[Alignment, Left]]]], \
OpenerView[List[\\\"starttime\\\", \
Grid[List[List[Style[\\\"PropertySourceType:\\\", GrayLevel[0.5`]], \
\\\"Column\\\"], List[Style[\\\"ColumnPrefix:\\\", GrayLevel[0.5`]], \
\\\"worktime\\\"], List[Style[\\\"ColumnName:\\\", GrayLevel[0.5`]], \
\\\"starttime\\\"]], Rule[Alignment, Left]]]], \
OpenerView[List[\\\"endtime\\\", Grid[List[List[Style[\\\"PropertySourceType:\
\\\", GrayLevel[0.5`]], \\\"Column\\\"], List[Style[\\\"ColumnPrefix:\\\", \
GrayLevel[0.5`]], \\\"worktime\\\"], List[Style[\\\"ColumnName:\\\", \
GrayLevel[0.5`]], \\\"endtime\\\"]], Rule[Alignment, Left]]]]]]], False]], \
Rule[DynamicModuleValues, Automatic]], Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"prodavec\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"prodavec\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[TagBox[DynamicModuleBox[List[Set[Typeset`var$\
$, False]], InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], StyleBox[\\\"\\\\\\\"id_p\\\\\\\"\\\", Bold, \
Rule[StripOnInput, False]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]], Rule[True, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], StyleBox[\\\"\\\\\\\"id_p\\\\\\\"\\\", Bold, \
Rule[StripOnInput, False]]], List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"PropertySourceType:\\\\\
\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"Column\\\\\
\\\"\\\"], List[StyleBox[\\\"\\\\\\\"ColumnPrefix:\\\\\\\"\\\", \
GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"prodavec\\\\\\\"\\\"], \
List[StyleBox[\\\"\\\\\\\"ColumnName:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"\\\\\\\"id_p\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Grid\\\"], Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[Style[\\\"id_p\\\", Bold], \
Grid[List[List[Style[\\\"PropertySourceType:\\\", GrayLevel[0.5`]], \
\\\"Column\\\"], List[Style[\\\"ColumnPrefix:\\\", GrayLevel[0.5`]], \
\\\"prodavec\\\"], List[Style[\\\"ColumnName:\\\", GrayLevel[0.5`]], \\\"id_p\
\\\"]], Rule[Alignment, Left]]], False]], Rule[DynamicModuleValues, \
Automatic]], Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"fnameprod\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"fnameprod\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"PropertySourceType:\\\\\
\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"Column\\\\\
\\\"\\\"], List[StyleBox[\\\"\\\\\\\"ColumnPrefix:\\\\\\\"\\\", \
GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"prodavec\\\\\\\"\\\"], \
List[StyleBox[\\\"\\\\\\\"ColumnName:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"\\\\\\\"fnameprod\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Grid\\\"], Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"fnameprod\\\", \
Grid[List[List[Style[\\\"PropertySourceType:\\\", GrayLevel[0.5`]], \
\\\"Column\\\"], List[Style[\\\"ColumnPrefix:\\\", GrayLevel[0.5`]], \
\\\"prodavec\\\"], List[Style[\\\"ColumnName:\\\", GrayLevel[0.5`]], \
\\\"fnameprod\\\"]], Rule[Alignment, Left]]], False]], \
Rule[DynamicModuleValues, Automatic]], Function[Setting[Slot[1], List[0]]]]], \
List[TagBox[DynamicModuleBox[List[Set[Typeset`var$$, False]], \
InterpretationBox[StyleBox[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], Rule[Appearance, \
Automatic], Rule[Enabled, Automatic], Rule[AutoAction, False], \
Rule[ContinuousAction, False]], \\\"\\\\\\\"lnameprod\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]]]], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[0.2`]]], \
Rule[\\\"Rows\\\", List[List[0.5`]]]]], Rule[BaselinePosition, List[1, 1]]]], \
Rule[True, GridBox[List[List[OpenerBox[Dynamic[Typeset`var$$], \
Rule[Appearance, Automatic], Rule[Enabled, Automatic], Rule[AutoAction, \
False], Rule[ContinuousAction, False]], \\\"\\\\\\\"lnameprod\\\\\\\"\\\"], \
List[\\\"\\\", \
PaneBox[TagBox[GridBox[List[List[StyleBox[\\\"\\\\\\\"PropertySourceType:\\\\\
\\\"\\\", GrayLevel[0.5`], Rule[StripOnInput, False]], \\\"\\\\\\\"Column\\\\\
\\\"\\\"], List[StyleBox[\\\"\\\\\\\"ColumnPrefix:\\\\\\\"\\\", \
GrayLevel[0.5`], Rule[StripOnInput, False]], \
\\\"\\\\\\\"prodavec\\\\\\\"\\\"], \
List[StyleBox[\\\"\\\\\\\"ColumnName:\\\\\\\"\\\", GrayLevel[0.5`], \
Rule[StripOnInput, False]], \\\"\\\\\\\"lnameprod\\\\\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Grid\\\"], Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxBackground, List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"lnameprod\\\", \
Grid[List[List[Style[\\\"PropertySourceType:\\\", GrayLevel[0.5`]], \
\\\"Column\\\"], List[Style[\\\"ColumnPrefix:\\\", GrayLevel[0.5`]], \
\\\"prodavec\\\"], List[Style[\\\"ColumnName:\\\", GrayLevel[0.5`]], \
\\\"lnameprod\\\"]], Rule[Alignment, Left]]], False]], \
Rule[DynamicModuleValues, Automatic]], Function[Setting[Slot[1], \
List[0]]]]]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[DefaultBaseStyle, \\\"Column\\\"], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \\\"Column\\\"], \
Rule[ImageMargins, 0]]]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxBackground, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]]]], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[0.2`]]], Rule[\\\"Rows\\\", List[List[0.5`]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`var$$], \
Rule[Alignment, Automatic], Rule[ImageSize, Automatic], Rule[ImageMargins, \
0], Rule[BaseStyle, List[]], Rule[DefaultBaseStyle, \\\"OpenerView\\\"], \
Rule[BaselinePosition, Baseline]], Rule[Deployed, False], Rule[StripOnInput, \
False]], OpenerView[List[\\\"prodavec\\\", Column[List[OpenerView[List[Style[\
\\\"id_p\\\", Bold], Grid[List[List[Style[\\\"PropertySourceType:\\\", \
GrayLevel[0.5`]], \\\"Column\\\"], List[Style[\\\"ColumnPrefix:\\\", \
GrayLevel[0.5`]], \\\"prodavec\\\"], List[Style[\\\"ColumnName:\\\", \
GrayLevel[0.5`]], \\\"id_p\\\"]], Rule[Alignment, Left]]]], \
OpenerView[List[\\\"fnameprod\\\", \
Grid[List[List[Style[\\\"PropertySourceType:\\\", GrayLevel[0.5`]], \
\\\"Column\\\"], List[Style[\\\"ColumnPrefix:\\\", GrayLevel[0.5`]], \
\\\"prodavec\\\"], List[Style[\\\"ColumnName:\\\", GrayLevel[0.5`]], \
\\\"fnameprod\\\"]], Rule[Alignment, Left]]]], \
OpenerView[List[\\\"lnameprod\\\", \
Grid[List[List[Style[\\\"PropertySourceType:\\\", GrayLevel[0.5`]], \
\\\"Column\\\"], List[Style[\\\"ColumnPrefix:\\\", GrayLevel[0.5`]], \
\\\"prodavec\\\"], List[Style[\\\"ColumnName:\\\", GrayLevel[0.5`]], \
\\\"lnameprod\\\"]], Rule[Alignment, Left]]]]]]], False]], \
Rule[DynamicModuleValues, Automatic]], Function[Setting[Slot[1], \
List[0]]]]]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[DefaultBaseStyle, \\\"Column\\\"], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \\\"Column\\\"]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Rows\\\", List[List[Top]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Grid\\\"], \\\"SummaryItem\\\"]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[2]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaseStyle, \
List[Rule[ShowStringCharacters, False], Rule[NumberMarks, False], \
Rule[PrintPrecision, 3], Rule[ShowSyntaxStyles, False]]]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]], \
Rule[\\\"Rows\\\", List[List[Top]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaselinePosition, List[1, \
1]]]]], Dynamic[Typeset`open$$], Rule[ImageSize, Automatic]]], \
\\\"SummaryPanel\\\"], RuleDelayed[DynamicModuleValues, List[]]], \
\\\"]\\\"}], EntityStore[Association[Rule[\\\"Types\\\", \
Association[Rule[\\\"indexes\\\", \
Association[Rule[\\\"EntityTypeExtractor\\\", \\\"indexes\\\"], \
Rule[\\\"CanonicalNameProperties\\\", List[\\\"id\\\"]], \
Rule[\\\"Properties\\\", Association[Rule[\\\"id\\\", \
Association[Rule[\\\"ColumnPrefix\\\", \\\"indexes\\\"], \
Rule[\\\"ColumnName\\\", \\\"id\\\"]]], Rule[\\\"data_id\\\", \
Association[Rule[\\\"ColumnPrefix\\\", \\\"indexes\\\"], \
Rule[\\\"ColumnName\\\", \\\"data_id\\\"]]], Rule[\\\"prod_id\\\", \
Association[Rule[\\\"ColumnPrefix\\\", \\\"indexes\\\"], \
Rule[\\\"ColumnName\\\", \\\"prod_id\\\"]]], Rule[\\\"work_id\\\", \
Association[Rule[\\\"ColumnPrefix\\\", \\\"indexes\\\"], \
Rule[\\\"ColumnName\\\", \\\"work_id\\\"]]], Rule[\\\"tovar_id\\\", \
Association[Rule[\\\"ColumnPrefix\\\", \\\"indexes\\\"], \
Rule[\\\"ColumnName\\\", \\\"tovar_id\\\"]]]]]]], Rule[\\\"dataintro\\\", \
Association[Rule[\\\"EntityTypeExtractor\\\", \\\"dataintro\\\"], \
Rule[\\\"CanonicalNameProperties\\\", List[\\\"id_d\\\"]], \
Rule[\\\"Properties\\\", Association[Rule[\\\"id_d\\\", \
Association[Rule[\\\"ColumnPrefix\\\", \\\"dataintro\\\"], \
Rule[\\\"ColumnName\\\", \\\"id_d\\\"]]], Rule[\\\"count\\\", \
Association[Rule[\\\"ColumnPrefix\\\", \\\"dataintro\\\"], \
Rule[\\\"ColumnName\\\", \\\"count\\\"]]], Rule[\\\"datareg\\\", \
Association[Rule[\\\"ColumnPrefix\\\", \\\"dataintro\\\"], \
Rule[\\\"ColumnName\\\", \\\"datareg\\\"]]]]]]], Rule[\\\"tovar\\\", \
Association[Rule[\\\"EntityTypeExtractor\\\", \\\"tovar\\\"], \
Rule[\\\"CanonicalNameProperties\\\", List[\\\"id_t\\\"]], \
Rule[\\\"Properties\\\", Association[Rule[\\\"id_t\\\", \
Association[Rule[\\\"ColumnPrefix\\\", \\\"tovar\\\"], \
Rule[\\\"ColumnName\\\", \\\"id_t\\\"]]], Rule[\\\"name\\\", \
Association[Rule[\\\"ColumnPrefix\\\", \\\"tovar\\\"], \
Rule[\\\"ColumnName\\\", \\\"name\\\"]]], Rule[\\\"kod\\\", Association[Rule[\
\\\"ColumnPrefix\\\", \\\"tovar\\\"], Rule[\\\"ColumnName\\\", \
\\\"kod\\\"]]]]]]], Rule[\\\"prokatinfo\\\", \
Association[Rule[\\\"EntityTypeExtractor\\\", \\\"prokatinfo\\\"], \
Rule[\\\"CanonicalNameProperties\\\", List[\\\"id_pr\\\"]], \
Rule[\\\"Properties\\\", Association[Rule[\\\"id_pr\\\", \
Association[Rule[\\\"ColumnPrefix\\\", \\\"prokatinfo\\\"], \
Rule[\\\"ColumnName\\\", \\\"id_pr\\\"]]], Rule[\\\"name\\\", \
Association[Rule[\\\"ColumnPrefix\\\", \\\"prokatinfo\\\"], \
Rule[\\\"ColumnName\\\", \\\"name\\\"]]], Rule[\\\"kod\\\", Association[Rule[\
\\\"ColumnPrefix\\\", \\\"prokatinfo\\\"], Rule[\\\"ColumnName\\\", \\\"kod\\\
\"]]], Rule[\\\"count\\\", Association[Rule[\\\"ColumnPrefix\\\", \
\\\"prokatinfo\\\"], Rule[\\\"ColumnName\\\", \\\"count\\\"]]], \
Rule[\\\"starttime\\\", Association[Rule[\\\"ColumnPrefix\\\", \\\"prokatinfo\
\\\"], Rule[\\\"ColumnName\\\", \\\"starttime\\\"]]], Rule[\\\"endtime\\\", \
Association[Rule[\\\"ColumnPrefix\\\", \\\"prokatinfo\\\"], \
Rule[\\\"ColumnName\\\", \\\"endtime\\\"]]], Rule[\\\"datareg\\\", \
Association[Rule[\\\"ColumnPrefix\\\", \\\"prokatinfo\\\"], \
Rule[\\\"ColumnName\\\", \\\"datareg\\\"]]], Rule[\\\"fnameprod\\\", \
Association[Rule[\\\"ColumnPrefix\\\", \\\"prokatinfo\\\"], \
Rule[\\\"ColumnName\\\", \\\"fnameprod\\\"]]], Rule[\\\"lnameprod\\\", \
Association[Rule[\\\"ColumnPrefix\\\", \\\"prokatinfo\\\"], \
Rule[\\\"ColumnName\\\", \\\"lnameprod\\\"]]]]]]], Rule[\\\"worktime\\\", \
Association[Rule[\\\"EntityTypeExtractor\\\", \\\"worktime\\\"], \
Rule[\\\"CanonicalNameProperties\\\", List[\\\"id_w\\\"]], \
Rule[\\\"Properties\\\", Association[Rule[\\\"id_w\\\", \
Association[Rule[\\\"ColumnPrefix\\\", \\\"worktime\\\"], Rule[\\\"ColumnName\
\\\", \\\"id_w\\\"]]], Rule[\\\"starttime\\\", \
Association[Rule[\\\"ColumnPrefix\\\", \\\"worktime\\\"], Rule[\\\"ColumnName\
\\\", \\\"starttime\\\"]]], Rule[\\\"endtime\\\", \
Association[Rule[\\\"ColumnPrefix\\\", \\\"worktime\\\"], Rule[\\\"ColumnName\
\\\", \\\"endtime\\\"]]]]]]], Rule[\\\"prodavec\\\", \
Association[Rule[\\\"EntityTypeExtractor\\\", \\\"prodavec\\\"], \
Rule[\\\"CanonicalNameProperties\\\", List[\\\"id_p\\\"]], \
Rule[\\\"Properties\\\", Association[Rule[\\\"id_p\\\", \
Association[Rule[\\\"ColumnPrefix\\\", \\\"prodavec\\\"], Rule[\\\"ColumnName\
\\\", \\\"id_p\\\"]]], Rule[\\\"fnameprod\\\", \
Association[Rule[\\\"ColumnPrefix\\\", \\\"prodavec\\\"], Rule[\\\"ColumnName\
\\\", \\\"fnameprod\\\"]]], Rule[\\\"lnameprod\\\", \
Association[Rule[\\\"ColumnPrefix\\\", \\\"prodavec\\\"], Rule[\\\"ColumnName\
\\\", \\\"lnameprod\\\"]]]]]]]]]], \
RelationalDatabase[Association[Rule[\\\"Tables\\\", \
Association[Rule[\\\"indexes\\\", Association[Rule[\\\"PrimaryKey\\\", \
Association[Rule[\\\"ConstraintName\\\", None], Rule[\\\"Columns\\\", List[\\\
\"id\\\"]]]], Rule[\\\"ForeignKeys\\\", List[]], \
Rule[\\\"UniquenessConstraints\\\", List[]], Rule[\\\"Indexes\\\", List[]], \
Rule[\\\"Columns\\\", Association[Rule[\\\"id\\\", \
Association[Rule[\\\"Nullable\\\", False], Rule[\\\"BackendType\\\", \
\\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\"INTEGER(11)\\\"]]], \
Rule[\\\"data_id\\\", Association[Rule[\\\"Nullable\\\", True], \
Rule[\\\"BackendType\\\", \\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\
\"INTEGER(20)\\\"]]], Rule[\\\"prod_id\\\", \
Association[Rule[\\\"Nullable\\\", True], Rule[\\\"BackendType\\\", \
\\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\"INTEGER(20)\\\"]]], \
Rule[\\\"work_id\\\", Association[Rule[\\\"Nullable\\\", True], \
Rule[\\\"BackendType\\\", \\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\
\"INTEGER(20)\\\"]]], Rule[\\\"tovar_id\\\", \
Association[Rule[\\\"Nullable\\\", True], Rule[\\\"BackendType\\\", \
\\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\"INTEGER(20)\\\"]]]]], \
Rule[\\\"Schema\\\", None]]], Rule[\\\"dataintro\\\", \
Association[Rule[\\\"PrimaryKey\\\", Association[Rule[\\\"ConstraintName\\\", \
None], Rule[\\\"Columns\\\", List[\\\"id_d\\\"]]]], Rule[\\\"ForeignKeys\\\", \
List[]], Rule[\\\"UniquenessConstraints\\\", List[]], Rule[\\\"Indexes\\\", \
List[]], Rule[\\\"Columns\\\", Association[Rule[\\\"id_d\\\", \
Association[Rule[\\\"Nullable\\\", False], Rule[\\\"BackendType\\\", \
\\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\"INTEGER(11)\\\"]]], \
Rule[\\\"count\\\", Association[Rule[\\\"Nullable\\\", True], \
Rule[\\\"BackendType\\\", \\\"Real\\\"], Rule[\\\"NativeTypeString\\\", \
\\\"DOUBLE\\\"]]], Rule[\\\"datareg\\\", Association[Rule[\\\"Nullable\\\", \
True], Rule[\\\"BackendType\\\", List[\\\"String\\\", 255, \
\\\"utf8mb4_unicode_ci\\\"]], Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\"]]]]], Rule[\\\"Schema\\\", None]]], \
Rule[\\\"tovar\\\", Association[Rule[\\\"PrimaryKey\\\", \
Association[Rule[\\\"ConstraintName\\\", None], Rule[\\\"Columns\\\", List[\\\
\"id_t\\\"]]]], Rule[\\\"ForeignKeys\\\", List[]], \
Rule[\\\"UniquenessConstraints\\\", List[]], Rule[\\\"Indexes\\\", List[]], \
Rule[\\\"Columns\\\", Association[Rule[\\\"id_t\\\", \
Association[Rule[\\\"Nullable\\\", False], Rule[\\\"BackendType\\\", \
\\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\"INTEGER(11)\\\"]]], \
Rule[\\\"name\\\", Association[Rule[\\\"Nullable\\\", True], \
Rule[\\\"BackendType\\\", List[\\\"String\\\", 255, \
\\\"utf8mb4_unicode_ci\\\"]], Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\"]]], Rule[\\\"kod\\\", \
Association[Rule[\\\"Nullable\\\", True], Rule[\\\"BackendType\\\", \
\\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\"INTEGER(11)\\\"]]]]], \
Rule[\\\"Schema\\\", None]]], Rule[\\\"prokatinfo\\\", \
Association[Rule[\\\"PrimaryKey\\\", Association[Rule[\\\"ConstraintName\\\", \
None], Rule[\\\"Columns\\\", List[\\\"id_pr\\\"]]]], \
Rule[\\\"ForeignKeys\\\", List[]], Rule[\\\"UniquenessConstraints\\\", \
List[]], Rule[\\\"Indexes\\\", List[]], Rule[\\\"Columns\\\", \
Association[Rule[\\\"id_pr\\\", Association[Rule[\\\"Nullable\\\", False], \
Rule[\\\"BackendType\\\", \\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\
\"INTEGER(11)\\\"]]], Rule[\\\"name\\\", Association[Rule[\\\"Nullable\\\", \
True], Rule[\\\"BackendType\\\", List[\\\"String\\\", 255, \
\\\"utf8mb4_unicode_ci\\\"]], Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\"]]], Rule[\\\"kod\\\", \
Association[Rule[\\\"Nullable\\\", True], Rule[\\\"BackendType\\\", \
\\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\"INTEGER(20)\\\"]]], \
Rule[\\\"count\\\", Association[Rule[\\\"Nullable\\\", True], \
Rule[\\\"BackendType\\\", \\\"Real\\\"], Rule[\\\"NativeTypeString\\\", \
\\\"DOUBLE\\\"]]], Rule[\\\"starttime\\\", Association[Rule[\\\"Nullable\\\", \
True], Rule[\\\"BackendType\\\", List[\\\"String\\\", 255, \
\\\"utf8mb4_unicode_ci\\\"]], Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\"]]], Rule[\\\"endtime\\\", \
Association[Rule[\\\"Nullable\\\", True], Rule[\\\"BackendType\\\", \
List[\\\"String\\\", 255, \\\"utf8mb4_unicode_ci\\\"]], \
Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) COLLATE \
utf8mb4_unicode_ci\\\"]]], Rule[\\\"datareg\\\", \
Association[Rule[\\\"Nullable\\\", True], Rule[\\\"BackendType\\\", \
List[\\\"String\\\", 255, \\\"utf8mb4_unicode_ci\\\"]], \
Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) COLLATE \
utf8mb4_unicode_ci\\\"]]], Rule[\\\"fnameprod\\\", \
Association[Rule[\\\"Nullable\\\", True], Rule[\\\"BackendType\\\", \
List[\\\"String\\\", 255, \\\"utf8mb4_unicode_ci\\\"]], \
Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) COLLATE \
utf8mb4_unicode_ci\\\"]]], Rule[\\\"lnameprod\\\", \
Association[Rule[\\\"Nullable\\\", True], Rule[\\\"BackendType\\\", \
List[\\\"String\\\", 255, \\\"utf8mb4_unicode_ci\\\"]], \
Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) COLLATE \
utf8mb4_unicode_ci\\\"]]]]], Rule[\\\"Schema\\\", None]]], \
Rule[\\\"worktime\\\", Association[Rule[\\\"PrimaryKey\\\", Association[Rule[\
\\\"ConstraintName\\\", None], Rule[\\\"Columns\\\", List[\\\"id_w\\\"]]]], \
Rule[\\\"ForeignKeys\\\", List[]], Rule[\\\"UniquenessConstraints\\\", \
List[]], Rule[\\\"Indexes\\\", List[]], Rule[\\\"Columns\\\", \
Association[Rule[\\\"id_w\\\", Association[Rule[\\\"Nullable\\\", False], \
Rule[\\\"BackendType\\\", \\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\
\"INTEGER(11)\\\"]]], Rule[\\\"starttime\\\", Association[Rule[\\\"Nullable\\\
\", True], Rule[\\\"BackendType\\\", List[\\\"String\\\", 255, \
\\\"utf8mb4_unicode_ci\\\"]], Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\"]]], Rule[\\\"endtime\\\", \
Association[Rule[\\\"Nullable\\\", True], Rule[\\\"BackendType\\\", \
List[\\\"String\\\", 255, \\\"utf8mb4_unicode_ci\\\"]], \
Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) COLLATE \
utf8mb4_unicode_ci\\\"]]]]], Rule[\\\"Schema\\\", None]]], \
Rule[\\\"prodavec\\\", Association[Rule[\\\"PrimaryKey\\\", Association[Rule[\
\\\"ConstraintName\\\", None], Rule[\\\"Columns\\\", List[\\\"id_p\\\"]]]], \
Rule[\\\"ForeignKeys\\\", List[]], Rule[\\\"UniquenessConstraints\\\", \
List[]], Rule[\\\"Indexes\\\", List[]], Rule[\\\"Columns\\\", \
Association[Rule[\\\"id_p\\\", Association[Rule[\\\"Nullable\\\", False], \
Rule[\\\"BackendType\\\", \\\"Integer\\\"], Rule[\\\"NativeTypeString\\\", \\\
\"INTEGER(11)\\\"]]], Rule[\\\"fnameprod\\\", Association[Rule[\\\"Nullable\\\
\", True], Rule[\\\"BackendType\\\", List[\\\"String\\\", 255, \
\\\"utf8mb4_unicode_ci\\\"]], Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) \
COLLATE utf8mb4_unicode_ci\\\"]]], Rule[\\\"lnameprod\\\", \
Association[Rule[\\\"Nullable\\\", True], Rule[\\\"BackendType\\\", \
List[\\\"String\\\", 255, \\\"utf8mb4_unicode_ci\\\"]], \
Rule[\\\"NativeTypeString\\\", \\\"VARCHAR(255) COLLATE \
utf8mb4_unicode_ci\\\"]]]]], Rule[\\\"Schema\\\", None]]]]], Rule[\\\"ID\\\", \
\\\"1pcgsvgchrs8c\\\"]], DatabaseReference[Association[Rule[\\\"Backend\\\", \
\\\"mysql\\\"], Rule[\\\"Username\\\", \\\"root\\\"], Rule[\\\"Password\\\", \
\\\"root\\\"], Rule[\\\"Host\\\", \\\"localhost\\\"], Rule[\\\"Port\\\", \
3306], Rule[\\\"Name\\\", \\\"prokattovara\\\"], Rule[\\\"Options\\\", \
Association[]]]]]], Rule[Selectable, False], Rule[Editable, False], \
Rule[SelectWithContents, True]]\\) already exist. The existing ones will be \
shadowed.\"", 2, 34, 4, 27634043966077227531, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.8767569567020555`*^9, 3.87675696766873*^9}, {
  3.8767573531176453`*^9, 3.8767573826457877`*^9}},
 CellLabel->
  "During evaluation of \
In[34]:=",ExpressionUUID->"122584d5-9775-445c-b328-c36746e136eb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"indexes\"\>", ",", "\<\"dataintro\"\>", ",", "\<\"tovar\"\>", 
   ",", "\<\"prokatinfo\"\>", ",", "\<\"worktime\"\>", 
   ",", "\<\"prodavec\"\>"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.876463616586415*^9, 3.87674387024572*^9, {3.8767569570459037`*^9, 
   3.876756967934733*^9}, {3.876757353386675*^9, 3.8767573826457877`*^9}},
 CellLabel->"Out[34]=",ExpressionUUID->"0908bcb1-a718-4e6f-bf99-e9227f3af951"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
8) \:0411\:044b\:0441\:0442\:0440\:0430\:044f \:043f\:0440\:043e\:0432\:0435\
\:0440\:043a\:0430: \:043e\:0442\:043e\:0431\:0440\:0430\:0436\:0430\:0435\
\:0442\:0441\:044f \:0438\:043d\:0444\:043e\:0440\:043c\:0430\:0446\:0438\
\:044f \:043e \:0442\:0430\:0431\:043b\:0438\:0446\:0435 \
\[OpenCurlyDoubleQuote]tovar\[CloseCurlyDoubleQuote]\
\>", "Subsubsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.876756766072939*^9, 3.8767568298223104`*^9}, 
   3.8767573196098666`*^9, {3.876757713302801*^9, 
   3.8767577136372633`*^9}},ExpressionUUID->"5df0ad00-75c4-4726-ae82-\
c2866f20360e"],

Cell[BoxData[
 RowBox[{"EntityValue", "[", " ", "\[IndentingNewLine]", "\t", 
  RowBox[{"\"\<tovar\>\"", ",", "\[IndentingNewLine]", "\t", 
   RowBox[{"{", 
    RowBox[{"\"\<id_t\>\"", ",", "\"\<name\>\"", ",", "\"\<kod\>\""}], "}"}], 
   ",", "\[IndentingNewLine]", "\t", "\"\<Dataset\>\""}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.876756907958801*^9, 3.87675691852531*^9}, 
   3.8767573196109333`*^9},
 CellLabel->"In[35]:=",ExpressionUUID->"6b85d621-5f72-4195-92c5-2bb7bc6bdc74"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      Entity["tovar", 1] -> 
       Association["id_t" -> 1, "name" -> "Jatpack", "kod" -> 21], 
       Entity["tovar", 2] -> 
       Association["id_t" -> 2, "name" -> "Bicycle", "kod" -> 15]], 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, 
          TypeSystem`PackageScope`KeyDummy[1]} -> 1, {All, "id_t"} -> 
        1, {All, "name"} -> 1, {All, "kod"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[90], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`RowShape[
            Association[
            "id_t" -> TypeSystem`PackageScope`AtomShape[34], "name" -> 
             TypeSystem`PackageScope`AtomShape[78.4], "kod" -> 
             TypeSystem`PackageScope`AtomShape[34]]], 
           DirectedInfinity[1], 3, {All}]]], 2, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        Entity["tovar"]], 
       TypeSystem`Struct[{"id_t", "name", "kod"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer]}], 2], "Meta" -> Association[], "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, 
          TypeSystem`PackageScope`KeyDummy[1]} -> 1, {All, "id_t"} -> 
        1, {All, "name"} -> 1, {All, "kod"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[90], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`RowShape[
            Association[
            "id_t" -> TypeSystem`PackageScope`AtomShape[34], "name" -> 
             TypeSystem`PackageScope`AtomShape[78.4], "kod" -> 
             TypeSystem`PackageScope`AtomShape[34]]], 
           DirectedInfinity[1], 3, {All}]]], 2, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        Entity["tovar"]], 
       TypeSystem`Struct[{"id_t", "name", "kod"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer]}], 2], "Path" -> {}, "DisplayedRowCount" -> 
     2, "DisplayedColumnCount" -> 3, "DataRowCount" -> 2, "DataColumnCount" -> 
     3, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1], TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["id_t", 
                  Style[
                  "id_t", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "id_t"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "id_t"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["kod", 
                  Style[
                  "kod", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "kod"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "kod"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"Entity[\\\"tovar\\\", 1]\""], 
                  Style[
                   RawBoxes["\"Entity[\\\"tovar\\\", 1]\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["tovar", 1]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["tovar", 1]]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["tovar", 1]], 
                 Key["id_t"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Jatpack", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["tovar", 1]], 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["21"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["tovar", 1]], 
                 Key["kod"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"Entity[\\\"tovar\\\", 2]\""], 
                  Style[
                   RawBoxes["\"Entity[\\\"tovar\\\", 2]\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["tovar", 2]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["tovar", 2]]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["tovar", 2]], 
                 Key["id_t"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Bicycle", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["tovar", 2]], 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["tovar", 2]], 
                 Key["kod"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{262., {35.85052490234375, 40.14947509765625}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{262., {35.85052490234375, 40.14947509765625}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.876463625991043*^9, {3.876743738036917*^9, 3.8767437454540625`*^9}, 
   3.876743874820346*^9, 3.8767568764611616`*^9, 3.8767569212448225`*^9, 
   3.8767573196109333`*^9, 3.876757360560346*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"e65b6066-e3bf-4bfd-b663-e6bdf4c0abc6"]
}, Closed]],

Cell[CellGroupData[{

Cell["9) \:0412\:044b\:043f\:043e\:043b\:043d\:0435\:043d\:0438\:0435 \:043a\
\:043e\:043c\:0430\:043d\:0434 SQL", "Subsubsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.8767567741416054`*^9, 3.8767567746913147`*^9}, {
   3.876756846874028*^9, 3.8767568634069576`*^9}, 3.876757305952896*^9, {
   3.8767577110453806`*^9, 
   3.8767577111830063`*^9}},ExpressionUUID->"2c345c0c-eb2a-48be-b704-\
e3c3f2fec394"],

Cell[BoxData[
 RowBox[{"ExternalEvaluate", "[", 
  RowBox[{"conn", ",", "\"\<SELECT * FROM prokatinfo\>\""}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.876756155283976*^9, 3.8767562081829166`*^9}, {
   3.8767563277545195`*^9, 3.8767563279675927`*^9}, {3.87675684320708*^9, 
   3.8767568634080153`*^9}, 
   3.876757294525331*^9},ExpressionUUID->"1405752b-c60a-46e8-8e2a-\
761346ed9ba5"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "id_pr" -> 3, "name" -> "Jatpack", "kod" -> 21, "count" -> 67., 
        "starttime" -> "9:30", "endtime" -> "20:00", "datareg" -> 
        "03.06.2017", "fnameprod" -> "Ivan", "lnameprod" -> "Ivanov"], 
       Association[
       "id_pr" -> 4, "name" -> "Bicycle", "kod" -> 15, "count" -> 34., 
        "starttime" -> "12:10", "endtime" -> "13:40", "datareg" -> 
        "25.11.2018", "fnameprod" -> "Petay", "lnameprod" -> "Petrov"]}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "id_pr"} -> 1, {All, "name"} -> 1, {All, "kod"} -> 
        1, {All, "count"} -> 1, {All, "starttime"} -> 1, {All, "endtime"} -> 
        1, {All, "datareg"} -> 1, {All, "fnameprod"} -> 1, {All, "lnameprod"} -> 
        1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "id_pr" -> TypeSystem`PackageScope`AtomShape[34], "name" -> 
            TypeSystem`PackageScope`AtomShape[78.4], "kod" -> 
            TypeSystem`PackageScope`AtomShape[34], "count" -> 
            TypeSystem`PackageScope`AtomShape[60], "starttime" -> 
            TypeSystem`PackageScope`AtomShape[56.00000000000001], "endtime" -> 
            TypeSystem`PackageScope`AtomShape[56.00000000000001], "datareg" -> 
            TypeSystem`PackageScope`AtomShape[112.00000000000001`], 
            "fnameprod" -> 
            TypeSystem`PackageScope`AtomShape[56.00000000000001], "lnameprod" -> 
            TypeSystem`PackageScope`AtomShape[67.2]]], 
          DirectedInfinity[1], 9, {All}]], 2, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "id_pr", "name", "kod", "count", "starttime", "endtime", "datareg", 
         "fnameprod", "lnameprod"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String]}], 2], "Meta" -> Association[], "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "id_pr"} -> 1, {All, "name"} -> 1, {All, "kod"} -> 
        1, {All, "count"} -> 1, {All, "starttime"} -> 1, {All, "endtime"} -> 
        1, {All, "datareg"} -> 1, {All, "fnameprod"} -> 1, {All, "lnameprod"} -> 
        1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "id_pr" -> TypeSystem`PackageScope`AtomShape[34], "name" -> 
            TypeSystem`PackageScope`AtomShape[78.4], "kod" -> 
            TypeSystem`PackageScope`AtomShape[34], "count" -> 
            TypeSystem`PackageScope`AtomShape[60], "starttime" -> 
            TypeSystem`PackageScope`AtomShape[56.00000000000001], "endtime" -> 
            TypeSystem`PackageScope`AtomShape[56.00000000000001], "datareg" -> 
            TypeSystem`PackageScope`AtomShape[112.00000000000001`], 
            "fnameprod" -> 
            TypeSystem`PackageScope`AtomShape[56.00000000000001], "lnameprod" -> 
            TypeSystem`PackageScope`AtomShape[67.2]]], 
          DirectedInfinity[1], 9, {All}]], 2, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "id_pr", "name", "kod", "count", "starttime", "endtime", "datareg", 
         "fnameprod", "lnameprod"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String]}], 2], "Path" -> {}, "DisplayedRowCount" -> 
     2, "DisplayedColumnCount" -> 9, "DataRowCount" -> 2, "DataColumnCount" -> 
     9, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1], TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["id_pr", 
                  Style[
                  "id_pr", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "id_pr"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "id_pr"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["kod", 
                  Style[
                  "kod", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "kod"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "kod"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["count", 
                  Style[
                  "count", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "count"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "count"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["starttime", 
                  Style[
                  "starttime", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "starttime"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "starttime"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["endtime", 
                  Style[
                  "endtime", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "endtime"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "endtime"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["datareg", 
                  Style[
                  "datareg", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "datareg"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "datareg"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["fnameprod", 
                  Style[
                  "fnameprod", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "fnameprod"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "fnameprod"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["lnameprod", 
                  Style[
                  "lnameprod", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "lnameprod"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "lnameprod"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["id_pr"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Jatpack", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["21"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["kod"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["67.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["9:30", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["starttime"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["20:00", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["endtime"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["03.06.2017", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["datareg"]}, "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Ivan", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["fnameprod"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Ivanov", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["lnameprod"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["id_pr"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Bicycle", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["kod"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["34.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["12:10", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["starttime"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["13:40", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["endtime"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["25.11.2018", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["datareg"]}, "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Petay", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["fnameprod"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Petrov", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["lnameprod"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{614., {35.85052490234375, 40.14947509765625}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{614., {35.85052490234375, 40.14947509765625}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{3.8767561749985676`*^9, 3.8767568634080153`*^9, 
  3.876757294525331*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"5fe8292c-5003-4dcd-b47e-25d19e81788f"]
}, Closed]],

Cell[CellGroupData[{

Cell["10) \:041e\:0442\:043a\:043b\:044e\:0447\:0435\:043d\:0438\:0435 \:043e\
\:0442 \:0411\:0414", "Subsubsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.8767570085499897`*^9, 3.8767570177653155`*^9}, 
   3.8767570701142707`*^9},ExpressionUUID->"edb8d026-3c05-4260-b73c-\
1dc9ec8906c8"],

Cell[BoxData[
 RowBox[{"DatabaseDisconnect", "[", "conn", "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.8767569812337923`*^9, 3.8767569890978575`*^9}, 
   3.8767570701153293`*^9},
 CellLabel->"In[29]:=",ExpressionUUID->"34b2376b-d14b-4f45-a6e2-4d54f4f730aa"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Success",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            FrameBox[
             StyleBox["\"\[Checkmark]\"", 
              Directive[
               RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
               25], StripOnInput -> False], ContentPadding -> False, 
             FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                 "\"Database disconnection was successful.\"", 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"DatabaseSuccess\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            FrameBox[
             StyleBox["\"\[Checkmark]\"", 
              Directive[
               RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
               25], StripOnInput -> False], ContentPadding -> False, 
             FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                 "\"Database disconnection was successful.\"", 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"DatabaseSuccess\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Success["DatabaseSuccess", 
   Association[
   "MessageTemplate" :> MessageName[DatabaseReference, "disc"], 
    "MessageParameters" :> {}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.876756991516101*^9, 3.8767570701153293`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"aa811f17-349a-468c-b46c-227becd29515"]
}, Closed]],

Cell[CellGroupData[{

Cell["Wolfram Alpha", "Section",
 CellChangeTimes->{{3.8762501947405605`*^9, 3.876250207927188*^9}, {
  3.87674463106554*^9, 
  3.876744651414125*^9}},ExpressionUUID->"30397d36-9196-40d9-97d3-\
cfd7f800516e"],

Cell[CellGroupData[{

Cell["1) \:0421\:0432\:043e\:0431\:043e\:0434\:043d\:0430\:044f \:0444\:043e\
\:0440\:043c\:0430 \:0432\:0432\:043e\:0434\:0430(=)", "Subsubsection",
 CellChangeTimes->{{3.876744681480409*^9, 3.8767446904063053`*^9}, {
  3.8767447638164005`*^9, 3.876744766176278*^9}, {3.8767448268451247`*^9, 
  3.8767448279957304`*^9}},ExpressionUUID->"9ffd4d28-245f-4e64-9a2b-\
d4fc915472ce"],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "plot xsinx from x=0 to x=3pi", 
   Typeset`newq$$ = "plot xsinx from x=0 to x=3pi", Typeset`chosen$$ = 
   "Plot[x*Sin[x], {x, 0, 3*Pi}]", Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{8.25, {3., 5.25}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{8.25, {3., 5.25}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[Typeset`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "plot xsinx from x=0 to x=3pi", 
                  Defer[
                   
                   Plot[$CellContext`x 
                    Sin[$CellContext`x], {$CellContext`x, 0, 3 Pi}]], 
                  "Fast parse"]; Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{"Plot", "[", 
                  RowBox[{
                   RowBox[{"x", "*", 
                    RowBox[{"Sin", "[", "x", "]"}]}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", " ", "0", ",", " ", 
                    RowBox[{"3", "*", "Pi"}]}], "}"}]}], "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{"Plot", "[", 
                  RowBox[{
                   RowBox[{"x", "*", 
                    RowBox[{"Sin", "[", "x", "]"}]}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", " ", "0", ",", " ", 
                    RowBox[{"3", "*", "Pi"}]}], "}"}]}], "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    RowBox[{"x", "*", 
                    RowBox[{"Sin", "[", "x", "]"}]}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", "0", ",", " ", 
                    RowBox[{"3", "*", "Pi"}]}], "}"}]}], "]"}]], "Input"], 
                  All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], "MouseExited" :> 
        FEPrivate`Set[Typeset`show$$, False], Method -> "Preemptive", 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
         False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  Typeset`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "plot xsinx from x=0 to x=3pi", 
                    Defer[
                    
                    Plot[$CellContext`x 
                    Sin[$CellContext`x], {$CellContext`x, 0, 3 Pi}]], 
                    "Fast parse"]; Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    RowBox[{"x", "*", 
                    RowBox[{"Sin", "[", "x", "]"}]}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", "0", ",", " ", 
                    RowBox[{"3", "*", "Pi"}]}], "}"}]}], "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    RowBox[{"x", "*", 
                    RowBox[{"Sin", "[", "x", "]"}]}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", "0", ",", " ", 
                    RowBox[{"3", "*", "Pi"}]}], "}"}]}], "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    RowBox[{"x", "*", 
                    RowBox[{"Sin", "[", "x", "]"}]}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", "0", ",", " ", 
                    RowBox[{"3", "*", "Pi"}]}], "}"}]}], "]"}]], "Input"], 
                    All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], 
            "MouseExited" :> FEPrivate`Set[Typeset`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[1]:=",ExpressionUUID->"2cc9ea44-4077-498c-b00e-57716f2f5435"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
/XWI3vEAnf5de837Ewue69HufjpXq/M/pd630A==
       "]]},
     Annotation[#, "Charting`Private`Tag$9860#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, 3 Pi}, {-4.814468716212324, 7.916721663965029}}, {{
     0, 9.42477796076938}, {-4.814468716212324, 7.916721663965029}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8767621353807755`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"6ee03506-1d7b-43d3-8e37-781d6107196d"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["2) \:041b\:043e\:043a\:0430\:043b\:044c\:043d\:044b\:0439 \:0432\:0432\
\:043e\:0434 \:0432 \:0441\:0432\:043e\:0431\:043e\:0434\:043d\:043e\:0439 \
\:0444\:043e\:0440\:043c\:0435(ctrl + =)", "Subsubsection",
 CellChangeTimes->{{3.876744711697116*^9, 
  3.876744755842855*^9}},ExpressionUUID->"98b62f1b-66f2-4c3d-9fee-\
7860feb5f3e1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"EllipticK", "[", 
    RowBox[{"x", "/", "40"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"Tan", "[", 
      RowBox[{"30", "*", "Degree"}], "]"}], ",", 
     RowBox[{"Prime", "[", "12", "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.8767447713313675`*^9, {3.876762158398408*^9, 3.8767621682624493`*^9}, {
   3.8767622228642845`*^9, 3.876762271910692*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"1e0aa295-a21a-43b3-972e-6fe361fb0198"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVi3s0lHkch9/hfUuhxqUrIRXJVhi3EX7f963Oyq0lyaUUMppKG0s1rp3a
DRENhhAla7PJraaJioi0LkmbGqEcd2nHtoct7zAza//4nM95znme9UE/eoYo
YRi2b2H/v9i+qLuUN4Qo5mhyMJtGVeLhdNO3Q4hOHoroWeCkCCOXCrNhxFU6
HuJmRyO70rLG++PDKEOoG2qzg0aFWqKK+v2jqCaT/UHVgUacybakbvMJ9IAW
CERAo685M/bYpASV/sAktZxodJku/tO0fAZJNMVvP3kv+JvXrJ5MxiBeVWvD
jbM06mZW16l7LYJzvkfaerJpZFSkckmPoQbhnKxGAxGNnovjR8q0NUDtO3yD
uIdGh+oCSbMZLYh7M45jUhrJAzP7nDRWgXuVR3innhTxezcu7tFfCxvGzKb7
d0rR5Wq9qU5aF6pU/klyDpWilmLWknIVA2APPEuoTpMi6To1nlH0esANeZkR
QikyvpBl7j9iCHHbT7Zwe6Xo/e5mFb+wjdDIvxL9CJ9D9baldWr9m8D9WfiA
x9Y5ZJzC4idzjUE/4c7LHL85lPziVHnj35uhPu2+ASdpDumxAm6X+2+BlNCH
3zjCOWQrn3kaPGYK+dPqOddH59Avs0j00nsrMHi+sfiKeeTtadHOGNsGGuYp
8lXO84jpcjxr1toM1LwOkKrn51H6zyss2iRm8K3TpMRAOI+6wrQHMKE5lI99
aS2emkdlpyTRGmEW4Ci4F+NpLEMXjuo9TjBkgf5ETt30ERnSWVq8dN84C2Z5
R3Wni2TI/QVjD3bDEvTvHmzWGZShnZbCbE2OFdyK2xt1cbMcWWXXJ10wsQab
ULZPX7gcNSwv5nYMWMOkcn/W8Vo5Umf3+caU2MCbmw2tz5cq0AxPYosH2MJy
tXpmpp8CiSsPPJnUZAPn9OvElrsKFCdYsddazAYFoyTiNIHBk4zyLv80O5A3
X1k1wsKgDuUGjnntgFvjoZ/8uRj44IcHnZfZQ1eAsSu/EIMvdbGEerM9fM6h
s63eYeBsPGVrmewA7fntlfKVDHAoZftbkY6ALa70sPdhwHRPT2q+CoKvqStN
sBIGlMhfBR3uQHDVQDaS940BswVdmfEkQDjzoiDYVQnitYdlCb8C7DG+5MS/
pwSvs4MOT2EkHGrmh/auU4ZbWssyU/wXggnccb1AGfYfC3bvqyMh9ZOOi5Ep
Du/Ct5HOT0kokPelJ27FwSeGZtU2kDDQ85E7uR2Hg2npa3KaSAh41TcqtMTh
qPDxiGcrCVFGvTaHHHGIxLRj2rpJ2CgpNJR54JB1rfl27WcS2o7NTiVH49D9
xybGtTUUnNPbUsF5jcNNUCky16Fgd6/EVdCNw8maSWjXpaCkIbemRYwDXlp5
Xq5PAd9kbInFRxwsE9lYiNFCz6laZ/oZB8FuN4U5iwLe948SyggCvJ9Fytpd
KQhqWdus6kCAod2BghB3Cgxmxj0LgYCparaDYi8FR5r4wZa7CLhUJI+12EfB
YPqJTSdcCHh4Pmn+mi8FUb4afyn7EbAaXZ8L4VBw84rHq4mzBIyI4vMVoRQ8
79LtFMUQULUtcEculwJDN0lTUgIBTnpGMR0nKWhKnBfaJhJwTlYptfiJgokH
Q1mt2QTsisrI64ikIOsDYtXkEcCURNpxzlDwcOJf1bJCAkr72dG5PArcMebV
gt8IiPTSXcuKWWDDVLeCOwRAh7y2I5aCRWQGt6iCALVdg76ceArCJGckv98j
4P3jJlqRQIFm3t0hkYiA/wDHqF2/
       "]]},
     Annotation[#, "Charting`Private`Tag$12990#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 1.5765109430804078`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{3^Rational[-1, 2], 37}, {1.5765109430804078`, 
     2.7142160138057614`}}, {{0.5773502691896258, 37}, {1.5765109430804078`, 
     2.7142160138057614`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8767622741293983`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"e5ec9bfc-1ba8-4c6f-9f2f-514b697795e7"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["3) \:041f\:043e\:043b\:043d\:043e\:0446\:0435\:043d\
\:043d\:044b\:0439 \:0440\:0435\:0437\:0443\:043b\:044c\:0442\:0430\:0442 \
\:0437\:0430\:043f\:0440\:043e\:0441\:0430 WolframAlpha(==)", "Subsection"]], \
"Subsubsection",
 CellChangeTimes->{{3.876744778541995*^9, 
  3.8767448092528725`*^9}},ExpressionUUID->"f96fc6f1-36f8-499e-8498-\
35e61ae2c337"],

Cell[CellGroupData[{

Cell["\t1) \:041c\:0430\:0442\:0435\:043c\:0430\:0442\:0438\:043a\:0430", \
"Subsubsubsubsection",
 CellChangeTimes->{{3.8767623367042937`*^9, 
  3.876762349823471*^9}},ExpressionUUID->"a601469c-7077-4d84-bbd9-\
d9e9de9346b1"],

Cell[CellGroupData[{

Cell["simplify cos(3arcsin(x)+5arccos(x))", "WolframAlphaLong",
 CellChangeTimes->{
  3.876744811963817*^9, {3.8767624209079647`*^9, 3.87676242229865*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"126ef1ab-2c52-4653-9877-0ce16964a42a"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "simplify cos(3arcsin(x)+5arccos(x))", 
   Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "https://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Simplify[Cos[3 ArcSin[x] + 5 ArcCos[x]]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             TagBox[
              GridBox[{{
                 PaneBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"simplify\"", {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}], 
                    StyleBox[
                    RowBox[{"cos", "(", 
                    RowBox[{
                    RowBox[{"3", " ", 
                    RowBox[{
                    SuperscriptBox["sin", 
                    RowBox[{"-", "1"}]], "(", "x", ")"}]}], "+", 
                    RowBox[{"5", " ", 
                    RowBox[{
                    SuperscriptBox["cos", 
                    RowBox[{"-", "1"}]], "(", "x", ")"}]}]}], ")"}], 
                    ScriptLevel -> 0, StripOnInput -> False]}}, 
                    GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949], None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 2, 2}, "Rows" -> {{1}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                   LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                  BaselinePosition -> Center]}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               ColumnsEqual -> False, RowsEqual -> False, 
               GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
               AllowScriptLevelChange -> False], 
              $CellContext`TagBoxWrapper["Separator" -> " | "]], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext,minput"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["infos", {"count" -> "2"}, {
       XMLElement[
       "info", {"text" -> "sin^(-1)(x) is the inverse sine function"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/ArcSin.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://functions.wolfram.com/ElementaryFunctions/ArcSin", 
           "text" -> "Properties", "title" -> "Wolfram Functions Site"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/InverseSine.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}]}], 
       XMLElement[
       "info", {"text" -> "cos^(-1)(x) is the inverse cosine function"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/ArcCos.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://functions.wolfram.com/ElementaryFunctions/ArcCos", 
           "text" -> "Properties", "title" -> "Wolfram Functions Site"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/InverseCosine.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}]}]}]}], Typeset`pod2$$ = 
   XMLElement[
   "pod", {"title" -> "Results", "scanner" -> "Simplification", "id" -> 
     "Result", "position" -> "200", "error" -> "false", "numsubpods" -> "2", 
     "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{"sin", "(", 
               RowBox[{"2", " ", 
                 RowBox[{
                   SuperscriptBox["sin", 
                    RowBox[{"-", "1"}]], "(", "x", ")"}]}], ")"}], Identity], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,moutput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"TrigToExp[Cos[5 ArcCos[x] + 3 ArcSin[x]]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
                RowBox[{
                  RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{"1", "-", 
                    SuperscriptBox["x", "2"]}]], "+", 
                    RowBox[{"\[ImaginaryI]", " ", "x"}]}], ")"}], "3"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"5", " ", "\[ImaginaryI]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Pi]", "/", "2"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"log", "(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{"1", "-", 
                    SuperscriptBox["x", "2"]}]], "+", 
                    RowBox[{"\[ImaginaryI]", " ", "x"}]}], ")"}]}]}], 
                    ")"}]}]]}], "+", 
                  FractionBox[
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "5"}], " ", "\[ImaginaryI]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Pi]", "/", "2"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"log", "(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{"1", "-", 
                    SuperscriptBox["x", "2"]}]], "+", 
                    RowBox[{"\[ImaginaryI]", " ", "x"}]}], ")"}]}]}], 
                    ")"}]}]], 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{"1", "-", 
                    SuperscriptBox["x", "2"]}]], "+", 
                    RowBox[{"\[ImaginaryI]", " ", "x"}]}], ")"}], "3"]]}], 
                ")"}]}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "2"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {"text" -> "log(x) is the natural logarithm"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Log.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://functions.wolfram.com/ElementaryFunctions/Log", 
           "text" -> "Properties", "title" -> "Wolfram Functions Site"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/NaturalLogarithm.html", 
           "text" -> "Definition", "title" -> "MathWorld"}, {}]}]}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Plots", "scanner" -> "Simplification", "id" -> "Plot", 
     "position" -> "300", "error" -> "false", "numsubpods" -> "2"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Plot[Cos[5 ArcCos[x] + 3 ArcSin[x]], {x, -2.2, 2.2}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               
               DynamicModuleBox[{
                CalculateUtilities`GraphicsUtilities`Private`max3624$$ = 0.5, 
                 CalculateUtilities`GraphicsUtilities`Private`min3623$$ = \
-0.5, CalculateUtilities`GraphicsUtilities`Private`more$$ = False, 
                 Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
                 Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                 Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                 Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min3623$$], \
-0.5, "min"}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max3624$$], 
                    0.5, "max"}, -1, 1}, {
                    Hold[
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                 Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = False, 
                 Typeset`skipInitDone$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`more$2107848$$ = 
                 False, CalculateUtilities`GraphicsUtilities`Private`min3623$\
2107853$$ = 0, CalculateUtilities`GraphicsUtilities`Private`max3624$2107854$$ = 
                 0}, 
                DynamicBox[
                 Manipulate`ManipulateBoxes[
                 2, TraditionalForm, 
                  "Variables" :> {
                   CalculateUtilities`GraphicsUtilities`Private`max3624$$ = 
                    0.5, CalculateUtilities`GraphicsUtilities`Private`min3623$\
$ = -0.5, CalculateUtilities`GraphicsUtilities`Private`more$$ = False}, 
                  "ControllerVariables" :> {
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$, 
                    CalculateUtilities`GraphicsUtilities`Private`more$2107848$\
$, False], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min3623$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min3623$\
2107853$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max3624$$, 
                    CalculateUtilities`GraphicsUtilities`Private`max3624$\
2107854$$, 0]}, "OtherVariables" :> {
                   Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Quiet[
                    Function[Null, 
                    CalculateUtilities`GraphicsUtilities`Private`post$2107827[
                    Plot[
                    SlotSequence[1]]], HoldAll][
                    Cos[
                    5 ArcCos[$CellContext`x] + 
                    3 ArcSin[$CellContext`x]], {$CellContext`x, 
                    If[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min3623$$], 
                    (
                    Piecewise[{{
                    0. + 2.3518989288293346` Tan[1.5040801783846716` #], # < 
                    0}}, 0. + 
                    2.3518989288293346` Tan[1.5040801783846716` #]]& )[
                    CalculateUtilities`GraphicsUtilities`Private`min3623$$], \
-2.2], 
                    If[
                    And[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min3623$$], 
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`max3624$$]], 
                    (
                    Piecewise[{{
                    0. + 2.3518989288293346` Tan[1.5040801783846716` #], # < 
                    0}}, 0. + 
                    2.3518989288293346` Tan[1.5040801783846716` #]]& )[
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`min3623$$ == 
                    CalculateUtilities`GraphicsUtilities`Private`max3624$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min3623$$ + 
                    0.0044, 
                    CalculateUtilities`GraphicsUtilities`Private`max3624$$]], 
                    2.2]}, LabelStyle -> {FontFamily -> "Bitstream Charter"}, 
                    WorkingPrecision -> MachinePrecision, 
                    PlotRange -> {Full, Automatic}, LabelStyle -> {}, Ticks -> 
                    Automatic, ImageSize -> 220., AxesLabel -> {
                    RawBoxes[
                    FormBox["x", TraditionalForm]], None}]], 
                  "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> None}, {{
                    CalculateUtilities`GraphicsUtilities`Private`min3623$$, \
-0.5, "min"}, -1, 1, ImageSize -> Tiny, ControlPlacement -> 1}, {{
                    CalculateUtilities`GraphicsUtilities`Private`max3624$$, 
                    0.5, "max"}, -1, 1, ImageSize -> Tiny, ControlPlacement -> 
                    2}, 
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                  "Options" :> {
                   ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                  "DefaultOptions" :> {}], SingleEvaluation -> True], 
                Initialization :> ({
                   ReleaseHold[
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`res, 
                    CalculateUtilities`GraphicsUtilities`Private`unitformat}, 
                    CalculateUtilities`GraphicsUtilities`Private`res = 
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    DeleteCases[
                    Replace[
                    ReplaceAll[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Alternatives[
                    Style, $CellContext`UnitNumberForm, NumberForm] -> (#& )],
                     Pattern[CalculateUtilities`GraphicsUtilities`Private`t, {
                    PatternTest[
                    BlankSequence[], NumberQ]}] :> 
                    Thread[{CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`t}]], {
                    Blank[], "", 
                    BlankNullSequence[]}], All, 
                    Span[1, 2]], Superscript[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[Integer]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`p, 
                    Blank[Integer]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`b^
                    CalculateUtilities`GraphicsUtilities`Private`p], Row[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    BlankSequence[]]}, "\[Times]"] :> 
                    Times[CalculateUtilities`GraphicsUtilities`Private`a]]; If[
                    MatchQ[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 2], 
                    Condition[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`quants, {
                    Alternatives[
                    BlankSequence[$CellContext`ShortQuantity], 
                    BlankSequence[Quantity]]}], Length[
                    Union[
                    
                    Map[$CellContext`UnitObjectPart, 
                    CalculateUtilities`GraphicsUtilities`Private`quants]]] == 
                    1]], CalculateUtilities`GraphicsUtilities`Private`\
unitformat = $CellContext`ToCDFQuantityFunction[
                    Part[CalculateUtilities`GraphicsUtilities`Private`res, 1, 
                    2]]; CalculateUtilities`GraphicsUtilities`Private`\
unitformat -> Thread[{
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 1], 
                    $CellContext`QuantityPart[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 2], 
                    $CellContext`UnitObjectPart[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, 1, 
                    2]]]}], 
                    CalculateUtilities`GraphicsUtilities`Private`res]]; 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`post$2107827]\
 = {"ReturnInteractiveTypes" -> False, "Nearest" -> Automatic}; 
                    CalculateUtilities`GraphicsUtilities`Private`post$2107827[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Blank[Graphics]], 
                    OptionsPattern[]] := Check[
                    
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`lines, 
                    CalculateUtilities`GraphicsUtilities`Private`pts, 
                    CalculateUtilities`GraphicsUtilities`Private`gg, 
                    CalculateUtilities`GraphicsUtilities`Private`type, 
                    CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r, 
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog, 
                    CalculateUtilities`GraphicsUtilities`Private`range, 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines,
                     CalculateUtilities`GraphicsUtilities`Private`\
neareststyle = OptionValue["Nearest"]}, 
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog = 
                    Replace[
                    ReplaceAll[Epilog, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]], 
                    Epilog -> Sequence[]]; Switch[
                    ReplaceAll[{Frame, Axes}, 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`g]], {True, 
                    Blank[]}, 
                    CalculateUtilities`GraphicsUtilities`Private`type = 
                    Frame; {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r} = 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    ReplaceAll[FrameTicks, 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`g]]], {
                    Blank[], True}, 
                    CalculateUtilities`GraphicsUtilities`Private`type = 
                    Axes; {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l} = 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    ReplaceAll[Ticks, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]]], 
                    Blank[], 
                    CalculateUtilities`GraphicsUtilities`Private`type = None]; 
                    If[
                    And[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    Frame, 
                    Or[
                    Not[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`t === None, 
                    CalculateUtilities`GraphicsUtilities`Private`b === 
                    CalculateUtilities`GraphicsUtilities`Private`t]], 
                    Not[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`r === None, 
                    CalculateUtilities`GraphicsUtilities`Private`l === 
                    CalculateUtilities`GraphicsUtilities`Private`r]]]], 
                    CalculateUtilities`GraphicsUtilities`Private`type = None]; 
                    If[
                    TrueQ[
                    OptionValue["ReturnInteractiveTypes"]], 
                    Which[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    None, CalculateUtilities`GraphicsUtilities`Private`b === 
                    None, CalculateUtilities`GraphicsUtilities`Private`l === 
                    None], {}, 
                    FreeQ[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Alternatives[Line, Point]], {}, True, {
                    "Tooltips", "Coordinates"}], If[
                    FreeQ[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Alternatives[Line, Point]], 
                    Return[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`gg = 
                    Normal[CalculateUtilities`GraphicsUtilities`Private`g]; 
                    CalculateUtilities`GraphicsUtilities`Private`pts = 
                    Partition[
                    Flatten[
                    Cases[
                    Part[CalculateUtilities`GraphicsUtilities`Private`gg, 1], 
                    Point[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    Infinity]], 2]; 
                    If[Length[
                    CalculateUtilities`GraphicsUtilities`Private`pts] < 2, 
                    CalculateUtilities`GraphicsUtilities`Private`lines = Cases[
                    Part[CalculateUtilities`GraphicsUtilities`Private`gg, 1], 
                    Blank[Line], Infinity]; 
                    If[CalculateUtilities`GraphicsUtilities`Private`lines === \
{}, 
                    Return[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`pts = Flatten[
                    Cases[
                    CalculateUtilities`GraphicsUtilities`Private`lines, Line[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`a, Infinity],
                     1]; If[
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle === 
                    Automatic, If[
                    CalculateUtilities`GraphicsUtilities`Private`orderedLines[
                    CalculateUtilities`GraphicsUtilities`Private`lines], 
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle = 
                    "1D", CalculateUtilities`GraphicsUtilities`Private`\
neareststyle = "2D"]; Null], 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle === 
                    Automatic, 
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle = 
                    "2D"]]; 
                    CalculateUtilities`GraphicsUtilities`Private`range = 
                    Replace[
                    ReplaceAll[PlotRange, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]], 
                    Except[{{
                    PatternTest[
                    Blank[], NumberQ], 
                    PatternTest[
                    Blank[], NumberQ]}, {
                    PatternTest[
                    Blank[], NumberQ], 
                    PatternTest[
                    Blank[], NumberQ]}}] :> {
                    Through[
                    {Min, Max}[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    1]]], 
                    Through[
                    {Min, Max}[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    2]]]}]; CalculateUtilities`GraphicsUtilities`Private`b = 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`b, 
                    First[CalculateUtilities`GraphicsUtilities`Private`range], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    1]]; CalculateUtilities`GraphicsUtilities`Private`l = 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Last[CalculateUtilities`GraphicsUtilities`Private`range], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    2]]; CalculateUtilities`GraphicsUtilities`Private`\
oldgridlines = ReplaceAll[GridLines, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines = 
                    With[{CalculateUtilities`GraphicsUtilities`Private`gray = 
                    GrayLevel[0.7]}, 
                    Replace[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines,\
 {Pattern[CalculateUtilities`GraphicsUtilities`Private`a, {
                    Blank[List], 
                    Blank[List]}] :> Dynamic[
                    Join[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}}}], 
                    2]], {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[List]], Automatic} :> 
                    With[{CalculateUtilities`GraphicsUtilities`Private`\
divisions = {CalculateUtilities`GraphicsUtilities`Private`a, 
                    FindDivisions[
                    Last[CalculateUtilities`GraphicsUtilities`Private`range], 
                    7]}}, 
                    Dynamic[
                    Join[
                    CalculateUtilities`GraphicsUtilities`Private`divisions, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}}}], 
                    2]]], Blank[] -> Dynamic[
                    
                    Map[{{#, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]]}]]; If[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    None, CalculateUtilities`GraphicsUtilities`Private`b === 
                    None, CalculateUtilities`GraphicsUtilities`Private`l === 
                    None], 
                    Show[
                    CalculateUtilities`GraphicsUtilities`Private`g, GridLines -> 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    If[
                    MatchQ[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines, 
                    Alternatives[None, GridLines]], 
                    Method -> {"GridLinesInFront" -> True}, 
                    Apply[Sequence, {}]]], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`nf = 
                    If[CalculateUtilities`GraphicsUtilities`Private`\
neareststyle === "1D", 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`n = 
                    Nearest[Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 1] -> 
                    CalculateUtilities`GraphicsUtilities`Private`pts]}, 
                    CalculateUtilities`GraphicsUtilities`Private`n[
                    Part[#, 1]]& ], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`n = 
                    Nearest[Transpose[
                    Transpose[
                    CalculateUtilities`GraphicsUtilities`Private`pts]/Abs[
                    Apply[
                    Subtract, 
                    CalculateUtilities`GraphicsUtilities`Private`range, {
                    1}]]] -> 
                    CalculateUtilities`GraphicsUtilities`Private`pts], 
                    CalculateUtilities`GraphicsUtilities`Private`scale = Abs[
                    Apply[
                    Subtract, 
                    CalculateUtilities`GraphicsUtilities`Private`range, {
                    1}]]}, CalculateUtilities`GraphicsUtilities`Private`n[#/
                    CalculateUtilities`GraphicsUtilities`Private`scale]& ]], 
                    CalculateUtilities`GraphicsUtilities`Private`left = 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`bottom = 
                    CalculateUtilities`GraphicsUtilities`Private`b}, 
                    Show[
                    CalculateUtilities`GraphicsUtilities`Private`g, GridLines -> 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    If[
                    MatchQ[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines, 
                    Alternatives[None, GridLines]], 
                    Method -> {"GridLinesInFront" -> True}, 
                    Apply[Sequence, {}]], 
                    Epilog -> {
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog, 
                    Dynamic[
                    
                    DynamicModule[{
                    CalculateUtilities`GraphicsUtilities`Private`pt = 
                    CalculateUtilities`GraphicsUtilities`Private`nf[
                    MousePosition[{"Graphics", Graphics}, {0, 0}]], 
                    CalculateUtilities`GraphicsUtilities`Private`scaled = 
                    MousePosition[{"GraphicsScaled", Graphics}, None]}, 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`scaled === 
                    None, {}, {
                    Text[
                    Style[
                    Row[{
                    CalculateUtilities`GraphicsUtilities`Private`bottom[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 1]], 
                    CalculateUtilities`GraphicsUtilities`Private`left[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 2]]}, 
                    ","], 12], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1], {
                    1.5 Sign[Part[
                    CalculateUtilities`GraphicsUtilities`Private`scaled, 1] - 
                    0.5], 0}, Background -> White], 
                    AbsolutePointSize[7], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt], 
                    White, 
                    AbsolutePointSize[5], 
                    Point[
                    CalculateUtilities`GraphicsUtilities`Private`pt]}]]]}]]]]]\
, CalculateUtilities`GraphicsUtilities`Private`g]; 
                    CalculateUtilities`GraphicsUtilities`Private`post$2107827[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Blank[]], 
                    BlankNullSequence[]] := 
                    CalculateUtilities`GraphicsUtilities`Private`g; 
                    CalculateUtilities`GraphicsUtilities`Private`orderedLines[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    BlankSequence[Line]]}] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`ordered, 
                    CalculateUtilities`GraphicsUtilities`Private`intervals}, 
                    CalculateUtilities`GraphicsUtilities`Private`ordered = 
                    Apply[And, 
                    Map[OrderedQ[
                    Part[#, 1, All, 1]]& , 
                    Hold[CalculateUtilities`GraphicsUtilities`Private`l]]]; If[
                    Not[
                    TrueQ[
                    CalculateUtilities`GraphicsUtilities`Private`ordered]], 
                    Return[False]]; 
                    CalculateUtilities`GraphicsUtilities`Private`intervals = 
                    Part[{CalculateUtilities`GraphicsUtilities`Private`l}, 
                    All, 1, {1, -1}, 1]; Length[
                    Apply[
                    Interval, 
                    CalculateUtilities`GraphicsUtilities`Private`intervals]] === 
                    Length[CalculateUtilities`GraphicsUtilities`Private`\
intervals]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    Alternatives[Automatic, FrameTicks]] = {
                    Identity, Identity, Identity, Identity}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`r, 
                    Blank[]]}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, {{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`r, 
                    Blank[]]}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, 
                    Blank[]]}}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    Blank[]] = {None, None, None, None}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    Alternatives[Automatic, Ticks]] = {Identity, Identity}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`h, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`v, 
                    Blank[]]}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`h, 
                    CalculateUtilities`GraphicsUtilities`Private`v}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    Blank[]] = {None, None}; 
                    CalculateUtilities`GraphicsUtilities`Private`CDFCleanTicks[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := ReplaceAll[
                    ReplaceAll[
                    Part[
                    DeleteCases[
                    ReplaceAll[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Alternatives[Style, NumberForm] -> (#& )], {
                    Blank[], "", 
                    BlankNullSequence[]}], All, 
                    Span[1, 2]], Superscript[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[Integer]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`p, 
                    Blank[Integer]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`b^
                    CalculateUtilities`GraphicsUtilities`Private`p], Row[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    BlankSequence[]]}, "\[Times]"] :> 
                    Times[CalculateUtilities`GraphicsUtilities`Private`a]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks$, 
                    Blank[]]] := 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[
                    CalculateUtilities`GraphicsUtilities`Private`ticks$]]; 
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[None] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[False] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[True] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[Automatic] = Identity; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[All] = Identity; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[Pattern[CalculateUtilities`GraphicsUtilities`Private`func, 
                    Blank[]] -> 
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := Replace[
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[CalculateUtilities`GraphicsUtilities`Private`ticks], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`f, 
                    Except[None]] :> 
                    Composition[
                    CalculateUtilities`GraphicsUtilities`Private`func, 
                    CalculateUtilities`GraphicsUtilities`Private`f]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[{}] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    Repeated[{
                    Blank[Integer], 
                    Blank[String]}]}]] := Which[
                    Quiet[
                    MatchQ[
                    Apply[SameQ, 
                    Map[Part[
                    DateList[#], 
                    Span[2, All]]& , 
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    2}], {1}], {
                    Repeated[True]}]], DateString, 
                    Apply[And, 
                    StringMatchQ[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    2], NumberString]], 
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Transpose[{
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    1], 
                    ToExpression[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    2]]}]], True, None]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    Repeated[{
                    PatternTest[
                    Blank[], NumericQ], 
                    PatternTest[
                    Blank[], NumericQ]}]}]] := Which[
                    MatchQ[
                    Apply[
                    Equal, CalculateUtilities`GraphicsUtilities`Private`ticks,\
 {1}], {
                    Repeated[True]}], Identity, 
                    MatchQ[
                    
                    Apply[# == Log[#2]& , 
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {1}], {
                    Repeated[True]}], Exp, 
                    TrueQ[
                    Quiet[
                    Apply[Equal, 
                    Apply[Divide, Transpose[
                    Rest[CalculateUtilities`GraphicsUtilities`Private`ticks]] - 
                    Part[CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    1]]]]], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`slope = 
                    Apply[Divide, 
                    Apply[Subtract, 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {-1, 
                    1}]]]}, 
                    SetPrecision[(# - Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 1, 
                    1])/CalculateUtilities`GraphicsUtilities`Private`slope + 
                    Part[CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    1, 2], 3]& ], True, None]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Blank[]] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`type, 
                    Blank[]], 
                    BlankNullSequence[]] := 
                    CalculateUtilities`GraphicsUtilities`Private`type; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[Identity, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Blank[]] := 
                    With[{CalculateUtilities`GraphicsUtilities`Private`nf = 
                    CalculateUtilities`GraphicsUtilities`Private`numberForm, 
                    CalculateUtilities`GraphicsUtilities`Private`acc = 
                    Floor[Max[
                    Ceiling[
                    FullSimplify[Log[10, 
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]] - 
                    Log[10, (CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/100]]], 
                    3] - RealExponent[
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]]]}, 
                    CalculateUtilities`GraphicsUtilities`Private`nf[#, 
                    CalculateUtilities`GraphicsUtilities`Private`acc]& ]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[Exp, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Blank[]] := 
                    With[{CalculateUtilities`GraphicsUtilities`Private`prec = 
                    Max[
                    Ceiling[
                    FullSimplify[Log[10, 
                    Max[
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]] - 
                    Log[10, (CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/100]]], 
                    3]}, Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[
                    Exp[#], 
                    CalculateUtilities`GraphicsUtilities`Private`prec]]]]& ]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[DateString, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`pts, 
                    Blank[]]] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`dates, 
                    CalculateUtilities`GraphicsUtilities`Private`spec}, 
                    CalculateUtilities`GraphicsUtilities`Private`dates = 
                    Map[DateList, 
                    CalculateUtilities`GraphicsUtilities`Private`pts]; 
                    CalculateUtilities`GraphicsUtilities`Private`spec = Switch[
                    Map[Length, 
                    Map[Union, 
                    Transpose[
                    CalculateUtilities`GraphicsUtilities`Private`dates]]], {
                    Blank[], 1, 1, 
                    BlankSequence[]}, {"Year"}, {
                    Blank[], 
                    Blank[], 1, 
                    BlankSequence[]}, {"MonthNameShort", " ", "Year"}, 
                    Blank[], {
                    "DayShort", " ", "MonthNameShort", " ", "Year"}]; 
                    If[(CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/
                    31536000 > 25, 
                    CalculateUtilities`GraphicsUtilities`Private`spec = {
                    "Year"}]; 
                    With[{CalculateUtilities`GraphicsUtilities`Private`s = 
                    CalculateUtilities`GraphicsUtilities`Private`spec}, 
                    DateString[#, 
                    CalculateUtilities`GraphicsUtilities`Private`s]& ]]; 
                    CalculateUtilities`GraphicsUtilities`Private`numberForm = 
                    Function[{
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    CalculateUtilities`GraphicsUtilities`Private`acc}, 
                    Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Max[1, 
                    Ceiling[
                    RealExponent[
                    CalculateUtilities`GraphicsUtilities`Private`a] + 
                    CalculateUtilities`GraphicsUtilities`Private`acc]], 
                    ExponentFunction -> (Null& ), 
                    NumberFormat -> (StringReplace[#, StringExpression[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`s, 
                    BlankSequence[]], ".", EndOfString] -> 
                    CalculateUtilities`GraphicsUtilities`Private`s]& )]]]]]]], 
                   ReleaseHold[
                    Uncompress[
                    "6:eJztVm1v0zAQbinv7/\
APkPiM2IY0viABHYxJA0pSvvcWO42Fawfb2QZ/Hnx2kzRrVymmAzSlH071pXl899xz13tyJKO03+\
v19FVrPkhO0ht4emzNUM5yWQjy7jRXVGsmRXoFn922JqZmj3L4QYn3XbfmvVQzMP78Ct8HnhQcDP1q\
GGeGUT3ZV5BnLNG1Z6TYsf3JhMsEOPtJn25vPd99ubPrYTCWERhDldA7bSHzTIGmaQ+\
BrlnzloP45o+PyuOngvOYfi+oSKh+YL1jBcTCSAEc8wm+\
9XIzdRcTMyAIKHLhNDl5DtteoI1iYjqmsxzfOJ+srbbAoKbac3Ov5Gadgnz4N/\
GBjF1M3uOSdmdHYFgYl4y+s7L659wN8Py6LbySJ6uJw/zecOQNDDumepnOZ63r5BmputZFP+\
fqoubLRoM8f8rU/0uHTJvlMLbbhkFnR7bGq7W3DP+\
iLbzMsevn4r5vzWfvKAFXDYdKcB8lKfg8imbKAy/\
R9unq3Do8xp2K7xidIRWscCIbZ9kvrj8eVuD1phBj7SYbkI6oZ0BEc2pdxHG7x6bMDDNQkFjg+\
XX9ssnGsg4l4M72tWeCMDvAPCHrlic0B+lC3cEk2Zc/Km4llzNNhrwfCEOnVK0V/\
S2sj7LkCjKWgZHEeEFTr8EcVkmNQAXLflCCxDkIhpDsl/24b/\
7hYiWQqn2F6lKexYErzWl4Ev2ywIdUTE3W3LEDR1dw22I2kTypVRexNF2cNptjut9kunFDc6CHkhBa\
kvCB3m0K3abwVzeFpT24WxO6NaFbE7o1oVsT/t81wUWM/0q/AV3YuH4="]]}; 
                 Typeset`initDone$$ = True), DynamicModuleValues :> {}, 
                Deinitialization :> None, 
                UntrackedVariables :> {Typeset`size$$}, 
                SynchronousInitialization -> True, 
                UnsavedVariables :> {Typeset`initDone$$}, 
                UndoTrackedVariables :> {
                 Typeset`show$$, Typeset`bookmarkMode$$}], "Manipulate", 
               Deployed -> True, StripOnInput -> False], TraditionalForm], 
             Manipulate`InterpretManipulate[1]], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"minput"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Plot[Cos[5 ArcCos[x] + 3 ArcSin[x]], {x, -11., 11.}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               
               DynamicModuleBox[{
                CalculateUtilities`GraphicsUtilities`Private`max3626$$ = 0.5, 
                 CalculateUtilities`GraphicsUtilities`Private`min3625$$ = \
-0.5, CalculateUtilities`GraphicsUtilities`Private`more$$ = False, 
                 Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
                 Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                 Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                 Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min3625$$], \
-0.5, "min"}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max3626$$], 
                    0.5, "max"}, -1, 1}, {
                    Hold[
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                 Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = False, 
                 Typeset`skipInitDone$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`more$2107943$$ = 
                 False, CalculateUtilities`GraphicsUtilities`Private`min3625$\
2107944$$ = 0, CalculateUtilities`GraphicsUtilities`Private`max3626$2107945$$ = 
                 0}, 
                DynamicBox[
                 Manipulate`ManipulateBoxes[
                 2, TraditionalForm, 
                  "Variables" :> {
                   CalculateUtilities`GraphicsUtilities`Private`max3626$$ = 
                    0.5, CalculateUtilities`GraphicsUtilities`Private`min3625$\
$ = -0.5, CalculateUtilities`GraphicsUtilities`Private`more$$ = False}, 
                  "ControllerVariables" :> {
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$, 
                    CalculateUtilities`GraphicsUtilities`Private`more$2107943$\
$, False], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min3625$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min3625$\
2107944$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max3626$$, 
                    
                    CalculateUtilities`GraphicsUtilities`Private`max3626$\
2107945$$, 0]}, "OtherVariables" :> {
                   Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Quiet[
                    Function[Null, 
                    CalculateUtilities`GraphicsUtilities`Private`post$2107924[
                    Plot[
                    SlotSequence[1]]], HoldAll][
                    Cos[
                    5 ArcCos[$CellContext`x] + 
                    3 ArcSin[$CellContext`x]], {$CellContext`x, 
                    If[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min3625$$], 
                    (
                    Piecewise[{{
                    0. + 11.75949464414667 Tan[1.5040801783846716` #], # < 
                    0}}, 0. + 
                    11.75949464414667 Tan[1.5040801783846716` #]]& )[
                    CalculateUtilities`GraphicsUtilities`Private`min3625$$], \
-11.], 
                    If[
                    And[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min3625$$], 
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`max3626$$]], 
                    (
                    Piecewise[{{
                    0. + 11.75949464414667 Tan[1.5040801783846716` #], # < 
                    0}}, 0. + 11.75949464414667 Tan[1.5040801783846716` #]]& )[
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`min3625$$ == 
                    CalculateUtilities`GraphicsUtilities`Private`max3626$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min3625$$ + 
                    0.022, CalculateUtilities`GraphicsUtilities`Private`\
max3626$$]], 11.]}, LabelStyle -> {FontFamily -> "Bitstream Charter"}, 
                    WorkingPrecision -> MachinePrecision, 
                    PlotRange -> {Full, Automatic}, LabelStyle -> {}, Ticks -> 
                    Automatic, ImageSize -> 220., AxesLabel -> {
                    RawBoxes[
                    FormBox["x", TraditionalForm]], None}]], 
                  "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> None}, {{
                    CalculateUtilities`GraphicsUtilities`Private`min3625$$, \
-0.5, "min"}, -1, 1, ImageSize -> Tiny, ControlPlacement -> 1}, {{
                    CalculateUtilities`GraphicsUtilities`Private`max3626$$, 
                    0.5, "max"}, -1, 1, ImageSize -> Tiny, ControlPlacement -> 
                    2}, 
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                  "Options" :> {
                   ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                  "DefaultOptions" :> {}], SingleEvaluation -> True], 
                Initialization :> ({
                   ReleaseHold[
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`res, 
                    CalculateUtilities`GraphicsUtilities`Private`unitformat}, 
                    CalculateUtilities`GraphicsUtilities`Private`res = 
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    DeleteCases[
                    Replace[
                    ReplaceAll[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Alternatives[
                    Style, $CellContext`UnitNumberForm, NumberForm] -> (#& )],
                     Pattern[CalculateUtilities`GraphicsUtilities`Private`t, {
                    PatternTest[
                    BlankSequence[], NumberQ]}] :> 
                    Thread[{CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`t}]], {
                    Blank[], "", 
                    BlankNullSequence[]}], All, 
                    Span[1, 2]], Superscript[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[Integer]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`p, 
                    Blank[Integer]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`b^
                    CalculateUtilities`GraphicsUtilities`Private`p], Row[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    BlankSequence[]]}, "\[Times]"] :> 
                    Times[CalculateUtilities`GraphicsUtilities`Private`a]]; If[
                    MatchQ[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 2], 
                    Condition[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`quants, {
                    Alternatives[
                    BlankSequence[$CellContext`ShortQuantity], 
                    BlankSequence[Quantity]]}], Length[
                    Union[
                    
                    Map[$CellContext`UnitObjectPart, 
                    CalculateUtilities`GraphicsUtilities`Private`quants]]] == 
                    1]], CalculateUtilities`GraphicsUtilities`Private`\
unitformat = $CellContext`ToCDFQuantityFunction[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, 1, 2]]; 
                    CalculateUtilities`GraphicsUtilities`Private`unitformat -> 
                    Thread[{
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 1], 
                    $CellContext`QuantityPart[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 2], 
                    $CellContext`UnitObjectPart[
                    Part[CalculateUtilities`GraphicsUtilities`Private`res, 1, 
                    2]]]}], 
                    CalculateUtilities`GraphicsUtilities`Private`res]]; 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`post$2107924]\
 = {"ReturnInteractiveTypes" -> False, "Nearest" -> Automatic}; 
                    CalculateUtilities`GraphicsUtilities`Private`post$2107924[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Blank[Graphics]], 
                    OptionsPattern[]] := Check[
                    
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`lines, 
                    CalculateUtilities`GraphicsUtilities`Private`pts, 
                    CalculateUtilities`GraphicsUtilities`Private`gg, 
                    CalculateUtilities`GraphicsUtilities`Private`type, 
                    CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r, 
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog, 
                    CalculateUtilities`GraphicsUtilities`Private`range, 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines,
                     CalculateUtilities`GraphicsUtilities`Private`\
neareststyle = OptionValue["Nearest"]}, 
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog = 
                    Replace[
                    ReplaceAll[Epilog, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]], 
                    Epilog -> Sequence[]]; Switch[
                    ReplaceAll[{Frame, Axes}, 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`g]], {True, 
                    Blank[]}, 
                    CalculateUtilities`GraphicsUtilities`Private`type = 
                    Frame; {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r} = 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    ReplaceAll[FrameTicks, 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`g]]], {
                    Blank[], True}, 
                    CalculateUtilities`GraphicsUtilities`Private`type = 
                    Axes; {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l} = 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    ReplaceAll[Ticks, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]]], 
                    Blank[], 
                    CalculateUtilities`GraphicsUtilities`Private`type = None]; 
                    If[
                    And[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    Frame, 
                    Or[
                    Not[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`t === None, 
                    CalculateUtilities`GraphicsUtilities`Private`b === 
                    CalculateUtilities`GraphicsUtilities`Private`t]], 
                    Not[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`r === None, 
                    CalculateUtilities`GraphicsUtilities`Private`l === 
                    CalculateUtilities`GraphicsUtilities`Private`r]]]], 
                    CalculateUtilities`GraphicsUtilities`Private`type = None]; 
                    If[
                    TrueQ[
                    OptionValue["ReturnInteractiveTypes"]], 
                    Which[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    None, CalculateUtilities`GraphicsUtilities`Private`b === 
                    None, CalculateUtilities`GraphicsUtilities`Private`l === 
                    None], {}, 
                    FreeQ[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Alternatives[Line, Point]], {}, True, {
                    "Tooltips", "Coordinates"}], If[
                    FreeQ[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Alternatives[Line, Point]], 
                    Return[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`gg = 
                    Normal[CalculateUtilities`GraphicsUtilities`Private`g]; 
                    CalculateUtilities`GraphicsUtilities`Private`pts = 
                    Partition[
                    Flatten[
                    Cases[
                    Part[CalculateUtilities`GraphicsUtilities`Private`gg, 1], 
                    Point[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    Infinity]], 2]; 
                    If[Length[
                    CalculateUtilities`GraphicsUtilities`Private`pts] < 2, 
                    CalculateUtilities`GraphicsUtilities`Private`lines = Cases[
                    Part[CalculateUtilities`GraphicsUtilities`Private`gg, 1], 
                    Blank[Line], Infinity]; 
                    If[CalculateUtilities`GraphicsUtilities`Private`lines === \
{}, 
                    Return[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`pts = Flatten[
                    Cases[
                    CalculateUtilities`GraphicsUtilities`Private`lines, Line[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`a, Infinity],
                     1]; If[
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle === 
                    Automatic, If[
                    CalculateUtilities`GraphicsUtilities`Private`orderedLines[
                    CalculateUtilities`GraphicsUtilities`Private`lines], 
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle = 
                    "1D", CalculateUtilities`GraphicsUtilities`Private`\
neareststyle = "2D"]; Null], 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle === 
                    Automatic, 
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle = 
                    "2D"]]; 
                    CalculateUtilities`GraphicsUtilities`Private`range = 
                    Replace[
                    ReplaceAll[PlotRange, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]], 
                    Except[{{
                    PatternTest[
                    Blank[], NumberQ], 
                    PatternTest[
                    Blank[], NumberQ]}, {
                    PatternTest[
                    Blank[], NumberQ], 
                    PatternTest[
                    Blank[], NumberQ]}}] :> {
                    Through[
                    {Min, Max}[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    1]]], 
                    Through[
                    {Min, Max}[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    2]]]}]; CalculateUtilities`GraphicsUtilities`Private`b = 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`b, 
                    First[CalculateUtilities`GraphicsUtilities`Private`range], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    1]]; CalculateUtilities`GraphicsUtilities`Private`l = 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Last[CalculateUtilities`GraphicsUtilities`Private`range], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    2]]; CalculateUtilities`GraphicsUtilities`Private`\
oldgridlines = ReplaceAll[GridLines, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines = 
                    With[{CalculateUtilities`GraphicsUtilities`Private`gray = 
                    GrayLevel[0.7]}, 
                    Replace[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines,\
 {Pattern[CalculateUtilities`GraphicsUtilities`Private`a, {
                    Blank[List], 
                    Blank[List]}] :> Dynamic[
                    Join[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}}}], 
                    2]], {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[List]], Automatic} :> 
                    With[{CalculateUtilities`GraphicsUtilities`Private`\
divisions = {CalculateUtilities`GraphicsUtilities`Private`a, 
                    FindDivisions[
                    Last[CalculateUtilities`GraphicsUtilities`Private`range], 
                    7]}}, 
                    Dynamic[
                    Join[
                    CalculateUtilities`GraphicsUtilities`Private`divisions, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}}}], 
                    2]]], Blank[] -> Dynamic[
                    
                    Map[{{#, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]]}]]; If[
                    Or[CalculateUtilities`GraphicsUtilities`Private`type === 
                    None, CalculateUtilities`GraphicsUtilities`Private`b === 
                    None, CalculateUtilities`GraphicsUtilities`Private`l === 
                    None], 
                    Show[
                    CalculateUtilities`GraphicsUtilities`Private`g, GridLines -> 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    If[
                    MatchQ[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines, 
                    Alternatives[None, GridLines]], 
                    Method -> {"GridLinesInFront" -> True}, 
                    Apply[Sequence, {}]]], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`nf = 
                    If[CalculateUtilities`GraphicsUtilities`Private`\
neareststyle === "1D", 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`n = 
                    Nearest[Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 1] -> 
                    CalculateUtilities`GraphicsUtilities`Private`pts]}, 
                    CalculateUtilities`GraphicsUtilities`Private`n[
                    Part[#, 1]]& ], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`n = 
                    Nearest[Transpose[
                    Transpose[
                    CalculateUtilities`GraphicsUtilities`Private`pts]/Abs[
                    Apply[
                    Subtract, 
                    CalculateUtilities`GraphicsUtilities`Private`range, {
                    1}]]] -> 
                    CalculateUtilities`GraphicsUtilities`Private`pts], 
                    CalculateUtilities`GraphicsUtilities`Private`scale = Abs[
                    Apply[
                    Subtract, 
                    CalculateUtilities`GraphicsUtilities`Private`range, {
                    1}]]}, CalculateUtilities`GraphicsUtilities`Private`n[#/
                    CalculateUtilities`GraphicsUtilities`Private`scale]& ]], 
                    CalculateUtilities`GraphicsUtilities`Private`left = 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`bottom = 
                    CalculateUtilities`GraphicsUtilities`Private`b}, 
                    Show[
                    CalculateUtilities`GraphicsUtilities`Private`g, GridLines -> 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    If[
                    MatchQ[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines, 
                    Alternatives[None, GridLines]], 
                    Method -> {"GridLinesInFront" -> True}, 
                    Apply[Sequence, {}]], 
                    Epilog -> {
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog, 
                    Dynamic[
                    
                    DynamicModule[{
                    CalculateUtilities`GraphicsUtilities`Private`pt = 
                    CalculateUtilities`GraphicsUtilities`Private`nf[
                    MousePosition[{"Graphics", Graphics}, {0, 0}]], 
                    CalculateUtilities`GraphicsUtilities`Private`scaled = 
                    MousePosition[{"GraphicsScaled", Graphics}, None]}, 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`scaled === 
                    None, {}, {
                    Text[
                    Style[
                    Row[{
                    CalculateUtilities`GraphicsUtilities`Private`bottom[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 1]], 
                    CalculateUtilities`GraphicsUtilities`Private`left[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 2]]}, 
                    ","], 12], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1], {
                    1.5 Sign[Part[
                    CalculateUtilities`GraphicsUtilities`Private`scaled, 1] - 
                    0.5], 0}, Background -> White], 
                    AbsolutePointSize[7], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt], 
                    White, 
                    AbsolutePointSize[5], 
                    Point[
                    CalculateUtilities`GraphicsUtilities`Private`pt]}]]]}]]]]]\
, CalculateUtilities`GraphicsUtilities`Private`g]; 
                    CalculateUtilities`GraphicsUtilities`Private`post$2107924[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Blank[]], 
                    BlankNullSequence[]] := 
                    CalculateUtilities`GraphicsUtilities`Private`g; 
                    CalculateUtilities`GraphicsUtilities`Private`orderedLines[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    BlankSequence[Line]]}] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`ordered, 
                    CalculateUtilities`GraphicsUtilities`Private`intervals}, 
                    CalculateUtilities`GraphicsUtilities`Private`ordered = 
                    Apply[And, 
                    Map[OrderedQ[
                    Part[#, 1, All, 1]]& , 
                    Hold[CalculateUtilities`GraphicsUtilities`Private`l]]]; If[
                    Not[
                    TrueQ[
                    CalculateUtilities`GraphicsUtilities`Private`ordered]], 
                    Return[False]]; 
                    CalculateUtilities`GraphicsUtilities`Private`intervals = 
                    Part[{CalculateUtilities`GraphicsUtilities`Private`l}, 
                    All, 1, {1, -1}, 1]; Length[
                    Apply[
                    Interval, 
                    CalculateUtilities`GraphicsUtilities`Private`intervals]] === 
                    Length[CalculateUtilities`GraphicsUtilities`Private`\
intervals]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    Alternatives[Automatic, FrameTicks]] = {
                    Identity, Identity, Identity, Identity}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`r, 
                    Blank[]]}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, {{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`r, 
                    Blank[]]}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, 
                    Blank[]]}}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    Blank[]] = {None, None, None, None}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    Alternatives[Automatic, Ticks]] = {Identity, Identity}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`h, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`v, 
                    Blank[]]}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`h, 
                    CalculateUtilities`GraphicsUtilities`Private`v}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    Blank[]] = {None, None}; 
                    CalculateUtilities`GraphicsUtilities`Private`CDFCleanTicks[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := ReplaceAll[
                    ReplaceAll[
                    Part[
                    DeleteCases[
                    ReplaceAll[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Alternatives[Style, NumberForm] -> (#& )], {
                    Blank[], "", 
                    BlankNullSequence[]}], All, 
                    Span[1, 2]], Superscript[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[Integer]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`p, 
                    Blank[Integer]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`b^
                    CalculateUtilities`GraphicsUtilities`Private`p], Row[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    BlankSequence[]]}, "\[Times]"] :> 
                    Times[CalculateUtilities`GraphicsUtilities`Private`a]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks$, 
                    Blank[]]] := 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[
                    CalculateUtilities`GraphicsUtilities`Private`ticks$]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[None] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[False] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[True] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[Automatic] = Identity; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[All] = Identity; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[Pattern[CalculateUtilities`GraphicsUtilities`Private`func, 
                    Blank[]] -> 
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := Replace[
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[CalculateUtilities`GraphicsUtilities`Private`ticks], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`f, 
                    Except[None]] :> 
                    Composition[
                    CalculateUtilities`GraphicsUtilities`Private`func, 
                    CalculateUtilities`GraphicsUtilities`Private`f]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[{}] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    Repeated[{
                    Blank[Integer], 
                    Blank[String]}]}]] := Which[
                    Quiet[
                    MatchQ[
                    Apply[SameQ, 
                    Map[Part[
                    DateList[#], 
                    Span[2, All]]& , 
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    2}], {1}], {
                    Repeated[True]}]], DateString, 
                    Apply[And, 
                    StringMatchQ[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    2], NumberString]], 
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Transpose[{
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    1], 
                    ToExpression[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    2]]}]], True, None]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    Repeated[{
                    PatternTest[
                    Blank[], NumericQ], 
                    PatternTest[
                    Blank[], NumericQ]}]}]] := Which[
                    MatchQ[
                    Apply[
                    Equal, CalculateUtilities`GraphicsUtilities`Private`ticks,\
 {1}], {
                    Repeated[True]}], Identity, 
                    MatchQ[
                    
                    Apply[# == Log[#2]& , 
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {1}], {
                    Repeated[True]}], Exp, 
                    TrueQ[
                    Quiet[
                    Apply[Equal, 
                    Apply[Divide, Transpose[
                    Rest[CalculateUtilities`GraphicsUtilities`Private`ticks]] - 
                    Part[CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    1]]]]], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`slope = 
                    Apply[Divide, 
                    Apply[Subtract, 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {-1, 
                    1}]]]}, 
                    SetPrecision[(# - Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 1, 
                    1])/CalculateUtilities`GraphicsUtilities`Private`slope + 
                    Part[CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    1, 2], 3]& ], True, None]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Blank[]] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`type, 
                    Blank[]], 
                    BlankNullSequence[]] := 
                    CalculateUtilities`GraphicsUtilities`Private`type; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[Identity, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Blank[]] := 
                    With[{CalculateUtilities`GraphicsUtilities`Private`nf = 
                    CalculateUtilities`GraphicsUtilities`Private`numberForm, 
                    CalculateUtilities`GraphicsUtilities`Private`acc = 
                    Floor[Max[
                    Ceiling[
                    FullSimplify[Log[10, 
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]] - 
                    Log[10, (CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/100]]], 
                    3] - RealExponent[
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]]]}, 
                    CalculateUtilities`GraphicsUtilities`Private`nf[#, 
                    CalculateUtilities`GraphicsUtilities`Private`acc]& ]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[Exp, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Blank[]] := 
                    With[{CalculateUtilities`GraphicsUtilities`Private`prec = 
                    Max[
                    Ceiling[
                    FullSimplify[Log[10, 
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]] - 
                    Log[10, (CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/100]]], 
                    3]}, Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[
                    Exp[#], 
                    CalculateUtilities`GraphicsUtilities`Private`prec]]]]& ]; 
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[DateString, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`pts, 
                    Blank[]]] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`dates, 
                    CalculateUtilities`GraphicsUtilities`Private`spec}, 
                    CalculateUtilities`GraphicsUtilities`Private`dates = 
                    Map[DateList, 
                    CalculateUtilities`GraphicsUtilities`Private`pts]; 
                    CalculateUtilities`GraphicsUtilities`Private`spec = Switch[
                    Map[Length, 
                    Map[Union, 
                    Transpose[
                    CalculateUtilities`GraphicsUtilities`Private`dates]]], {
                    Blank[], 1, 1, 
                    BlankSequence[]}, {"Year"}, {
                    Blank[], 
                    Blank[], 1, 
                    BlankSequence[]}, {"MonthNameShort", " ", "Year"}, 
                    Blank[], {
                    "DayShort", " ", "MonthNameShort", " ", "Year"}]; 
                    If[(CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/
                    31536000 > 25, 
                    CalculateUtilities`GraphicsUtilities`Private`spec = {
                    "Year"}]; 
                    With[{CalculateUtilities`GraphicsUtilities`Private`s = 
                    CalculateUtilities`GraphicsUtilities`Private`spec}, 
                    DateString[#, 
                    CalculateUtilities`GraphicsUtilities`Private`s]& ]]; 
                    CalculateUtilities`GraphicsUtilities`Private`numberForm = 
                    Function[{
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    CalculateUtilities`GraphicsUtilities`Private`acc}, 
                    Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Max[1, 
                    Ceiling[
                    RealExponent[
                    CalculateUtilities`GraphicsUtilities`Private`a] + 
                    CalculateUtilities`GraphicsUtilities`Private`acc]], 
                    ExponentFunction -> (Null& ), 
                    NumberFormat -> (StringReplace[#, StringExpression[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`s, 
                    BlankSequence[]], ".", EndOfString] -> 
                    CalculateUtilities`GraphicsUtilities`Private`s]& )]]]]]]], 
                   ReleaseHold[
                    Uncompress[
                    "6:eJztVm1v0zAQbikw3t/+ARKfEeuQEB+\
QGN0YkwaUpHzvLXESC9cOtrMN/jz47CZp1q5STAdoSj+c6kvz+O6556739FgESb/\
X66nrxnwQLE628PTEmJGY5aLg8f5ZLolSVPDkGj67Y0xI9B5h8IPEznfTmPdCzkC78xt8H1hUMNDkq\
6aMakrU9EBCntFI1Z6xpCfmJ1MmImD0J3k23H7x6vXO0MFgLGPQmkiudtpC5pkERZIeAt0w5h0D/\
s0dH5fHTwVjIfleEB4R9dB4JxJiAyM4MMzH+9arzdQ9TEwDj0HGl06Tleeo7QVKS8rTCZnl+\
MbFZG23BQaZKsfN/ZKbdQpy4d/CByK0MTmPTdqeLYF+YVwx+\
s7L6p9zN8Dz27bwUpyuJg7z22XIG2h6QtQync9b18kxUnWtjX7O1WXNl40GefGUqf+\
XjqjSy2EM24ZBZsemxqu1twz/si28yLHr5+J+\
YMxn5ygBVw2HSnAfRVyweRTNlAdOou3TVblxOIy7Fd8hOn0qWOEEJs6yX2x/\
PKrA600hxNpNNyAdXs+AgOTEuGLL7R5NqR5lICEywPPr+\
mWTTUQdised7WtPeUzNAHOErFue0BwmC3UHHWVf/qi4lVzONRnyfsg1SYlcK/\
rbWB9pyOXxRHhGEuIFTb16c1glNQbpLftBCRLmwClC0l/mY7+5h4uVQKoOJKpLOhYHtjRn/\
kn0ywIfEZ7qrLlje44u77bFbAJxWqsuoEmyOG02x3S/yXTjhuZA9yXBtyT+\
A73bFLpN4a9uCkt7cLcmdGtCtyZ0a0K3Jvy/a4KNGP+VfgN2vrhe"]]}; 
                 Typeset`initDone$$ = True), DynamicModuleValues :> {}, 
                Deinitialization :> None, 
                UntrackedVariables :> {Typeset`size$$}, 
                SynchronousInitialization -> True, 
                UnsavedVariables :> {Typeset`initDone$$}, 
                UndoTrackedVariables :> {
                 Typeset`show$$, Typeset`bookmarkMode$$}], "Manipulate", 
               Deployed -> True, StripOnInput -> False], TraditionalForm], 
             Manipulate`InterpretManipulate[1]], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"minput"}]}], 
     XMLElement["expressiontypes", {"count" -> "2"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "statelist", {
        "count" -> "2", "value" -> "Real-valued plots", "delimiters" -> ""}, {
         XMLElement[
         "state", {
          "name" -> "Real-valued plots", "input" -> 
           "Plot__Real-valued plots"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Complex-valued plots", "input" -> 
           "Plot__Complex-valued plots"}, {}]}]}]}], Typeset`pod4$$ = 
   XMLElement[
   "pod", {"title" -> "Expanded trigonometric form", "scanner" -> 
     "Simplification", "id" -> "TrigExpand", "position" -> "400", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"TrigExpand[Cos[5 ArcCos[x] + 3 ArcSin[x]]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{
               RowBox[{
                 SuperscriptBox[
                  RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox["x", "2"]}], ")"}], 
                  RowBox[{"3", "/", "2"}]], " ", 
                 RowBox[{"(", 
                   RowBox[{
                    RowBox[{"5", " ", "x"}], "-", 
                    RowBox[{"20", " ", 
                    SuperscriptBox["x", "3"]}], "+", 
                    RowBox[{"16", " ", 
                    SuperscriptBox["x", "5"]}]}], ")"}]}], "-", 
               RowBox[{"3", " ", 
                 SuperscriptBox["x", "2"], " ", 
                 SqrtBox[
                  RowBox[{"1", "-", 
                    SuperscriptBox["x", "2"]}]], " ", 
                 RowBox[{"(", 
                   RowBox[{
                    RowBox[{"5", " ", "x"}], "-", 
                    RowBox[{"20", " ", 
                    SuperscriptBox["x", "3"]}], "+", 
                    RowBox[{"16", " ", 
                    SuperscriptBox["x", "5"]}]}], ")"}]}], "-", 
               RowBox[{"(", 
                 RowBox[{
                   RowBox[{"3", " ", "x", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"5", " ", 
                    SuperscriptBox["x", "4"], " ", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    SuperscriptBox["x", "2"]}]]}], "-", 
                    RowBox[{"10", " ", 
                    SuperscriptBox["x", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox["x", "2"]}], ")"}], 
                    RowBox[{"3", "/", "2"}]]}], "+", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox["x", "2"]}], ")"}], 
                    RowBox[{"5", "/", "2"}]]}], ")"}]}], "-", 
                   RowBox[{"4", " ", 
                    SuperscriptBox["x", "3"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"5", " ", 
                    SuperscriptBox["x", "4"], " ", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    SuperscriptBox["x", "2"]}]]}], "-", 
                    RowBox[{"10", " ", 
                    SuperscriptBox["x", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox["x", "2"]}], ")"}], 
                    RowBox[{"3", "/", "2"}]]}], "+", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox["x", "2"]}], ")"}], 
                    RowBox[{"5", "/", "2"}]]}], ")"}]}]}], ")"}]}], HoldForm],
             TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False, False}, True}, Typeset`aux3$$ = {
   True, False, {False, False}, True}, Typeset`aux4$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "4", "datatypes" -> "Simplify", "timedout" -> "", 
    "timedoutpods" -> "", "timing" -> "1.359", "parsetiming" -> "0.32", 
    "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP0188ihce690ig98ab00001ccg8agi85671e1a", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "13", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa1188ihce690ig98ab0000635i29e35i7g086a4222294402565530544", "version" -> 
    "2.6", "inputstring" -> "simplify cos(3arcsin(x)+5arccos(x))"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> 3., 
    "Date" -> {2022, 11, 7, 1, 27, 6.0482608`8.534205482397528}, "Line" -> 3, 
    "SessionID" -> 27634165378566798726}, Typeset`showpods$$ = {1, 2, 3, 4}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = "simplify cos(3arcsin(x)+5arccos(x))"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{1063.5, {298.765869140625, 302.734130859375}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$}],
        Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.8767624260795164`*^9},ExpressionUUID->"1a4f5158-ba3b-4fa7-bdb9-\
da160b600340"]
}, Closed]],

Cell[CellGroupData[{

Cell["dodecahedron", "WolframAlphaLong",
 CellChangeTimes->{{3.8767624361420565`*^9, 3.876762444845192*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"6bffd9eb-54de-4562-a444-20a09fb96078"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "dodecahedron", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "https://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Dodecahedron[]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TagBox[
               TagBox["\"regular dodecahedron\"", 
                $CellContext`TagBoxWrapper[
                "Entity" -> {PolyhedronData, "Dodecahedron"}]], Identity], 
              TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Visual representation", "scanner" -> "Data", "id" -> 
     "ImagePod:PolyhedronData", "position" -> "200", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"PolyhedronData"}], "\n  "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Polyhedron\", \"Dodecahedron\"][EntityProperty[\"Polyhedron\
\", \"Graphics3D\"]]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            Graphics3DBox[{
              RGBColor[1., 0.8855725947966735, 0.24356450751506828`], 
              Specularity[
               RGBColor[
               0.5365072098878462, 0.5365072098878462, 0.5365072098878462], 
               20], 
              Opacity[0.88], 
              GraphicsComplex3DBox[
               NCache[{{-(1 + 2 5^Rational[-1, 2])^Rational[1, 2], 0, 
                  Root[
                  1 - 20 #^2 + 80 #^4& , 3, 0]}, {(1 + 2 5^Rational[-1, 2])^
                  Rational[1, 2], 0, 
                  Root[1 - 20 #^2 + 80 #^4& , 2, 0]}, {
                  Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
                  Rational[1, 4] (-3 - 5^Rational[1, 2]), 
                  Root[1 - 20 #^2 + 80 #^4& , 3, 0]}, {
                  Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
                  Rational[1, 4] (3 + 5^Rational[1, 2]), 
                  Root[
                  1 - 20 #^2 + 80 #^4& , 3, 0]}, {(Rational[5, 8] + 
                   Rational[11, 8] 5^Rational[-1, 2])^Rational[1, 2], 
                  Rational[1, 4] (-1 - 5^Rational[1, 2]), 
                  Root[
                  1 - 20 #^2 + 80 #^4& , 3, 0]}, {(Rational[5, 8] + 
                   Rational[11, 8] 5^Rational[-1, 2])^Rational[1, 2], 
                  Rational[1, 4] (1 + 5^Rational[1, 2]), 
                  Root[1 - 20 #^2 + 80 #^4& , 3, 0]}, {
                  Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
                  Rational[1, 4] (-1 - 5^Rational[1, 2]), (Rational[5, 8] + 
                   Rational[11, 8] 5^Rational[-1, 2])^Rational[1, 2]}, {
                  Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
                  Rational[1, 4] (1 + 5^Rational[1, 2]), (Rational[5, 8] + 
                   Rational[11, 8] 5^Rational[-1, 2])^Rational[1, 2]}, {
                 Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2], 
                  Rational[-1, 2], 
                  Root[1 - 100 #^2 + 80 #^4& , 1, 0]}, {
                 Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2], 
                  Rational[1, 2], 
                  Root[
                  1 - 100 #^2 + 80 #^4& , 1, 0]}, {(Rational[1, 4] + 
                   Rational[1, 2] 5^Rational[-1, 2])^Rational[1, 2], 
                  
                  Rational[-1, 2], (Rational[5, 8] + 
                   Rational[11, 8] 5^Rational[-1, 2])^
                  Rational[1, 2]}, {(Rational[1, 4] + 
                   Rational[1, 2] 5^Rational[-1, 2])^Rational[1, 2], 
                  Rational[
                  1, 2], (Rational[5, 8] + Rational[11, 8] 5^Rational[-1, 2])^
                  Rational[1, 2]}, {(Rational[1, 10] (5 + 5^Rational[1, 2]))^
                  Rational[1, 2], 0, 
                  Root[1 - 100 #^2 + 80 #^4& , 1, 0]}, {
                  Root[1 - 100 #^2 + 80 #^4& , 1, 0], 
                  Rational[1, 4] (-1 - 5^Rational[1, 2]), 
                  Root[1 - 20 #^2 + 80 #^4& , 2, 0]}, {
                  Root[1 - 100 #^2 + 80 #^4& , 1, 0], 
                  Rational[1, 4] (1 + 5^Rational[1, 2]), 
                  Root[1 - 20 #^2 + 80 #^4& , 2, 0]}, {
                  Root[1 - 5 #^2 + 5 #^4& , 1, 0], 
                  0, (Rational[5, 8] + Rational[11, 8] 5^Rational[-1, 2])^
                  Rational[1, 2]}, {
                  Root[1 - 20 #^2 + 80 #^4& , 3, 0], 
                  Rational[1, 4] (-1 - 5^Rational[1, 2]), 
                  Root[1 - 100 #^2 + 80 #^4& , 1, 0]}, {
                  Root[1 - 20 #^2 + 80 #^4& , 3, 0], 
                  Rational[1, 4] (1 + 5^Rational[1, 2]), 
                  Root[
                  1 - 100 #^2 + 80 #^4& , 1, 0]}, {(Rational[1, 8] + 
                   Rational[1, 8] 5^Rational[-1, 2])^Rational[1, 2], 
                  Rational[1, 4] (-3 - 5^Rational[1, 2]), 
                  Root[
                  1 - 20 #^2 + 80 #^4& , 2, 0]}, {(Rational[1, 8] + 
                   Rational[1, 8] 5^Rational[-1, 2])^Rational[1, 2], 
                  Rational[1, 4] (3 + 5^Rational[1, 2]), 
                  Root[1 - 20 #^2 + 80 #^4& , 2, 0]}}, {{-1.3763819204711736`,
                   0, 0.2628655560595668}, {
                 1.3763819204711736`, 
                  0, -0.2628655560595668}, {-0.42532540417602, \
-1.3090169943749475`, 0.2628655560595668}, {-0.42532540417602, 
                 1.3090169943749475`, 0.2628655560595668}, {
                 1.1135163644116066`, -0.8090169943749475, 
                 0.2628655560595668}, {1.1135163644116066`, 
                 0.8090169943749475, 
                 0.2628655560595668}, {-0.2628655560595668, \
-0.8090169943749475, 1.1135163644116066`}, {-0.2628655560595668, 
                 0.8090169943749475, 
                 1.1135163644116066`}, {-0.6881909602355868, -0.5, \
-1.1135163644116066`}, {-0.6881909602355868, 0.5, -1.1135163644116066`}, {
                 0.6881909602355868, -0.5, 1.1135163644116066`}, {
                 0.6881909602355868, 0.5, 1.1135163644116066`}, {
                 0.85065080835204, 
                  0, -1.1135163644116066`}, {-1.1135163644116066`, \
-0.8090169943749475, -0.2628655560595668}, {-1.1135163644116066`, 
                 0.8090169943749475, -0.2628655560595668}, {-0.85065080835204,
                   0, 1.1135163644116066`}, {
                 0.2628655560595668, -0.8090169943749475, \
-1.1135163644116066`}, {0.2628655560595668, 
                 0.8090169943749475, -1.1135163644116066`}, {
                 0.42532540417601994`, -1.3090169943749475`, \
-0.2628655560595668}, {0.42532540417601994`, 
                 1.3090169943749475`, -0.2628655560595668}}], 
               
               Polygon3DBox[{{15, 10, 9, 14, 1}, {2, 6, 12, 11, 5}, {5, 11, 7,
                 3, 19}, {11, 12, 8, 16, 7}, {12, 6, 20, 4, 8}, {6, 2, 13, 18,
                 20}, {2, 5, 19, 17, 13}, {4, 20, 18, 10, 15}, {18, 13, 17, 9,
                 10}, {17, 19, 3, 14, 9}, {3, 7, 16, 1, 14}, {16, 8, 4, 15, 
                1}}]]}, 
             Method -> {"ShrinkWrap" -> False, "ShrinkWrap" -> True}, {
             ImageSize -> {150}, Boxed -> False, BoxRatios -> Automatic, 
              Method -> {"ShrinkWrap" -> True}, Lighting -> {
                RGBColor[
                0.3233539330128939, 0.2068055237659266, 
                 0.11020065613794156`], {
                 RGBColor[0.9237659266041047, 0.21170366979476615`, 0.], 
                 ImageScaled[{2, 0., 2}]}, {
                 RGBColor[0.05, 0.9, 0.05], 
                 ImageScaled[{2, 2, 2}]}, {
                 RGBColor[
                 0.3797817959868772, 0.06872663462272069, 0.9204699778744182], 
                 ImageScaled[{0., 2, 2}]}, {
                 RGBColor[
                 0.516365300984207, 0.516365300984207, 0.516365300984207], 
                 ImageScaled[{-2., -2., -2.}]}}}, 
             Method -> {"ResolveAsTriangles" -> False}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"minput,computabledata,formatteddata"}]}
      ], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Alternate names", "scanner" -> "Data", "id" -> 
     "AlternateNamesPod:PolyhedronData", "position" -> "300", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"PolyhedronData"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Polyhedron\", \"Dodecahedron\"][EntityProperty[\"Polyhedron\
\", \"AlternateNames\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{"\"dodecahedron\"", 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               "\"duodecahedron\""}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Combinatorial properties", "scanner" -> "Data", "id" -> 
     "CombinatorialPropertiesPod:PolyhedronData", "position" -> "400", 
     "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"PolyhedronData"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Dataset[EntityValue[Entity[\"Polyhedron\", \"Dodecahedron\"], \
{EntityProperty[\"Polyhedron\", \"VertexCount\"], EntityProperty[\"Polyhedron\
\", \"EdgeCount\"], EntityProperty[\"Polyhedron\", \"FaceCount\"]}, \
\"PropertyAssociation\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   TagBox["\"vertices\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox["20", #& ]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"edges\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox["30", #& ]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"faces\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TemplateBox[{
                    TagBox["12", #& ], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    
                    TemplateBox[{"12", "\" \"", "\"pentagons\""}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Edge lengths", "scanner" -> "Data", "id" -> 
     "EdgeLengthsPod:PolyhedronData", "position" -> "500", "error" -> "false",
      "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"PolyhedronData"}], "\n   "}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{"  ", "\"  \"", "1", 
              StyleBox[
               RowBox[{"\"(\"", "\[NoBreak]", 
                 
                 TemplateBox[{"  ", "\"  \"", "30", "\"edges\""}, 
                  "RowWithSeparators"], "\[NoBreak]", "\")\""}], {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}]}, "RowWithSeparators"], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Geometric properties", "scanner" -> "Data", "id" -> 
     "GeometricPropertiesPod:PolyhedronData", "position" -> "600", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"PolyhedronData"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "N[Dataset[EntityValue[Entity[\"Polyhedron\", \"Dodecahedron\"], \
{EntityProperty[\"Polyhedron\", \"Volume\"], EntityProperty[\"Polyhedron\", \
\"SurfaceArea\"], EntityProperty[\"Polyhedron\", \"Circumradius\"], \
EntityProperty[\"Polyhedron\", \"Midradius\"], EntityProperty[\"Polyhedron\", \
\"Inradius\"]}, \"PropertyAssociation\"]]]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    PaneBox[
                    TagBox["\"volume\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{"15", "+", 
                    RowBox[{"7", " ", 
                    SqrtBox["5"]}]}], ")"}]}], "\[TildeTilde]", 
                    "7.663118960624632`"}]}, {
                    TagBox[
                    PaneBox[
                    TagBox["\"surface area\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    RowBox[{
                    RowBox[{"3", " ", 
                    SqrtBox[
                    RowBox[{"5", " ", 
                    RowBox[{"(", 
                    RowBox[{"5", "+", 
                    RowBox[{"2", " ", 
                    SqrtBox["5"]}]}], ")"}]}]]}], "\[TildeTilde]", 
                    "20.645728807067602`"}]}, {
                    TagBox[
                    PaneBox[
                    TagBox["\"circumradius\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox["3"], "+", 
                    SqrtBox["15"]}], ")"}]}], "\[TildeTilde]", 
                    "1.4012585384440737`"}]}, {
                    TagBox[
                    PaneBox[
                    TagBox["\"midradius\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{"3", "+", 
                    SqrtBox["5"]}], ")"}]}], "\[TildeTilde]", 
                    "1.3090169943749475`"}]}, {
                    TagBox[
                    PaneBox[
                    TagBox["\"inradius\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "20"], " ", 
                    SqrtBox[
                    RowBox[{"250", "+", 
                    RowBox[{"110", " ", 
                    SqrtBox["5"]}]}]]}], "\[TildeTilde]", 
                    "1.1135163644116068`"}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxBackground -> {"Columns" -> {None, None}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False]}, {
                PaneBox[
                 TagBox[
                  Cell[
                   TextData[{
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"assuming unit edge length\"", 
                    "\[NoBreak]", "\")\""}], TraditionalForm]]], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}]], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 BaseStyle -> {LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More digits", "input" -> 
         "GeometricPropertiesPod:PolyhedronData__More digits"}, {}]}]}], 
   Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Schl\[ADoubleDot]fli symbol", "scanner" -> "Data", 
     "id" -> "SchlaefliSymbolPod:PolyhedronData", "position" -> "700", 
     "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"PolyhedronData"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Polyhedron\", \"Dodecahedron\"][EntityProperty[\"Polyhedron\
\", \"SchlaefliSymbol\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{"{", 
               RowBox[{"5", ",", "3"}], "}"}], Identity], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod8$$ = XMLElement[
   "pod", {"title" -> "Wythoff symbol", "scanner" -> "Data", "id" -> 
     "WythoffSymbolPod:PolyhedronData", "position" -> "800", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"PolyhedronData"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Polyhedron\", \"Dodecahedron\"][EntityProperty[\"Polyhedron\
\", \"WythoffSymbol\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TemplateBox[{
                TemplateBox[{1}, "Spacer1"], "3"}, "RowWithSeparator"], 
              "\[VerticalSeparator]", 
              TemplateBox[{
                TemplateBox[{1}, "Spacer1"], "2", "5"}, "RowWithSeparator"]}],
             TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext,minput"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod9$$ = XMLElement[
   "pod", {"title" -> "Net", "scanner" -> "Data", "id" -> 
     "NetImagePod:PolyhedronData", "position" -> "900", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"PolyhedronData"}], "\n   "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            GraphicsBox[{
              EdgeForm[
               GrayLevel[
                NCache[
                 Rational[10, 17], 0.5882352941176471]]], 
              GrayLevel[
               NCache[
                Rational[74, 85], 0.8705882352941177]], 
              GraphicsComplexBox[
               
               NCache[{{Rational[1, 2] (2 + 5^Rational[1, 2]), 0}, {
                 Rational[5, 2] + 5^Rational[1, 2], 0}, {
                 Rational[7, 2] + 5^Rational[1, 2], 0}, {
                 Rational[3, 2] (2 + 5^Rational[1, 2]), 0}, {
                 4 + Rational[3, 2] 5^Rational[1, 2], 0}, {
                 Rational[1, 4] (3 + 5^Rational[1, 2]), 
                  Rational[1, 4] (10 - 2 5^Rational[1, 2])^Rational[1, 2]}, {
                 Rational[1, 4] (5 + 3 5^Rational[1, 2]), 
                  Rational[1, 4] (10 - 2 5^Rational[1, 2])^Rational[1, 2]}, {
                 Rational[1, 4] (1 + 5^Rational[1, 2]), (Rational[5, 8] + 
                   Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
                 Rational[1, 4] (7 + 3 5^Rational[1, 2]), (Rational[5, 8] + 
                   Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
                 Rational[1, 4] (11 + 3 5^Rational[1, 2]), (Rational[5, 8] + 
                   Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
                 Rational[1, 4] (13 + 5 5^Rational[1, 2]), (Rational[5, 8] + 
                   Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
                 Rational[1, 4] (15 + 7 5^Rational[1, 2]), (Rational[5, 8] + 
                   Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
                 0, Rational[1, 2] (5 + 2 5^Rational[1, 2])^Rational[1, 2]}, {
                 Rational[1, 2] (1 + 5^Rational[1, 2]), 
                  Rational[1, 2] (5 + 2 5^Rational[1, 2])^Rational[1, 2]}, {
                 Rational[1, 2] (3 + 5^Rational[1, 2]), 
                  Rational[1, 2] (5 + 2 5^Rational[1, 2])^Rational[1, 2]}, {
                 2 + 5^Rational[1, 2], 
                  Rational[1, 2] (5 + 2 5^Rational[1, 2])^Rational[1, 2]}, {
                 3 + 5^Rational[1, 2], 
                  Rational[1, 2] (5 + 2 5^Rational[1, 2])^Rational[1, 2]}, {
                 Rational[1, 2] (7 + 3 5^Rational[1, 2]), 
                  Rational[1, 2] (5 + 2 5^Rational[1, 2])^Rational[1, 2]}, {
                 Rational[3, 2] (3 + 5^Rational[1, 2]), 
                  Rational[1, 2] (5 + 2 5^Rational[1, 2])^Rational[1, 2]}, {
                 Rational[1, 4] (-1 + 5^Rational[1, 2]), 
                  Rational[1, 4] (50 + 22 5^Rational[1, 2])^Rational[1, 2]}, {
                 Rational[1, 4] (3 + 5^Rational[1, 2]), 
                  Rational[1, 4] (50 + 22 5^Rational[1, 2])^Rational[1, 2]}, {
                 Rational[1, 4] (5 + 3 5^Rational[1, 2]), 
                  Rational[1, 4] (50 + 22 5^Rational[1, 2])^Rational[1, 2]}, {
                 Rational[3, 4] (3 + 5^Rational[1, 2]), 
                  Rational[1, 4] (50 + 22 5^Rational[1, 2])^Rational[1, 2]}, {
                 Rational[1, 4] (11 + 5 5^Rational[1, 2]), (Rational[25, 8] + 
                   Rational[11, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
                 Rational[5, 4] (3 + 5^Rational[1, 2]), (Rational[25, 8] + 
                   Rational[11, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
                 Rational[1, 4] (17 + 7 5^Rational[1, 2]), 
                  Rational[1, 4] (50 + 22 5^Rational[1, 2])^Rational[1, 2]}, {
                  Rational[1, 2], (5 + 2 5^Rational[1, 2])^Rational[1, 2]}, {
                 Rational[1, 2] (2 + 5^Rational[1, 2]), (5 + 
                   2 5^Rational[1, 2])^Rational[1, 2]}, {
                 Rational[3, 2] + 5^Rational[1, 2], (5 + 2 5^Rational[1, 2])^
                  Rational[1, 2]}, {
                 Rational[5, 2] + 5^Rational[1, 2], (5 + 2 5^Rational[1, 2])^
                  Rational[1, 2]}, {
                 4 + Rational[3, 2] 5^Rational[1, 2], (5 + 
                   2 5^Rational[1, 2])^Rational[1, 2]}, {
                 3 + 5^Rational[1, 2], (Rational[25, 4] + 
                   Rational[5, 2] 5^Rational[1, 2])^Rational[1, 2]}, {
                 Rational[1, 2] (7 + 3 5^Rational[1, 2]), (Rational[25, 4] + 
                   Rational[5, 2] 5^Rational[1, 2])^Rational[1, 2]}, {
                 Rational[1, 4] (1 + 5^Rational[1, 2]), (Rational[65, 8] + 
                   Rational[29, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
                 Rational[1, 4] (5 + 5^Rational[1, 2]), (Rational[65, 8] + 
                   Rational[29, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
                 Rational[3, 4] (1 + 5^Rational[1, 2]), (Rational[65, 8] + 
                   Rational[29, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
                 Rational[1, 4] (7 + 3 5^Rational[1, 2]), (Rational[65, 8] + 
                   Rational[29, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
                 Rational[1, 4] (13 + 5 5^Rational[1, 2]), (Rational[65, 8] + 
                   Rational[29, 8] 5^Rational[1, 2])^Rational[1, 2]}}, {{
                 2.118033988749895, 0}, {4.73606797749979, 0}, {
                 5.73606797749979, 0}, {6.354101966249685, 0}, {
                 7.354101966249685, 0}, {1.3090169943749475`, 
                 0.5877852522924731}, {2.9270509831248424`, 
                 0.5877852522924731}, {0.8090169943749475, 
                 0.9510565162951535}, {3.4270509831248424`, 
                 0.9510565162951535}, {4.427050983124842, 
                 0.9510565162951535}, {6.045084971874737, 
                 0.9510565162951535}, {7.663118960624632, 
                 0.9510565162951535}, {0, 1.5388417685876268`}, {
                 1.618033988749895, 1.5388417685876268`}, {2.618033988749895, 
                 1.5388417685876268`}, {4.23606797749979, 
                 1.5388417685876268`}, {5.23606797749979, 
                 1.5388417685876268`}, {6.854101966249685, 
                 1.5388417685876268`}, {7.854101966249685, 
                 1.5388417685876268`}, {0.30901699437494745`, 
                 2.48989828488278}, {1.3090169943749475`, 2.48989828488278}, {
                 2.9270509831248424`, 2.48989828488278}, {3.9270509831248424`,
                  2.48989828488278}, {5.545084971874737, 2.48989828488278}, {
                 6.545084971874737, 2.48989828488278}, {8.163118960624633, 
                 2.48989828488278}, {0.5, 3.0776835371752536`}, {
                 2.118033988749895, 3.0776835371752536`}, {3.73606797749979, 
                 3.0776835371752536`}, {4.73606797749979, 
                 3.0776835371752536`}, {7.354101966249685, 
                 3.0776835371752536`}, {5.23606797749979, 
                 3.440954801177934}, {6.854101966249685, 3.440954801177934}, {
                 0.8090169943749475, 4.028740053470407}, {1.8090169943749475`,
                  4.028740053470407}, {2.4270509831248424`, 
                 4.028740053470407}, {3.4270509831248424`, 
                 4.028740053470407}, {6.045084971874737, 4.028740053470407}}], 
               
               PolygonBox[{{18, 25, 24, 17, 11}, {32, 24, 25, 33, 38}, {31, 
                25, 18, 19, 26}, {12, 18, 11, 4, 5}, {3, 11, 17, 10, 2}, {16, 
                17, 24, 30, 23}, {23, 22, 15, 9, 16}, {7, 15, 14, 6, 1}, {8, 
                14, 21, 20, 13}, {27, 21, 28, 35, 34}, {36, 28, 22, 29, 37}, {
                21, 14, 15, 22, 28}}]]}, {ImageSize -> {150}}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod10$$ = XMLElement[
   "pod", {"title" -> "Skeleton graph", "scanner" -> "Data", "id" -> 
     "SkeletonPod:PolyhedronData", "position" -> "1000", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"PolyhedronData"}], "\n   "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                "\"dodecahedral graph\"", {
                 LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0}]}, {
                GraphicsBox[
                 RasterBox[CompressedData["
1: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
aT+RtNQwbh1+gJiC2MKtI8z0Gb/2Ft2yT3Lr8Av4PcP3mVtH2Fi1Zf8nqbKZ
9eLzsDHpn9NLsYg1bhG39ofa3qjxza0jrKD2O2rAc+vwizj1X9wiv0T1HPfw
wbcf37j3FwMGjcouWlmV7XvfkP/oN7riSeRR6aWqK7fGsAC/cfiOc+vwC9Qu
Rw1zbh1hhT67qoSp7uXW4Rdx8E51kzofqWewznPya39y87Ez35toTpq9Bf/G
68hx1Qz1HGo4c2sNA3Fb/0BsQYzh1hFGupaoG+ize5Vbh1/Ebf28paDmR2M9
/pKmvUDm9RsHfMfhP86twy8oxtR0r9jbnltH2KC+5HjqHz3GrcMv4pR/2hK0
dOYe+pzeRV2mpv2dGqRZ9ptxWWtuLnHLv9cN9biWtiUPs4nQc3wL3Yf3c+vw
i9zxq8qoj7eIW0eQgU8x3U/VrVplm5UzV1BQeS3W7OPis9UcUOca9a7pn225
tfhB3Obc3SC/Ql1H99Eb3Dp8okObNm0W33Rn74+uv6X7Kfpv6d9dBGovwTPK
LQ/5Oi/EvbIP6FK63Tdjaoeu/d+mf+5rVbsH8wZmSZ6DcRWe3dw6wkIyrQo1
w17JrcNrKioq2ib7Dvh0xaa9/378zNkv1lQf/vSmDrc8Ty/FZnx5NXRr8xjU
x3PbDzsvvTGBvZqalRnp5nnDTN/7huTdO2jUX6yyn/7tsbc+/pvS6Q+foL4D
avZF2ncUtQlQo4BbR1igvtL6ZDozlFuH15RMefDAvCXr6+XtVh04+V16aQ+3
tiBAY6gVmplZ4eU1dEOtof70Mi+vERbGmpN/uGXPsXrtcYwxCfsPIu0lhJxW
5LZy6wgJrXXTfpdbhB+kJs74iz3Pv1XvfsBx4423wLulC7c+LlDDk2LmCd2y
x/hxvYRpT0BeWRxqp12JvoPHdbYmP/D5xW1x/7H3PqWXI5+DJjUxGoeWUiPo
vlzLrcMPlq3f9dH0ucvq3Q/2vuNf3Hzn3cdbVVTEYn3mYrS0XY46y70mqlt9
vW6JuhM1nuLo7Yp8jXtKti6dMmfxF5t3v1ivPc6Y+9hP6Vci/5lQfF6nG5nh
3DqCDsabcZkTPHnmbBH1WbJzKldlnzn5QfaxDbuz9wwc9Xd3j1hQRXHibepD
bkQfMtc42I5bqw+0xl4B+v7ncYpATjUdilODHyStTAHmdei9nkZOnZZW5tZn
at4Ya0zOrrYPZl94/dvZRauqsjl632+1ioHHVMJUo+ieW82tI+ggLsWp77hu
/5nVD6/Y9o8TSqb/k1k+50zByJHn9w8mzMxgzMHSffQ6YgbG4f2LVt3IqdcL
8orVfZjTCspeUSd2GeqdqOUB5xpqCObzkRv1ZXvafb49PXfm7A27nnvj0IyH
H/+XMcaUX48ve/C9Xr16Xc+p2S9QexE1GLl1BBnEI/QZuXX4CWqhoSba1X7v
y/6OfRo5wPAmgX+UHxq9xMm3tZTNreMSlGqDfiVyrrmlNBvq52AsivlC7Omh
/9+AfBjkr17tT1HrEzU//ZAZFLDHFPuYuHUEFYo9yyn2jOXW4Re5RmaAbqlM
U/8Oe+jgGwVvP+y3gI9t2LzGoZe0P123FyKwIOcacSosz0LHJ4DuIWduDHNk
mC9MqRHN2dODPfRN3acZZqT2Z8NgHB+TuVYHN7ytHR9bK1OJehCo2YO6ajlF
wa59ifsAevPM6ru5tTQGpy9Jz0Lk5XNruRzwy0hadjHGIfBwQT8HY9GWnje3
OJNP59vhhsYwIB44VwbPaTyvuXX4RcLamEf9G1f9Npy6apaaR8dROvZRvJ4S
NH9N7AUIax8Fe6YQ+7h1AIw/4MtHz7lt8DSiccgSzOO7fR3qM+3MNdRX3D5v
UMEzzovPMezEqb47oD7vZi21aaBX588pVrmaZT8If03kq9ExnTO/t24+81TY
92nVzR2cQI6239d2/FJpfOSMk2j8AV++pJnp5+U1se4Rh3yWczjjEHrWcesI
GnGqi4p7GzHTz+vphj2rNr9XPYsaGYiXfl3f6ceb6gD1w27265pegtxs55mX
tj3fV6elq7vBLwTryE69ARofYZzk9XXraTDUQbf31wcVzBVhPMKtI0ggjwlr
5dw6/IIzx5tiZHenjhHFS9QDRX5CXroq4cnFnPwBtRX9eE/Ozwxytb3wdz/3
PEXtATr/YfjtNSbHxyvoeTCC9MRizxiIm8fq1YCvJvLjuXX4Qe/SrZ3pnnuB
WwdArWbkJ1Ac2Iv9zdibAR/qZpzqktwAeMM6+QMRb+fI2cbe4CvMWTY6ZwLP
SGc+ylJHzs1HoXaXi1JbRJxqeycs26L2u5BbR1DAfJ7f+3m5COo8u7O/2bTL
UCOA+mvHGzm3iTkSrPUhR/D8vDL1z+fDv9tLvUGjNnfCfviCH8E7BJ8Lakz0
utzfYN2tbr8ino17MQ8U1Ppm2MsSFx+pfta623APcOsIAnGqGxKWeuRon1/m
BqhXUEfz4r19/QYMG9rvvqH/Y+WW/X+3/elXP+6Vm3f0mus6rKP3d0i3VCmX
dk6Qy42c7mS/gUeKy6b/1Z4jb/3V/OVb3r/u+vb4znXnd1D/xbIXOZ6pptrp
1FCkZyOz9EYBzfDi5tbhB8itQo4Vtw5u0H+IiydNGN8r6s+jxrHjjWGqGtQc
61+WGTxkdNE/HXz5a1966Zw5+19dc+//6U09Bozi1syJMXXp/NTEWV9c6DG0
/dnX//sNt/f84/N7P1PKDGOcw3MXYyNuHX6AZ+1F46FYQvf8i7nGto7cOrwm
CjVhUEcTdSEHlSypmTV/xSW+qItXbztNv7aAWycnqYkzv7HlyWOXfDa99EE1
7W/u3OI9I9zEZQ8ZYhJiE7cOTpw1EVPt5dbhB05Om2FP49bhBqfOfDJoWKGR
fe7Vb9WLQcPHmGfp5QHc+jhZvmnfa5NmVtb7XJ796jezt9/Z+X1ubW7g5P5Q
W+bW4QeogYY6O9w6uMB6NdZEuHX4AfzQ4LnDrcMNamo+u25d1TN/S+P47M5n
X8s+/9pH2UeWbcre3Uc/wa2NmxNnPiksqXgoO/+xzY5H545DNdmxxuSf33TT
rYXc2twhCx/YWNTPQGyKam5oY0AuUVDXq90EOWyh9kG7DKfO/GlilTr4qVE+
+4sxqUm/LSwuf5Z+LDU2iSNvfPTQ3CWb/mNCeuoXo4vK/mbI8PFTuTW5SVz6
VfBGwP5bbh0c+L2HjhOsC0XRtxnU1NS01VIbjgXdk8lPkCeMfOGhQ4e259bi
BV1L1A3Uh36VW4cfIEZx7OXnxtkfZanp3Dq8BvtusP+GW4eXOB7OAfcJ9ZMo
jpcuJi57yhCjEKu4dfgN9q4GaX+UV1DceilZvu0Obh1e4vjmGWo3t46ggDVv
z/bMBwS0abRtbh1egxiFWMWtw0/gAQGfHm4dXgOvs6D4UXoN/NTCViPAC7DX
BPsBuXX4QVzqaTgeKOnqbtw6/AJ+XPB84dbhNXgG4VnErcMPsB8cew65dXDj
7Ac01SPcOvygzlvvMLcOr0GsQszi1uEXtd5p/vlbcpBMZ4bS+G89tw6/cOq4
mGo7tw5u4FXQTI+pUII2jrbOrcNL4lSLMUj+bV4Sx9x2eHVgPzi3Di7g8QWv
L24dfoI2jrbOrcNrELMQu7h1eA08zeGby63DS+Al5IUvcNCBjxK8Orh1cBGH
XJ3LgbZ+sX9W1EDM8qMeAzeaZe/RUxt1bh1eAt83r+sOBZG4PpfOEVdfd7R1
tHluHV6ip6p0+n73cOvwkjjk5MQ91wwed/BR4tbhN6jNhhpt3Dq4QOxCDOPW
4SVRz5VNGnYJfY+V3Dq8hMa3m2icO4hbBxfwH4XHHbcOv0HNBdRe4NbBBdo8
2j63Di9B7EIM49bhFVjfxzo/tw6vyDOr74Y/O7cOTlCTHLXJuXX4DeqnXKHG
VWxA28c9wK3DK6Kco4TazTT2PcWtw0uo77g6YapY+9MDzbLfLCiojI1XUq9C
db1uqde4dXCTNDKjE5Zaxa3DSxDDolKH/kI0wzaoj7GYW4dX5JSrTrqhjnLr
CAL0Xa9MplUhtw6/0FL2OIrPj3PrCAL0ORyNsldWVHOUop6DoxlqSdKyi7l1
BIG47c2J+5rDhSB2IYZx6/CKKOYoRd2PMA5zN01FN214uLfm1uE1hYXqGs1U
b3HrCBJR36eEWIaYxq3DLbCej3V9bh1eIf6al0KfyVotpUZw6/AarDdg3YFb
R5DQUna5bkV3D1rUcpSwno91fW4dXoB1MKyHcesIGvSdj9QNtYZbh9fQWP6J
pKWGcesIGhhTYGzBrcMLopSjFIW61Q0RlzoDTaaioi31M97mluE11LbPcGsI
IgnTnpE01UxuHV6BmIbYxq2jpWAdH+v53Dq8wolBFIu4dQQR3VQbE2ZmMLcO
r0C/Gf1nbh1BJOrz8lHJUYqy/2DCUpMoPs/l1hFUdMseQ/foCm4dXiH57g2D
OWjMRXPr8IKI5Ci1rlvHjyQUe073L9odybqvbpBrHGxHfejXuXV4RZTnWN1A
L13TgcYXr3Dr8Iqw5yjpRmY4teF13Dq8IOr7bdyCvn+VtDIF3DrcJg5+E24Q
1f0cALENMY5bR3PB+j3W8bl1eAFqzKHWHLeOoJMw7Ql0fy7j1uE22C+IfYPc
OoJOrrGtI33/L3Lr8IKw5yhFde1MtzaP0cxMZOdV3QTzP5gH4tbhNvDbgO8G
t44wAE8OeHNw63CdEOcoYd0e6/fcOrxAt+xDOUUbenDrCAvUx6jW0pl7uHW4
BXzq4FfHrSMs5JeonvSMfoZbhxeENUcpqrXXcw01hOLzBm4dYUJLKZM+s8jU
fRKvlaYT1jh2NRDjEOu4dTSVqI7/qB+wNy9dFau6ry2lz/gdt1B7OMmtwy2Q
k4DcBG4dYQI17VDbjluH24QxRylpbSqgNqy4dbhNFL2r/ILi847c4kw+t46W
gvqCqDPIrSOMRLU+I2IdYh63jsaCOj+o98Otw22i2r78gOJzqWbY87l1tBR6
Pi+k9m1x6wgjUe3fhK22Gepkol4mtw43ier4zC+Qi4icRG4dLYX6Ssf7Wetu
49YRVqI4Pxim2sBRHf9FdX3DT/B8w3OOW0dzSVhVedQOdnHrCDMR2Rd9CWEZ
W0dx/Bfl/CA/CbtfCbWBR0h/GbeOsEMx4tlcQ3Xn1uEmWlqZuhH8HCX67E/0
mqhu5dbhJpHNr/eZfFN1oRj3PLeO5oJ9cNgPx60j7ETRNwsxD7GPW0dDRHH8
h1qXqHnJrSMqUPs4QGPBPvRPeNqHJf/y+ls6503D3Cm3kKgQRX8ExD7EQG4d
VyKK478o+7tw0GvQ9OWde+o/vm/I6CPt2rWH/9dsbk0N0bFL1yWdunT/OG9g
0QfXd+j8LfpRDremKBCW+YCmgNiHGMit40pEbfwXdX9Evxk8akKif8Hwf332
q9/InnjvLI5/SyTvQU7HLG5tl2PQsHE7p8xZ9Js6rdkDL339x9dcc8079FJk
2jgndG+d7l+0KjL+vEHOUcpLb0zQ5x2p8V+U/cU5MCfNfu+xDbvPxWbnOHz6
w39s1apN4GqfK5VtM3DY2P94/vWP6umdPGsRarU9yK0vCiRMe3LSVA9x63CT
oOYPapb9oG6oKdw63CLq9Xk4KJv2yF9s2vVCvXh3/Mwn2dvu0v5WL954Cusr
QTmGz9z19rDRqXpacazY+ORZeitLuD/LqEAx4x16GLbh1uEWiIGIhdw6Lkaz
1JG84q13cetwC9S2RI1Lbh1RYvOuo6+MTU2qF+8ql6vftrvxltVY/w7SUbTw
2U5zKlf95+LV1fX09h0w5LNWMgftGjRGna0Z9jRuHW6BGIhYyK3jQpIp1Ys0
PcWtwyVuwP9I7SL3qTr6dX3p+id/O3RUcXblln3Z9JQHs/kDhnydXgpkHeRn
T3+4BBpLKh7Krti8L1swbNznifyBD3HrihKogY1a2Bf8qD2bGJdALERM5NZx
Dt2wZ5Gm6dw6WkiHNm3aLG3Xrt3h9rd2f7NLvxLx93UZ7B+c/Ohzg/e98M6a
kqnzXp80a0Hg+02nznwyaOWW/c+kJs56qXDquvFRyx8NAsh56JQsXtmuXfv9
dA9iHxjyOkLrD6Gl1HQ9bQdmzRt767DHjltHc8lms621r9z7g1XqgLNWv3rr
0X+5+bZOx+ml+7m1RYWIPMNb4b7D/cetI0oMGJGaMWJC+a93Pvsa5pB+PX3u
Y6coTr/Arau55JRV99ANdYhbB9DS1d2oT3GYW0dLKJ06b8+Di9bWm2fc9dwb
P6KXojJnw0rU9i2F3UckSKBvNGyM8b/3v/R+vftv4PBx2IsXWg/MoOxhJx1T
NdOew62jJRjlc/58x6GaS9bqb739TuQLSh2rFgL/cviYc+twi64l6gZ6T69y
64gCxqRZQybNWnDJvbdp5wvfpJdXcutrLoiJiI3cOi7YrxtK4Dm1cN2Tn02+
qI1UHTiZbX9jh53c+sIOvMrgWcatw220lBqhW/Zabh1h59R7P76tbNq87Nan
Xql3/42YMOVfu/Qr2xEGT7jLgZiI2MipoXfp1s6kIXTzRKh1AD9teLbCF3B+
5tSqSTMXfDHtoaXZfS++l136xM5s/4GFv+wx9OFVNAJrza03rGiGbdDnu5hb
h1dEtQ6Fb1RUtEXNhlXbjv/NyPEl2WVP7MruP3YmW/HAo1/00fKPYQ847k/U
f6c4syxpZUJTowTACwyeYGzXT9vluqHmcV2/KcC7GZ5ZGGs79WjovrqwhsDJ
Mz8Yt/SJXd9Llc74e2vKA+8MHjeuM/bT0++/G6V9N34R1md3U4miz48f0Nij
gu6vt1FX59iHH16/99iZXbMXrPzZeKviJ6mymfXqrfYv2n1jwrQn0GetkIun
mZkVqNPMpb2xwEsXnrpc16dn2x49VRXQdZJsa2cMaqg1Tjsw1Ub4GjZnHtTZ
G2mqU/Q8GueF0igStf1KVwJrQFgL4tYRFmrjrP2KZqgHmvP3yJfWrc1j6F7e
4PSdLHutZmVGoi/uttaWwllzKVm+7Q76jF/iuPaVwHeXTKtCzHm6/d3RfXgz
xfrHkUsYtnGW30SxRkNDRKW2opdoqU0D6X48hHkK92qfX9QHM+xNWsoe16tQ
Bca3FjESsdLv6yYNu4T6SJV+X/disJZe90ze4ox9DHull+tRdbVUFObFco0q
2ed7EZhHwliFW4ffoP3R+5Z8+Yuo9U1T26iftDmnaIOnuVBaWg2iZ+XjdLxG
Rwa+wHrpTpeeBc3URM9tPL99v66ptudZqq/f1wV9xq+9BWtPqAWMPCfnmezz
vYF1Zbrmfnpur84vVrf7ee2gcpm9urECfbggjrM5wJw8+rXwtEyamX5+Xz/X
yAyAdzu1x1cQq5LG5hKO+zS3OJNP8XmHr9fEWN9UvnpCYoyAPjveK42TTiIv
APXa/dRwOUjDKPr+X3Z8uSPkw9UcOJ/ZQSCqtZGbguP7SONqZ90Uc4sBAG2S
tFQ696ml9iCvAevXfl0f8Qp9St+uR+MGPJu8vg5yU7D+iTl2zOPge8fzyOvr
Ngcn18NQ78Q11yMK+5TcIGo+u02htg2ot9CP4tZyJZDPgJwz5BY5ezcMe5rn
8y7Ul8R438trXAjmFbzqu9ath091PjtTPY8clTDtpcX96YypLDWeW4tfRLE2
Q0sI+56tpuKs/2AvQciez84eEkvNdtYtnUPN9uJ709KZe+iZUO32eS+HF3tb
4cUH3xl4iiBXCd9zmNs31iToufJY3fuJ/JoR7s0Lc8njDsayGNNy6/AaLZUZ
iPsV6z9h//7Rh0Zf2qt+oV+1vNAvROxp6XlQA8bpa1rqCPxS4QkG3yc3NAYF
vB8nr8RSW3OKVS63Hi9w1oACMs8YJGrzPO3Q+kc0hHPvmmo7tevNQfAAcpvL
zau2dF0FzzCMM9zSeCWQJ4Ncxub8LXzMsI7mrB2Yai/m6eKwh8HJ9bDUPuR6
RGmvmVvP6qji7Fe17DHcOtwCtZ91w17r1NiLyTrwubwEPI+cPWqm/ShyQ5p6
Hoyj0VfzQuM5Cgoqr6VnyptN+RsnNhn2orq6brucGuQRilFNoS7X4xhyIsNe
myWI+5OCCNo96mVx62gJtfd9ppLey4t0747g1sNFXd5aysmtrs2xfhw51439
e+SeIgfVI3kd79RGVzZmzHax/xB8TsLeRt3E2W9mqrfgQcCtpbmEvSaDX+gl
Vb3pOXaQW0dzcXIyqE+G/GFuLUECexSxV9HZs4h7mcbGupEZTi9d0U8NviHY
m07/HE2HW+trrTt16bqrR6/cb/XpP/J7191wO/rPl+xXvJr/kHAp8CDAM8yP
eSk3wRwVxkHcOsIC5jKx3sStoyng/sWaVthyMjjAWLhubLyOvud3az11VeHF
feXu/SdO7nJ33v8cOSZ9+s5Od2H/CPattGgcXTC08K1Hlm3+/Jwva/XBV/6g
devWX3PTfyjO4Bnm7H+07EPNndf3E4yN8Pzl1hE2vMxJdRNnj7RpH8b41498
gygCfwnMM9R67dlb0P8qf+DpO3Lz+v/8uVe/dd7junTaPOT4bGjudWYvXpc7
dHTq84trG9w/uvxHXQdM/m6QvaPChpPfg7VXU21DPjG3nivQGv0DbhHhJNsa
nl3cKq5E0lSaswaG8Xp6QzduPVEB64Lof42vWPqTeUvWX1wn5nftb7jpNfq1
Zu07X7Jqx8xU2cxLas9MnLXoLL3M5msaZeBVgL0eTt5awNZRw9IHDCpBHHvk
FKlOTj/LVE/GJSeDgzkLVv3eI49tviSWdrmrx9fp5Wbd56fe/8HdpVPnZTfs
OFLvnN165PyEXvZqHVJo5eQxjqz1MFCVQcj1CFMthiATlLl7x4vXtBfoljqK
eUpuPVHnxbc+XnJPwbDsC69/+3wcfXzjk5/fdtudLaqbfOiVP9iH2jOTZlZm
F67MZJN9B/yq9/B5J6XGvD/U5V6+xVlrEvs7sYeI6/pRA/tKOfdiYZ8c5kZp
LJTm0hA3+pduW7R+98v/MGj4+Oy8R9dnUxNnZvveN/jbrVzo5548c7Zo6bqd
z6crHnwKtWjwM2c/tql2epjPJ1yAs+fdVKc5cj2ikMMbJLhyx5OWXez48Vpq
tt/XjiuOz2qtt0dpTU1N25ff/6Rs5rzHn54+b1m519fONdRXap/DmcFeX0uo
rcNW53V9GN4HflyTngvLqb831o9rxQk8Z/Fd+nOtzGB6HjxHxxL45/hxTaF2
fy3mKL32x7saTm6dYS/i1BAntHR1N3gfOH7L6SrPcj2i7CERBLz2LoG/D8a4
zv1Zqrp6dR3hUpz9KgHyPqirhX7ET9/ruOP4jsPHxLLXwhvBzXNz1GCII5iz
wrjIzXPmlKtONO55Av4+GOO6eW6hYeCDhvq32K/CreVi4HVU53ud4tYSJ5x9
QqZ6Eevx8Epw45xx8zDmos4LzhXvbKe2NbxuDHU0aalhbpxTaDzwa3B80Fyr
f+sNtXW/7Ce4dcQNrMfDK6GluR5xrgHCgRu1Z+hZOt3Zr0bjWLd0CY3DqemF
GriGeoBbS2PB8xseT1qJSnJriRu1uR72aXgoNPVvpYYeD6ir2ZzabY6fmqlq
qN88ywtdQsPAk8Gp6cVQA7elwOOJ+mG7E6Y9g1tL3IB3AjwU4KXQFA9EqUHN
Q1Nrnzs5GahtQWPV7hV723upTbg88AmGJwO3jpaSNNVMuu93IV5za4kb8FKA
pwL6Z/BYuMyvdKHjYTpm9hm3YlsYPJqiCmIuci3on8g1R38Y+zU7Xfg7Tn1T
x0ddbYxDbYsgcmFOM7cWt0hYG/Mw3wFvJ24tcQRjZ3gswAMRngvOz5L3FGl5
/f/bguXqe0ZF5cftO3T+EX7MLDXW5A6fu61nbv7fzVmw+tOZjyx/47p27eDn
ez/yompzMtQe1CHi1hlXnFq4Achp9gp4o6LeOLeOuAIPcXgu3D9l5+N97x30
6wt9VZ459Qc/aNOmTeTrmgaVDz/88Jp7B434lyM1f/Sl382Zsz+7vkOnz5AX
JTkZvNR6Kfuzp4gTzbAN1MjNK14v4zMmJkx6+N1H12y9xE/rnoJhqPUh9V4Z
sMpnr5q3ZMMl38locxY8zsQrgwn4/dbWgopPHWTUyNUs+whiNbeWOLImc/BJ
s3z2JbGgR6/ER60uUx9H8J7M3pOLR08oveQ76Xvv4O+0knknFpDTDL/fuNaC
wlwH5jy4dcSNU+99WlA6dd4Xi1dXOzHg+JnvZ2dXrvyvTl16bOLWFleOnznb
c9YjK/7rwUVr6fv4xPleFqzMfNG1Z+8j3NriRhhzmr0Ca4ZYO8QaIreWOHH0
jY+Wzpq/4r+GFxrZeweN/F1BYcWft2qgvqXgPXM3nPrgwcVrfzNg0KjsoBET
Ph86OlXTqoU16oSmEeacZq9wcqVNexdy8bi1xInjv/+jG6ufOn4/fGPh84y1
Q25NcQWeo8gLwHdx/L1P+j68XDWr7pHQfFAPIwo5zV6BvSzY0yK50jwg9w7+
Ltw64gZ8meELza0jrjg5zaZ6FvUwuLUEHewJd3KlJZ+IBfi7YB+h1F7wHvRD
aCx9RnyZ+TiX05xrqO7cWsKEk49v2o9y64glFRVtsd+4z/gdt3BLiSr5xep2
9EO4dcSZuOQ0e0Wd/8sLspeVB4ofJyVP3X3QV6Pn38vcOuJKHHOavcLZ2wov
GPFOZMHJUxcvaNeA5zPmOrl1xJU6P9fY5jR7heM9XusfI/gM/PpRr4VbR9jR
0pl73PLjF5pGXU7z9pZ6bQtXxvFVNNUbUrfHf5y27VNd2iji5PkbqppbRxxB
u0VOs/QxvMep44O6l2nxJPcb1KVNGpnR3DrCBmqgyz5ZHjQrU4l2y60jbmgp
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
EARBEARBEARBEARBEARBiCj/H+fGl+8=
                  "], {{0, 0}, {360, 343}}, {0, 255}, ColorFunction -> 
                  RGBColor], {
                 ImageSize -> {150}, ImageSize -> {360, 343}, 
                  PlotRange -> {{0, 360}, {0, 343}}}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod11$$ = XMLElement[
   "pod", {"title" -> "Dual polyhedron", "scanner" -> "Data", "id" -> 
     "DualPod:PolyhedronData", "position" -> "1100", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"PolyhedronData"}], "\n   "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TagBox[
                 TagBox["\"regular icosahedron\"", 
                  $CellContext`TagBoxWrapper[
                  "Entity" -> {PolyhedronData, "Icosahedron"}]], Identity]}, {
                GraphicsBox[
                 RasterBox[CompressedData["
1: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
IQ==
                  "], {{0, 0}, {360, 356}}, {0, 255}, ColorFunction -> 
                  RGBColor], {
                 ImageSize -> {150}, ImageSize -> {360, 356}, 
                  PlotRange -> {{0, 360}, {0, 356}}}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod12$$ = XMLElement[
   "pod", {"title" -> "Dual skeleton graph", "scanner" -> "Data", "id" -> 
     "DualSkeletonPod:PolyhedronData", "position" -> "1200", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"PolyhedronData"}], "\n   "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                "\"icosahedral graph\"", {
                 LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0}]}, {
                GraphicsBox[
                 RasterBox[CompressedData["
1:eJztvWdUI1m273ln3pf5OF/n47z5MmvWrJn11pv1pufde/ve7r51b1eX6arK
clkmq7IqDUlmkiQJaSAh8Yn33lshYSSQBAIhhPDCe++9997mbBFVFCVACkWc
ExES8VvqXlkgQocgzj57n7P3/v+vPz357N7/+A//8A/P/if4v89uv/iTnd3t
Vzf+Z/iPL2yePbhvc/fO+zb2d+/ftfvDT/8Jvvjv/8M//IMV/E/373c8PDw8
PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDyUODw8ZHsI3GJmZub4+JjtUfDwcBSR
SHTnzh1ra2snJ6f29na2h8M+sbGxH338saOj071796RSKdvD4eHhHGER0c9d
fKMyS3OUbZLimjt37g4PD7M9KDbx8PZ94RqUUlCfLm+Slbc5vXYpLy9ne1A8
PBwiPTPL2sETJsjZq6i6197efnp6mu2hsUNyavoTR//zNySvrMPPP6C1tZXt
ofHwcIXPb/4YGJ9/fprAyy8oPC8vj+2hscM3P9zzicrWuyEhEQkpKSlsD42H
hwmOT052dg9W1rdnFtZGp5b6Ruba+qa07SOahoGSmh5peUd2cfN/fHwzPqdS
b5o8eR309Z3nAcmqgORS4uWf9MvLL1H566uUePkmKOHlk1Dy60tJvN7GlxAv
77jiX18lv75++YpXrIJ4ecb87uURXUS83C+83KIKiZdrpO71JkLuHCZ1Cil4
FZT/Iij/eaDkmV/eU99c27c5jz1FDz2ED9yzrFyz7r0R3HHJvO2U/qNj2q2X
qd+9SP7GIelr+8SvniV+8TThhm38pzZxf38c+/HD6H/76GZIslzfbkSnxcXF
sf335KHI9vZ2V1fX5OQk2wNhjqOj462dveU13dwfmVzqGZ5t7Z2saxvRNA4U
V3Xnl7ULFU1pBdq4nOqwDA3Ma5hrTqFSe3/xI0/RA7csW5+cl0H5ML9g/gal
lkVlVSSJ6wSFjXnKVrmmU1XX9/1dO+/wLL1p4uDknS6UDIzND4wtEK/B8V9e
QxOLv74WiNfw5CK8YGy/vhaHJ+BH5nqHZ7sGZ9p6J5t7Jho6xmpaRyqbBsvr
+0prexVV3WC1JKr2XGWrSNGUKW9MK6hPktTG51RHi6rCMzUh6WqwWmB8vGIU
YCJcwuSOIQXPA8R2vnk23jlgDe67Zt1xzvjRMfVn5/R7rgJrD6HN2xz4roO/
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
                  "], {{0, 0}, {360, 326}}, {0, 255}, ColorFunction -> 
                  RGBColor], {
                 ImageSize -> {150}, ImageSize -> {360, 326}, 
                  PlotRange -> {{0, 360}, {0, 326}}}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod13$$ = XMLElement[
   "pod", {"title" -> "Symmetry group", "scanner" -> "Data", "id" -> 
     "GroupPod:PolyhedronData", "position" -> "1300", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"FiniteGroupData"}], "\n    ", 
         XMLElement["microsource", {}, {"PolyhedronData"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Polyhedron\", \"Dodecahedron\"][EntityProperty[\"Polyhedron\
\", \"SymmetryGroup\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TagBox[
              TagBox["\"icosahedral group\"", 
               $CellContext`TagBoxWrapper[
               "Entity" -> {FiniteGroupData, "Icosahedral"}]], Identity], 
             TraditionalForm], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod14$$ = XMLElement[
   "pod", {"title" -> "Properties", "scanner" -> "Data", "id" -> 
     "PropertiesPod:PolyhedronData", "position" -> "1400", "error" -> "false",
      "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"PolyhedronData"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Polyhedron\", \"Dodecahedron\"][EntityProperty[\"Polyhedron\
\", \"Classes\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{"\"amphichiral\"", 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], "\"convex\"", 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], "\"equilateral\"", 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], "\"isohedron\"", 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], "\"Platonic\"", 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               "\"Platonic dual\"", 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], "\"rigid\"", 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], "\"simple\"", 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], "\"uniform\"", 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               "\"uniform dual\""}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod15$$ = XMLElement[
   "pod", {"title" -> "Associated person", "scanner" -> "Data", "id" -> 
     "AssociatedPeoplePod:PolyhedronData", "position" -> "1500", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"PolyhedronData"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Polyhedron\", \"Dodecahedron\"][EntityProperty[\"Polyhedron\
\", \"AssociatedPeople\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TagBox[
              TagBox["\"Plato\"", 
               $CellContext`TagBoxWrapper[
               "Entity" -> {$CellContext`PeopleData, "Plato::j2247"}]], 
              Identity], TraditionalForm], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`aux6$$ = {True, False, {False}, True},
    Typeset`aux7$$ = {True, False, {False}, True}, Typeset`aux8$$ = {
   True, False, {False}, True}, Typeset`aux9$$ = {True, False, {False}, True},
    Typeset`aux10$$ = {True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`aux14$$ = {
   True, False, {False}, True}, Typeset`aux15$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "1"}, {
      XMLElement[
      "assumption", {
       "type" -> "Clash", "word" -> "dodecahedron", "template" -> 
        "Assuming \"dodecahedron\" is a polyhedron${separator}Use as ${desc} \
or ${desc} or ${desc} instead", "count" -> "4", "pulldown" -> "false", 
        "default" -> 
        "{\"C\", \"dodecahedron\"} -> {\"Polyhedron\", \"dflt\"}"}, {
        XMLElement[
        "value", {
         "name" -> "Polyhedron", "desc" -> "a polyhedron", "input" -> 
          "{\"C\", \"dodecahedron\"} -> {\"Polyhedron\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "PolyhedronClass", "desc" -> "a class of polyhedra", 
          "input" -> 
          "{\"C\", \"dodecahedron\"} -> {\"PolyhedronClass\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Graph", "desc" -> "a graph", "input" -> 
          "{\"C\", \"dodecahedron\"} -> {\"Graph\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Word", "desc" -> "a word", "input" -> 
          "{\"C\", \"dodecahedron\"} -> {\"Word\"}"}, {}]}]}], 
    XMLElement["sources", {"count" -> "2"}, {
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
FiniteGroupDataSourceInformationNotes.html", "text" -> 
        "Finite group data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
PolyhedronDataSourceInformationNotes.html", "text" -> 
        "Polyhedron data"}, {}]}]}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "15", "datatypes" -> "FiniteGroup,Polyhedron", "timedout" -> 
    "", "timedoutpods" -> "", "timing" -> "1.536", "parsetiming" -> "0.088", 
    "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP54101ciggg40f34c240a00003867ehe4ce7ii59g", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "19", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa54111ciggg40f34c240a0000463232d99gfh48d87179915770051379692", "version" -> 
    "2.6", "inputstring" -> "dodecahedron"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 3., 
    "Date" -> {2022, 11, 7, 1, 27, 29.3763905`9.220573342692353}, "Line" -> 4,
     "SessionID" -> 27634165378566798726}, Typeset`showpods$$ = {1, 2, 3, 4, 
   5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}, Typeset`failedpods$$ = {}, 
   Typeset`chosen$$ = {}, Typeset`open$$ = False, Typeset`newq$$ = 
   "dodecahedron"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$}, Typeset`chosen$$,
         Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{1063.5, {716.765869140625, 720.734130859375}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$}], 
       Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.876762449454554*^9},ExpressionUUID->"4c3081ef-afce-4845-af06-\
264710ae6a56"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\t2) \:0424\:0438\:0437\:0438\:043a\:0430", "Subsubsubsubsection",
 CellChangeTimes->{{3.8767623604661465`*^9, 
  3.8767623713672376`*^9}},ExpressionUUID->"e679063e-4e86-4caf-b61e-\
1ba92f2dfd4d"],

Cell[CellGroupData[{

Cell["refraction in a prism", "WolframAlphaLong",
 CellChangeTimes->{
  3.8767623737581835`*^9, {3.8767624704988585`*^9, 3.8767624751551323`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"c72786be-da8d-43ed-a705-c336264b3341"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "refraction in a prism", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    InputAssumptions -> {
     "{\"F\", \"PrismRefraction\", \"thetai\"} -> \"40 \[Degree]\"", 
      "{\"F\", \"PrismRefraction\", \"alpha\"} -> \"60 \[Degree]\"", 
      "{\"F\", \"PrismRefraction\", \"n\"} -> \"1.5\""}, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "https://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input information", "scanner" -> "Formula", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "FormulaData[\"PrismRefraction\", {Subscript[\"\[Theta]\", \"i\"] -> \
Quantity[40, \"AngularDegrees\"], \"\[Alpha]\" -> Quantity[60, \
\"AngularDegrees\"], \"n\" -> 1.5}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   StyleBox["\"refraction in a prism\"", 
                    GrayLevel[0], StripOnInput -> False], 
                   BaseStyle -> {{
                    Alignment -> Left, BaselinePosition -> Baseline, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  Global`TagBoxWrapper["Label"]], "\[SpanFromLeft]"}, {
                 TagBox[
                  PaneBox[
                  "\"angle of incidence\"", 
                   BaseStyle -> {{
                    Alignment -> Left, BaselinePosition -> Baseline, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  Global`TagBoxWrapper["Label"]], 
                 TemplateBox[{
                   StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["40", 
                    Global`TagBoxWrapper[
                    "StringBoxes" -> "40", "SRString" -> "40"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], 
                    FontFamily -> "Roboto", FontSize -> Smaller]}], 
                    Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"degrees\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, "RowDefault"]}, {
                 TagBox[
                  PaneBox[
                  "\"apex angle\"", 
                   BaseStyle -> {{
                    Alignment -> Left, BaselinePosition -> Baseline, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  Global`TagBoxWrapper["Label"]], 
                 TemplateBox[{
                   StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["60", 
                    Global`TagBoxWrapper[
                    "StringBoxes" -> "60", "SRString" -> "60"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], 
                    FontFamily -> "Roboto", FontSize -> Smaller]}], 
                    Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"degrees\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, "RowDefault"]}, {
                 TagBox[
                  PaneBox[
                  "\"refractive index\"", 
                   BaseStyle -> {{
                    Alignment -> Left, BaselinePosition -> Baseline, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  Global`TagBoxWrapper["Label"]], 
                 TemplateBox[{
                   StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["1.5", 
                    Global`TagBoxWrapper[
                    "StringBoxes" -> "1.5", "SRString" -> "1.5"]]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False]}, 
                  "RowDefault"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}, 
                 "ItemsIndexed" -> {{1, 1} -> {Left, Baseline}, {1, 2} -> {
                    Left, Baseline}}}, AutoDelete -> False, 
               GridBoxBackground -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}, 
                 "ItemsIndexed" -> {{{1, 1}, {1, 2}} -> 
                   GrayLevel[0.9568627450980393]}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,numberdata,\
quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Results", "scanner" -> "Formula", "id" -> "Result", 
     "position" -> "200", "error" -> "false", "numsubpods" -> "1", "primary" -> 
     "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "FormulaData[\"PrismRefraction\", {Subscript[\"\[Theta]\", \"i\"] -> \
Quantity[40, \"AngularDegrees\"], \"\[Alpha]\" -> Quantity[60, \
\"AngularDegrees\"], \"n\" -> 1.5}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "\"angle of deviation\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  Global`TagBoxWrapper["Label"]], 
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["38.47", 
                    Global`TagBoxWrapper[
                    "StringBoxes" -> "38.47", "SRString" -> "38.47"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], 
                    FontFamily -> "Roboto", FontSize -> Smaller]}], 
                    Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"degrees\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {
                    StyleBox[
                    TemplateBox[{
                    StyleBox["\"=\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \"", 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["671.4", 
                    Global`TagBoxWrapper[
                    "StringBoxes" -> "671.4", "SRString" -> "671.4"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mrad\"", FontFamily -> "Roboto", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{"\"(\"", "\[NoBreak]", "\"milliradians\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, "RowDefault"], LineIndent -> 
                    0]}, {
                    StyleBox[
                    TemplateBox[{
                    StyleBox["\"=\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0.6714", 
                    Global`TagBoxWrapper[
                    "StringBoxes" -> "0.6714", "SRString" -> "0.6714"]], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"radians\"", {
                    FontFamily -> "Roboto", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, "RowDefault"], LineIndent -> 
                    0]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   BaselinePosition -> 1, DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]}, {
                 TagBox[
                  PaneBox[
                  "\"angle of transmission\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  Global`TagBoxWrapper["Label"]], 
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["1.02", 
                    Global`TagBoxWrapper[
                    "StringBoxes" -> "1.02", "SRString" -> "1.02"]], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"radians\"", {
                    FontFamily -> "Roboto", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {
                    StyleBox[
                    TemplateBox[{
                    StyleBox["\"=\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \"", 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["58.47", 
                    Global`TagBoxWrapper[
                    "StringBoxes" -> "58.47", "SRString" -> "58.47"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], 
                    FontFamily -> "Roboto", FontSize -> Smaller]}], 
                    Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", "\"degrees\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, "RowDefault"], LineIndent -> 
                    0]}, {
                    StyleBox[
                    TemplateBox[{
                    StyleBox["\"=\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \"", 
                    StyleBox[
                    RowBox[{
                    RowBox[{"\"58\"", "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"degrees\"", {
                    FontFamily -> "Roboto", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "\[InvisibleSpace]", 
                    TagBox["  ", 
                    Global`TagBoxWrapper["StringBoxes" -> " "]], 
                    RowBox[{"\"27\"", "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"arcminutes\"", {
                    FontFamily -> "Roboto", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "\[InvisibleSpace]", 
                    TagBox["  ", 
                    Global`TagBoxWrapper["StringBoxes" -> " "]], 
                    RowBox[{
                    TagBox["56.02", 
                    Global`TagBoxWrapper[
                    "StringBoxes" -> "56.02", "SRString" -> "56.02"]], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"arcseconds\"", {
                    FontFamily -> "Roboto", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}]}], AutoSpacing -> False]}, "RowDefault"], 
                    LineIndent -> 0]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   BaselinePosition -> 1, DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,numberdata,\
quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "More units", "input" -> "Result__More units"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "Result__Step-by-step solution", "stepbystep" -> "true"}, {}]}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Schematic", "scanner" -> "Formula", "id" -> 
     "Schematic", "position" -> "300", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            GraphicsBox[{{
               GrayLevel[
                NCache[
                 Rational[16, 17], 0.9411764705882353]], 
               
               PolygonBox[{{0, 0}, {-0.5, -0.8660254037844386}, {
                 0.5, -0.8660254037844386}}]}, {{
                Dashing[{Small, Small}], 
                Directive[
                 CapForm["Butt"], 
                 AbsoluteThickness[1], 
                 GrayLevel[0.5]], 
                CircleBox[{0, 0}, 
                 Offset[60], 
                 
                 NCache[{Rational[4, 3] Pi, Rational[5, 3] Pi}, {
                  4.1887902047863905`, 5.235987755982989}]]}, {{{
                  Directive[
                   CapForm["Butt"], 
                   AbsoluteThickness[2], 
                   GrayLevel[0.5], 
                   AbsoluteThickness[1]], 
                  LineBox[{{0, 0}, 
                    Offset[{-30., -51.96152422706631}, {0., 0.}]}]}, {}}}, {{{
                  Directive[
                   CapForm["Butt"], 
                   AbsoluteThickness[2], 
                   GrayLevel[0.5], 
                   AbsoluteThickness[1]], 
                  LineBox[{{0, 0}, 
                    Offset[{30., -51.96152422706631}, {0., 0.}]}]}, {}}}, 
               InsetBox[
                FormBox["\"\[Alpha]\"", TraditionalForm], 
                Offset[{0., -43.199999999999996`}, {0., 0.}], {0, 0}, 
                BaseStyle -> {FontSize -> 14, 
                  GrayLevel[0.3]}]}, {{
                Dashing[{Small, Small}], 
                Directive[
                 CapForm["Butt"], 
                 AbsoluteThickness[1], 
                 GrayLevel[0.5]], 
                CircleBox[{-0.3, -0.5196152422706631}, 
                 Offset[60], 
                 
                 NCache[{Rational[5, 6] Pi, Rational[19, 18] Pi}, {
                  2.6179938779914944`, 3.3161255787892263`}]]}, {{{
                  Directive[
                   CapForm["Butt"], 
                   AbsoluteThickness[2], 
                   GrayLevel[0.5], 
                   AbsoluteThickness[1]], 
                  LineBox[{{-0.3, -0.5196152422706631}, 
                    
                    Offset[{-51.96152422706631, 
                    30.}, {-0.3, -0.5196152422706631}]}]}, {}}}, {{{
                  Directive[
                   CapForm["Butt"], 
                   AbsoluteThickness[2], 
                   GrayLevel[0.5], 
                   AbsoluteThickness[1]], 
                  LineBox[{{-0.3, -0.5196152422706631}, 
                    
                    Offset[{-59.088465180732484`, -10.418890660015819`}, \
{-0.3, -0.5196152422706631}]}]}, {}}}, 
               InsetBox[
                FormBox[
                 SubscriptBox["\"\[Theta]\"", 
                  StyleBox["\"i\"", Italic, StripOnInput -> False]], 
                 TraditionalForm], 
                
                Offset[{-42.54369493012738, 
                 7.50160127521139}, {-0.3, -0.5196152422706631}], {0, 0}, 
                BaseStyle -> {FontSize -> 14, 
                  GrayLevel[0.3]}]}, {{
                Dashing[{Small, Small}], 
                Directive[
                 CapForm["Butt"], 
                 AbsoluteThickness[1], 
                 GrayLevel[0.5]], 
                CircleBox[{0.32940337159776106`, -0.570543375791813}, 
                 Offset[60], 
                 
                 NCache[{-0.49681776575778536`, Rational[1, 6] 
                   Pi}, {-0.49681776575778536`, 0.5235987755982988}]]}, {{{
                  Directive[
                   CapForm["Butt"], 
                   AbsoluteThickness[2], 
                   GrayLevel[0.5], 
                   AbsoluteThickness[1]], 
                  LineBox[{{0.32940337159776106`, -0.570543375791813}, 
                    
                    Offset[{51.96152422706631, 30.}, {
                    0.32940337159776106`, -0.570543375791813}]}]}, {}}}, {{{
                  Directive[
                   CapForm["Butt"], 
                   AbsoluteThickness[2], 
                   GrayLevel[0.5], 
                   AbsoluteThickness[1]], 
                  LineBox[{{0.32940337159776106`, -0.570543375791813}, 
                    
                    Offset[{52.746225612867555`, -28.59782655371689}, {
                    0.32940337159776106`, -0.570543375791813}]}]}, {}}}, 
               InsetBox[
                FormBox[
                 SubscriptBox["\"\[Theta]\"", 
                  StyleBox["\"t\"", Italic, StripOnInput -> False]], 
                 TraditionalForm], 
                
                Offset[{43.196127056434946`, 0.5784525255618141}, {
                 0.32940337159776106`, -0.570543375791813}], {0, 0}, 
                BaseStyle -> {FontSize -> 14, 
                  GrayLevel[0.3]}]}, {
               Arrowheads[Small], {{{
                  Directive[
                   CapForm["Butt"], 
                   AbsoluteThickness[2], 
                   GrayLevel[0.5], 
                   RGBColor[1, 0, 0], 
                   Arrowheads[0.032]], 
                  
                  LineBox[{{-0.8908846518073248, -0.6238041488708214}, \
{-0.3000000000000006, -0.5196152422706632}}]}, {}}, {{
                  Directive[
                   CapForm["Butt"], 
                   AbsoluteThickness[2], 
                   GrayLevel[0.5], 
                   RGBColor[1, 0, 0], 
                   Arrowheads[0.032]], 
                  
                  LineBox[{{-0.3000000000000006, -0.5196152422706632}, {
                   0.3294033715977611, -0.5705433757918132}}]}, {}}, {{
                  Directive[
                   CapForm["Butt"], 
                   AbsoluteThickness[2], 
                   GrayLevel[0.5], 
                   RGBColor[1, 0, 0], 
                   Arrowheads[0.032]], 
                  
                  ArrowBox[{{0.3294033715977611, -0.5705433757918132}, {
                   0.8568656277264366, -0.8565216413289821}}]}, {}}}}}, 
             ImageSize -> {330.}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Equation", "scanner" -> "Formula", "id" -> "Equation", 
     "position" -> "400", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Column[{FormulaData[\"PrismRefraction\", {Subscript[\"\[Theta]\", \
\"i\"] -> Quantity[40, \"AngularDegrees\"], \"\[Alpha]\" -> Quantity[60, \
\"AngularDegrees\"], \"n\" -> 1.5}], FormulaData[\"PrismRefraction\", \
\"QuantityVariableTable\"]}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    PaneBox[
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{
                    RowBox[{"\[Delta]", "\[LongEqual]", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "i"], "+", 
                    SubscriptBox["\[Theta]", "t"], "-", "\[Alpha]"}]}], 
                    RowBox[{
                    RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "t"], ")"}], "\[LongEqual]", 
                    RowBox[{
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["n", "2"], "-", 
                    RowBox[{
                    SuperscriptBox["sin", "2"], "(", 
                    SubscriptBox["\[Theta]", "i"], ")"}]}]], " ", 
                    RowBox[{"sin", "(", "\[Alpha]", ")"}]}], "-", 
                    RowBox[{
                    RowBox[{"sin", "(", 
                    SubscriptBox["\[Theta]", "i"], ")"}], " ", 
                    RowBox[{"cos", "(", "\[Alpha]", ")"}]}]}]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {False, {True}, False}, 
                    "Rows" -> {False, {True}, False}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{1}}}, 
                    FrameStyle -> GrayLevel[0.84]], "Grid"], HoldForm], 
                    PolynomialForm[#, TraditionalOrder -> False]& ]}, 
                    "RowDefault"], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], 
                    BaseStyle -> {{
                    Alignment -> Left, BaselinePosition -> Baseline, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], "\[SpanFromLeft]"}, {
                    TagBox[
                    PaneBox[
                    "\[Delta]", 
                    BaseStyle -> {{
                    Alignment -> Left, BaselinePosition -> Baseline, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    "\"angle of deviation\""}, {
                    TagBox[
                    PaneBox[
                    SubscriptBox["\[Theta]", "i"], 
                    BaseStyle -> {{
                    Alignment -> Left, BaselinePosition -> Baseline, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    "\"angle of incidence\""}, {
                    TagBox[
                    PaneBox[
                    "\[Alpha]", 
                    BaseStyle -> {{
                    Alignment -> Left, BaselinePosition -> Baseline, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], "\"apex angle\""}, {
                    TagBox[
                    PaneBox[
                    "n", BaseStyle -> {{
                    Alignment -> Left, BaselinePosition -> Baseline, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], "\"refractive index\""}, {
                    TagBox[
                    PaneBox[
                    SubscriptBox["\[Theta]", "t"], 
                    BaseStyle -> {{
                    Alignment -> Left, BaselinePosition -> Baseline, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    "\"angle of transmission\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}, 
                    "ItemsIndexed" -> {{1, 1} -> {Left, Baseline}, {1, 2} -> {
                    Left, Baseline}}}, AutoDelete -> False, 
                    GridBoxBackground -> {
                    "Columns" -> {None, None}, "Rows" -> {None, None}}, 
                    GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, FrameStyle -> 
                    GrayLevel[0.84], BaselinePosition -> Automatic, 
                    AllowScriptLevelChange -> False], "Grid"], 
                    LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, 
                    StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", 
                    "\"assuming the outer medium has refractive index 1\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "3"}, {
      XMLElement[
      "assumption", {
       "type" -> "FormulaVariable", "template" -> 
        "angle of incidence:${field}", "count" -> "1", "pulldown" -> "false", 
        "current" -> "1", "default" -> 
        "{\"F\", \"PrismRefraction\", \"thetai\"} -> \"40 \[Degree]\""}, {
        XMLElement[
        "value", {
         "valid" -> "true", "name" -> "PrismRefraction.thetai", "desc" -> 
          "40 \[Degree]", "input" -> 
          "{\"F\", \"PrismRefraction\", \"thetai\"} -> \"40 \[Degree]\""}, \
{}]}], 
      XMLElement[
      "assumption", {
       "type" -> "FormulaVariable", "template" -> "apex angle:${field}", 
        "count" -> "1", "pulldown" -> "false", "current" -> "1", "default" -> 
        "{\"F\", \"PrismRefraction\", \"alpha\"} -> \"60 \[Degree]\""}, {
        XMLElement[
        "value", {
         "valid" -> "true", "name" -> "PrismRefraction.alpha", "desc" -> 
          "60 \[Degree]", "input" -> 
          "{\"F\", \"PrismRefraction\", \"alpha\"} -> \"60 \[Degree]\""}, \
{}]}], 
      XMLElement[
      "assumption", {
       "type" -> "FormulaVariable", "template" -> "refractive index:${field}",
         "count" -> "1", "pulldown" -> "false", "current" -> "1", "default" -> 
        "{\"F\", \"PrismRefraction\", \"n\"} -> \"1.5\""}, {
        XMLElement[
        "value", {
         "valid" -> "true", "name" -> "PrismRefraction.n", "desc" -> "1.5", 
          "input" -> 
          "{\"F\", \"PrismRefraction\", \"n\"} -> \"1.5\""}, {}]}]}]}, 
   Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True], 
   Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "4", "datatypes" -> "Formula", "timedout" -> "", 
    "timedoutpods" -> "", "timing" -> "1.334", "parsetiming" -> "0.923", 
    "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP3550146c01af88geeh4h00004h2h408fae590gea", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "11", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa3551146c01af88geeh4h000012e25ce5270198bb5481992349747128482", "version" -> 
    "2.6", "inputstring" -> "refraction in a prism"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> 3., 
    "Date" -> {2022, 11, 7, 1, 28, 4.7485303`8.429134191797626}, "Line" -> 6, 
    "SessionID" -> 27634165378566798726}, Typeset`showpods$$ = {1, 2, 3, 4}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = "refraction in a prism"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{1063.5, {378.765869140625, 382.734130859375}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$}],
        Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.8767624776391573`*^9},ExpressionUUID->"7fac5bac-c583-4565-9fa6-\
9e7a2634dc0e"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\t3) \:0425\:0438\:043c\:0438\:044f", "Subsubsubsubsection",
 CellChangeTimes->{{3.8767623792581916`*^9, 
  3.8767623899388933`*^9}},ExpressionUUID->"407a6cee-5724-48a4-b5fa-\
66d8009a3913"],

Cell[CellGroupData[{

Cell["radioactive elements", "WolframAlphaLong",
 CellChangeTimes->{
  3.8767623920170555`*^9, {3.876762511106556*^9, 3.8767625121378307`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"2f1e689e-289b-4bbe-9581-ba5b634d1389"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "radioactive elements", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "https://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"EntityClass[\"Element\", \"Radioactive\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TagBox[
               TagBox["\"radioactive elements\"", 
                $CellContext`TagBoxWrapper[
                "EntityClass" -> {ElementData, "Radioactive"}]], Identity], 
              TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Members", "scanner" -> "Data", "id" -> "Result", 
     "position" -> "200", "error" -> "false", "numsubpods" -> "1", "primary" -> 
     "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               RowBox[{
                 FormBox[
                  TagBox[
                   TagBox["\"actinium\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Actinium"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"americium\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Americium"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"astatine\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Astatine"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"berkelium\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Berkelium"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"bohrium\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Bohrium"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"californium\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Californium"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"copernicium\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Copernicium"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"curium\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Curium"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"darmstadtium\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Darmstadtium"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"dubnium\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Dubnium"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"einsteinium\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Einsteinium"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"fermium\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Fermium"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"francium\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Francium"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"hassium\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Hassium"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"lawrencium\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Lawrencium"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"meitnerium\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Meitnerium"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"mendelevium\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Mendelevium"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"neptunium\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Neptunium"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"nobelium\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Nobelium"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"plutonium\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Plutonium"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 "\"\[Ellipsis]\""}], "   ", 
               StyleBox[
                RowBox[{"\"(\"", "\[NoBreak]", 
                  TemplateBox[{" ", "\"total: \"", "37"}, "RowWithSeparator"],
                   "\[NoBreak]", "\")\""}], {
                FontFamily -> "Roboto", FontSize -> 10, 
                 GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,moutput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {"name" -> "More", "input" -> "Result__More"}, {}]}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Periodic table location", "scanner" -> "Data", "id" -> 
     "PeriodicTableLocation:ElementData", "position" -> "300", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"ElementData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"WebElements"}], "\n   "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            GraphicsBox[{{
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.5098039215686274, 0.8745098039215686, 
                  0.5568627450980392]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{0.5, 9.55}, {1.5, 10.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"H\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "H"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["1", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {1, 10}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9019607843137255, 0.8705882352941177, 
                  0.7647058823529411]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{17.5, 9.55}, {18.5, 10.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"He\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "He"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["2", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {18, 10}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.8509803921568627, 0.44705882352941173`, 
                  0.25098039215686274`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{0.5, 8.55}, {1.5, 9.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Li\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Li"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["3", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {1, 9}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9882352941176471, 0.6627450980392157, 
                  0.3529411764705882]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{1.5, 8.55}, {2.5, 9.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Be\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Be"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["4", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {2, 9}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.5490196078431373, 0.8117647058823529, 
                  0.9490196078431372]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{12.5, 8.55}, {13.5, 9.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"B\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "B"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["5", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {13, 9}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.32156862745098036`, 0.6352941176470588, 
                  0.796078431372549]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{13.5, 8.55}, {14.5, 9.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"C\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "C"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["6", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {14, 9}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.32156862745098036`, 0.6352941176470588, 
                  0.796078431372549]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{14.5, 8.55}, {15.5, 9.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"N\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "N"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["7", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {15, 9}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.32156862745098036`, 0.6352941176470588, 
                  0.796078431372549]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{15.5, 8.55}, {16.5, 9.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"O\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "O"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["8", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {16, 9}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.32156862745098036`, 0.6352941176470588, 
                  0.796078431372549]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{16.5, 8.55}, {17.5, 9.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"F\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "F"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["9", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {17, 9}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9019607843137255, 0.8705882352941177, 
                  0.7647058823529411]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{17.5, 8.55}, {18.5, 9.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Ne\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Ne"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["10", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {18, 9}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.8509803921568627, 0.44705882352941173`, 
                  0.25098039215686274`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{0.5, 7.55}, {1.5, 8.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Na\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Na"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["11", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {1, 8}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9882352941176471, 0.6627450980392157, 
                  0.3529411764705882]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{1.5, 7.55}, {2.5, 8.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Mg\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Mg"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["12", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {2, 8}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9882352941176471, 0.6235294117647059, 
                  0.4549019607843137]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{12.5, 7.55}, {13.5, 8.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Al\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Al"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["13", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {13, 8}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.5490196078431373, 0.8117647058823529, 
                  0.9490196078431372]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{13.5, 7.55}, {14.5, 8.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Si\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Si"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["14", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {14, 8}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.32156862745098036`, 0.6352941176470588, 
                  0.796078431372549]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{14.5, 7.55}, {15.5, 8.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"P\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "P"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["15", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {15, 8}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.32156862745098036`, 0.6352941176470588, 
                  0.796078431372549]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{15.5, 7.55}, {16.5, 8.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"S\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "S"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["16", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {16, 8}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.32156862745098036`, 0.6352941176470588, 
                  0.796078431372549]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{16.5, 7.55}, {17.5, 8.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Cl\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Cl"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["17", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {17, 8}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9019607843137255, 0.8705882352941177, 
                  0.7647058823529411]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{17.5, 7.55}, {18.5, 8.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Ar\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Ar"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["18", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {18, 8}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.8509803921568627, 0.44705882352941173`, 
                  0.25098039215686274`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{0.5, 6.55}, {1.5, 7.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"K\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "K"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["19", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {1, 7}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9882352941176471, 0.6627450980392157, 
                  0.3529411764705882]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{1.5, 6.55}, {2.5, 7.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Ca\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Ca"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["20", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {2, 7}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{2.5, 6.55}, {3.5, 7.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Sc\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Sc"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["21", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {3, 7}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{3.5, 6.55}, {4.5, 7.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Ti\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Ti"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["22", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {4, 7}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{4.5, 6.55}, {5.5, 7.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"V\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "V"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["23", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {5, 7}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{5.5, 6.55}, {6.5, 7.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Cr\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Cr"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["24", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {6, 7}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{6.5, 6.55}, {7.5, 7.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Mn\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Mn"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["25", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {7, 7}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{7.5, 6.55}, {8.5, 7.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Fe\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Fe"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["26", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {8, 7}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{8.5, 6.55}, {9.5, 7.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Co\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Co"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["27", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {9, 7}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{9.5, 6.55}, {10.5, 7.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Ni\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Ni"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["28", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {10, 7}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{10.5, 6.55}, {11.5, 7.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Cu\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Cu"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["29", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {11, 7}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{11.5, 6.55}, {12.5, 7.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Zn\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Zn"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["30", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {12, 7}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9882352941176471, 0.6235294117647059, 
                  0.4549019607843137]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{12.5, 6.55}, {13.5, 7.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Ga\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Ga"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["31", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {13, 7}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.5490196078431373, 0.8117647058823529, 
                  0.9490196078431372]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{13.5, 6.55}, {14.5, 7.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Ge\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Ge"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["32", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {14, 7}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.5490196078431373, 0.8117647058823529, 
                  0.9490196078431372]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{14.5, 6.55}, {15.5, 7.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"As\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "As"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["33", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {15, 7}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.32156862745098036`, 0.6352941176470588, 
                  0.796078431372549]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{15.5, 6.55}, {16.5, 7.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Se\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Se"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["34", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {16, 7}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.32156862745098036`, 0.6352941176470588, 
                  0.796078431372549]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{16.5, 6.55}, {17.5, 7.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Br\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Br"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["35", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {17, 7}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9019607843137255, 0.8705882352941177, 
                  0.7647058823529411]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{17.5, 6.55}, {18.5, 7.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Kr\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Kr"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["36", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {18, 7}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.8509803921568627, 0.44705882352941173`, 
                  0.25098039215686274`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{0.5, 5.55}, {1.5, 6.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Rb\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Rb"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["37", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {1, 6}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9882352941176471, 0.6627450980392157, 
                  0.3529411764705882]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{1.5, 5.55}, {2.5, 6.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Sr\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Sr"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["38", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {2, 6}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{2.5, 5.55}, {3.5, 6.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Y\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Y"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["39", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {3, 6}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{3.5, 5.55}, {4.5, 6.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Zr\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Zr"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["40", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {4, 6}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{4.5, 5.55}, {5.5, 6.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Nb\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Nb"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["41", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {5, 6}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{5.5, 5.55}, {6.5, 6.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Mo\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Mo"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["42", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {6, 6}, {0, 0}]}, {
               FaceForm[
                RGBColor[
                0.9490196078431372, 0.7843137254901961, 
                 0.40784313725490196`]], 
               EdgeForm[
                GrayLevel[1]], 
               EdgeForm[{
                 AbsoluteThickness[1], 
                 RGBColor[
                 0.6643137254901961, 0.5490196078431373, 
                  0.2854901960784314]}], 
               RectangleBox[
                Offset[{1, 1}, {6.5, 5.55}], 
                Offset[{-1, -1}, {7.5, 6.55}]], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Tc\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Tc"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["43", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                7, 6}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{7.5, 5.55}, {8.5, 6.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Ru\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Ru"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["44", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {8, 6}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{8.5, 5.55}, {9.5, 6.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Rh\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Rh"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["45", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {9, 6}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{9.5, 5.55}, {10.5, 6.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Pd\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Pd"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["46", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {10, 6}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{10.5, 5.55}, {11.5, 6.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Ag\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Ag"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["47", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {11, 6}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{11.5, 5.55}, {12.5, 6.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Cd\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Cd"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["48", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {12, 6}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9882352941176471, 0.6235294117647059, 
                  0.4549019607843137]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{12.5, 5.55}, {13.5, 6.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"In\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "In"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["49", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {13, 6}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9882352941176471, 0.6235294117647059, 
                  0.4549019607843137]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{13.5, 5.55}, {14.5, 6.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Sn\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Sn"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["50", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {14, 6}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.5490196078431373, 0.8117647058823529, 
                  0.9490196078431372]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{14.5, 5.55}, {15.5, 6.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Sb\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Sb"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["51", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {15, 6}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.5490196078431373, 0.8117647058823529, 
                  0.9490196078431372]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{15.5, 5.55}, {16.5, 6.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Te\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Te"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["52", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {16, 6}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.32156862745098036`, 0.6352941176470588, 
                  0.796078431372549]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{16.5, 5.55}, {17.5, 6.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"I\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "I"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["53", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {17, 6}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9019607843137255, 0.8705882352941177, 
                  0.7647058823529411]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{17.5, 5.55}, {18.5, 6.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Xe\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Xe"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["54", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {18, 6}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.8509803921568627, 0.44705882352941173`, 
                  0.25098039215686274`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{0.5, 4.55}, {1.5, 5.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Cs\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Cs"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["55", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {1, 5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9882352941176471, 0.6627450980392157, 
                  0.3529411764705882]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{1.5, 4.55}, {2.5, 5.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Ba\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Ba"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["56", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {2, 5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{3.5, 4.55}, {4.5, 5.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Hf\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Hf"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["72", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {4, 5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{4.5, 4.55}, {5.5, 5.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Ta\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Ta"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["73", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {5, 5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{5.5, 4.55}, {6.5, 5.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"W\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "W"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["74", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {6, 5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{6.5, 4.55}, {7.5, 5.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Re\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Re"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["75", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {7, 5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{7.5, 4.55}, {8.5, 5.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Os\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Os"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["76", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {8, 5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{8.5, 4.55}, {9.5, 5.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Ir\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Ir"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["77", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {9, 5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{9.5, 4.55}, {10.5, 5.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Pt\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Pt"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["78", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {10, 5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{10.5, 4.55}, {11.5, 5.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Au\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Au"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["79", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {11, 5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9490196078431372, 0.7843137254901961, 
                  0.40784313725490196`]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{11.5, 4.55}, {12.5, 5.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Hg\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Hg"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["80", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {12, 5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9882352941176471, 0.6235294117647059, 
                  0.4549019607843137]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{12.5, 4.55}, {13.5, 5.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Tl\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Tl"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["81", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {13, 5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9882352941176471, 0.6235294117647059, 
                  0.4549019607843137]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{13.5, 4.55}, {14.5, 5.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Pb\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Pb"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["82", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {14, 5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9882352941176471, 0.6235294117647059, 
                  0.4549019607843137]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{14.5, 4.55}, {15.5, 5.55}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Bi\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Bi"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["83", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {15, 5}, {0, 0}]}, {
               FaceForm[
                RGBColor[
                0.5490196078431373, 0.8117647058823529, 0.9490196078431372]], 
               EdgeForm[
                GrayLevel[1]], 
               EdgeForm[{
                 AbsoluteThickness[1], 
                 RGBColor[
                 0.38431372549019616`, 0.5682352941176471, 
                  0.6643137254901961]}], 
               RectangleBox[
                Offset[{1, 1}, {15.5, 4.55}], 
                Offset[{-1, -1}, {16.5, 5.55}]], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Po\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Po"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["84", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                16, 5}, {0, 0}]}, {
               FaceForm[
                RGBColor[
                0.32156862745098036`, 0.6352941176470588, 0.796078431372549]], 
               EdgeForm[
                GrayLevel[1]], 
               EdgeForm[{
                 AbsoluteThickness[1], 
                 RGBColor[
                 0.22509803921568627`, 0.4447058823529412, 
                  0.5572549019607843]}], 
               RectangleBox[
                Offset[{1, 1}, {16.5, 4.55}], 
                Offset[{-1, -1}, {17.5, 5.55}]], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"At\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "At"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["85", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                17, 5}, {0, 0}]}, {
               FaceForm[
                RGBColor[
                0.9019607843137255, 0.8705882352941177, 0.7647058823529411]], 
               EdgeForm[
                GrayLevel[1]], 
               EdgeForm[{
                 AbsoluteThickness[1], 
                 RGBColor[
                 0.6313725490196078, 0.6094117647058823, 
                  0.5352941176470588]}], 
               RectangleBox[
                Offset[{1, 1}, {17.5, 4.55}], 
                Offset[{-1, -1}, {18.5, 5.55}]], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Rn\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Rn"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["86", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                18, 5}, {0, 0}]}, {
               FaceForm[
                RGBColor[
                0.8509803921568627, 0.44705882352941173`, 
                 0.25098039215686274`]], 
               EdgeForm[
                GrayLevel[1]], 
               EdgeForm[{
                 AbsoluteThickness[1], 
                 RGBColor[
                 0.5956862745098039, 0.3129411764705882, 
                  0.17568627450980392`]}], 
               RectangleBox[
                Offset[{1, 1}, {0.5, 3.55}], 
                Offset[{-1, -1}, {1.5, 4.55}]], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Fr\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Fr"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["87", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                1, 4}, {0, 0}]}, {
               FaceForm[
                RGBColor[
                0.9882352941176471, 0.6627450980392157, 0.3529411764705882]], 
               EdgeForm[
                GrayLevel[1]], 
               EdgeForm[{
                 AbsoluteThickness[1], 
                 RGBColor[
                 0.6917647058823531, 0.46392156862745093`, 
                  0.24705882352941175`]}], 
               RectangleBox[
                Offset[{1, 1}, {1.5, 3.55}], 
                Offset[{-1, -1}, {2.5, 4.55}]], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Ra\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Ra"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["88", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                2, 4}, {0, 0}]}, {
               FaceForm[
                RGBColor[
                0.9490196078431372, 0.7843137254901961, 
                 0.40784313725490196`]], 
               EdgeForm[
                GrayLevel[1]], 
               EdgeForm[{
                 AbsoluteThickness[1], 
                 RGBColor[
                 0.6643137254901961, 0.5490196078431373, 
                  0.2854901960784314]}], 
               RectangleBox[
                Offset[{1, 1}, {3.5, 3.55}], 
                Offset[{-1, -1}, {4.5, 4.55}]], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Rf\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Rf"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["104", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                4, 4}, {0, 0}]}, {
               FaceForm[
                RGBColor[
                0.9490196078431372, 0.7843137254901961, 
                 0.40784313725490196`]], 
               EdgeForm[
                GrayLevel[1]], 
               EdgeForm[{
                 AbsoluteThickness[1], 
                 RGBColor[
                 0.6643137254901961, 0.5490196078431373, 
                  0.2854901960784314]}], 
               RectangleBox[
                Offset[{1, 1}, {4.5, 3.55}], 
                Offset[{-1, -1}, {5.5, 4.55}]], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Db\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Db"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["105", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                5, 4}, {0, 0}]}, {
               FaceForm[
                RGBColor[
                0.9490196078431372, 0.7843137254901961, 
                 0.40784313725490196`]], 
               EdgeForm[
                GrayLevel[1]], 
               EdgeForm[{
                 AbsoluteThickness[1], 
                 RGBColor[
                 0.6643137254901961, 0.5490196078431373, 
                  0.2854901960784314]}], 
               RectangleBox[
                Offset[{1, 1}, {5.5, 3.55}], 
                Offset[{-1, -1}, {6.5, 4.55}]], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Sg\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Sg"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["106", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                6, 4}, {0, 0}]}, {
               FaceForm[
                RGBColor[
                0.9490196078431372, 0.7843137254901961, 
                 0.40784313725490196`]], 
               EdgeForm[
                GrayLevel[1]], 
               EdgeForm[{
                 AbsoluteThickness[1], 
                 RGBColor[
                 0.6643137254901961, 0.5490196078431373, 
                  0.2854901960784314]}], 
               RectangleBox[
                Offset[{1, 1}, {6.5, 3.55}], 
                Offset[{-1, -1}, {7.5, 4.55}]], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Bh\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Bh"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["107", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                7, 4}, {0, 0}]}, {
               FaceForm[
                RGBColor[
                0.9490196078431372, 0.7843137254901961, 
                 0.40784313725490196`]], 
               EdgeForm[
                GrayLevel[1]], 
               EdgeForm[{
                 AbsoluteThickness[1], 
                 RGBColor[
                 0.6643137254901961, 0.5490196078431373, 
                  0.2854901960784314]}], 
               RectangleBox[
                Offset[{1, 1}, {7.5, 3.55}], 
                Offset[{-1, -1}, {8.5, 4.55}]], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Hs\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Hs"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["108", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                8, 4}, {0, 0}]}, {
               FaceForm[
                RGBColor[
                0.9490196078431372, 0.7843137254901961, 
                 0.40784313725490196`]], 
               EdgeForm[
                GrayLevel[1]], 
               EdgeForm[{
                 AbsoluteThickness[1], 
                 RGBColor[
                 0.6643137254901961, 0.5490196078431373, 
                  0.2854901960784314]}], 
               RectangleBox[
                Offset[{1, 1}, {8.5, 3.55}], 
                Offset[{-1, -1}, {9.5, 4.55}]], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Mt\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Mt"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["109", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                9, 4}, {0, 0}]}, {
               FaceForm[
                RGBColor[
                0.9490196078431372, 0.7843137254901961, 
                 0.40784313725490196`]], 
               EdgeForm[
                GrayLevel[1]], 
               EdgeForm[{
                 AbsoluteThickness[1], 
                 RGBColor[
                 0.6643137254901961, 0.5490196078431373, 
                  0.2854901960784314]}], 
               RectangleBox[
                Offset[{1, 1}, {9.5, 3.55}], 
                Offset[{-1, -1}, {10.5, 4.55}]], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Ds\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Ds"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["110", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                10, 4}, {0, 0}]}, {
               FaceForm[
                RGBColor[
                0.9490196078431372, 0.7843137254901961, 
                 0.40784313725490196`]], 
               EdgeForm[
                GrayLevel[1]], 
               EdgeForm[{
                 AbsoluteThickness[1], 
                 RGBColor[
                 0.6643137254901961, 0.5490196078431373, 
                  0.2854901960784314]}], 
               RectangleBox[
                Offset[{1, 1}, {10.5, 3.55}], 
                Offset[{-1, -1}, {11.5, 4.55}]], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Rg\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Rg"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["111", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                11, 4}, {0, 0}]}, {
               FaceForm[
                RGBColor[
                0.9490196078431372, 0.7843137254901961, 
                 0.40784313725490196`]], 
               EdgeForm[
                GrayLevel[1]], 
               EdgeForm[{
                 AbsoluteThickness[1], 
                 RGBColor[
                 0.6643137254901961, 0.5490196078431373, 
                  0.2854901960784314]}], 
               RectangleBox[
                Offset[{1, 1}, {11.5, 3.55}], 
                Offset[{-1, -1}, {12.5, 4.55}]], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Cn\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Cn"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["112", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                12, 4}, {0, 0}]}, {
               FaceForm[
                RGBColor[
                0.9882352941176471, 0.6235294117647059, 0.4549019607843137]], 
               EdgeForm[
                GrayLevel[1]], 
               EdgeForm[{
                 AbsoluteThickness[1], 
                 RGBColor[
                 0.6917647058823531, 0.43647058823529417`, 
                  0.3184313725490196]}], 
               RectangleBox[
                Offset[{1, 1}, {12.5, 3.55}], 
                Offset[{-1, -1}, {13.5, 4.55}]], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Nh\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Nh"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["113", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                13, 4}, {0, 0}]}, {
               FaceForm[
                RGBColor[
                0.9882352941176471, 0.6235294117647059, 0.4549019607843137]], 
               EdgeForm[
                GrayLevel[1]], 
               EdgeForm[{
                 AbsoluteThickness[1], 
                 RGBColor[
                 0.6917647058823531, 0.43647058823529417`, 
                  0.3184313725490196]}], 
               RectangleBox[
                Offset[{1, 1}, {13.5, 3.55}], 
                Offset[{-1, -1}, {14.5, 4.55}]], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Fl\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Fl"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["114", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                14, 4}, {0, 0}]}, {
               FaceForm[
                RGBColor[
                0.9882352941176471, 0.6235294117647059, 0.4549019607843137]], 
               EdgeForm[
                GrayLevel[1]], 
               EdgeForm[{
                 AbsoluteThickness[1], 
                 RGBColor[
                 0.6917647058823531, 0.43647058823529417`, 
                  0.3184313725490196]}], 
               RectangleBox[
                Offset[{1, 1}, {14.5, 3.55}], 
                Offset[{-1, -1}, {15.5, 4.55}]], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Mc\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Mc"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["115", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                15, 4}, {0, 0}]}, {
               FaceForm[
                RGBColor[
                0.9882352941176471, 0.6235294117647059, 0.4549019607843137]], 
               EdgeForm[
                GrayLevel[1]], 
               EdgeForm[{
                 AbsoluteThickness[1], 
                 RGBColor[
                 0.6917647058823531, 0.43647058823529417`, 
                  0.3184313725490196]}], 
               RectangleBox[
                Offset[{1, 1}, {15.5, 3.55}], 
                Offset[{-1, -1}, {16.5, 4.55}]], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Lv\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Lv"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["116", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                16, 4}, {0, 0}]}, {
               FaceForm[
                RGBColor[
                0.32156862745098036`, 0.6352941176470588, 0.796078431372549]], 
               EdgeForm[
                GrayLevel[1]], 
               EdgeForm[{
                 AbsoluteThickness[1], 
                 RGBColor[
                 0.22509803921568627`, 0.4447058823529412, 
                  0.5572549019607843]}], 
               RectangleBox[
                Offset[{1, 1}, {16.5, 3.55}], 
                Offset[{-1, -1}, {17.5, 4.55}]], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Ts\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Ts"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["117", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                17, 4}, {0, 0}]}, {
               FaceForm[
                RGBColor[
                0.9019607843137255, 0.8705882352941177, 0.7647058823529411]], 
               EdgeForm[
                GrayLevel[1]], 
               EdgeForm[{
                 AbsoluteThickness[1], 
                 RGBColor[
                 0.6313725490196078, 0.6094117647058823, 
                  0.5352941176470588]}], 
               RectangleBox[
                Offset[{1, 1}, {17.5, 3.55}], 
                Offset[{-1, -1}, {18.5, 4.55}]], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Og\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Og"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["118", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                18, 4}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9098039215686274, 0.8196078431372549, 
                  0.4627450980392157]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{2.5, 2.05}, {3.5, 3.05}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"La\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "La"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["57", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {3, 2.5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9098039215686274, 0.8196078431372549, 
                  0.4627450980392157]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{3.5, 2.05}, {4.5, 3.05}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Ce\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Ce"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["58", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {4, 2.5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9098039215686274, 0.8196078431372549, 
                  0.4627450980392157]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{4.5, 2.05}, {5.5, 3.05}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Pr\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Pr"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["59", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {5, 2.5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9098039215686274, 0.8196078431372549, 
                  0.4627450980392157]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{5.5, 2.05}, {6.5, 3.05}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Nd\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Nd"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["60", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {6, 2.5}, {0, 0}]}, {
               FaceForm[
                RGBColor[
                0.9098039215686274, 0.8196078431372549, 0.4627450980392157]], 
               EdgeForm[
                GrayLevel[1]], 
               EdgeForm[{
                 AbsoluteThickness[1], 
                 RGBColor[
                 0.6368627450980392, 0.5737254901960784, 
                  0.32392156862745103`]}], 
               RectangleBox[
                Offset[{1, 1}, {6.5, 2.05}], 
                Offset[{-1, -1}, {7.5, 3.05}]], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Pm\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Pm"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["61", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                7, 2.5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9098039215686274, 0.8196078431372549, 
                  0.4627450980392157]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{7.5, 2.05}, {8.5, 3.05}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Sm\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Sm"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["62", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {8, 2.5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9098039215686274, 0.8196078431372549, 
                  0.4627450980392157]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{8.5, 2.05}, {9.5, 3.05}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Eu\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Eu"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["63", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {9, 2.5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9098039215686274, 0.8196078431372549, 
                  0.4627450980392157]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{9.5, 2.05}, {10.5, 3.05}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Gd\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Gd"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["64", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {10, 2.5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9098039215686274, 0.8196078431372549, 
                  0.4627450980392157]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{10.5, 2.05}, {11.5, 3.05}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Tb\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Tb"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["65", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {11, 2.5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9098039215686274, 0.8196078431372549, 
                  0.4627450980392157]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{11.5, 2.05}, {12.5, 3.05}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Dy\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Dy"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["66", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {12, 2.5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9098039215686274, 0.8196078431372549, 
                  0.4627450980392157]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{12.5, 2.05}, {13.5, 3.05}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Ho\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Ho"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["67", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {13, 2.5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9098039215686274, 0.8196078431372549, 
                  0.4627450980392157]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{13.5, 2.05}, {14.5, 3.05}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Er\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Er"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["68", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {14, 2.5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9098039215686274, 0.8196078431372549, 
                  0.4627450980392157]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{14.5, 2.05}, {15.5, 3.05}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Tm\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Tm"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["69", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {15, 2.5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9098039215686274, 0.8196078431372549, 
                  0.4627450980392157]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{15.5, 2.05}, {16.5, 3.05}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Yb\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Yb"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["70", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {16, 2.5}, {0, 0}]}, {
               FaceForm[
                Directive[
                 Opacity[0.25], 
                 RGBColor[
                 0.9098039215686274, 0.8196078431372549, 
                  0.4627450980392157]]], 
               EdgeForm[
                GrayLevel[1]], 
               RectangleBox[{16.5, 2.05}, {17.5, 3.05}], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Lu\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Lu"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["71", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0, 0.3], StripOnInput -> False], 
                  TraditionalForm]], {17, 2.5}, {0, 0}]}, {
               FaceForm[
                RGBColor[
                0.8588235294117647, 0.796078431372549, 0.5333333333333333]], 
               EdgeForm[
                GrayLevel[1]], 
               EdgeForm[{
                 AbsoluteThickness[1], 
                 RGBColor[
                 0.6011764705882352, 0.5572549019607843, 
                  0.3733333333333333]}], 
               RectangleBox[
                Offset[{1, 1}, {2.5, 1.05}], 
                Offset[{-1, -1}, {3.5, 2.05}]], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Ac\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Ac"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["89", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                3, 1.5}, {0, 0}]}, {
               FaceForm[
                RGBColor[
                0.8588235294117647, 0.796078431372549, 0.5333333333333333]], 
               EdgeForm[
                GrayLevel[1]], 
               EdgeForm[{
                 AbsoluteThickness[1], 
                 RGBColor[
                 0.6011764705882352, 0.5572549019607843, 
                  0.3733333333333333]}], 
               RectangleBox[
                Offset[{1, 1}, {3.5, 1.05}], 
                Offset[{-1, -1}, {4.5, 2.05}]], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Th\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Th"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["90", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                4, 1.5}, {0, 0}]}, {
               FaceForm[
                RGBColor[
                0.8588235294117647, 0.796078431372549, 0.5333333333333333]], 
               EdgeForm[
                GrayLevel[1]], 
               EdgeForm[{
                 AbsoluteThickness[1], 
                 RGBColor[
                 0.6011764705882352, 0.5572549019607843, 
                  0.3733333333333333]}], 
               RectangleBox[
                Offset[{1, 1}, {4.5, 1.05}], 
                Offset[{-1, -1}, {5.5, 2.05}]], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Pa\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Pa"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["91", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                5, 1.5}, {0, 0}]}, {
               FaceForm[
                RGBColor[
                0.8588235294117647, 0.796078431372549, 0.5333333333333333]], 
               EdgeForm[
                GrayLevel[1]], 
               EdgeForm[{
                 AbsoluteThickness[1], 
                 RGBColor[
                 0.6011764705882352, 0.5572549019607843, 
                  0.3733333333333333]}], 
               RectangleBox[
                Offset[{1, 1}, {5.5, 1.05}], 
                Offset[{-1, -1}, {6.5, 2.05}]], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"U\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "U"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["92", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                6, 1.5}, {0, 0}]}, {
               FaceForm[
                RGBColor[
                0.8588235294117647, 0.796078431372549, 0.5333333333333333]], 
               EdgeForm[
                GrayLevel[1]], 
               EdgeForm[{
                 AbsoluteThickness[1], 
                 RGBColor[
                 0.6011764705882352, 0.5572549019607843, 
                  0.3733333333333333]}], 
               RectangleBox[
                Offset[{1, 1}, {6.5, 1.05}], 
                Offset[{-1, -1}, {7.5, 2.05}]], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Np\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Np"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["93", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                7, 1.5}, {0, 0}]}, {
               FaceForm[
                RGBColor[
                0.8588235294117647, 0.796078431372549, 0.5333333333333333]], 
               EdgeForm[
                GrayLevel[1]], 
               EdgeForm[{
                 AbsoluteThickness[1], 
                 RGBColor[
                 0.6011764705882352, 0.5572549019607843, 
                  0.3733333333333333]}], 
               RectangleBox[
                Offset[{1, 1}, {7.5, 1.05}], 
                Offset[{-1, -1}, {8.5, 2.05}]], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Pu\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Pu"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["94", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                8, 1.5}, {0, 0}]}, {
               FaceForm[
                RGBColor[
                0.8588235294117647, 0.796078431372549, 0.5333333333333333]], 
               EdgeForm[
                GrayLevel[1]], 
               EdgeForm[{
                 AbsoluteThickness[1], 
                 RGBColor[
                 0.6011764705882352, 0.5572549019607843, 
                  0.3733333333333333]}], 
               RectangleBox[
                Offset[{1, 1}, {8.5, 1.05}], 
                Offset[{-1, -1}, {9.5, 2.05}]], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Am\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Am"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["95", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                9, 1.5}, {0, 0}]}, {
               FaceForm[
                RGBColor[
                0.8588235294117647, 0.796078431372549, 0.5333333333333333]], 
               EdgeForm[
                GrayLevel[1]], 
               EdgeForm[{
                 AbsoluteThickness[1], 
                 RGBColor[
                 0.6011764705882352, 0.5572549019607843, 
                  0.3733333333333333]}], 
               RectangleBox[
                Offset[{1, 1}, {9.5, 1.05}], 
                Offset[{-1, -1}, {10.5, 2.05}]], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Cm\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Cm"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["96", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                10, 1.5}, {0, 0}]}, {
               FaceForm[
                RGBColor[
                0.8588235294117647, 0.796078431372549, 0.5333333333333333]], 
               EdgeForm[
                GrayLevel[1]], 
               EdgeForm[{
                 AbsoluteThickness[1], 
                 RGBColor[
                 0.6011764705882352, 0.5572549019607843, 
                  0.3733333333333333]}], 
               RectangleBox[
                Offset[{1, 1}, {10.5, 1.05}], 
                Offset[{-1, -1}, {11.5, 2.05}]], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Bk\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Bk"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["97", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                11, 1.5}, {0, 0}]}, {
               FaceForm[
                RGBColor[
                0.8588235294117647, 0.796078431372549, 0.5333333333333333]], 
               EdgeForm[
                GrayLevel[1]], 
               EdgeForm[{
                 AbsoluteThickness[1], 
                 RGBColor[
                 0.6011764705882352, 0.5572549019607843, 
                  0.3733333333333333]}], 
               RectangleBox[
                Offset[{1, 1}, {11.5, 1.05}], 
                Offset[{-1, -1}, {12.5, 2.05}]], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Cf\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Cf"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["98", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                12, 1.5}, {0, 0}]}, {
               FaceForm[
                RGBColor[
                0.8588235294117647, 0.796078431372549, 0.5333333333333333]], 
               EdgeForm[
                GrayLevel[1]], 
               EdgeForm[{
                 AbsoluteThickness[1], 
                 RGBColor[
                 0.6011764705882352, 0.5572549019607843, 
                  0.3733333333333333]}], 
               RectangleBox[
                Offset[{1, 1}, {12.5, 1.05}], 
                Offset[{-1, -1}, {13.5, 2.05}]], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Es\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Es"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["99", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                13, 1.5}, {0, 0}]}, {
               FaceForm[
                RGBColor[
                0.8588235294117647, 0.796078431372549, 0.5333333333333333]], 
               EdgeForm[
                GrayLevel[1]], 
               EdgeForm[{
                 AbsoluteThickness[1], 
                 RGBColor[
                 0.6011764705882352, 0.5572549019607843, 
                  0.3733333333333333]}], 
               RectangleBox[
                Offset[{1, 1}, {13.5, 1.05}], 
                Offset[{-1, -1}, {14.5, 2.05}]], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Fm\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Fm"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["100", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                14, 1.5}, {0, 0}]}, {
               FaceForm[
                RGBColor[
                0.8588235294117647, 0.796078431372549, 0.5333333333333333]], 
               EdgeForm[
                GrayLevel[1]], 
               EdgeForm[{
                 AbsoluteThickness[1], 
                 RGBColor[
                 0.6011764705882352, 0.5572549019607843, 
                  0.3733333333333333]}], 
               RectangleBox[
                Offset[{1, 1}, {14.5, 1.05}], 
                Offset[{-1, -1}, {15.5, 2.05}]], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Md\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Md"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["101", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                15, 1.5}, {0, 0}]}, {
               FaceForm[
                RGBColor[
                0.8588235294117647, 0.796078431372549, 0.5333333333333333]], 
               EdgeForm[
                GrayLevel[1]], 
               EdgeForm[{
                 AbsoluteThickness[1], 
                 RGBColor[
                 0.6011764705882352, 0.5572549019607843, 
                  0.3733333333333333]}], 
               RectangleBox[
                Offset[{1, 1}, {15.5, 1.05}], 
                Offset[{-1, -1}, {16.5, 2.05}]], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"No\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "No"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["102", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                16, 1.5}, {0, 0}]}, {
               FaceForm[
                RGBColor[
                0.8588235294117647, 0.796078431372549, 0.5333333333333333]], 
               EdgeForm[
                GrayLevel[1]], 
               EdgeForm[{
                 AbsoluteThickness[1], 
                 RGBColor[
                 0.6011764705882352, 0.5572549019607843, 
                  0.3733333333333333]}], 
               RectangleBox[
                Offset[{1, 1}, {16.5, 1.05}], 
                Offset[{-1, -1}, {17.5, 2.05}]], 
               InsetBox[
                BoxData[
                 FormBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Lr\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Lr"}]], Identity], {
                    FontSize -> Scaled[0.024], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain, FontColor -> 
                    RGBColor[0.0666667, 0.0666667, 0.0666667]}, StripOnInput -> 
                    False]}, {
                    TagBox[
                    StyleBox[
                    TagBox["103", #& ], {
                    FontSize -> Scaled[0.015], FontFamily -> 
                    "Bitstream Vera Sans", FontWeight -> Plain}, StripOnInput -> 
                    False], Identity]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxFrame -> {"Columns" -> False, "Rows" -> False}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{-0.2}}}], "Column"], 
                   GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                17, 1.5}, {0, 0}]}}, ImageSize -> 320, AspectRatio -> 0.75, 
             ImagePadding -> 0], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Larger", "input" -> 
         "PeriodicTableLocation:ElementData__Larger"}, {}]}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Images", "scanner" -> "Data", "id" -> 
     "Image:ElementData", "position" -> "400", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"ElementData"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    PaneBox[
                    StyleBox[
                    FormBox[
                    TagBox[
                    TagBox["\"actinium\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Actinium"}]], Identity], 
                    TraditionalForm], FontColor -> GrayLevel[0.3], 
                    StripOnInput -> False], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    TagBox[
                    PaneBox[
                    StyleBox[
                    FormBox[
                    TagBox[
                    TagBox["\"americium\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Americium"}]], Identity], 
                    TraditionalForm], FontColor -> GrayLevel[0.3], 
                    StripOnInput -> False], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    TagBox[
                    PaneBox[
                    StyleBox[
                    FormBox[
                    TagBox[
                    TagBox["\"astatine\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Astatine"}]], Identity], 
                    TraditionalForm], FontColor -> GrayLevel[0.3], 
                    StripOnInput -> False], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]]}, {
                    TagBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
/bllg6EzujFUGwF2AeSA7QMzBlSYVZs/H7vbKs6KMGWjRbpFhGnN/NT5DjP8
ouRBcE+pQMCg4Qj8d1RjFJYFCPcSa/ku1PUZnYoEwSIyJuerMJocKfnC5eFf
CmnMubiFwkTmFNwO4R62H76Ku5nxAcOTnRTeI28uHV04Sv667JmuRRNatCDf
NeeCdqf6heRV8d6CV7lva9qqRCXzL0zqvNe86obL9auX6q/NulbS87qurO5+
VU/GDpRXxqrV8g21azFG241n9J1Kt4MjYP9/uR0MGPj78pecPX4+m9mDw9Dx
6Q/soKleDg7IMA43SjX9atY9UjDzyay3Fo1rZ65TLfp6JPngjO1f3I86zbAN
cLQ5/H7zg3MY140Hr9GG45HphbkfxTfYqySWnBmkQo4pZSMClm3CZhIkqnmK
X/na/BXqGhFJVSlbzNkjdxXtYhzIqZNYsyfnXJeEssUSonArY526VoHmr6p8
q7+hMarfXtOpr6x4XhZedDLPUmOk6M531NrletYPrDtWYX1pbE9j54lrEVfX
9WT0XOuO6Yy7OOBifFtHo3ljY82ZzFpkRZrQ7Im5rre7FrwAn6GPkWGst4H/
Y3ozkVH/w1L/gTmYDH36r9TFQz7Qc8THkfHDbs63W5AxbcvuOzY3Vx46dfbo
yh1Xz5d5Uh2iE2mRq89NR/oldnjPyiDE3DqTip2cdiM4Q7SaZYdHKZTC+/Tq
bEeWntDC7qR8RC7nX2XmE+apKhRDssOLBuaTFGd0+IILOeXlV/TB+UaV+8pD
CjcWvy3MUaXlFaiHysXlE0rvFsxpntXoWL2/9Ukzve5Oa1eLU0NP0+Cms7U9
DbsaiqvrmyVNyNqRnTfaNzdv6Xp9IbrtSkdhu2nz6zZuq1sjq9217V0jjZPJ
a2AVWRyfDrfs/d+2wQ7Ajhs6SQ38SwD73juxDmwAy/pqhg5cNNhi0PMZm2e/
tvx1m9Jm9tpTTrOOJe4K93nqfMXudVinzwLHgymbowO9JmY1p14PEuGeZlwP
2kZ+gDKNsKJfwZGS3rF3Un5BETla6tcsBKOWfANVR5tLZqDqeVs5FlR8XoDq
kAyUrddfz3euIVah9blNiQ2zq4c0Mup9q6jVjZU39R0VhPI03bG6bTU3yt42
BNUPrKI3WjZMqN7Q2t28p/7uhZmdq1vmtDFbntV11lysNiobVzevVlbhVDuz
xqY8tcSnCKGerL9U2Km8Uh1R+awYUSQoGqrNORp0KsQRAAwcDft2J/9gYA1O
QT7fcM3CwD+LQWDI9+PwENgBVnx/1rUHbBW8B/aLVfac+zNFJwhHV9laBI/0
8XJaFF0c+NwlIXLg+Run1kRRA/Y5n0ojxSF8F2Li021CmnFGmdSwVcRlGLf4
O5S7eDhiNXUvaQJaz45laSg2PBzHht7Jb+HKGOmKHlm78Fbx1KLteU1l5FKT
4o8VunK+Lrg+vlZQMaTOv2ZeeUX1ocpB+tyadVVNepd6+zpaZX7t7hpaOaLK
voKsg9VuqLpS4tk0sj6kAlmdU8EsvlZ2XD+2oLxWXe1Zpij9vWRpAZN/kxtG
ixCrBV704qqBFSZF5T3qLnZ7T06jsko2Z27+Iub83i1wGnYC5gAzhraD4U31
Bv7v+bk3fg3YDbaDdlAO8sFU2FPwtK8+YWj3cDCscjdvz+/bAyK2BS3zupE8
N2bE+ftJodFjfUuTHWPWnEelvo+bGERF9qQmhYfjSejz8W343KzqxM1ZpRmL
YuBEf1xCpjW/nGfJOpMTrJgkccqZoJgoMct9pxgmnZafot2psi1JLukpeFM8
X0fJ9ywiFA7Jk5XW6Hzzb5VtL7mqPVCyq7BEdaL4RP5oZV3JL8WqvHtF6wqM
1DdUR3NWiPfmvJGa8XUyd7E7Z7boOZ/IGCDLESk4QtXrnAniw5oK5R3JSHmE
ZB53f/5uzTHZzZaC5p7alGuJ1wZcQnUJugI6FAEPwjqD38PGGRP6UkE/kAli
/hm7xMAfgm+R5hgwCZiCzcAe+hSDWqCB8rxDwA7K/SxBX7c9eAufafzAqHGW
y9xJs457VJ+xcTJC2qaZxafjNZin6RfxIzFhqUm4MVl5KRKcVZZ9ajvBFidN
F9HfUlyx7owTVA9sdPqIpHOhX9KjE71DyJzVDEv8G84B1jTyBuYYhg1pgWh9
dgWXrY5SqRSF2nnaSuUG9XyVt5wpHyat5b/LFvPdGBrOWcYSggUjlByPfkJO
wr9EpJEs8McQISRrvAPiDolFuIU0Ic8ivkbewemyWlPtsM9Q2uRGsj/hcWYA
C87YSEjKbudX0bMVlRIX9ueCu3mu0qmNyQ03K592/d51vGP2tZtXw3qkopmS
IMF7i7BpvlN6/3cvWCQsHNbbdwUD/3p3cxn4f4ef8xozMBVYABlQAxIoAJ4g
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
9DqTGpg+IXeVwjwbL1wqWMI+yHxDn0fmY15k6dKx6R4pmOj8kOLzczya/a/6
zHA7gEKhPqZd1lzMe5P7vN28o6iptX1hx6pGae29uqfly2vxdaQKVYl/6eLC
R9xoHoVmTvekjkd/JL8lzUOOJ18hRaB3U7zJD1GPM96nRcQozu47O/Y08Lrr
neDxwb3uLM/NZ3X2us1rfpt53Sp8ZuWEpRZXf2HM08yznuVr52efsqfKp8Cn
5ww+anx0d3Acx5RbSU8uG1TmUnyumld9pdyq4kr5tpLVlV8q3pWMr59Uv7aq
qnZG7Y4KQW1b7a5KRdOa5i11VvX+9Q2V3Prsuv1VdwiJlEXErYviVwYv7922
R2AfwXgYBigAt29rG5T4x+TnrGQLlLlYg28DsAYAFjgG3wZbtsRnecTCiuhp
kfPPH2Jfpx8hfpXMEW3iviw6XvBebVHFKBfrmgqV+Uxlo/perpH0eKm97nNe
dotT06TaSx1f2581d1yS9vhcoFzq7C7vKKzmVJ7WWVUnVLzVmRVL8vOUY5iX
qOVZj9HVqXdD/eLnhvp4aII3+CvdFHENsZ+CXzI9mJ6k+ZoHqoFS39LL+vEF
N6sH1dzRt1TNrjYrWVc1pwpTdL40qvSJ2jgfrUVIlKq23A7+ZlFqtg3zd04X
p4caQxKRjqMxmHTM4zQJPh2/Gf2ZPY9tRSuJOBGxKYC59PjKlwt8N9zfPGHD
6Q2ftyg3zlsWvUK9aM22h9stt9hlDkSOTK2gddDTiIeox6mV2KPi09mJrHuF
8/Mbcw81FNeurXje7d19u6OlG9Z9q31GS3Izuca0fXebXUNHm1tbR0NoY0+j
c82XSlTVtFJmlUXV1tLx2csldwSP18m34jb2bvP3kALLwR3wETwGvZkK7E/2
i4F/b3r3tRvwBSf7auKHaobtHcraELbJdBUjYmmopc9j5l6qA6ZKKs0msD/n
dsseCjYXny7wVtlXeJXNLH6o21j0m9pOe0T9q/RU6ZeieDW76WUdopzRtL0h
omp049i6toqE6qCKal1nESOfpMwqWVlkkfc5319zRz4i+xL3POV3aj0OmbQ5
dW781cDO+Kb4d5GN6AvozZmOWY+zCjJ8sSOw5zOCseswTilkkoJQkCphTaYT
MuulW0Vq0tr8A6rr7NuFW/MdxTrNr+rdkieqKaoE6TNVkmqUjEvfwvhErBcw
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
Ga3szrWUJKvdVUGSPcrROaXZy2hbiZsQR/BjUeUJ8zNDMyTx25GTkfXJ4ZS3
1OPEFehqZEr8sfhnYcdcy6JvBPxybCLVEncnviRPlSfNleRU52ZK3eQf5DOy
x2Rvzh7AmimyFT1kzc7tya0Ts5QK1UjZANk12RrhQglcihAoFFtycsUzK8sr
g/XHLj+7NLpLEzUyyTcBgM9Gr+Bu3/fdTJgtbBNs+vcnDw8BJoa3joH/yLa+
8ZdrqjcS+Fv82s8Z+lgwEfJxgSAO+IBjwBns//5ur6PgHOwYbAsMB6kwAuig
T0Tf8u5Lby1TzJ9CbENlxnnr6rVSyavGsNqKkubKZ/pd+dXqtlyt1FkbmSdQ
oWW7JcuFkUqRslyyo3FZk67yRveRS0u6bt9KvLPvNuWq7FrJ5Ud6nn5SobNi
ao5WouUyuPuYy5lvGT1kP2wRtgHxMLYs9nA4N5GcWBg9OMEzISVyv5fyHMwZ
76/1Kz07uD64vrm6+9arG7aXfS/u7DzZtKlD3Pa+MfcK8lL7haKLazp5zera
gzUzypq11nnhClv2TNZa8nsUHrk/sSskNphzbs+ZeDfOiU+OzidJh8a4Fpyu
PTrUd5u3uSsrFB4i9M4KPhk0wrsqGBNk4vUSWZSxNtYI5YSIiD0fahJ61uch
UoB4G5uBtEJ4R3+iraY4oXXq4epVsuN8PU9E0xLm4EMzjtFeUfOxsZSHZDvs
VoQsbXg0DDMYdSihkGhOLEU+ik9Ouh9d5dPgtcwpMdg0INDZPI4cbeS/lvgc
vyhzOFPKkBB2qDDKTZLN+lX6xILRqiJlnXSaOkM9Xf40X1vwVDlJK9Q+yGnO
eQ5t86t5T/OQOc3VpjV5ZY7tNh0+zVHV9Lri2inOizxfnN06tGjEvr608BlM
AauCBcMCYWdhlmAJmNO3Z+HfPeQfjZ/V95dr6me1Tvpe/uVXhPrX/fbNQZDu
zoAKgAHxfbVDoPoBkBadwOG+mlDjAYOwxmYrfFf2LGzx/+y31aMDG4qpT3ub
vYxnQ75TtCnvpdikiqWflzdQfl3szGvMrhCac19J7ot283XEUNxcxCXxEfEB
1qeu4T0JHSuflj21fbSk5UVzVf3EvIF51bkHIIWOycnQ7y1VlhyTRUkJ2c60
MNpEwgICD7cp/UN0Q1S4/9YEdvzJ0NYki8SNYTo/js8ul4Wx92N8guMuLrn4
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
JBuGv6Uv0HiLgrUo1QVBuYQh+sh8jIUiY4DmeanpGyIGkoXRu6+cjJkWutPr
fOztsDs+JunVCRuDp2abJdsEr4HszsJFiP1e+fieWrnEd2nCvB8XVp0yOzA3
IzaBe8UaDi46kqHEJMH35jwn7yHgi0ZEa4WHWY8bKY1WtU3CDfzXVD+gTW51
XExEXXjutaPOSa5yp5O2SXYq258bmrYIN1ru1FolWPTvdtr7w2btpuGtg5sm
nX1dV7lKHKc5q49q/E5cUV1aRnpGvo7Xxbonvou12bHAumBH/J65e1fs6Yud
jH4YSicZCR7wLWXfSieVkYR6XC4EibFFjxfZUh+TfiK6GwSNLnV5FcTKW0aT
Umv9Tpk9fgT/CV4KO1TsCcjFr8DegrzGipHXgDOk1qJFHHDNrBr/iq+Dj4fP
Do2OksaW3KgpfVB1qCrCedupOyf/wWePWZVZ41/q9r/fx+a/Vv6xIa9NlprO
/2tKjs1HLN6y+JcUIOsU7Gyf01JR97hlejO/9mZ9Uw3NiJUPikCMHww6BYv6
zrnDUGC8yG6YMWAHBlgizT6Lw8NZgHMkH2RjLhqKi+/1GgGaJJdfe4gkQgOz
sNRgkhWSSdBjhsHviHScC/Q6I5sWjYukasiTKDf2KN0Cf4i3kp1DuS5y5YVR
gvm1XCQlRTWqcpPOE0h4THo4x5L1krhRWi5+ypUwLtHGcKZUPCkBY8e+zDxB
gSANkKKcnozZMet8dwUVOplvKV73asHYlMBjh45XHbcEzMrj5HCozdTjRClV
STbFXJH5yL6JTJsRTffqPvMsWcG4Vaw22ifkopaXjeVl9o2SWoUhqzm8/rhx
o36/9ro0VBYurefP4H5hsSiLio4VqFOmYU7CV+ZdYT2kTqLrFY1SJttCSOT6
E3mwl2B9uhpYnAOMJRXOyW2Ovks7SBKUzBYs4+2gB3P5LDIhCBEI3ZUhjOAE
bjn/63LwxWnOcZdML5xy8rz+7PLZU8cCb/hnecTF1ofc8BYA7KMe+aTH+0bG
++202Gdxd52tlds285URhQ65ZondxGJ8CvRQISz7SiQGag1EJ06I+vggxl5Z
qPQdT4UchDUXoDC/kdYQecrLlE3x5y4ZfN56fT630ZN8PmFj45bUTbJVrmvm
rHTa1bTLbHuq3dQDd+12OKNdfx5LculwF7g5xrjFWEXsU/YpHkjU3Q86LOr3
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
11wtqAaEXtPglyMGuvVHE1E3YDvBNr0nO5yEsJnRsY6u8inDcf1BlWa7RhEv
H3cRo4FI5uK5dLbuJZVZ+SnoiuWVE3PU2VfTf45oL5jPoSZbBs363bu0KxPL
YZjRiO1+IxfupwmiFlzWlxzMk4l+zWigNuGei+63Dzd/uLbnaunl8AGZ3lci
1YHRvnXdD8YrxghD/b3y3W7t+CpXRhjlVur7uBshQ1FNwTaeN+O/Rxj4UyIz
Qrf4wgOf+yS5+oQBQSYeQWGnAmQ9znhauTRZN4R2BzG9EEQ8gY81rfvK72fH
lBtgn4A/ZJyNr/Ioz/iZ+jLWpYRfkgsLTdJO1I6bzL6XTcpSSJqPTQp/Hn4x
+I7v1/jn0WHh5gn3Yq9E+SBBpd/gcYWbISTwfI5m9r30lqwPmbppvZA9kCs5
f6Y/ThHEj/sNexo5ap3VOK2tE6y762ijmubhzwfWK73X/1P/kI6B9aDVdTOw
M9Jp5sK1WGIsIcK4PJw0Qtrd9atDpfPZYtRi1IJp7VveYRaZWVqxGz9JHyXv
x0BJK1hQCbF5ouEtT2ZUYfB2152Oa609DZtEz5uj6u6Nj4xU9dYN+fQ3iY4M
nOv52mo17jxyvG9yTuqSz+TZxdZ5pRnjEckBpIjR+pe4BKo9Uh2PBX902Lcl
NyBadwpe8LiC4BosTRFrWKAWG5l3MHaT+8WciugEV5MS95xvEcxST4hsijB1
INTcISddPGrJZREdUiyZw6HlV1wjvCJ9KgtGOeC/ovcgPiJUiruhkc1EgV2D
Q7dKd1IXL0sic0+KYqxGpGNgfkh20COvyMjLYb5Btv7DAfl+pLN25xxOVx44
cVBaNV6tRA2mfHfbtl2h28Mkr0opb1U+98TE7Wy/0SfjTiMj7Rxd1JHnqr/U
J5W1NF8cSTnEO+F4kqBr5zflq+/6KpgRKOHuELYcVOllVbRScD/3GAlEKMQe
475YtcaOzZ3CNw1iq2Wm2M7pbBXJt7R2uIikWl61mrd1Nm1pbxV9bXV0TvK2
8/rNfJRYjFicmBiw4b85HuJvT7kYUCYoaE2D2mrfDz5Sc8dvxl0vrWvLFXpU
O13ynRzqsxjPH37Tk8F7zVlk9NQI+JK8Uy3Xm6wbr80cm14eSVlJuNI1y1uq
XhCfLll2uKw6h5lnzlVMD5dMFf7KPOfr7thitA/2NisouLvateoGid5aI7jJ
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
i0yNdB//b77r3A+EVvvHuj6LJAcP+uxPeB4DjjiVHZj5OvVkYUWBIK+Dfp+N
YiuSXxDJeBrSokQZ9rl4F6wSEsaRZEMZNxgnqEUkmcY7tSPV22o+cXaxZjoz
RCGtnthiFKPYyGubk6eNkXuwg5yVEnEPvgkXUAGh1JLPcn6yYawxfBZOHasb
rhNU7WWSmpXwR1QtlUM6VqZfi6iWqTpPfIZbKY3mzjMWyPKw6bxfaQuURkIV
Sn3gee94V3Tr+yaJhrYmXsNz/uNmlqCnNrs7S+TUJOIrs5Hl7+rV+FuY7g1v
+FWMoc759mGB4vjEsHH/0Z4bIsdmc86XyoSydU1f6r5xVjpR7fWCAIFJQ3O1
AfYVagR+gPSCLEZ+tke4z031N3+egLTEDq9NFfyL8v5Xg38Pv+3ghdX2+qm1
YnqjAlPD7ttZfrDMHbGR9ZhWQDnUK9m7v3tw5s+J7KFMZjgFjm6p16t/wpfu
hohGW5bbFJovNByt8eaJWEVNEw1dNbKNe2uHOOvG0oZEfQmTkqNP+9PTTkYf
CViMuhceGDidYphkGCNuMnZq9MjOExY66IOj1uVWPFPZkCm/ePdTgR98r7o+
hrZC1xe8HvhzwHqwemp2xLTfvUaTU0x7JEity+IepKpVPCOJSpuR9xGb4T/h
G2AamFbsMtoizzdPPccvTjt2Z3imd4E3xzXf087zkbNM8Llgil9ydEIUIWST
XtCJoMP5SteUN8iHRcdE8cNSgsyD9HzuOqyzf24V7H7FLcdx0MvLo9ZpTwos
2Tb+M6YQG4J+gQpDy6AMssWysKk6HjpueAf5wFt+f7pppdYmRcVdQ2ghXpRs
y+xMr0q+nQJOYsfdJsiWOeKkiSCCP46JvYvqRLQimaXPixWqZThuLEzHy7bT
Ld0t/cKEhsP85+wU2rOs72l7klgeWc73Lxz0snUF2b2t1KeXM/YWqUN7ClKK
HAsV8ovgw9D1kB85EZlnUpWQfDiicL7vWK9sL3PAc3D34BvCT5wbco4mpBgR
KglGmJclSuX3cfHIuOoqjmi1d/mssrHcmd/F6WfON28TpNVajR4ZDu7/g4mi
jKO0yuOQyrkbuXHUMvSe+iX20fLa0YYh3z7wDGHq5VjjSMYAradM5NG0u260
Nbfpdm01Ra6cgTeBKxe+z3yg/fjEad3fzHEHHQLJgIC/jnr+s3iq/GPgLxrc
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
PGofrBUtLF2EhOH3Y3ThmyErkMjcJ95mPs899kY+jiZHTkvobfL/7ZgMwFbL
nvp/4X/1n4fE2q/w/y9sW2XaLsAYtAO0YS3rdP2jhhr6SnRIhVdZP/9MlXpF
iCCqzoCF7hHrON1InuufnO5/NfFkuKZnWPS0WaFxf9uy0LRhjCFVoU4g+Y67
MS50WV41GzZUtRmzJJ07d3j2QIvCmfXZ6x1BCyC4WAgoG3gInFu7u+KqZdq1
qgwlYG1h1f+TeaVIwBe4CLgBXoDNfyqnf6uvA4DmahoCxoFuwApkCTIAZYEy
QZGr+tQFqYOeAI+AO6v3vAiYr6r4ACAPpALZq583wHvgMaAM2gpaD/oCXAFG
164WsmqDt69+IwCkf7nZ9qTtvturNUha7UdOadzXrNPcetJHv/YkhJRIwpKw
9dG1j6ozK/TIbwi7K4LKfYnThFa8Eub/aO/uo2q84wCAf7/PvStXu93c5l7d
alPTyCRMIul1XpJtalc04ojlbSgOCeUkTLVIrrh6uyrEoWFkpjmUZoWYLWOM
vThH4thsO4q9nH3vcx+559iO/YE5+X6e0zn3dG/d+zy/5/vye+5zn7ts+ayl
xxbfygnLPpjZ1VCY803Wrg39DVfTK0rzi1V5ml2mnXfLmveF7A3Ybdobtqep
3KXy7iczDyRvySuN23SjaFuBbOMa01cFhcbsgq3GJsNfJSeKVuedKjaZYgvK
CwrzvDfYTpoclzbpkEOjY6r6vPKCKkDl28nolKjFrrndWjxmqPRqUwfLy4+l
HBdNa/QRdfYKmrOorLbhw1jOwm7bFfJxZImDUA+V0m3n59epFirDUsakLF1w
say5ZFG+zfZbm+vzPzxQU9FSfv5cXkPUqRX1LbXFVcEf++/RblcXnFzXkHE0
/tSUPjHzh1wddKV3+8A7Pt091X2aetxwP2t/2X6bVDwGgz94gZZqiQMMohrj
B32hH3QDJ/Fc+rVQABmQQ3vyIhr5ahr/eKrRs1vX+nG/32R5BnN/JRfPLn5w
S1uOvduL82hnyhvOMJMq7HhaKx+K1Dchgmrjd9BINdYc4dJXb0EdfAa10u0g
pxin007Vel/9Tn3VyICR195SvuEdPje8PDQvpCb4WFS0PjHi6Nt1ke+MfDGs
cZjnkA2pvy2JSTpSVFk0Pe9W5uBVJenOyfuWjFgcaKhcG5+9edX51ZEfFGfM
yji+3LHMbktScc2yyBVBaWPGaWL6RdfOd0wal9gzsCj065Cpnlqv+h4/ydEm
V+qu/WEYZRi5eL0HiwGUB93AT3hOkAkrhXlCgpAMWZAp3WsjLg96sCY+C1Xs
UecZ857nDt6Uy12wFo5Lv/WPMI5Kjpix06ssy1RRrt/mVTLxyKFPEypiTitO
Dqi5U3emevr+8MLm3Nj0PxInJbjEqcd7jxZGrBx+PXRg/9G+v/c6/oq7w1hV
Z+mjKQZYRvvrazTynrTvetDeqwI19ZL/FldP5ptxHpX70XtvVH6Ea7RcwO/x
Ml7DG/gDFmEhrsO+1Nneu9qJOZ7N/bSSFosBOApjsSPNZH2klT8pe19ukA9V
rexQ6tDZJrmdW7t0+JayVWbHLp2Gaxc5KjSxLyx1aXQtd04KSAhJCxrvcM6x
j3SSdD6U0o/1VcUWYzjVfFfsjjo8QZW+AV6lyt8JTfTa0vEi3IabYIkhJWVJ
+39cUzPrcz//v+sktTWCuD+chUvUnVnc1CTo0jU45fBU24kuycqU1IUVqca0
yylXdsh27C2dvb6LoTlDPu365KJxsaETgrP85nnc7tLgqtVV6c46jrIbaHdU
Gvi5NHeLospn15pFLZnzWRg7S2zKrd659qBOtxv6C/6Cr3AYq/EgbsL1mIMV
uJsiYQZtq7HQG90pTvbTPWvQeisNpdzlCxtpa0oniElVzLp796Qt3R7moxu+
RBEfiINxDuoxCn9BpaAQAqmbf116JL+f/vS5X3W0VBXvzc7ew56yXMHVZpji
Z1ujTZXCp927ujOud3TrNd66zzVfarW6HRqt7AtZilQAPCnLu4vfAC4XP6XZ
n2JP2XqExPIs//0q/W2VQlzsxUUlLpZOLxiCaDF3sT3EjlhOXfkSWAC/AmIL
rIIt1K2PoHlxJPTCEPSjSPOhiI7AaAxDN8GJouwcPbaJ/taO/v/L4rFiO6po
qtZn5vPHnnbW47OAcnI8ZV570LTee38EBbH3sugFLhR3x6AEyqAYsmkONw0m
Qpj4/Wtte2b+NEGxIj75KOMRfrSso8yWMqgtTIA5EAdG2A2bqQuqgK0QidMw
EhWoxj9p1nMJ6igz66nDMc87ZOJVa+T8iZVngqWTbf+QR7HHBVuPQ3CsMcYY
Y4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYe
5m+ECR09
                    "], {{0, 150}, {150, 0}}, {0, 65535}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Bit16", ColorSpace -> ColorProfileData[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIj
UNAApJaBycDRxcmVCagqN6+kKMjdSSEiMkqB/TwDGwMzAxgkJhcXOAYE+IDY
efl5qQyoAGjUt2sgkoHhsi7ILAbSAFdyQVEJkP4DxEYpqcXJQCMNgOzs8pIC
oDjjHCBbJCkbzN4AYheFBDkD2UeAbL50CPsKiJ0EYT8BsYuAngCyv4DUp4PZ
TBxgcyBsGRC7JLUCZC+Dc35BZVFmekaJgqGlpaWCY0p+UqpCcGVxSWpusYJn
XnJ+UUF+UWJJagpQLcR9YCAIUQgKMQ2gRgtNEv1NEIDiAcL6HAgOX0axMwgx
BEguLSqDMhmZjAnzEWbMkWBg8F/KwMDyByFm0svAsECHgYF/KkJMzZCBQUCf
gWHfHACHPFyJ
                    "], "RGB", "XYZ"], Interleaving -> True], Selectable -> 
                    False], DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {150, 150}, 
                    PlotRange -> {{0, 150}, {0, 150}}], Annotation[#, 
                    Association[
                    "URL" -> 
                    "http://www.wolframcdn.com/waimage/hset040/2b0/\
2b062cdf415f5adbcc7ecb302399c387_v001s.jpg", "Dimensions" -> {150, 150}, 
                    "Source" -> 
                    "http://periodictable.com/Items/089.4/index.html", 
                    "Popup" -> 
                    "hset040/2b0/2b062cdf415f5adbcc7ecb302399c387_v001ms.jpg"]\
, "Image"]& ], 
                    TagBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzsnQdYU9ua91cCgmJDEQULNlAEGzbsvRdUBOklkBDSCyGBACkQSEISSK8k
ofcuAkqzi2A/9nLsemzHXo712+cCft6Zuc/MM+3O3MnvfVjGlbUXYe/1X++7
yt6ZGEXyjYEDAOL6Q4kvgrGKSkUk7hoG/cefGIdBE1HITUQaCo2iei2ItYJy
1b0/f762YMGCBQsWLFiwYMGCBQsWLFiwYMHCz8AB/Ef676MfZADYQmbBgoV/
jZ+1NhAyAJLhyVDWbNhsWF++HWT/GgMg66M/rD90bB48D6onBLI+erRpwYKF
Hqwh64MEGQBvYW9/6M4KZgW9joDsR87fWFf6OT8IMgDuQdZHE6wJqucSZH1Y
/KMFCz+rhgcZACvgK364w5ebXm4CIMc9x70vBwFDwP62F+vRcgIs4Yd+a6bV
TANgW8S2HwJ2gDlA7w6GDf5RxgYyCxb+7wEDP0QAdkIGwH3Y/R9ZC1ELUQCs
v7z+MgB4EV7Ul18Fq4LKTITsr7XTo0oXyAA4ATvxox6RUCQE4Jdrv1wDoI5d
xwYgoF8AVHQFZADcgqyP/8io04KF/430xIHOkAFwAHbgh2o2kzZDwSj7LPss
AGNbxrYAwDrBOgHAuRXnVvSVQcKRPwTzs5YD4YH/P38ZbBkA8SfioWM1+zT7
AKg9U3sGgC2iLZCifax8IAe8GjIAqJBZvKGF/3v0xI074Tt/qGav314/ACLP
REJK2dS6qRVSXxurDdLjMfYxALSF2kIotdH+kEoGZAAMhQwAHGR92FrbQlXf
yr2VC8Cg44OOQ6PLtrdQPcNbhkOK3nR2E6TunXE74/rKd8I6YX0+9GdFW7Dw
j0pP1OcH8/vR3EtHl44GgNZKg3Q3/+D8gwDkt+e3A/Cp41MH5LNafaD8ilMV
pyBvGHoutO+oKngVvE81NfCaH1peu3vtbgCmnpoKlU9rTYOOvdNxB6onoyMD
SmltNEiPs07Mgvxj+NzwuX1H2cPt4X89O2TBwj8q/cGfm+uvw6//UA0RS8QC
8OjUI0g1Vq1WkGoedzyG9NLU0QSlL9pfQHoccWjEIQAuNF1oAsBrpNfIvmPZ
/dg/Jmjgw+DDAHCvd68HAHMYcxhSd3spdGxLRwtUz5mOM1D6oPUBVH9nV2cX
5GeFLGHfsddg1yAxu0JmwcI/OhzI+lhptRIal9UW1RZBPuto2lEAYtpjINXs
69gH6aW9ox1Kv3d8h9K6ljookmw90wpFqqUppSl9NRD6EX5ocBRpFDSWPHb+
2Pm+seSYA2MOANDW0dbRp0TXDlcorTpYBXnb1KZUSNFbHLY49NUwBjbGEoxa
+IeHCWP+aOfCscKxAHxr+Qbphd3GhqLE6tZqyE85tTlBrye1TYLSpNYkKOde
+z1Im1tatkAlH05/OB0a8Y28BXlDsj/ZH4B+bv3coLGh01AnAPjl/HJIa4dc
Ib9Z3VINlbdvs4fqGdA2AEo/tH6Aanu4/+F+qOZjSdBIM9I70rvv8xDhRMv0
qIV/eCrhlT/a+bBlw5YBgLuEuwSA8oQSGqOVdpd2A6DqVkEprhsHpSs7V3YC
8PLqy6sAHEccR0AjvpFrIfXx2nmQKg+cPnAagHHd46CSy7yWeQEQsjJkJQDT
rk6Dym84sQGqc2/3XujdC90XoPRu910oPdx5GKrT/5r/NQBsdtvs7vs8y62W
W24rtfAPz8/rgNdmXpsJwP6M/RkAJLISWQDM4s7iQv4olZgKQF5aXhoA3DQu
lFrJreRQnDnm2BgAHLGO0Pjxy5kvUFxa3VDdAEBEVwQ0vrOWWEugKHTYWGhU
aJ9hD9U5gjsCqq2KU8UBIIgTBKWH2IfYAFxOvpwMQGZGJlSmaEnRkr7PYwe3
s/hBCxb+CT1zlXfgd36o46n/Uyj+zLiccRmARx2PoPEd9TIVer03YW9CX5me
mdKe+R8LFiz8zM/7rn+DDIAmeBOkl3h4PJTS4DQojYZHw/tWD73h3lCaDc+G
Ui5kkHeDj4BeX8ZdxgFwvvZ8LQAatgbybvRB9EF9Na+1WgtFlRQ4BSqZAE+A
0hR4CpSmwdOglAPnQOlx+HEoXQBb8MMv9+wVt2Dh/w49+0V7VNmT9qhgMGQA
DIEMgJHgz4WIUsj6CBseNhwa97mEuACwZ8CeAQBsGb9lPADBI4JH9JVpgAyK
SCHrq7Mn/fl39aSWNUELFv4WPero2dWGhWN/xKJfk74mAeB22u00ALuKdhVB
frBb0w2AQqAQ9JVxhDtC5UeAP0VpuVPJgoV/Hz07an6H/f4jVmye2TwTgM9H
Ph8BILkjGRoJ7j+yH3p9of1COwBzOud0ArB80fJFfeVXwlda5lgsWPh30LOD
ehlkAHyErA8vlZcKgBUnVpyAlNj6uRWAxvZGSH1+bX5tACiPK48D4GvyNQHw
Bf4F3hfNRkJmuVvQgoV/Gz/vmjbCjT+8GGITYhOkx+6Pf670tV6A1He94zrk
B5s7mqH0Xsc9KJW2SqF8u1N2pwBI35W+q+/YNnjbv3ifhQULFv4WnZD1kTUg
awAA1WXVZQDUH6mHIs+Q9pD2vh1oHRBQRNqxH0pz23Oh/LTDaYcBmFk7sxYA
0lDS0L56vkFmwYKFf41h4M8npPesIPSAoCAoADy9+PQiAOgWdAsAh1oPQf7u
e+t3KMW14aAodHHbYig92HoQylm+f/l+yFf+cuEXABRMBbOvnkXwRfC+e5Qs
WLDwtxgDGQDnIOtDuUW5BQB/s78ZgKVHlkJ+EHcKB0Wb77rfQXGpV5dXFwBf
u75CKfMUE8pv6WyBnCiljAL5TZw/zr+vnp4n1cyEzIIFC/82FkLWxy34LciL
eU7xnAKAU5BTEABRrCgWAEPEQ8QAzM+YnwHAefR5NKTBuS1zAXhp8/LH3b6h
IPRfrN+CBQv/nJ45k5+f7kKH0+Hgp8kU2E9PL+xZku+b7/xzNrVvxkUPWd+x
P8+IWp4bY8HCv53/P4dpCyggHowCt2G3oKw5VnOs4GAOfAHcGhhhRihnNnw2
JK1hVvZWAATDg6HXMsj6+FvPQvynv8syY2rh/xJ/6qLPI+UAM8gAW8BGsBgY
gBQwQBOoAEqwAOYGs4Ztg82F2cNWwBxgMNgMuAP8Aewe7DRsH6zRSmHlYXUF
3gpHwl/BrsLKYGMhJ3caVgNTwrCwRbCpMDjsPDgISkA0CAPbgDuYCib8Zc5n
cO/v/Vl1NpDO+/1lj3efz7T+i7lAx4z+7zwxFiz8J/Ozf/nzKWojQADwBevA
R/AEnAdfYL/C9sP2gUpQDaJgSTABbDukl+C/qmEa2A5WgzzgAnv2V/nHYNPh
6TAGpFpUb44VpBmrH6+tfuwDXQZ2Q37UB+YHQ0LaLYfpYHoYHxYA+xWcArVg
PVgDFvyl/N/2lj1/xUjo8zv+1W+xYOF/Dn+Os/q0thB4gclgOWwi7AaQwciw
OZDOymEc2Gi4E3wgXA3qQDeYB7V7j97ybQNnDqoYcAUOs8LATTY2NkYrG5vX
1nOt3o0QOsDs0WOvjn7s+GVqhNvD8c/m1M5iTJu4JG6hcc6U1TeXdy08uWji
gppZ7V4HZq72kHoucQ92JbvmTYwa1885YxTCYfdAwYA5tn2rEUMgrzYIGkta
Q17vzz2k48BE6KeHTNubth9t1tpQbPb2bi7NBiogACOsllipeh12f8u9UBb+
h2H1F+U5QTa8NycDcAAVEADyx3c7WP/Fv/SHWj0czAXzware/NbByYOEdm+m
oly3TSz0X+abufk8dRNxH7JOvIBfl6wp6s4rUQfslzRurnhz5O2BDQ2/nPh2
1NBsfyHjjOzQ0+7uTtvWlccWHHZtJF344yz2SOlp5+4t7bNOnDti3Vx/+HSH
TX19VWC50eiju616lLmDPz9NnvA8Ngu1KhSx+cbGrlXZk4In7BmjHmhnJ7Cd
9hddDYW83JTez7YJbAahAAb/CuuGlVsftd5rNQmKY8cCJvw8PB4eDvndvgWP
wdBxA4E95N2H9OZYxpUW/qv52d9xAQasgBS3AywHs+Eu8HewEii6s4Nth52A
3vUY5TVi6WClm99Eg/PRicXjT46J2D5/2+/r/TNaUjsTJ9Vtql5WsPGX7Wcj
jnT+ev/qilOv7sNvO/1y7YH+NvdC/rXMC9rj3ZcPnvc6vvk8/PTDw5sODWgb
WB99cEpreW2uyVa3L2tV6fKC67qUugEVd82h1e9LNDlPqz1L1xrK9tJqdubl
tk1sFpfdazE1PS63O5TTtqbW7+jgQyUNNYfyOrbVb6x9UXnO/FnrrrooeIYf
ifGKGLjq6bIDC9jOAaMYDvfBFdDzmCcnqP/48689DjrBdRAMJ8DHw/lQTxP7
42xY/ZN5VmvIv1pBenYCI4AFC/+5wH+a1y+CxmcqsBUa2aWBIbBlMCeYCHoV
0/vu42WKRbtmL8uqz7CLP1RTXnHRdO/4x6OUfTH3m+9UXzA8nvHg7pVF1xov
TO0sODnw+POW/PbJzZVVj4vDc2eod+W9yelUeSsds+kZn9MvcXMSNWznlOn0
OclTmHjafu4ydlDCHBwl1hy1WflWej3ze9KshNFkLOULoQl1m1lLf0J0Jt7D
DULujDmJ/C20Bjs1dhrCIWVLooLsIzzDe8z0yf2il2enlHgXDNI+2p/Z6Fx2
uCWwsX8Zv2F+zd3cVNNDnV58kgonhUYZlm9bEjn3vv3Toet67wyeAHnKqQAP
4gAN2MKeg5ugBHYTFgqNaTfB5b0d03BIf0Mh3f7ZU/25JmJ5ereF/xg/z14u
gSJJT8CDh8KH9mYtt3cdLLaZ6r51cqJTxcwT01Omfc6Q8sYmvTgWfGTKvpDr
t64azly9+/0m7/zAC6dOjTu8rHV3o2/VlXyksVA1VFehHJYVrw5SOEq+ZMeL
C/lE5XDpCdEluV82P9OU/iitm+XG0bDmJ2JTNiUdiKtjOaSIGVNTKzjPmHGk
SkILZmXm4wwXdnbGYB4vxStpS4KAuodFTNpLc2JciT9FoqBvoZuj0oi/Ewmx
27DvsMWoophZqHkRLsRJuCzkPvRXlDiCTBqEHxwNZ11I+ErESBGZs1loc7fu
vvhGNa6cbLxaWV0qMCwQf+bbJVmFOQcd8dG6ZkxyGPcIdgNW13tO9oGTwAju
w77DTL0afAR3tJLA7/ZPHjC6d+i4CCwFc4EFC/92ekY0P3u9EFgAbDk0NjoH
q+9taSNtT9g09RuPTAwbs31KXkRORjbhjNOpewdfPx37ZM2ty/em33l4Wda2
sfltdUlVdOnjXGvjTW25co0KoTid/UiVoeRJxxt36N1U28WXBNrUx7w4zv4k
vinLcEZ9XFYrieITRXAhNTUrGy45nL5XOF5wlaXJ3CIgcbyzOkTb0pWCMfwO
rrW0VdKeYSNw5Wez6Rlu6TUp5rTj3JuJdpxxrJOMYk5ZygqGm8hbSOG8o3+l
dRAeMHzjlcQuxvv4I4SlWD8MNnoUgYxfh1pIeIFNQ16mT6MysQ7MjfF/4Gez
viUsJncZVJo0yeiiutyVqoQKn5Khhm/aw2onQSHmGWpt4G9TMa4fx2qta6zf
956mP+d2S6GoYADsHngAvkBR+Wno35bec9jPciexhX8D1j/NuhMBDkRCPfx1
2D4YEYiAujffOIfuNXNGp1wu6+I/P0XsJh0IuMP79ewvob8oT1cfWddUWTe5
/JmxTsuWB+q2qGqyd+XWGVE6WPGnAm+z2jzEdFjros/V7JIb5LDsKIGjZKMw
nDvNdFwXK7uuT9QGyxrlS6SbBMvkU6WTBWlSnQQueCIblwUT2Ck40j+EzZIa
0YCM0eJJmfJUpeIX6SjhSSkpC8OvEoHM0tTj6Vm8JtbE1PXcDcy3qUc5I5nf
uTs4XYlHUp4lXYsnsAtTsImL4j6RV+AG0tZQJ+CPMLEMM3lMApe2hrAjgR6v
JGSnXGfuo9G5VuzbCRVZI8Vn0+7zjnBvMAw8FrssjqptkNcIGvLh5tPyaKle
VJtyLloaudD35aTbE4aPsYZVgCO9Z8kP5gObCtttpbB61KvQP5+q8ee8jWW+
xsK/jPVf5hJ6mAGbDhsJxVuXYYd7G0yJo61jkIN9PIdagW0+vvro3eaht1Kv
3Twdd1bfFXRgYVVIiY35hrI5u0FANNhrzshuFZTk7tArK8aV3s7fnnfDBPSv
dZc0MYpn6k7lxiwrzXGFWTI2fRn3RmKMdrhSL8aUHSv8NWebfo+6NvuMfpi2
RbZQ4SZ/ndmVmSdo4IZIIyQtgmvZWyQ5/AbR2MwNad6SLGFGWoOsMyuQ/yH7
scSRLxBi+DGcyald7DsJW1nhSatpQzirWTaMN4wq+mZyCvNVIj3uMDue1ZZg
ZDWk8OiHWA3Ji+kX2T4pSYzC+Atx0QRy/PQ4R/wSlpw5gCbmz+YZkrp5sNRO
5k1OW3JWXF3K04R15JkpDxNCKb9xbJJbqPv4Njz7BJx8r6SJjcwwpy6K7/YT
7Ry7IdgBOfx57ySpDkhBBigDZqgPc4DsX5o7hVt2z/0f5ueW8OcOTBvQDKuF
5cBQAA/iwX2wBzBA5JrXqxcsO1CqK+Hl3Lxy8ULb8Zenv3V+ap1U41C+LH+/
Zq6Sm3XY/Fr/XdlU5VROKpxdv7nKuSSj6E3uE0OKboi6Xlot+SY6mD5TeVd2
N1NrOKfdrBhoEhqw6huyt5JRfCt9sDo7m6erUZ3PnqFdoyqXrFW+la4RRwrF
6bUcY4Ynb1LKWUk/0cY0pbhB+DbVViqTbOUfVE6QyTK7s3iZI9L8xDnCx6kz
MlcIXrDXiEqFS1KbebdS5UlKbhx7Z2IIx5O1ieHP/ZWtSZjF7ko5QtcwXyU8
oRyMN9M+E0YxVyQuibNPOppAo2JSb7Ce0E9lDRU/SPPMjMiQcE6mT0tblPSd
V8m9yKjifeOGM+cKPNOtWQz22OR7cT4kB0IA6hitnlIfe4wTnCwnVwjup49g
zIr/QqlExSxYP89xxnfr69bHewMLOxgcdgesBCugUXUPPWv9A8DAH2uOMIse
/89g9dO1XgfWgKVgCNwO/qxXkP7D3IeFDE2LW0btwJqOBR12b9p2dcmFW51/
7Kurty2N105RNIp35PyiW6nkV20sa8vv2mOu3ldqrjpWhixE5WzXeimfK/dL
aZnLTYv1V+XMnFD9K3l0vo35oGZ+jrVuuGKgYZimWarV26u7s3bJ32bZ8N8o
a2Q6UaX+jNZRPjtrh7gxvUjunzWO/1WboIZLf1WMll8Ti8UPhMfSWlVWihni
2ExPvpRdIKEJ9nBrsxvEkwXTJFLhpdSATL7gfeqblJrkTrov+0jKa4aD/Fl2
BH+OMJqv4BCSDjPraZ8TDzHsyQeTzyTdj9vPBMw7cScS0Qlj4igcZkpefGo2
WbSBlykKFfhwpwiO8bqYVwQn061TrIVbMvZyPgg2pXuy+Zk7+e6c82lrU9VJ
5XFOcUmEPbEB6MORRKIdHoWYmb4vdXI8n/8x7Uvc5eDywPBtu52Mozp6v9Fi
Gmwc7D0oBoWg7+FTPiAMrII8pD2kxjFgLBgN5fiC9b3vWrzkPx4/j/jYIAmQ
gCd8Nnxk72WeMuWiW9xkD02YOlL828Un5x8du9c1+EjzvodV50uW5y01DtHn
qEYVF+UPNkU3FNauLWfWfq0cUrLCeEpXrrBRe8k2ir7m/pHzSv3EmKZ/Iu+G
vNUn4VDVFVm4yEdPV1dlD9EVqSKyy/KDTPPUZ/QU9aKsc1KjhJHxWm2n7BKX
ZDmKmOm09EFpl5JtFEOl34UZyl+lx4Ursidlvc7Il76R1PBJ0g2S+elc0QWB
DydRsixzCTdUnC5cnbZc4p45gbeHh0tDpLSzpeyFjLVcBIee6JfxkWeT4sJG
JVfTZ1EM5ArcSLw3bmkMgzY7TktI5eSzpjKMabWc5IQm9u3kyrj4jCWpO5ml
PCF7OuONIIw3mMkXLEnfl7RXcCP9QIqcvyBtRvJS8TuBS1r/dDN3KPMyphTd
GDUPUx5bFp2LGYPRRYch3kRcC2yjrCP2jybwT6cmxl8ihGJXhNlNGeLm1bth
ZzNYDbYAaygMuQAmwZPgZ3t7P29Ijcv+srboBMaDiWBC75WyrPv/Y2D903M0
a0ApyAGPYa9h13sv7emVvitdl4K9/ntmlhFv8K4oTo07fv0As3lhvm+OVI0q
ysqt0T+rd6yeUtrVvLdhV3VIweDcT7ou9RH5GImPjqXaIYnSJMldREMNb9TD
ZTHyOVlDhUpps+gI71G+zBSs/liYmHtE91UDVIysedL7ot94ruLtfE/OdVWd
tDozUJkh/SC4pnZVvMpcbZxl2KQS5XmZFdrXmizVY8kdSYM4Iv25Bqi3Z6vV
bUpSlrdsW3Y3v7+Em7k07ZuEKHrNm5zmyx2cRGERU5Ym3k115KqYbZxg9vqE
fbydqd3JvwuRGefZdYlWDGfyM0oTmYiTJlxhnKXiSHQ8Af0bxy/Flj4r3TaN
zsTxFnECEjanZbCGxGuFLzIWpYzkqbnRSTc5F1LqGfGcdyntjEWcoOTieDPH
jrWJXob+Bc2OiotYG+kXXIFioUQR4xDPI6mhrxEBiH6hLtinKHFYSfL5BGvc
dyYvYRvu48KT3vWzV9v52w3uDUC3w0Jhb3uvy2mb3bZRNr/0Dx5wv3fj+FIo
dl3w39lMLPyX8LPvawetoAI4wtwh68mB+/b3rdwa1kFq31uv/2X86SOHjPXk
SnShKe9Nzj717DKrIqm5sFpStjr/VcmrgrnGc+YsQ7Wq0fhK56UYWrwxn2vw
14xQTZAQdUvVHyVdJe/yXQyP6x5VhZbcL59RMjcXYWbl/KZ6oCRKbTJPy8yS
LRlKda28TVxnuKHpkr4ztuhrFdaFwbmh+t15h0x7dFf0Su14hYMGqZiSpZFf
zzrMHypuFNilYcUbRD5pAwVP0oNYbqnrWYmM76KjgtLUR7zZabSkewwO7TCx
MnkJU0Dz585h6xMSuds5jszDvFPcLuZx1WqFQeTG/5runXI49RB3RJIHdw37
KuNj4irGryRJ0gzGH+QKZjn9EdHM2ZxiiL+Ufie1MXEye1MymraEYRNvRfoF
F4CFIxNxRdhTyCmYCnR8VCP1HXkNlkh7TPUjfMYoYhdEWseEIQ+EvAn8GvjL
ruGhLaE0/2OhyaGhu2eiHKNUQQ4J22hHYztSiphrCF82p21iLUc6bHSoGrLY
ZcmEWqf3tvP6H+xXATsAOwj7PshtiO2gA3BgZdd72aYCDzDt79J2LPxH+fle
gEOQ/mqgfnU38AdvrZBWY63mRKZEKAOKG/bWuRfeOKE7dLLpS9Hm3C7dgMIV
ub/qsqu2lfrkqQvn5rZr1+Xs0yizB+sHqWZmTSszFdTk9Dc2aqTZC9Tz5ebM
ldodqjOShMr3JRfzHGvvlA8ppJhzDdkqo6ZRgZbc00Yq27Nscny1TTK08anO
Q2kwzTVMVXkYz+lbVKuUx7NfCu8aENBIMEJjUFaJz0kFkvr0RqlGsjojSb9E
209WplGrrki85XezzwsmK3Pll0Q+WQhxbEalCC5UpzaLrgo7U5mpmzlrEuHc
i6wVjNni+8J5nGDBg4wk1p1MtsCWoxM/ECzkhHDYyZtp41L9WWK6Ned08tF4
32Rz4hDa1oSxtCsEOk/FMSWW8w5x5yc5pDATuZQ6Zj8GgpxG+oKnoGmIl5EL
gj2xTZjI6Gn4Ytw3VHXE4XB5UGpQvyBP/+ToiKi7IYX45biFUenht8KCguxC
V4Y6BYxFLI20Dp4bERmOCpoddi+kX4CB5ISriWhlPWZ+x730M+5q2HR7JHXU
+N7RoiN8KPwgzB+eAJ8Id4Wtga3t7SdHQbHpSOAAHIHDv3idLfxP5OexvAIo
AR/Mgc2Eze69phnBacESP+zx1iO395GaW6q35Dbo7slmZG6u+lhKL3jZXF9f
W566j7JnQmWB/EXWJ/4xLUUZIL6x912NVZlXfrzRRrVO+0V2QLCqxL4gQs+v
cavYVNBROCf3jf6uoj47SojXqBQ+EkTBW9MJ7du8O8ZETbMeo1khdVehZENF
hzSflPeyv6pNyuwsnOaEMib7QM5w/QnF+Nz5xiB1lB6hzZeuM442HJaPNzEN
1xQR2iXq/eJnehudv+K95pL6nXS2NDVrlWCP5Hvmb6mO2bXi8vTpKQ5JO+JQ
7M/J1+ntQmdBF/sw/3z6wZTvotrMBu7qjJVpS5jHBRfS7zH7ibcLJqaUihgC
M4sgZGcMTmGyTjCXx33lNrOmJOKEazKusR9D/nRbnIq1Bcp/mHCWPotkS/Yk
zcPUI19GV4bfjTBHPApyQN2Pvhu2J4wfWrKbHHA74MzOuF1FfjY73CISIkYF
66N40SFhFeGjI1qDvoSEh9jvHhz9JHpsRGfg6oBPO5UoAiI5AMNVsnhUQmDN
7mNb7e2rhz7u3RH3BjYJfgAWCeIAGgyABcKcYMGACKJAKAgCvmANWAv1pP/8
Klv4n8PP4/edYBc0/sfDIn989/vqnY6+HVuELS3NO6pMB3e2Ztd/yd9k9FQ/
Li8p/pg7ek97lU/phUZy3bsyW3Ou7rocbt6jey8f0hRYN79snfGh5pLsW15I
zkx1yJ511feL5hXYmYdoJhj76fzkMp1Z1Zz1sbAy75h+Qt5WU5UGabIxRCtX
GZo0iXJH7WFFkdhkWKYjycpNk4wKNS0/wyzRnTOXGlO1CtMpw3uVzoDVXpYN
0PCVk7NPa11ViCw/7VdVtKRKL9d6yNiGw1ovebBunWa71Fr6TOLGr5f/In2d
2S78xqdxvXhb07KTxqfbpuewjKnbOPGMa6ls9iiGUPSH0Mx5yLNL3ZXoxF2Q
Uk7F8GzYT+LS0+25RXRBGpbjzHidepIdyijI4KamJL3guaUWMLckFtNdKAHJ
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
vnt4T/f1+FTEL4zQzdp3se7X0q6KlNLQwsDq02V3Cv8o8yoi5z5upTdyqu2q
zhZfN+kbNtYcL603leqKZL/qrirREl75/cIl5p1qL7lOHFR7uvx1gaLtStOt
GqPpUM5BrUqzVHFP8lx1WvpH5nItX/k2a7vmmOK1GJUvN5VpzNVe5bcLbtX4
VPxSeDFvt3GvarnmnVwunpYfbLqtGWZ8oW2Va7OGif5Iva7qlq0QXZVhsubx
72fBstIyMNm7s0YKHqoNyiOSl2qT4ov4hkGoXSTvUO2RxWYeNY02LFe+yntr
3Kv5rk1VnZBYZ20VSbgpHGTK8rjklJak45Rz1EekqzGJmMTYhAhHJB3pGkpA
nUERw31ii2JHIdzw/tiKqCByF1GD1tGdaS8ILYkbGA2kuHhqXAFuOcmaOBjt
RujETUa9jPOj3sVlx35GCyMradbUMJwyaX8CgXqeGESwjunAPsegEJKQrpCn
/lbBN4M2+E/BLcVeivbBJMSOjZ6AdkQvR+XEzkUfiUqnEknc2Ark4ujUMFwQ
Omilb1ukOeJigHtUfNSJEGzUwugXIbOQTKRnBBu7DFMRlY5dgbke/TRSF3ks
5Dx+W2wp4iYvlstnuIcuD/6yY9dCzcJir1yP656r3GZPHeZ+fsItz4jp1W7t
bh+mjpy01HZS/+7em/a3gl2QT7R4w/9qevq6alAPinpzbg9IsascEJdum0FN
jmkTNN4sV5T65jfmdOy5VRNWYTDmGlapc/cgqoNKntbtrswoOtM4tRZXMjLX
z3BLidVuULRK3PcEVXYUdpn66erkkoLrpkAtsXnfnseV+bkK420NVuoiPp2B
K7TJDdTHGkfqF6t+MQp1GxWjq3zLfs8fVYEvnp9bV/Q9b6EJoUYrL0vQig8S
L+Fa4wbdEkWjnqodIR8lShDsSr2eMZK3jZWnWqBwFU/MForvZ6gEr9KbOHYZ
x1OVyQIxWnCIm6XoLw3kT8qZqL8kF5oP5XxSPytRFIQaTTUnyrn57TkLdfel
rXQn+mzSeywPg44YiI/GnY404sZjJyIEUZuiLgX9gYiKQgblEobiS6JFBCvC
7uj71FbK77HV1JEUEUZBLiacQC+ibaV6EhyoyeS9sdfIBCICdY96gnwRc5dq
QxmPo6FSUXvCm7ArsG3Rt4jnCS7oAhKW0BTTQMwmTI/ph5Ij+4f7RpyJUAff
3h0f4OwrjjoePSgcGbeZchN3CduCDUbdRIfHyKKqiGPwjci7ETsjEwN37Wrb
NcfHLfJVRP/gBIQL4nrIK+IJwowYJnE1YTFqP/oIenPUARKVOAjzHjUFNTHy
MVVAeoB6x01nLYtzCHQI2OWzfdpdj18mXZ7k7XrB5dk0mWeCa+nUyR5/TPro
sm7CsN64dBukwvVgALCzfOPifxE9T1Wy+4sxYfGwsN7OLmX9+/XWqxV1tMqh
ufv25FYwC2buKaxaV4oscDCL9Psqv5dMyD/fdK12VLlt4+za6LKS6gFld3KH
SW4L8NzYGnq5uagb8n9mrc4cp9uk6GqtaZpTP6JcX/TcFKdIzOongOW+069T
vShcnifOKTfV6QaqcuoUlSXF68vuFeaZWLmrjdu0Z/QizQjpRP1FtTh7dNGT
3Ad6e0VgdlzmnIy4tGWsm/JdUkRmazZSvIFfxv+eGpGiyyRknGRTVStkqZm/
mtwNyarVWa8yPTPOpXawDybK+SLeJtbtzAkCJYclccu8nBacYcM7nHQz/FRo
jP/2efPnzpl+29Nj+jFX1pzNc254zlpuvXyWd82GxA3Hln/aMmrL6bU+MU1I
adg20gO8R8wBmj4uAG+mKahbcP5QvJqOLGQNS15Kf0xroK7EXyc3EK7FHiee
IgTGjMDlYkZHbadgye+xK8NkYQ8DaiNvRp4KqiM9ItigPcinicJYB+yj2KVR
z8hyYk5sWewrNBnxLnIcwiekAj0P3Ra5MfYoWo64SCaRXLAA4xG7JvoA+TPx
bqwj8kRUS9iNiHERQ4NqUStQD8ILieMJN1B5pI+EeHQd6lekfWQyega6M8IK
14RtQI6K4SNLwzjpOZw5dAxNG3cIQ55JmrnIXeia5ZY/wcX9kftvk7omm9yG
uKTOPDqrxv2lLaL/8F7hRQAk5A8t3vC/gp5ZUGfYeJh178k9O7JrVITje7FO
9JQ9d69z9bjCj8376mmVxcWH8j4Y6gsWmEt1FXuYVa7Fd2qmlHsUBdWvrgTF
v0kZkmaBlf6LEpf9Om+4SaG9qH4kny4JaYyt/1B5pPZpeUPBMCNPWy7bmNOi
uSndYRimHagwFs7IXa/bU19TObH4fN5i0zutr9ZGOUpMNI7QceUzasdUSosQ
JqauTBEneyEZK8TI52ejBbtFFMEKbkJSfcJnCkOM5J9iC0279QKZNvdZTolq
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
v5MExE8xNvH+tHv4fOowSjRuEyGUMAH9ETE6akdYDX4W/gqaS3Ah0GOd8K9x
mTHL44uoeNy1yPpIVsjBiLsR34JcGK7x24gGDp11LfEk/S2ti1ge647ehNiM
+Q1tRFSRHuPPoedQjpIuYwOjnKKvhI8OXBVU5ifHjsUuRcbg23FvkV6hNSHl
uw9Rx5CzcfdoGdQYfBNFS1qJ2YS6Ed0v4hD6A3ptlDehE1eDqowPJuUgY9O3
cNfQH2z8uuGPlTfHt0z4ONppEnfy1bExE6dMPjRmxLj3LmHOAngxfFWv8CaC
yVD8ZPGG/xF6zp4tbCDsc29OzrDg4WHD9mePyfLk0Q5takHWD657Xl5c4Fcc
mbtB/2szrz6tSll41vxae7RxX21ReUNpQeF943ntF2VK9nXdF9V26fAslPBs
qq56epmkoLXYP//3nOyCRaa9Gn3uVX2MEik6k3GKgylYbJSo3xZ9yLUynFCd
kT0WXSpamn9Mn13yOR+ZE5UjVjdLc4oT8gIMizIf8t9y0tBYZFf4asXtrEJB
bN23qvVlJZmO6T4pS5gX4znE3xSvsinCRUWc3AZdoljGH5oK2HrmIJomUUMP
J43JOim6lLqJo2VtpA9FrIzUBuzyWeJjvX7YkplLuufedFdPs5uSM95vwhDn
L6PUY0JGdm8n7Frs+4qUQ9XHPU76mvKFNYN/SOApGJr9ObtbUpd4hoGltCsP
SD34ir32dYSyDYXt5nbDJdkjyXWBU+YlvjX3HYNBb6F8wXBib0a/R02PcY88
TvqDOApTQp8eTybkR/2GeBDyPup4lDB0CK4VA5Bt+GA8QH8k0Qg1Mdtpu6hd
OBesGHMWuQFTgB6F8Bdi0leyg1KKmMnxSxHLEb+GrEW+jHYJayatIWxFrycP
J92J3Ua9Q16JGxTwNaDZ7+I2Z5+2zYmYktiwqBcxehQx4hqqOjogfCMtkdqP
cJ1pzfCiUIl0PBK9AHU9emj4aiqXTMROIj3ALUf6yreK93DPMCbRunAJ8zLn
zZte6L5nWu6kyrGDXMY7F41d79LuxBwaa0/p3QGeDiSA9ndrvf8YDITMDnBg
LFhob0dWuvLOyrwl2Krg0qc5V/a77T1Q86pouZmovVx3s2JBsXue0ZCl+l7X
WWlX+nLfqT1PKxebVuny5L7FTXmMnLYMx7SKlKxCtlmt21bfv+p4yb4yq8Il
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
uXAuMkZhOqBWOnzKuqlZk4NWlq3ULBbs2LkdvmHsjjvbl284EzQocOiOmeF+
YRMCjsf1p0zE/WH4orkri1askA4RF68hrbyxcOIyzsINng/m0Wd7THRakDr9
8Wiz76VV/aZMZCRGDVrcSC1C3luB+H/svWVQXdu27zuJEycBAiRAQhKChCAB
gru7O5MJTHd3d3fmZOIOISHu7u7uyYq7rrjd3LPydp1X5+5z7vu096tav1Gj
qlX/OOrfRmut9zFaY9/AzM/UY8aDX2dV/6rTNLnv6uKrJflj4Fcah6oXwcZD
lcAfCCpiE3g5JhuzEnaFeYAxQowTuvPx9M35S9OdQo9k70oE+LwrupyVG/mt
7nNNatkFRBLiI3ga6BzoSGVdIxesB66ARcMrG9vLPMtLihbV5Nburdzf8KWh
orYaHYzCQbCM8bRruFjuC5aSfJk7lj1C/abkyh4LjSIzt4dWQZ1FXIt+BifC
3tfXEGpwPcjJMBPkRm0o6SqhH7my9mqNfQUekgVuq+mi0Ign0VaKLzkT+676
SfXHCt8CUEFLjgTpjpjZeL1+Vj2k5gCiGrauvoi5jSbHr2N8pw7jBHQ9JRb/
gcmm7SWeFRq54YzjqDuwifXrhCTuFqor7Cv0Ieii3yO/NQsDZglc5sxc7rl0
3oTZbY5gJ47DX8pp+uWF3L/3Zf4/o/n15pL8tjePFY2LHDdMROMPQzN33NxI
HVnf+77rRJv9mu5h737quu0rywZ2tb1r/mm8sZ+yK2rr+77Qrhu2vJ6D7djm
4tYKC1C/tOm91l9OGG7qR3WF9zt36qx7Vmwe3Npjb3yqfaJ8MyDrndqZ1Xqt
6YVu7cCnrnstn03tWry8ZHBXD7itaiRy+eW+18tDe71bH7DmU7ajC2HfGmuB
rxZ8W/DEI2zOKHe4M8TnwaIeT1aSIbE9cnG+Z15O6vJE+4RV4ZeTNyWlRCVW
Y6urignQ2ZDJIPvUSwmyZV1ZluTipa1B3n6P5nSFXFg0yvFPbHjN10iqJUYY
XcZV/6AdyBcRquvI8d9IAdDUlOua2bziMk3TPOmiWr/2meot9Z22ZmV4YwKH
TJibd6xWUNwbtjOjOpHq3x/xNXTtgqlxuohPCy6mtyXy/B6UT8/1CpZU1+WT
g7HF/hndgcOFzlkrosGV5gp5Ebp0dtmlAlxFfOWH4vb8xHx4tr4gpXBSzrTi
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
q4PyJhdhw3XNNGtlf6rKFL7MbvoksReZp4pROnGnmSeUHV1pfm9aq3+oGaO9
p5BL74mbCaRQGjxC+jRVmTo90Q9ORe5LhmZszpidUsp35q9PY2E+7CY1gBsk
e/gfyNP4Baif7rLqvGya9ol6k7wjJkNCJfXEXbQrOJlIwwKki1I9UjbFLg+d
GPpu9hkyGVcI9tpD9Eboa85JFZIUnPdSnRXtu/ZD9V18GnsZmZ58IdQv/FLI
EpG7eI1Aox+qe63k5T3MGW7l5c9w+NgfFZTmf8vZUHyoOLroxNrHa9iV68rC
7JA0r3ZJ3ideg2kjJ01OEhxKmjGLAB9lnprHVj0qpDUzTlkO2bdG1t0t759/
PEkYJ4w4ic4D63lMntHWV3tIUcpOxfT5X+3fjLP2O+18s95xNfn8x+PrNmes
7716ZMXFkpb5P7BZ8CjJeXk9pYLuLygpWmL3kx0nB0BzTCN0y2X9ia3IaUkZ
25quRL4Uf8mn7PE5Myz31W41WRWHiq4pPzKz8YvZX80DtZi1hylapUUPSPpn
QEwZ+pU/whyuj5Q9o8rwZhIOY+GiLDAzOsMlMUnQW1CcOhbsK76afkx8RgCk
xCLR0tFp0yZ3njTEK2SAbeD4PmcH5bn79FN1T+u1qpsnEAWkN/lMB6Az0PGf
5MH/+vw1drVx6uD0rcnyohuvx8GubSyHjRbllNXDl3ar6Zy32j7S8rLgh2Ny
jka5RTaQUtAB1EzsjJpVaBgjO5MpQrV2TxtqfK4frT0lt3It2W+YTLNK1V22
kDlM9sRKFDfkY5mLirmKy3QsN5StwgPVN1We8ltwFBwr/oI/xL5KOwofCVbz
8njSTCj5HtYFL4U/SMZITmTliL4K92eqpb2ku4R1yFMIFV+h3Mj+cBXMQHPF
m7U61W6uBukGBYtWIi+gx8KFyGcQ5S9PnZRCxz1Pe5syJS41E88ojt+prVYN
Je4X388p4hyrLy3KMzXPLE9cMPt18KNZn32ZcE141tyOsAhJgVbLzytWKd4a
wk1vjDcdAfk1+f5rtCu7LBt3fNuhLjub7R23sbwwb9P4JYUa33U9F9ssJ3am
bFxQPe2S5dT9hvLtNRvOLuOVPMqrsS3Q9lX5M491e5Q36Z7593J8jQX4avij
8Iy5Wr9YMWX9p5Vpi/vvTN20cfWJ5e8XP16oLV9b/Cvfou+pfi/Lg7qJ36RH
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
j2LD8FWyvewT/LTCKNtD4sphsj/JA7JZXEvsnWGKtpRuyDloKmfyVv+xhFdc
duXNufEHq65+Pmc/2P7U0kNnt3zaWbz59fJRi6jqF6XxpS8KRbl7VUmKr+xy
5jI1Hz2rzFUMpYYRW9FCyS7mKf4aPOXYkn3L2Lko2lFg2l18Pv+OVVa80lFh
u2Oeovsud7FJTDZNauHcPBerm2286bjqpzKQjUf6OOqtI3VB2essQu1Y8wfd
ZXmhnq8yM51LW+U3t03N22U/YMBzhlit2vlFLRyLrTXYENQI/oFdgVxEJwvz
cl4YB+ep7Txjvbwn/QMeXEw4dJZqWkE8Ap+AetG55BBBYYY5tpZ+j9eIQ1WT
ZGux88xTbLPouXAl73TcNhHMn5BwL+FJ7IO5H4cdHT7H/UOPx71Suz5x+aP9
k6ZNYaIbfWH279j3X8pfrf1vZ8llNlmEbVza7my9dXJvv4rx/eLmxVVHZKY2
S/uesJ6L515SHQzlelLTg33eGNHaQn5SIX+werUyUWZh1tJ98VOsN52I+RFl
qBMYlfWJl5fuhX5HLZCc9CFD8aeZcl50+gTyPR4IT0O/IvegG+KPkgd8VzBA
Mp2vQAchq8RCJA9GJNeQQUgXSUsUg78In9L1pD98mp3IeqES/Bc6Q1KhfiQP
oiep3ZTZtEQ+h1PhStUdxUe6mqoifOFc9RllAfvY7mNdo7+QM9Pey4gvm7zo
6oI/5euZLlh7ZCAUk5ldvrrYZA9YHVR/dUF1gS37iWYV71u6Nn45LzJ9Vfwi
zAgvFUZQm8iR0DcWo2G4peODXab/WOIo3Gp3s6j1D+VLc6ptVm2LbJ1ljOZN
7gR7nW603cWcqZxQ/MNhtqXmiuxdTU/sZ81TdTWGjZqT3Gj2JfkUPqa4y97B
/Cw99W0Ug2hXfKB0Qsnc/AhbG22CegXrS0/Bhknu5+2xdtSf0vVV13IS1Bl0
5bOO9Y2/okXB8lwPywN4GwgKltgjTeNUwfah5mNqGvGXrssUwkZwueA5MgMs
zDpj0eqLZXvBd+KPvHPEMqSZcCK+A77Na5hfHgXMEU6Om/zGq2efPv3DeqV0
vN2Zc41wmuZ0u6n3uzSOyB2A3xHwv5K/NPhXTMwFHICmyX61+9Sez7odm1sR
cmrWFogHXRXlcqvYiRSuqVKXK+ZbMkwqwwUNo8qX+VGXyB7wL/UjdbV8EPoO
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
                    "], {{0, 150}, {150, 0}}, {0, 65535}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Bit16", ColorSpace -> ColorProfileData[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIj
UNAApJaBycDRxcmVCagqN6+kKMjdSSEiMkqB/TwDGwMzAxgkJhcXOAYE+IDY
efl5qQyoAGjUt2sgkoHhsi7ILAbSAFdyQVEJkP4DxEYpqcXJQCMNgOzs8pIC
oDjjHCBbJCkbzN4AYheFBDkD2UeAbL50CPsKiJ0EYT8BsYuAngCyv4DUp4PZ
TBxgcyBsGRC7JLUCZC+Dc35BZVFmekaJgqGlpaWCY0p+UqpCcGVxSWpusYJn
XnJ+UUF+UWJJagpQLcR9YCAIUQgKMQ2gRgtNEv1NEIDiAcL6HAgOX0axMwgx
BEguLSqDMhmZjAnzEWbMkWBg8F/KwMDyByFm0svAsECHgYF/KkJMzZCBQUCf
gWHfHACHPFyJ
                    "], "RGB", "XYZ"], Interleaving -> True], Selectable -> 
                    False], DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {150, 150}, 
                    PlotRange -> {{0, 150}, {0, 150}}], Annotation[#, 
                    Association[
                    "URL" -> 
                    "http://www.wolframcdn.com/waimage/hset040/8c2/\
8c22842a18d8452d55845e59d29eef25_v001s.jpg", "Dimensions" -> {150, 150}, 
                    "Source" -> 
                    "http://periodictable.com/Items/095.1/index.html", 
                    "Popup" -> 
                    "hset040/8c2/8c22842a18d8452d55845e59d29eef25_v001ms.jpg"]\
, "Image"]& ], 
                    TagBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
IfACPBojhTzmQE015bosiVno6jNYO0KIvm31YZBtkj4N43glFuSuWLUtujD/
00H1lggPlwlxYOCqI+QH/hEFdI4c0jeMtEw9+puhYt0AdaWeM6K8MI0Z6W98
qI1PshPC10jklYWzSBNymNLPQ0PPlVb79Emsp5oeE17WfawJSX/ul9awo+J6
yubVuCcbMNuMzB+H1Y7OMb4RAWzh18VX1fs8MOmeEYtgQ3ST2IVCiqei/2NB
0t0Wc9FDDjbJgZXky0ZrJUoq5hSojkF53IChvBlpnA4hi84ez+b8F5IcJoOX
VO7OVr26BChTsz+jWui6LuzOcDuYRVytjKgy4IL66ST9HuTAPbywEMt+wXVU
1VLKEe4LPC3ggi6TBjvNG2chnGn8TrRTqVcI+XUm3rSp86kyAjMx38ojDH3x
Er/K/Jin2pzhwlzKxq+XRStx734W5JoimkVSKDCrI4bJVwbpGRu2Es8nqL9i
8QH7nFpwkwXnE4Ot7I8FxK/HWReepKUkEx5gWq+lshj6W1z0iJ/hLr8qvcVm
Y46mHZQ5JYtqNZXeLabO0lQSrvIInOGfMGXOqjvhgXLcKPTSutFFMmvHSCSG
LFFV/7aKC52t/KMK79Kv8MWnbhWcMXWLDNN/4/s89hehr6maXAjvSW56voyx
s60T62XfEfer1swbhkzPd6JPHmcw89fUlPGsA8vCs2yfqhs91MvC78bxzyjg
J1pRMmy26TGm/fdTYPDeZgdD+m86W8bGI5tfILsWoBvYHPJrCsnDzPP5KMO3
tiXCLJVpj/PdLF7La7juM3KHXjZf1lXGaFaBj9KeOsXW8Y34Wd5mNmrF/MTH
Mjs2ip25kokpzHbcJEk+Q5gugqTgIUnSMZbHYtXZEEKUbDhxxgSSU2AA8XjQ
NmUjhj7jw1YEwnksnG+iQ/O0IHlXcu1DmDMwrxKkquRNiiQVo1mUlrIIW5CO
d1GDvLwA5XG7WIg9IXUx6LQWtcPgUI/1xwUq5Uu+jIquSMUNIxncygrhF/Ga
kMWq6wrLZ3gt8V26ulf3iTiYnixHtS+HiqR3zmOy8pRjoq+/WDlyfswi/rPx
V0tPdBR+Zq/jtO+wLRFZ4vfCbnSSZukLcFk4KwTnivJMT7s6iKvFm/IxrdEd
VETdnq9m5TEdLxMWCZBO9UgluFVP4u/Yvnw9bCY/W5HPSmFpj/Hrv0LmMBsx
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
HZst30sV0CZDdEcwZlsmB84UiEEWO8+qoQi7InQPnZcgP5a/P6TaCO4BYDgo
tyG9PcdXxzQP3xr9ukxcNO2TRMyLec1aHediM2yVUVKv7IuBivcKEt/nx1D+
cf8GuVeZwwxEMPVhlYWB2MlihB7aPdEkF4rsuEiHl2HKXPxQey3j87ye4bIu
GGOcTTZDj0SyP06qcyPi8GI00sHZbxv5gGb1HIrfyo78hyuDQthKZg7pkizy
SFuFeoI/Mqf72xhRUwgxMyxGd/p7R9rK/SgqC4IOtVlNvhCdhPvife2ugmTV
TVpETx7h4QpYKzqEnpgU8dB0iCSilnsWJjtjDQKasWfJs9oclRvVDwN8dX2U
s9Fv4iicVCJJRkfTSJOIJVDQ88fmurIRdfgcFqxbX/QnxOERfqL+6a82baxl
qhSJWZaFOgkVncd02SjsvKcrjN3eWwYDJrmeJLctJ6WhZxUKZcsxc3GyUKbP
zEpm3fU5mDdzu+8CrqZ29LRHDtnKYSjn/Ey2YJ+jnaE6DJGbjH50NWUKgdUK
HbrqGpGGieEPCbcMwjY2EjXYHN4NU7ikf1HDoEzr18dR3PkULjUNCS8E9+C0
FRO5gNn6WmJw9n6BN9MYhXdj79qHwWCMFr1aLDVT4yX0YRwuqJYofNUgQOER
UAbVZ9/E+vGqqkXiIf/tIOG7qnKeWBwV7HP1T+BzHEBd7ZpFRTcGdVfU34nG
D5ejkdhBktAD59Wdu0KYnP5jvRxoZ3h5kppzelh87GJhG6+MK5ZO+pcw0Frf
XJgfMO+zLuMx2vWmZDdLaHY3mXRJnNCEt8edjAPeg4xHrbHUxjfiGK5DAzae
KtTt5YyXGQYeHHkQ8K+JXkNW5ezHZ0hTdXzQIWi7C4k/iJsxS2gr3MRRtomt
QRWhKSNN5l1nLIpdMSNtXfFzTBfLQKzzbTKfRLznhuFjlHUl6mPRyTVDH43X
nHEGC8pHn7J1QXrGGe8KLM2uHtOejciq7xuEnGSfuzZi0lt7h7ILxVv7p7H7
2eWim7JuUenm2Vjjnkm2eLX7MDHIqfRcj01XNdJsHsxLyg+poyoZF4qZ2hhU
DYu5fUx/Ru3IBgQ5LMWol9Lw0DnQUA3rbWNlFxqpJ0q0cFXUJ6B07CRHJwzx
JpCH+CY7HuLAhLA5kL+mAMeb1PgZUZXfAP7spJ4W9jUbLkzFt3iFpO1tdi/0
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
40e63YjX96ZuH+20kfLeG5sYcR5fR3b2bMGTnr3GAuhv2iGZ0E6eIHDcEj5i
Eh6o+7kesl1QTrhVYvYKcRuT8Qv7kXr7ofA26ZBX1feIf6NfJ05Sy7Zob9Ue
QR5uSYzEPNQjndiWdKdBixz5YxLUUfahUkhjpxsrFEjkN4RY2yQtpR7ZVTcQ
tir376VD2E1y5Ukq6arINieVc2bi81i3vTTuRZ+wjsLp2OvOARgkjdAYnWEw
4TQdWb4Ykodc3oUVJ7ydRD0zSt2xUE/1JTNUjJoYFhXNNJ/eELJBdWFhF+nu
IWF7BRQysVf4k5jLuHhAS7ERqgk+FcCo4WtAftJzQSl8i2UKsUhmGTx4WotJ
rUk46cPmS7/FRsYIq60P5SeGjVZgr0QxpJOGX8bmCp3Rg6xuMJLapu42ylLf
6F2G/H2BPK53qBe2YSQV+HPior5TPR2rz30zK81eI/E1HtmwWZvdr8Rvq75p
wxjfd72ePjOg+M7hs9+/X7dI6+ubpEodEi43L+3wl31+QbuEC4nelj/aF9nK
p5jZQ2tG1Gc4ZvzRYYFR7CGYsMA2jRqQGXM+8nn0z5LiijNzVqOYt9hbMVs8
z6C5vqsUlIp1QvtQPzynuyVGwSWlCKXwlPyqYMQ98yadEZ8ax0kS1tnP6rdj
D9/BB3Blr6OyQmxDcIU18M678sTPwZzfEArLLp4sdBPTH+ncKuweq40aglHa
gqfZIUrZKjcWY/G90IhF4YirgHEA+kfdsC3BCscokxt1HNMNEfgoooHVhk9N
SxVNKA7jSRgimHgKWedoLqK18awooperkzERU3UThHgcFg5SqfdIHn3EuRk0
TrXRKaT75wtDZRPfZR2S1tWo05Uyfya+zk+IhTTl6SWOe/Qkn0iVnwN0m9fQ
78R0sZy5JtYa7sdtYKeZYLyjXTWq78hjePR02n8HXTI9p3sKhdJtXh9rm/Sp
qwvcKYJnP8aVGBf7PS8b18M5WOvnaWhB7Q3sRy2ICvS9DFnDIE+GRzsL2orM
b2djoun+oC7xSSnWM+wJLugXaCmxJI1OHKYHx2E6prAKCKdYZhRakbeei2A8
dgz1XnD2soXY3niLNONNflpLsapnLj16PuoY0gFFGeNltRSTinJyMJva46Dy
lVig/Niz9ajEIrEfzzI/XZ9CdYsifZOPbxULnIqZ2pgQJ7NkfTYKGEaTGW4c
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
RJ88nZpiwqHZI8iELFVLXjVwqhrxe0M/fSxPB0vFM7FXc1h7G/uDGo9O8vNg
lybRYdBNdAbzUgOdgXunBXEd988q/ksqFbIpA8EBteGHwAwi9iLpWlF9iDiQ
C5aKGax/f95EH2dLmQhpVYg/FcqlK13rktZt7mPJOv5/15zJntK9wXCn1FQT
+MF6VQMuDcfIRtgNucHvS4VBf9N9ISCrc5H8T9hjmyNJgqNeT9RyQuObp2GQ
0228vDt46D1FX2BAhRTstud6TIa7UVviMqF1zS6t+lOFDWIWtNE/baRaU98s
aPP08NsQdZOJ2wZ4BjXYtX6GOSC9Z5nVHJ+5a/VJa1bjJ9tn2Q5m7dlC2I4X
NS+vGzS+UfJymw/DDVf/TV2GPNKlZT108yCeFWEc/M7MMeggmPXX+0ISw2q8
IJo6jhkpj4nDmviJfql1c8UqGwNgD8M1xEFHpit+6oljSZvZ8h0eqwoF2qMK
srqvgCXKVPvgFtVSVhu20vsVJ4ja1HvlWNyamvgXRxg2NmQlnIbvD/Xx2ddg
zvZwmyTnxZ7pbmfzbx4bG7y0rejMrdBD2Y/2v/H4kbFqS6RJ2uzBgc6etbJ5
B3K88tNrbx5umZ04fvEuTU79H2uWGXvnZh3I9rC1TDlSK7B29eJ+e8WHvWRp
E6i8kJtdXnGvBue0biCqIbmFEee8vIVuIkzUXNKNgDq6Z2ofuGpaok7HzN+D
E1cxrjS0ha7ggNfETPpg5QRCGyqUSIdlmlrS8ZglGrGd6WIPlydDO1MjSR6s
kM0X3IQZumCRAB65P5JFwlPLWKkGetjyMT/fY2sjkMBb+3JJIdT166QdD7T/
G10uHPT/YMhHNyK/OkdQ7aqtNU9EweExjgbkrQhPx31itJdAVQQn3HZJZmHb
fly2AG64Rci7QWpgmLo7KgzXWD6j9X7+xvaoiddDrO9f/AjtekiKqmZfTNQN
2WAYjxKDgwwP0PTwRNNBItAvXD+CkNslyplonNUh3QCfbJtlo6DcapfHIof9
H0UNxLPfUayDrU5KvgTeWKeKJsFuWSCnFvyD7uIeOMNtTQWBmCpD9aC5+gO3
FP6W6Li/sgaGM4lkOmxgHhBCCHRaxC1gt00ofQU/88t/+oh+oK446eDfiYbL
DLeE0+GxJJqjgBbiahjBc7QhilRoo53hXUw9UBTyomGSvpWgFcRpB/ECwGn0
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
Q9XXUVaI5LV84XgpnKP9l9P8cJg0Zw2fviutco7CqhqIIorN/+ocZZRnCVW5
Tcjn8XXbxK3tOez8ap0X8T1Li29s+DNgTvTpAXHSmxl7Bu6WLy2O+/qNQJ47
qMwPBdmG5EHoEdktrA7+0Dh0NIYV6TR+ZkjW0dxbJHlLE0ey0CojOC3i5Dyq
b+9RRguSpKolOCG6qgEuMd+IW8OfP0sezqbxRtPPz+I1olE3mxkikKOrYKss
FOd4F7jKWaVvxb8z99kF0m44z86UiRDD1uC0uMPKpUZsYc9I1fjInBErcYgd
LA2GiC9WJYDHD1cX4iPbzEizgfiW9yJGyKaH32K6KC5HdcXosFF9txrf1DXv
80s4VSE8NDBJUTZvz7NwUXn5oUVhg1qlnZwTuaFcedgRVL3105OC6NVdRl2Y
Gn+iQ7cztROeNB10Zmvc1qSC4X/pC/07p69i8vyVcUKmjvtV4APS2PqD+wWu
OHKc99Hc3sHcCodNqRoTnmljVVswWnNVcY680Y7gXqKmfZsmHdctMl0SXhhO
yOxYqlXLgjBIFy1PRSPzTuUWXFIq6BVYLSnnK1Eimi8IRVd5tESOJYquMge2
aTYrlJiudikZTFbNU7lQouissiNWXqxsiS6iIdJ6eMoMpGi9KIlT5VLOPWRo
D6uiqdpKcT2UtnyWOyovwu/6edSlXpHuopLrmQISCU4ZlmvlGOSVGjLQz7/A
0Akvg05am5MNQTAvxrGQUaZQ7Ioa5KCs52ij9SI9fKQtnFSETLGkkgSPR3uG
WRk+2LCLHR2cpdlFDMHjK+ewR7qNLbEn8jfjefSOi7BGkhfRIouNLEzwWnsz
f8TbLPswPfRHzTqcYIu/zEfgMjb7r0dO5j6/r/Ai5Fe1H87Z6nNB1Ms4BNGY
xp/9X2YuUJzyrtM/DSo/gQ8l9mRuFLL9jqhS4YsoNsjZVQHbNGn4LnC2xoV5
rnxVNHZK7vKC8EQUxdOgtmA+87m1qKo14FTU7RHkU5R/ZsYO7F1hOXq7IsrT
eY9MnfPvMzYZ5+uCWtLBfv8+Y1ejFKPo62HsIMmogIfoqFZeQBk1G8upfo7D
N1VjByq3WIyB81PLJ9kJohvMntCy/kc0P9bevueE72bJnfUb3PNTTJOmql7n
/DNsLfc+z9xlOL9G/k91tpF5Gcak+aAOzmBBf2UryoABqiVqFgNkBpUMSYow
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
Iooooogiiij+O/FvrzUrZg==
                    "], {{0, 150}, {150, 0}}, {0, 65535}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Bit16", ColorSpace -> ColorProfileData[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIj
UNAApJaBycDRxcmVCagqN6+kKMjdSSEiMkqB/TwDGwMzAxgkJhcXOAYE+IDY
efl5qQyoAGjUt2sgkoHhsi7ILAbSAFdyQVEJkP4DxEYpqcXJQCMNgOzs8pIC
oDjjHCBbJCkbzN4AYheFBDkD2UeAbL50CPsKiJ0EYT8BsYuAngCyv4DUp4PZ
TBxgcyBsGRC7JLUCZC+Dc35BZVFmekaJgqGlpaWCY0p+UqpCcGVxSWpusYJn
XnJ+UUF+UWJJagpQLcR9YCAIUQgKMQ2gRgtNEv1NEIDiAcL6HAgOX0axMwgx
BEguLSqDMhmZjAnzEWbMkWBg8F/KwMDyByFm0svAsECHgYF/KkJMzZCBQUCf
gWHfHACHPFyJ
                    "], "RGB", "XYZ"], Interleaving -> True], Selectable -> 
                    False], DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {150, 150}, 
                    PlotRange -> {{0, 150}, {0, 150}}], Annotation[#, 
                    Association[
                    "URL" -> 
                    "http://www.wolframcdn.com/waimage/hset040/922/\
92213acea55f65a67d9a53c14e94112c_v001s.jpg", "Dimensions" -> {150, 150}, 
                    "Source" -> 
                    "http://periodictable.com/Items/085.4/index.html", 
                    "Popup" -> 
                    "hset040/922/92213acea55f65a67d9a53c14e94112c_v001ms.jpg"]\
, "Image"]& ]}}, GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}, 
                    "ItemsIndexed" -> {{1, 1} -> {Center, Baseline}, {1, 
                    2} -> {Center, Baseline}, {1, 3} -> {Center, Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxBackground -> {
                    "Columns" -> {{None}}, "Rows" -> {None, None}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> "Image:ElementData__More"}, {}]}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Basic elemental properties", "scanner" -> "Data", "id" -> 
     "Elemental2:ElementData", "position" -> "500", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"ElementData"}], "\n  "}], 
       XMLElement["datasources", {}, {"\n   ", 
         XMLElement["datasource", {}, {"WebElements"}], "\n   ", 
         XMLElement["datasource", {}, {"NISTAtomicWeights"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   TagBox["\"atomic symbol\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox["\"all\"", {FontColor -> GrayLevel[0.5], 
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], 
                 StyleBox[
                  RowBox[{
                    StyleBox[
                    "\"Ac\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    "\"Am\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    "\"At\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    "\"Bh\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    "\"Bk\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    "\"Cf\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    "\"Cm\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    "\"Cn\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    "\"Db\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    "\"Ds\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    "\"Es\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    "\"Fl\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    "\"Fm\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    "\"Fr\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    "\"Hs\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    "\"Lr\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    "\"Lv\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    "\"Mc\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    "\"Md\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    "\"Mt\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    "\"Nh\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    "\"No\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    "\"Np\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    "\"Og\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    "\"Pa\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    "\"Pm\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    "\"Po\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    "\"Pu\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    "\"Ra\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    "\"Rf\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    "\"Rg\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    "\"Rn\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    "\"Sg\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    "\"Tc\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    "\"Th\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    "\"Ts\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    "\"U\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], LinebreakAdjustments -> {1, 10, 0, 0, 100}, 
                  LineIndent -> 0]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"atomic number\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox["\"median\"", {FontColor -> GrayLevel[0.5], 
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], 
                 TagBox["100", #& ]}, {"\[SpanFromAbove]", 
                 StyleBox["\"highest\"", {FontColor -> GrayLevel[0.5], 
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], 
                 StyleBox[
                  TemplateBox[{
                    TagBox["118", #& ], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TagBox[
                    TagBox["\"oganesson\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Oganesson"}]], Identity], 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                "\[SpanFromAbove]", 
                 StyleBox["\"lowest\"", {FontColor -> GrayLevel[0.5], 
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], 
                 StyleBox[
                  TemplateBox[{
                    TagBox["43", #& ], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TagBox[
                    TagBox["\"technetium\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Technetium"}]], Identity], 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                "\[SpanFromAbove]", 
                 StyleBox["\"distribution\"", {FontColor -> GrayLevel[0.5], 
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], 
                 GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.644], 
                    GrayLevel[0.6]]], 
                    Hue[0.67, 0.6, 0.6], 
                    Opacity[0.15]], {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.644], 
                    GrayLevel[0.6]]], 
                    Hue[0.67, 0.6, 0.6], 
                    Opacity[0.15]], {{{
                    
                    RectangleBox[{40., 0}, {50., 1.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{60., 0}, {70., 1.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{80., 0}, {90., 6.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{90., 0}, {100., 10.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{100., 0}, {110., 10.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{110., 0}, {120., 9.}, "RoundingRadius" -> 
                    0]}}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}}}, AspectRatio -> 
                  0.6180339887498948, Axes -> {True, False}, 
                  AxesLabel -> {None, None}, AxesOrigin -> {38.4, 0}, 
                  AxesStyle -> Directive[
                    GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1], BaseStyle -> {FontFamily -> "Roboto"}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1], 
                  FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                  GridLinesStyle -> Directive[{
                    AbsoluteThickness[1.01], 
                    RGBColor[1, 0.7, 0.4]}], ImageSize -> 70, LabelStyle -> 
                  Directive[FontFamily -> "Times"], 
                  PlotRange -> {{40., 120.}, {All, All}}, 
                  PlotRangePadding -> {{0, 
                    Scaled[0.01]}, {0, 
                    Scaled[0.1]}}, Ticks -> {None, None}]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"atomic mass\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox["\"median\"", {FontColor -> GrayLevel[0.5], 
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["257", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "257", "SRString" -> "257"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"u\"", FontFamily -> "Roboto", FontSize -> Smaller]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False]}, {
                "\[SpanFromAbove]", 
                 StyleBox["\"highest\"", {FontColor -> GrayLevel[0.5], 
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], 
                 StyleBox[
                  TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["294", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "294", "SRString" -> "294"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"u\"", FontFamily -> "Roboto", FontSize -> Smaller]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TagBox[
                    TagBox["\"oganesson\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Oganesson"}]], Identity], 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                "\[SpanFromAbove]", 
                 StyleBox["\"lowest\"", {FontColor -> GrayLevel[0.5], 
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], 
                 StyleBox[
                  TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["98", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "98", "SRString" -> "98"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"u\"", FontFamily -> "Roboto", FontSize -> Smaller]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TagBox[
                    TagBox["\"technetium\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Technetium"}]], Identity], 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                "\[SpanFromAbove]", 
                 StyleBox["\"distribution\"", {FontColor -> GrayLevel[0.5], 
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], 
                 GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.637], 
                    GrayLevel[0.6]]], 
                    Hue[0.67, 0.6, 0.6], 
                    Opacity[0.15]], {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.637], 
                    GrayLevel[0.6]]], 
                    Hue[0.67, 0.6, 0.6], 
                    Opacity[0.15]], {{{
                    RectangleBox[{75., 0}, {100., 1.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{125., 0}, {150., 1.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{200., 0}, {225., 4.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{225., 0}, {250., 10.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{250., 0}, {275., 11.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{275., 0}, {300., 10.}, "RoundingRadius" -> 
                    0]}}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}}}, AspectRatio -> 
                  0.6180339887498948, Axes -> {True, False}, 
                  AxesLabel -> {None, None}, AxesOrigin -> {70.5, 0}, 
                  AxesStyle -> Directive[
                    GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1], BaseStyle -> {FontFamily -> "Roboto"}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1], 
                  FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                  GridLinesStyle -> Directive[{
                    AbsoluteThickness[1.01], 
                    RGBColor[1, 0.7, 0.4]}], ImageSize -> 70, LabelStyle -> 
                  Directive[FontFamily -> "Times"], 
                  PlotRange -> {{75., 300.}, {All, All}}, 
                  PlotRangePadding -> {{0, 
                    Scaled[0.01]}, {0, 
                    Scaled[0.1]}}, Ticks -> {None, None}]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"half\[Hyphen]life\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox["\"median\"", {FontColor -> GrayLevel[0.5], 
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["13", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "13", "SRString" -> "13"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"h\"", FontFamily -> "Roboto", FontSize -> Smaller]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False]}, {
                "\[SpanFromAbove]", 
                 StyleBox["\"highest\"", {FontColor -> GrayLevel[0.5], 
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], 
                 StyleBox[
                  TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["14.06", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "14.06", "SRString" -> "14.06"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"Gyr\"", FontFamily -> "Roboto", FontSize -> Smaller]}],
                     Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TagBox[
                    TagBox["\"thorium\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Thorium"}]], Identity], 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                "\[SpanFromAbove]", 
                 StyleBox["\"lowest\"", {FontColor -> GrayLevel[0.5], 
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], 
                 StyleBox[
                  TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["5", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "5", "SRString" -> "5"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"ms\"", FontFamily -> "Roboto", FontSize -> Smaller]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TagBox[
                    TagBox["\"oganesson\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Oganesson"}]], Identity], 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                "\[SpanFromAbove]", 
                 StyleBox["\"distribution\"", {FontColor -> GrayLevel[0.5], 
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], 
                 GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.637], 
                    GrayLevel[0.6]]], 
                    Hue[0.67, 0.6, 0.6], 
                    Opacity[0.15]], {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.637], 
                    GrayLevel[0.6]]], 
                    Hue[0.67, 0.6, 0.6], 
                    Opacity[0.15]], {{{
                    
                    RectangleBox[{0., 0}, {5.*^16, 35.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{1.*^17, 0}, {1.5*^17, 1.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{4.*^17, 0}, {4.5*^17, 1.}, "RoundingRadius" -> 
                    0]}}}}, {}, {}}}, {{}, {}, {}}}, AspectRatio -> 
                  0.6180339887498948, Axes -> {True, False}, 
                  AxesLabel -> {None, None}, AxesOrigin -> {-9.*^15, 0}, 
                  AxesStyle -> Directive[
                    GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1], BaseStyle -> {FontFamily -> "Roboto"}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1], 
                  FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                  GridLinesStyle -> Directive[{
                    AbsoluteThickness[1.01], 
                    RGBColor[1, 0.7, 0.4]}], ImageSize -> 70, LabelStyle -> 
                  Directive[FontFamily -> "Times"], 
                  PlotRange -> {{0., 4.5*^17}, {All, All}}, 
                  PlotRangePadding -> {{0, 
                    Scaled[0.01]}, {0, 
                    Scaled[0.1]}}, Ticks -> {None, None}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> "Elemental2:ElementData__More"}, {}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement["units", {"count" -> "4"}, {
           XMLElement["unit", {"short" -> "Gyr", "long" -> "gigayears"}, {}], 
           XMLElement["unit", {"short" -> "h", "long" -> "hours"}, {}], 
           XMLElement[
           "unit", {"short" -> "ms", "long" -> "milliseconds"}, {}], 
           XMLElement[
           "unit", {
            "short" -> "u", "long" -> "unified atomic mass units"}, {}], 
           XMLElement[
           "img", {"src" -> 
             "https://www6b3.wolframalpha.com/Calculate/MSP/\
MSP438146c0496g0f7cgi000000gi55cehb7e9i4ic?MSPStoreType=image/gif&s=11", 
             "width" -> "192", "height" -> "93", "ImportedData" -> 
             Image[CompressedData["
1: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
w1IrTBBE+vI/4SQ9vQ==
               "], "Byte", ColorSpace -> "RGB", ImageSize -> Automatic, 
               Interleaving -> True, Magnification -> 1]}, {}]}]}]}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Thermodynamic properties", "scanner" -> "Data", "id" -> 
     "Thermodynamics:ElementData", "position" -> "600", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"ElementData"}], "\n  "}], 
       XMLElement["datasources", {}, {"\n   ", 
         XMLElement["datasource", {}, {"WebElements"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    PaneBox[
                    TagBox["\"phase at STP\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox["\"all\"", {FontColor -> GrayLevel[0.5], 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{
                    FormBox[
                    TagBox[
                    TagBox["\"gas\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {"MatterPhase", "Gas"}]], Identity], 
                    TraditionalForm], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    FormBox[
                    TagBox[
                    TagBox["\"solid\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {"MatterPhase", "Solid"}]], Identity], 
                    TraditionalForm]}], 
                    LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                    0]}, {
                    TagBox[
                    PaneBox[
                    TagBox["\"melting point\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox["\"median\"", {FontColor -> GrayLevel[0.5], 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["1050", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1050", "SRString" -> "1050"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Degree]C\"", FontFamily -> "Roboto", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {"\[SpanFromAbove]", 
                    StyleBox["\"highest\"", {FontColor -> GrayLevel[0.5], 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["2157", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "2157", "SRString" -> "2157"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Degree]C\"", FontFamily -> "Roboto", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TagBox[
                    TagBox["\"technetium\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Technetium"}]], Identity], 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                    "\[SpanFromAbove]", 
                    StyleBox["\"lowest\"", {FontColor -> GrayLevel[0.5], 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    TagBox["71", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "71", "SRString" -> "71"]]}], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Degree]C\"", FontFamily -> "Roboto", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TagBox[
                    TagBox["\"radon\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Radon"}]], Identity], 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                    "\[SpanFromAbove]", 
                    StyleBox["\"distribution\"", {FontColor -> GrayLevel[0.5], 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.63], 
                    GrayLevel[0.6]]], 
                    Hue[0.67, 0.6, 0.6], 
                    Opacity[0.15]], {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.63], 
                    GrayLevel[0.6]]], 
                    Hue[0.67, 0.6, 0.6], 
                    Opacity[0.15]], {{{
                    
                    RectangleBox[{-250., 0}, {0., 1.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{250., 0}, {500., 2.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{500., 0}, {750., 3.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{750., 0}, {1000., 4.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{1000., 0}, {1250., 5.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{1250., 0}, {1500., 1.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{1500., 0}, {1750., 3.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{1750., 0}, {2000., 1.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{2000., 0}, {2250., 1.}, "RoundingRadius" -> 
                    0]}}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}}}, 
                    AspectRatio -> 0.6180339887498948, Axes -> {True, False}, 
                    AxesLabel -> {None, None}, AxesOrigin -> {-300., 0}, 
                    AxesStyle -> Directive[
                    GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1], BaseStyle -> {FontFamily -> "Roboto"}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1], 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[{
                    AbsoluteThickness[1.01], 
                    RGBColor[1, 0.7, 0.4]}], ImageSize -> 70, LabelStyle -> 
                    Directive[FontFamily -> "Times"], 
                    PlotRange -> {{-250., 2250.}, {All, All}}, 
                    PlotRangePadding -> {{0, 
                    Scaled[0.01]}, {0, 
                    Scaled[0.1]}}, Ticks -> {None, None}]}, {
                    TagBox[
                    PaneBox[
                    TagBox["\"boiling point\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox["\"median\"", {FontColor -> GrayLevel[0.5], 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["3200", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "3200", "SRString" -> "3200"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Degree]C\"", FontFamily -> "Roboto", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {"\[SpanFromAbove]", 
                    StyleBox["\"highest\"", {FontColor -> GrayLevel[0.5], 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["4820", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "4820", "SRString" -> "4820"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Degree]C\"", FontFamily -> "Roboto", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TagBox[
                    TagBox["\"thorium\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Thorium"}]], Identity], 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                    "\[SpanFromAbove]", 
                    StyleBox["\"lowest\"", {FontColor -> GrayLevel[0.5], 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    TagBox["61.7", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "61.7", "SRString" -> "61.7"]]}], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Degree]C\"", FontFamily -> "Roboto", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TagBox[
                    TagBox["\"radon\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Radon"}]], Identity], 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                    "\[SpanFromAbove]", 
                    StyleBox["\"distribution\"", {FontColor -> GrayLevel[0.5], 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6579999999999999], 
                    GrayLevel[0.6]]], 
                    Hue[0.67, 0.6, 0.6], 
                    Opacity[0.15]], {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6579999999999999], 
                    GrayLevel[0.6]]], 
                    Hue[0.67, 0.6, 0.6], 
                    Opacity[0.15]], {{{
                    
                    RectangleBox[{-1000., 0}, {0., 1.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{0., 0}, {1000., 1.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{1000., 0}, {2000., 1.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{2000., 0}, {3000., 1.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{3000., 0}, {4000., 5.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{4000., 0}, {5000., 4.}, "RoundingRadius" -> 
                    0]}}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}}}, AspectRatio -> 
                    0.6180339887498948, Axes -> {True, False}, 
                    AxesLabel -> {None, None}, AxesOrigin -> {-1120., 0}, 
                    AxesStyle -> Directive[
                    GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1], BaseStyle -> {FontFamily -> "Roboto"}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1], 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[{
                    AbsoluteThickness[1.01], 
                    RGBColor[1, 0.7, 0.4]}], ImageSize -> 70, LabelStyle -> 
                    Directive[FontFamily -> "Times"], 
                    PlotRange -> {{-1000., 5000.}, {All, All}}, 
                    PlotRangePadding -> {{0, 
                    Scaled[0.01]}, {0, 
                    Scaled[0.1]}}, Ticks -> {None, None}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Left, Left, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxBackground -> {"Columns" -> {None, None}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False]}, {
                PaneBox[
                 TagBox[
                  Cell[
                   TextData[{
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", 
                    "\"properties at standard conditions\"", "\[NoBreak]", 
                    "\")\""}], TraditionalForm]]], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}]], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 BaseStyle -> {LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> 
         "Thermodynamics:ElementData__More"}, {}]}]}], Typeset`pod7$$ = 
   XMLElement[
   "pod", {"title" -> "Material properties", "scanner" -> "Data", "id" -> 
     "Material:ElementData", "position" -> "700", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"ElementData"}], "\n  "}], 
       XMLElement["datasources", {}, {"\n   ", 
         XMLElement["datasource", {}, {"WebElements"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    PaneBox[
                    TagBox["\"density\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox["\"median\"", {FontColor -> GrayLevel[0.5], 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["13.67", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "13.67", "SRString" -> "13.67"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"g\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", 
                    SuperscriptBox["\"cm\"", "3"]}], FontFamily -> "Roboto", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {"\[SpanFromAbove]", 
                    StyleBox["\"highest\"", {FontColor -> GrayLevel[0.5], 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["41", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "41", "SRString" -> "41"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"g\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", 
                    SuperscriptBox["\"cm\"", "3"]}], FontFamily -> "Roboto", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TagBox[
                    TagBox["\"hassium\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Hassium"}]], Identity], 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                    "\[SpanFromAbove]", 
                    StyleBox["\"lowest\"", {FontColor -> GrayLevel[0.5], 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0.00973", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.00973", "SRString" -> "0.00973"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"g\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", 
                    SuperscriptBox["\"cm\"", "3"]}], FontFamily -> "Roboto", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TagBox[
                    TagBox["\"radon\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Radon"}]], Identity], 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                    "\[SpanFromAbove]", 
                    StyleBox["\"distribution\"", {FontColor -> GrayLevel[0.5], 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.637], 
                    GrayLevel[0.6]]], 
                    Hue[0.67, 0.6, 0.6], 
                    Opacity[0.15]], {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.637], 
                    GrayLevel[0.6]]], 
                    Hue[0.67, 0.6, 0.6], 
                    Opacity[0.15]], {{{
                    
                    RectangleBox[{0., 0}, {5000., 3.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{5000., 0}, {10000., 8.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{10000., 0}, {15000., 11.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{15000., 0}, {20000., 6.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{20000., 0}, {25000., 2.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{25000., 0}, {30000., 2.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{30000., 0}, {35000., 1.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{35000., 0}, {40000., 3.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{40000., 0}, {45000., 1.}, "RoundingRadius" -> 
                    0]}}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}}}, 
                    AspectRatio -> 0.6180339887498948, Axes -> {True, False}, 
                    AxesLabel -> {None, None}, AxesOrigin -> {-900., 0}, 
                    AxesStyle -> Directive[
                    GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1], BaseStyle -> {FontFamily -> "Roboto"}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1], 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[{
                    AbsoluteThickness[1.01], 
                    RGBColor[1, 0.7, 0.4]}], ImageSize -> 70, LabelStyle -> 
                    Directive[FontFamily -> "Times"], 
                    PlotRange -> {{0., 45000.}, {All, All}}, 
                    PlotRangePadding -> {{0, 
                    Scaled[0.01]}, {0, 
                    Scaled[0.1]}}, Ticks -> {None, None}]}, {
                    TagBox[
                    PaneBox[
                    TagBox["\"Young modulus\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox["\"median\"", {FontColor -> GrayLevel[0.5], 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["88", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "88", "SRString" -> "88"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"GPa\"", FontFamily -> "Roboto", FontSize -> Smaller]}],
                     Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False]}, {
                    "\[SpanFromAbove]", 
                    StyleBox["\"highest\"", {FontColor -> GrayLevel[0.5], 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["208", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "208", "SRString" -> "208"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"GPa\"", FontFamily -> "Roboto", FontSize -> Smaller]}],
                     Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TagBox[
                    TagBox["\"uranium\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Uranium"}]], Identity], 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                    "\[SpanFromAbove]", 
                    StyleBox["\"lowest\"", {FontColor -> GrayLevel[0.5], 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["46", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "46", "SRString" -> "46"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"GPa\"", FontFamily -> "Roboto", FontSize -> Smaller]}],
                     Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TagBox[
                    TagBox["\"promethium\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Promethium"}]], Identity], 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                    "\[SpanFromAbove]", 
                    StyleBox["\"distribution\"", {FontColor -> GrayLevel[0.5], 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6649999999999999], 
                    GrayLevel[0.6]]], 
                    Hue[0.67, 0.6, 0.6], 
                    Opacity[0.15]], {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6649999999999999], 
                    GrayLevel[0.6]]], 
                    Hue[0.67, 0.6, 0.6], 
                    Opacity[0.15]], {{{
                    
                    RectangleBox[{0., 0}, {50., 1.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{50., 0}, {100., 2.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{200., 0}, {250., 1.}, "RoundingRadius" -> 
                    0]}}}}, {}, {}}}, {{}, {}, {}}}, AspectRatio -> 
                    0.6180339887498948, Axes -> {True, False}, 
                    AxesLabel -> {None, None}, AxesOrigin -> {-5., 0}, 
                    AxesStyle -> Directive[
                    GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1], BaseStyle -> {FontFamily -> "Roboto"}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1], 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[{
                    AbsoluteThickness[1.01], 
                    RGBColor[1, 0.7, 0.4]}], ImageSize -> 70, LabelStyle -> 
                    Directive[FontFamily -> "Times"], 
                    PlotRange -> {{0., 250.}, {All, All}}, 
                    PlotRangePadding -> {{0, 
                    Scaled[0.01]}, {0, 
                    Scaled[0.1]}}, Ticks -> {None, None}]}, {
                    TagBox[
                    PaneBox[
                    TagBox["\"tensile yield strength\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox["\"median\"", {FontColor -> GrayLevel[0.5], 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["210", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "210", "SRString" -> "210"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"MPa\"", FontFamily -> "Roboto", FontSize -> Smaller]}],
                     Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False]}, {
                    "\[SpanFromAbove]", 
                    StyleBox["\"highest\"", {FontColor -> GrayLevel[0.5], 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["1.29", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.29", "SRString" -> "1.29"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"GPa\"", FontFamily -> "Roboto", FontSize -> Smaller]}],
                     Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TagBox[
                    TagBox["\"technetium\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Technetium"}]], Identity], 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                    "\[SpanFromAbove]", 
                    StyleBox["\"lowest\"", {FontColor -> GrayLevel[0.5], 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["70", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "70", "SRString" -> "70"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"MPa\"", FontFamily -> "Roboto", FontSize -> Smaller]}],
                     Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TagBox[
                    TagBox["\"promethium\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Promethium"}]], Identity], 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                    TagBox[
                    PaneBox[
                    TagBox["\"sound speed\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox["\"median\"", {FontColor -> GrayLevel[0.5], 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["2490", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "2490", "SRString" -> "2490"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"m\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}], FontFamily -> "Roboto", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {"\[SpanFromAbove]", 
                    StyleBox["\"highest\"", {FontColor -> GrayLevel[0.5], 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["3155", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "3155", "SRString" -> "3155"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"m\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}], FontFamily -> "Roboto", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TagBox[
                    TagBox["\"uranium\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Uranium"}]], Identity], 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                    "\[SpanFromAbove]", 
                    StyleBox["\"lowest\"", {FontColor -> GrayLevel[0.5], 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["2260", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "2260", "SRString" -> "2260"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"m\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}], FontFamily -> "Roboto", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TagBox[
                    TagBox["\"plutonium\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Plutonium"}]], Identity], 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                    TagBox[
                    PaneBox[
                    TagBox["\"thermal expansion\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox["\"median\"", {FontColor -> GrayLevel[0.5], 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    RowBox[{"1.1", 
                    StyleBox["\[Times]", 
                    GrayLevel[0.5]], 
                    SuperscriptBox["10", "-5"]}], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> RowBox[{"1.1", "\[Times]", 
                    SuperscriptBox["10", "-5"]}], "SRString" -> 
                    "1.1 times 10 to the negative 5"], SyntaxForm -> 
                    CenterDot], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    SuperscriptBox["\"K\"", 
                    RowBox[{"-", "1"}]], FontFamily -> "Roboto", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {"\[SpanFromAbove]", 
                    StyleBox["\"highest\"", {FontColor -> GrayLevel[0.5], 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    RowBox[{"1.39", 
                    StyleBox["\[Times]", 
                    GrayLevel[0.5]], 
                    SuperscriptBox["10", "-5"]}], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> RowBox[{"1.39", "\[Times]", 
                    SuperscriptBox["10", "-5"]}], "SRString" -> 
                    "1.39 times 10 to the negative 5"], SyntaxForm -> 
                    CenterDot], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    SuperscriptBox["\"K\"", 
                    RowBox[{"-", "1"}]], FontFamily -> "Roboto", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TagBox[
                    TagBox["\"uranium\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Uranium"}]], Identity], 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                    "\[SpanFromAbove]", 
                    StyleBox["\"lowest\"", {FontColor -> GrayLevel[0.5], 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    RowBox[{"1.1", 
                    StyleBox["\[Times]", 
                    GrayLevel[0.5]], 
                    SuperscriptBox["10", "-5"]}], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> RowBox[{"1.1", "\[Times]", 
                    SuperscriptBox["10", "-5"]}], "SRString" -> 
                    "1.1 times 10 to the negative 5"], SyntaxForm -> 
                    CenterDot], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    SuperscriptBox["\"K\"", 
                    RowBox[{"-", "1"}]], FontFamily -> "Roboto", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TagBox[
                    TagBox["\"promethium\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Promethium"}]], Identity], 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                    TagBox[
                    PaneBox[
                    TagBox["\"thermal conductivity\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox["\"median\"", {FontColor -> GrayLevel[0.5], 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["12", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "12", "SRString" -> "12"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"W\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", 
                    
                    RowBox[{"\"(\"", "\[InvisibleSpace]", "\"m\"", 
                    "\[InvisibleSpace]", "\"\[ThinSpace]\"", 
                    "\[InvisibleSpace]", "\"K\"", "\[InvisibleSpace]", 
                    "\")\""}]}], FontFamily -> "Roboto", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {"\[SpanFromAbove]", 
                    StyleBox["\"highest\"", {FontColor -> GrayLevel[0.5], 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["54", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "54", "SRString" -> "54"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"W\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", 
                    
                    RowBox[{"\"(\"", "\[InvisibleSpace]", "\"m\"", 
                    "\[InvisibleSpace]", "\"\[ThinSpace]\"", 
                    "\[InvisibleSpace]", "\"K\"", "\[InvisibleSpace]", 
                    "\")\""}]}], FontFamily -> "Roboto", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TagBox[
                    TagBox["\"thorium\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Thorium"}]], Identity], 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                    "\[SpanFromAbove]", 
                    StyleBox["\"lowest\"", {FontColor -> GrayLevel[0.5], 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0.00361", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.00361", "SRString" -> "0.00361"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"W\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", 
                    
                    RowBox[{"\"(\"", "\[InvisibleSpace]", "\"m\"", 
                    "\[InvisibleSpace]", "\"\[ThinSpace]\"", 
                    "\[InvisibleSpace]", "\"K\"", "\[InvisibleSpace]", 
                    "\")\""}]}], FontFamily -> "Roboto", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TagBox[
                    TagBox["\"radon\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Radon"}]], Identity], 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                    "\[SpanFromAbove]", 
                    StyleBox["\"distribution\"", {FontColor -> GrayLevel[0.5], 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6579999999999999], 
                    GrayLevel[0.6]]], 
                    Hue[0.67, 0.6, 0.6], 
                    Opacity[0.15]], {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6579999999999999], 
                    GrayLevel[0.6]]], 
                    Hue[0.67, 0.6, 0.6], 
                    Opacity[0.15]], {{{
                    
                    RectangleBox[{0., 0}, {10., 4.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{10., 0}, {20., 5.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{20., 0}, {30., 1.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{40., 0}, {50., 1.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{50., 0}, {60., 2.}, "RoundingRadius" -> 
                    0]}}}}, {}, {}}}, {{}, {}, {}, {}, {}}}, AspectRatio -> 
                    0.6180339887498948, Axes -> {True, False}, 
                    AxesLabel -> {None, None}, AxesOrigin -> {-1.2, 0}, 
                    AxesStyle -> Directive[
                    GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1], BaseStyle -> {FontFamily -> "Roboto"}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1], 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[{
                    AbsoluteThickness[1.01], 
                    RGBColor[1, 0.7, 0.4]}], ImageSize -> 70, LabelStyle -> 
                    Directive[FontFamily -> "Times"], 
                    PlotRange -> {{0., 60.}, {All, All}}, 
                    PlotRangePadding -> {{0, 
                    Scaled[0.01]}, {0, 
                    Scaled[0.1]}}, Ticks -> {None, None}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Left, Left, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxBackground -> {"Columns" -> {None, None}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False]}, {
                PaneBox[
                 TagBox[
                  Cell[
                   TextData[{
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", 
                    "\"properties at standard conditions\"", "\[NoBreak]", 
                    "\")\""}], TraditionalForm]]], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}]], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 BaseStyle -> {LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> "Material:ElementData__More"}, {}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement["units", {"count" -> "6"}, {
           XMLElement[
           "unit", {
            "short" -> "g/cm^3", "long" -> "grams per cubic centimeter"}, {}], 
           XMLElement[
           "unit", {"short" -> "GPa", "long" -> "gigapascals"}, {}], 
           XMLElement[
           "unit", {
            "short" -> "K^(-1)", "long" -> 
             "reciprocal kelvins difference"}, {}], 
           XMLElement[
           "unit", {"short" -> "MPa", "long" -> "megapascals"}, {}], 
           XMLElement[
           "unit", {"short" -> "m/s", "long" -> "meters per second"}, {}], 
           XMLElement[
           "unit", {
            "short" -> "W/(m K)", "long" -> 
             "watts per meter kelvin difference"}, {}], 
           XMLElement[
           "img", {"src" -> 
             "https://www6b3.wolframalpha.com/Calculate/MSP/\
MSP12962409egf792d4ee16000017e6170a1d0i8963?MSPStoreType=image/gif&s=3", 
             "width" -> "247", "height" -> "139", "ImportedData" -> 
             Image[CompressedData["
1:eJztXWtsVUW7Jt8BYmipJ2kJREsMqSJIgQSoHJCEeOMEq7HyBWsoQW6CSipR
jujHH01MDIZIAkZCoyDaQqnIpVxaChQoYqtVQS7lK7VSGhDBllqgLQUq6zxn
z3Eyrnft2Wux99q7nb5PApm9Zuadd808865Zu/uZGTR74ZR5/+jRo8eiu/Df
lFlvPfrGG7P+9c//xIepry16Zf5rL82d/Nr/vDT/pTf+a/Z/4OIy/LuOf/+X
/jeD0Q1gdSl0OYcZsQWTnGE8mOQM48EkZxgPJjnDeEST5Ddv3pw+fXp8fPwD
Dzxw6NChO7bDJGd4QjRJ/sUXX8yYMaOlpaW4uHjcuHF3bIdJzvCE6C9X/vzz
zy1btjzzzDN3bKHbkhyPQmNaiSaiTPLffvutR48effr0OXr06B0b6Q4k//XX
X7dv365eaW5uRnDwu93otBJlhEPyS5cuHTlyxGstRPLDhw8PGzbszhq1uivJ
fUVeXl5ra2tnMOIHwiH56tWrv/76a/flV6xYMW/evLa2th9++CElJeXOGrVc
kBxT7/PPPy8oKCgqKjp58iQI89VXX23evLmiogJT7JtvvsHbwbp163766Scr
QCdkgVGfffbZgQMHUB5Zubm5Z8+eFdZQHlkYwdOnT6utoCKC3rZt20RFWMZF
lEFdtP7jjz+KMrJptS5aET6gK/Dx/Pnzu3btElklJSV1dXWoCP+FV/v374fx
P/7448svv3SsrrHs6NLWrVvRM2vXrkVbt2/fXrNmTU4AjY2NspWQ3WIzqxpx
3w/RgUuSY532wgsvxMfHP/HEEwMHDhQXZ86ceevWLfRSdnY2ViCDBw8GHzZt
2oSXykGDBvXr12/p0qVpaWlxcXELFixA+WvXrj377LMoef/996N7w/FZk9vQ
0IBRbmpqQnPoWEFy9Pbly5fhKl57q6urb9y4gZiDUcCMQ64ojyvr168vLS3F
zdbU1GBEYO3ixYsY9OvXr//+++/gMyzIhlARFmAWFVEYwwoj4A8+omkk8KRT
m5YVYQoNgU4oie7CEs6R5CAVSsJDtItblvSj1TWWHV0Cb5HATW3cuFFUl0FY
JbmmW6hZ1YjLfogaXJIc/k+aNAk9gJmYmJiIK6A3SI4ExgJvkVjLIaqjDPp2
woQJuB3Eir59+546dQrdCMJfvXo1gj5rck+cOCGfL1gXCZKrj/7vvvsO5BRh
B34id+fOnSJr9+7dIBgSGCDcMhKYDoioGClEJPBNbUg1C5cOHTp07NixHAVV
VVWOqw48Qb799luRhn30pCPJZUXMyrKyMkk/Wl1jWe/Snj17zpw5YwUhuaZb
qFnViMt+iBpckvzdd99dtWqVSPfv3x//o9vhPxJLliz59NNPZUmQXMRtRFS5
8B45cqQacML3WZMLVuOBItKU5PX19YhFiDBII87bSC4IZimjaQVeIs6dOweb
+fn5tkguzWIuC5Lb1m+Og4tpKKkooCc57vfgwYOSfrS6xrLeJZD8l19+sUKR
nHYLNWv9neRu+iFqcEnyDRs2PPXUUwjX5eXlIpKD2yAMEoiKWISIrDlz5sSc
5FgTwiUMlrpckT1cW1tbWFiImAzeYlEakuQov2/fPnzEDeIpj/AoG6LLFdwy
nmt4OqMYwq9YC9HBRTH055UrV1Bgx44dFy5cwPMdzeGjcF4uV8SiwrZcodU1
lvUuSZJjQYKSmMIuSU7NqkZc9kPU4JLkePBlZmZidf3oo48KkmdlZYmsjo4O
cDshIQGUrqysjDnJgaNHj6KTseDEMsP2rERYxpDhLQmRE66C6vrRxN0hKGE9
iQUq4qTaCiqKJjBZ5IsnfMNYwz4Wsei0YIMLUyAzZo38KhVPRtQSb2eC5Ehg
PsI4ffGk1TWWNS5JkiP+owCGzCXJqVnViPt+iA7cv3jiTjElceMjRoywAiHO
f++cEdJhPGIQQxDJsZyO4OSyIbYDx3APlyRvaWmZPn363Xff/eCDD4bzs5OI
QO8wYi+iIgKv/P7KJzDJuwr4V4gM48EkZxgPJjnDeDDJGcaDSc4wHkxyhvH4
N4PRPRDrqeYNXc5hRmzBJGcYDyY5w3gwyRnGo5uQ3DwFOsM9ugPJO4kCXf2t
LCOacE/y0tLSkSNH9unT5+GHHxYS4BMnTvQIoFevXqNGjaqsrPTZ2f9Hl5uV
AkzyWMElyRsbGwcMGCB+Ur5169YhQ4ZYAZI/8sgjVkBSgVApfmceBYR02KbW
V9lly3IU79s0+LSM5STht8nkaS3VjWA7ADD8gEuSFxYWTps2TX4U9JAk7+jo
KC4uHjp0aEtLC4olJCSkpKR42q3Cq8+aXKrWV4VjtixH8b5N1EbLUAk/lcnT
WtINzQ4ADD/gkuQ5OTlvvvkmEu+8845YooAwcrnSs2fP1NTUgwcP1tbWYojF
sE6dOtU/nzW5VK2vSoBtWZaTeN+mwadlqITfUUFvqyXd0OwAwPADLkmOmPb8
88/LjwjUguQikkvg4uTJk+Pi4sD89PT0yLsbgN5hqtaX7KJZjuJ9mwaflrGI
hJ/K5GktdbkSbAcAhh9wSfLm5ub+/ftjjBClwY2kpCSMGiX5qlWrMjMzsYDH
QjRWJKdqfckumuUo3rctV2gZKuGnMnlaS7qh2QGA4Qfcf7tSUVExZsyY3r17
33fffR9//LGlvHhK1NXVDR8+PD4+PiMjY+zYsb547F2tr4ZQW5ajeN+mwadl
HCX8Npk8rSXd0OwAwPADRn5PrlHrhxTyszzZPJhHco1a342Qn0luHswjOYNh
A5OcYTyY5AzjwSRnGA8mOcN4MMkZxkMnb2YwDEKsp5o3dDmHGbEFk5xhPJjk
DOMRQZLfvn17//79WVlZb7/9dkQMBgOTnOEJESR5VVXVpEmT5s+fv3DhwogY
DAYmOcMTIr5cyc/P73Ik70IbVkTK1S50y+GDSe7rhhVUoe/mV47BdP3huyr0
UKqdurq63NzcwsJCW9okuCS5qo9YvHjx3LlzrcAJnv/9FxYtWiRyuxzJfUVk
SR4+pLJVYseOHdXV1eJ8RjVtErySfPny5RkZGR0dHVZgJ4rrf0FquGJOcrBI
nIZZUVGBj6dPn8ZkVH9Abts7Qj250rYZhc0U2s3Ly4Op8vJywQRP21BI9wTJ
a2pq0JxYNticlLX27dsnjpJE98Ls5cuXpatbt24tKipau3ZtSUmJUIlqtrkQ
eqiCggLcnaoH3LNnj9BZo4Capi7pe9XRH1vnOI5FdOCJ5OjAiRMngtKakp2B
5OhG8AFd3dTUhM5vbW29du0aEpcuXaJ7R6gkt6k7VVMNDQ3IbWxsbGtrA0sx
gp62oVDdQ/X6+npQTkj1qZOy1tmzZ/fu3WsFZkRZWZnqKvgszmveuHEjmtZs
cyE8F8pW3JdtIxosTqRCSqapS/pepf7QzqG1IseIEHBP8qSkpMTExOzs7Ch4
pUdIksv1wLFjx3IUVFVV0b0jVObYNqNQryC+SaU/KFpcXOxpGwrVPXFUsTwu
nDopa+HRgMKwjDCLio6uIuvMmTOabS4wdsG2L7CCkJy6pO9V6g/tHFpLM4iR
hXuSJycnY1zGjx+PqRoFxzTwRHLbHkd07whH5ojNKNQrx48fF09qK0DynTt3
et2GQrqHoIcFDyyLeEudVGshgGPFgj63HXxPjw4Pts0FWI3mRNo9yW0u6XuV
+kM7h9aKGryuyXE7KSkp4ID/rgWFe5LjSY01IZ6MCCZYSCDE0b0j9MsVaQrX
xXIFT2RUxJB52oaCuoe165EjRxydVGuJyC9CsYbkmm0u4DPWmY57dFhBSE5d
0vcq9Yd2Dq3lfeTvEHfw7QpeylJTU0W8ignck1wUFsuD0tJSsaKw7R2hMse2
GYXNFGgPU8hFRBIvnu63oaDutbe3gwZiaWpz0lYLFBXFNCTXb3MhXzzhmBuS
U5f0ver4ZLF1juNYRAf82xUJ1umbCia5BJPcVDDJGcaDSc4wHkxyhvFgkjOM
B5OcYTyY5AzjQYT7DIaZiPVU84Yu5zAjtmCSM4wHk5xhPJjkDOPBJGcYDyZ5
bOGfZpkh4ZLk4vDlw4cPyytLlizp37+/zAJ69eo1atSoyspKH90NgEnO8AT3
JE9KSsrKyhIfb968OWTIkIEDB1qKnuLWrVtbtmwZMWKErw5bLkQTmzdv3r59
uxDdnzx5ct26dbm5uWfPnhUFqGb8yJEj+FhQUFBUVITyVHRPhfy0jOWkl/ck
59fI7RnhwD3JJ0+eDAI3NjbiI8Zl4cKF9957r6WQvKOjo7i4eOjQoS0tLdOm
TUtISEhJSfFD1heS5GBRU1NTa2vr+vXrS0tLMSVramrAfMtJh97Q0CDKS3UY
Fd1TZRwtQ/XynuT8Grk9I0y4J/ljjz22fPnyZcuW4ePjjz8OMtiWKz179kxN
TT148GBtbS3GVIzj1KlT/fBZkwtC7ty5U6R3795dV1eHBJxBhLSclObwX85E
ufeOTXRPhfy0DNXLe5Lza+T2jDDhnuQTJkxAuEMwRywC4dvb2yXJbYePIzYi
7MfFxYH56enpfvisyVVJXlJSQklue7iA1bYdG6jongr5aRmL6OW9yvmDye0Z
YcI9yQWTZ82alZaWJh6swUi+atWqzMxMLGyw8uxsJKeacfgp994RyxUquqfL
FVqG6uU9yfk1cntGmPBK8srKygEDBmCVqyE5eDV8+PD4+PiMjIyxY8f64bMm
V09yy0kzLsTsQqqPBQwV3VMhPy3jqJd3L+fXy+0Z4YC/J7cCqwhETkRyrIrl
ngwqWOPcpcEkRwgtKytD/NRsRMkk79JgkjOMB5OcYTyY5AzjwSRnGA8mOcN4
MMkZxkOjbmYwTEKsp5o3dDmHGbEFk5xhPJjkDOPBJGcYDyY5w3gwybsD6Gnj
3QoRIfmlS5fEaX3RQcRJnpeX19raGlmbnQpM8vA5s3r16mieQ6p32Ktaf82a
NUJxKTTa+jPlgwnqqZw/pCkJapPuJ0DPqUcnoArKlJeXi9MY6en28mRDOMYk
D1ls06ZN48aNGzRoUL9+/ZYuXZqWlhYXF7dgwQKRO3PmzFu3bjU3Nz/55JN3
3XXX6NGja2trffVZk+tVrW8pkVx/prxGUE/1cXpTsiK1SStS1X9DQ4M4Obet
rQ3TGQSmp9uLMkLWB5eY5CGLoW8nTJiAAUKs6Nu376lTp9CNIPzVq1dBb5Ac
ZZA1bNiwXbt2ffLJJxgUX33W5HpV61sKyfWnxmsE9VTOrzclQW3SilT1jxAt
xdf19fXFxcX0dPsTJ07YBNpe+9kYuCe5iNuID2CyuDhy5EhQvaysDGNhBTYX
WrZsGeZCcnKy2LTBP581uV7V+tbfSa45Nd4KLqincv6QpoLZpBWp6v/48eNy
zQOS437pmchgNVYy4gqTPEySL1myBP1sBXYc+vDDDxHbV65cOX/+fF991uR6
VevjIp47uA6C6U+N1wjq6XJFb0rCUeNvq0hV/2hILFewOMEVzAtKcuTiltVd
CCLS+V0R4ZNc7h2HXk1PT8da/aGHHvL1y5ZwSG45qfURJ/ERt0ZzVfJoBPVU
zq83JeFok3pIz6nHPEIZNIfq4sWTnm4vXzyxhmSSh2PB13dMR3TC78lZ6dyZ
wX8MigiY5J0ZTHKG8WCSM4wHk5xhPJjkDOPBJGcYDyY5w3gEUTYzGKYh1lPN
G7qcw4zYgknOMB5McobxYJIzjAeTnCFw8+bNqNWKMpjkxsDNj8SCnXLe3Ny8
ZcsW920JFYZaq66uLjc3t7Cw0JbuDHBJ8ldffXXDhg1IXLlypU+fPlevXkU6
JyfnrbfeshS1/rVr10pKSkJaUw+MW7x48dy5c62AVE0ccOnGZzfF3EDV6Xc2
zb5Xf8IhuVdQqdGOHTuqq6vFD+nVdGeAS5IXFBS88sorVuCI1X79+m3btg3p
GTNmFBUVWYpaf9GiRVIUr4Ek+fLlyzMyMjo6OqzA79Jff/11lz5rcg8cOCB+
4o5W9u7di0RLSwtmKD3XXtXp2zT7EVfl+7qHgGxCkLympgZOioWEraIk+b59
+0Qv3bhxA31y+fJlcd1R9S9hk/9La3v27BHeooCaDuk5zaWt050K6G4GIQnj
huQXL14cMWIEEnPmzPnoo49efvllpAcPHozAbv2l1sctT5kyxQol7bf+Ijko
NHHixOvXr8vrTz/9NIy48VmT+/PPPwuF6a5du/Lz88FDXMEcpOfaW0EiuR+q
fP/2EFCbAMnr6+tBQnF3tKKkJSaXiADwoaysTF6nqn9pn8r/1ecCFieysEzr
PXfMtbVOdypw7KuQhHH59B86dCjaGj16NAIveAsmjBkzxgrol4VaHy1+8MEH
llbaL0yB5ElJSYmJidnZ2WoT7733Hoy48VmTi/7BKIPMGHFw+/z58+C8CJi2
c+2tICT3Q5Xv3x4CahNCNHfhwgVxhVaUtMTcR2GMHQIvKqokt6n+pX0q/w9J
cr3n+lzROt2pwLGv9HBP8nnz5r3//vuzZ89GOisrC2ksTpCWav2VK1diGlpa
QajsruTkZIzF+PHjMWFlExggPCbc+KwvAH6iK/C4PHfuXHl5OfxB59Bz7a3g
a/KIq/J93UNAXkT/436RJXymFVVaYuCwYkH/o3AwkgutqACV/7shucZzfa5o
ne5U4NhXergnOSb+PffcI96m0f9IC3+kWh+PoRUrVljuSC7W5LiplJQUsEVc
xzSBETc+6wt8//33GG4818BVxGTBLnquvaXo9NW0H6p8//YQUJsQF2FffA9A
K6q0FJFfBGc3JKfy/5Ak13uuzxWt050KHPtKD/ckx3O/d+/eIhLifnv27AkW
WYGoLgpgdffiiy9aXkhuBd4TU1NThVlUV3tV47O+AHpAfBcEYPWLuW85nWtv
/V2nL9N+qPL920NAbUJcbG9vx+2Lxaqtou3bFbQuirkhuUXk/yFJHtJzTa5s
ne5UQPtKj/C/J1fV+s8995z6IukJmJKZmZluSsbwe3IWLHdFRPaPQXhNQPS7
s7oIES73BmGSMzyB/+LJMB5McobxYJIzjAeTnGE8mOQM48EkZxgPR10zg2EY
Yj3PGAwGgxEu/hcF1ziT
               "], "Byte", ColorSpace -> "RGB", ImageSize -> Automatic, 
               Interleaving -> True, Magnification -> 1]}, {}]}]}]}]}], 
   Typeset`pod8$$ = XMLElement[
   "pod", {"title" -> "Electromagnetic properties", "scanner" -> "Data", "id" -> 
     "Electromagnetic:ElementData", "position" -> "800", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"ElementData"}], "\n  "}], 
       XMLElement["datasources", {}, {"\n   ", 
         XMLElement["datasource", {}, {"WebElements"}], "\n   ", 
         XMLElement["datasource", {}, {"MaterialsHandbook"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   TagBox["\"resistivity\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox["\"median\"", {FontColor -> GrayLevel[0.5], 
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], 
                 StyleBox[
                  TagBox[
                   RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    RowBox[{"4.3", 
                    StyleBox["\[Times]", 
                    GrayLevel[0.5]], 
                    SuperscriptBox["10", "-7"]}], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> RowBox[{"4.3", "\[Times]", 
                    SuperscriptBox["10", "-7"]}], "SRString" -> 
                    "4.3 times 10 to the negative 7"], SyntaxForm -> 
                    CenterDot], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{
                    "\"\[CapitalOmega]\"", "\[InvisibleSpace]", 
                    "\"\[ThinSpace]\"", "\[InvisibleSpace]", "\"m\""}], 
                    FontFamily -> "Roboto", FontSize -> Smaller]}], 
                    Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"ohm meters\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {"\[SpanFromAbove]", 
                 StyleBox["\"highest\"", {FontColor -> GrayLevel[0.5], 
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], 
                 StyleBox[
                  TemplateBox[{
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    RowBox[{"1.5", 
                    StyleBox["\[Times]", 
                    GrayLevel[0.5]], 
                    SuperscriptBox["10", "-6"]}], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> RowBox[{"1.5", "\[Times]", 
                    SuperscriptBox["10", "-6"]}], "SRString" -> 
                    "1.5 times 10 to the negative 6"], SyntaxForm -> 
                    CenterDot], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"\[CapitalOmega]\"", "\[InvisibleSpace]", 
                    "\"\[ThinSpace]\"", "\[InvisibleSpace]", "\"m\""}], 
                    FontFamily -> "Roboto", FontSize -> Smaller]}], 
                    Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"ohm meters\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TagBox[
                    TagBox["\"plutonium\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Plutonium"}]], Identity], 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                "\[SpanFromAbove]", 
                 StyleBox["\"lowest\"", {FontColor -> GrayLevel[0.5], 
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], 
                 StyleBox[
                  TemplateBox[{
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    RowBox[{"1.5", 
                    StyleBox["\[Times]", 
                    GrayLevel[0.5]], 
                    SuperscriptBox["10", "-7"]}], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> RowBox[{"1.5", "\[Times]", 
                    SuperscriptBox["10", "-7"]}], "SRString" -> 
                    "1.5 times 10 to the negative 7"], SyntaxForm -> 
                    CenterDot], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"\[CapitalOmega]\"", "\[InvisibleSpace]", 
                    "\"\[ThinSpace]\"", "\[InvisibleSpace]", "\"m\""}], 
                    FontFamily -> "Roboto", FontSize -> Smaller]}], 
                    Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"ohm meters\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TagBox[
                    TagBox["\"thorium\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Thorium"}]], Identity], 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                "\[SpanFromAbove]", 
                 StyleBox["\"distribution\"", {FontColor -> GrayLevel[0.5], 
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], 
                 GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6649999999999999], 
                    GrayLevel[0.6]]], 
                    Hue[0.67, 0.6, 0.6], 
                    Opacity[0.15]], {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6649999999999999], 
                    GrayLevel[0.6]]], 
                    Hue[0.67, 0.6, 0.6], 
                    Opacity[0.15]], {{{
                    
                    RectangleBox[{0., 0}, {2.5*^-7, 3.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{2.5*^-7, 0}, {5.*^-7, 2.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{7.5*^-7, 0}, {1.*^-6, 1.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{1.*^-6, 0}, {1.25*^-6, 2.}, 
                    "RoundingRadius" -> 0]}}}}, {}, {}}}, {{}, {}, {}, {}}}, 
                  AspectRatio -> 0.6180339887498948, Axes -> {True, False}, 
                  AxesLabel -> {None, None}, 
                  AxesOrigin -> {-3.0000000000000004`*^-8, 0}, AxesStyle -> 
                  Directive[
                    GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1], BaseStyle -> {FontFamily -> "Roboto"}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1], 
                  FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                  GridLinesStyle -> Directive[{
                    AbsoluteThickness[1.01], 
                    RGBColor[1, 0.7, 0.4]}], ImageSize -> 70, LabelStyle -> 
                  Directive[FontFamily -> "Times"], 
                  PlotRange -> {{0., 1.5*^-6}, {All, All}}, 
                  PlotRangePadding -> {{0, 
                    Scaled[0.01]}, {0, 
                    Scaled[0.1]}}, Ticks -> {None, None}]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"superconducting point\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox["\"median\"", {FontColor -> GrayLevel[0.5], 
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], 
                 StyleBox[
                  TagBox[
                   RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["1.4", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.4", "SRString" -> "1.4"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"K\"", FontFamily -> "Roboto", FontSize -> Smaller]}], 
                    Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"kelvins\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {"\[SpanFromAbove]", 
                 StyleBox["\"highest\"", {FontColor -> GrayLevel[0.5], 
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], 
                 StyleBox[
                  TemplateBox[{
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["7.8", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "7.8", "SRString" -> "7.8"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"K\"", FontFamily -> "Roboto", FontSize -> Smaller]}], 
                    Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"kelvins\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TagBox[
                    TagBox["\"technetium\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Technetium"}]], Identity], 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                "\[SpanFromAbove]", 
                 StyleBox["\"lowest\"", {FontColor -> GrayLevel[0.5], 
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], 
                 StyleBox[
                  TemplateBox[{
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0.6", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.6", "SRString" -> "0.6"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"K\"", FontFamily -> "Roboto", FontSize -> Smaller]}], 
                    Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"kelvins\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TagBox[
                    TagBox["\"americium\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Americium"}]], Identity], 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> 
         "Electromagnetic:ElementData__More"}, {}]}]}], Typeset`pod9$$ = 
   XMLElement[
   "pod", {"title" -> "Reactivity", "scanner" -> "Data", "id" -> 
     "Chemical:ElementData", "position" -> "900", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"ElementData"}], "\n  "}], 
       XMLElement["datasources", {}, {"\n   ", 
         XMLElement["datasource", {}, {"TheWikimediaFoundationIncWikipedia"}],
          "\n   ", 
         XMLElement["datasource", {}, {"WebElements"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   TagBox["\"valence\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox["\"median\"", {FontColor -> GrayLevel[0.5], 
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], 
                 TagBox["4", #& ]}, {"\[SpanFromAbove]", 
                 StyleBox["\"highest\"", {FontColor -> GrayLevel[0.5], 
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], 
                 StyleBox[
                  TemplateBox[{
                    TagBox["7", #& ], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{
                    TagBox[
                    TagBox["\"astatine\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Astatine"}]], Identity], 
                    "\" and \"", 
                    TagBox[
                    TagBox["\"bohrium\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Bohrium"}]], Identity]}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                "\[SpanFromAbove]", 
                 StyleBox["\"lowest\"", {FontColor -> GrayLevel[0.5], 
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], 
                 StyleBox[
                  TemplateBox[{
                    TagBox["1", #& ], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TagBox[
                    TagBox["\"francium\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Francium"}]], Identity], 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                "\[SpanFromAbove]", 
                 StyleBox["\"distribution\"", {FontColor -> GrayLevel[0.5], 
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], 
                 GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.651], 
                    GrayLevel[0.6]]], 
                    Hue[0.67, 0.6, 0.6], 
                    Opacity[0.15]], {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.651], 
                    GrayLevel[0.6]]], 
                    Hue[0.67, 0.6, 0.6], 
                    Opacity[0.15]], {{{
                    
                    RectangleBox[{1., 0}, {2., 1.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{2., 0}, {3., 1.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{3., 0}, {4., 6.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{4., 0}, {5., 7.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{5., 0}, {6., 2.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{6., 0}, {7., 7.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{7., 0}, {8., 2.}, "RoundingRadius" -> 
                    0]}}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}, {}}}, 
                  AspectRatio -> 0.6180339887498948, Axes -> {True, False}, 
                  AxesLabel -> {None, None}, AxesOrigin -> {0.86, 0}, 
                  AxesStyle -> Directive[
                    GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1], BaseStyle -> {FontFamily -> "Roboto"}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1], 
                  FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                  GridLinesStyle -> Directive[{
                    AbsoluteThickness[1.01], 
                    RGBColor[1, 0.7, 0.4]}], ImageSize -> 70, LabelStyle -> 
                  Directive[FontFamily -> "Times"], 
                  PlotRange -> {{1., 8.}, {All, All}}, 
                  PlotRangePadding -> {{0, 
                    Scaled[0.01]}, {0, 
                    Scaled[0.1]}}, Ticks -> {None, None}]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"electronegativity\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox["\"median\"", {FontColor -> GrayLevel[0.5], 
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["1.3", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.3", "SRString" -> "1.3"]]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False]}, {
                "\[SpanFromAbove]", 
                 StyleBox["\"highest\"", {FontColor -> GrayLevel[0.5], 
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], 
                 StyleBox[
                  TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["2.2", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "2.2", "SRString" -> "2.2"]]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TagBox[
                    TagBox["\"astatine\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Astatine"}]], Identity], 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                "\[SpanFromAbove]", 
                 StyleBox["\"lowest\"", {FontColor -> GrayLevel[0.5], 
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], 
                 StyleBox[
                  TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0.7", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.7", "SRString" -> "0.7"]]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{
                    TagBox[
                    TagBox["\"francium\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Francium"}]], Identity], 
                    "\" and \"", 
                    TagBox[
                    TagBox["\"radium\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Radium"}]], Identity]}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                "\[SpanFromAbove]", 
                 StyleBox["\"distribution\"", {FontColor -> GrayLevel[0.5], 
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], 
                 GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.651], 
                    GrayLevel[0.6]]], 
                    Hue[0.67, 0.6, 0.6], 
                    Opacity[0.15]], {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.651], 
                    GrayLevel[0.6]]], 
                    Hue[0.67, 0.6, 0.6], 
                    Opacity[0.15]], {{{
                    
                    RectangleBox[{0.5, 0}, {0.75, 1.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{0.75, 0}, {1., 1.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{1., 0}, {1.25, 1.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{1.25, 0}, {1.5, 12.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{1.5, 0}, {1.75, 1.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{1.75, 0}, {2., 1.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{2., 0}, {2.25, 2.}, "RoundingRadius" -> 
                    0]}}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}, {}}}, 
                  AspectRatio -> 0.6180339887498948, Axes -> {True, False}, 
                  AxesLabel -> {None, None}, 
                  AxesOrigin -> {0.46499999999999997`, 0}, AxesStyle -> 
                  Directive[
                    GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1], BaseStyle -> {FontFamily -> "Roboto"}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1], 
                  FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                  GridLinesStyle -> Directive[{
                    AbsoluteThickness[1.01], 
                    RGBColor[1, 0.7, 0.4]}], ImageSize -> 70, LabelStyle -> 
                  Directive[FontFamily -> "Times"], 
                  PlotRange -> {{0.5, 2.25}, {All, All}}, 
                  PlotRangePadding -> {{0, 
                    Scaled[0.01]}, {0, 
                    Scaled[0.1]}}, Ticks -> {None, None}]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"electron affinity\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox["\"median\"", {FontColor -> GrayLevel[0.5], 
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], 
                 StyleBox[
                  TagBox[
                   RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["53", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "53", "SRString" -> "53"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{
                    "\"kJ\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"mol\""}], FontFamily -> "Roboto", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"kilojoules per mole\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {"\[SpanFromAbove]", 
                 StyleBox["\"highest\"", {FontColor -> GrayLevel[0.5], 
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], 
                 StyleBox[
                  TemplateBox[{
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["270.1", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "270.1", "SRString" -> "270.1"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"kJ\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"mol\""}], FontFamily -> "Roboto", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"kilojoules per mole\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TagBox[
                    TagBox["\"astatine\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Astatine"}]], Identity], 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                "\[SpanFromAbove]", 
                 StyleBox["\"lowest\"", {FontColor -> GrayLevel[0.5], 
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], 
                 StyleBox[
                  TemplateBox[{
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    RowBox[{
                    TagBox["0", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0", "SRString" -> "0"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"kJ\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"mol\""}], FontFamily -> "Roboto", 
                    FontSize -> Smaller]}], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"kilojoules per mole\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TagBox[
                    TagBox["\"radon\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Radon"}]], Identity], 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                "\[SpanFromAbove]", 
                 StyleBox["\"distribution\"", {FontColor -> GrayLevel[0.5], 
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], 
                 GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6789999999999999], 
                    GrayLevel[0.6]]], 
                    Hue[0.67, 0.6, 0.6], 
                    Opacity[0.15]], {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6789999999999999], 
                    GrayLevel[0.6]]], 
                    Hue[0.67, 0.6, 0.6], 
                    Opacity[0.15]], {{{
                    
                    RectangleBox[{0., 0}, {100., 3.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{100., 0}, {200., 1.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{200., 0}, {300., 1.}, "RoundingRadius" -> 
                    0]}}}}, {}, {}}}, {{}, {}, {}}}, AspectRatio -> 
                  0.6180339887498948, Axes -> {True, False}, 
                  AxesLabel -> {None, None}, AxesOrigin -> {-6., 0}, 
                  AxesStyle -> Directive[
                    GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1], BaseStyle -> {FontFamily -> "Roboto"}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1], 
                  FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                  GridLinesStyle -> Directive[{
                    AbsoluteThickness[1.01], 
                    RGBColor[1, 0.7, 0.4]}], ImageSize -> 70, LabelStyle -> 
                  Directive[FontFamily -> "Times"], 
                  PlotRange -> {{0., 300.}, {All, All}}, 
                  PlotRangePadding -> {{0, 
                    Scaled[0.01]}, {0, 
                    Scaled[0.1]}}, Ticks -> {None, None}]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"first ionization energy\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox["\"median\"", {FontColor -> GrayLevel[0.5], 
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], 
                 StyleBox[
                  TagBox[
                   RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["601", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "601", "SRString" -> "601"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{
                    "\"kJ\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"mol\""}], FontFamily -> "Roboto", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"kilojoules per mole\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {"\[SpanFromAbove]", 
                 StyleBox["\"highest\"", {FontColor -> GrayLevel[0.5], 
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], 
                 StyleBox[
                  TemplateBox[{
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["1037", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1037", "SRString" -> "1037"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"kJ\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"mol\""}], FontFamily -> "Roboto", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"kilojoules per mole\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TagBox[
                    TagBox["\"radon\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Radon"}]], Identity], 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                "\[SpanFromAbove]", 
                 StyleBox["\"lowest\"", {FontColor -> GrayLevel[0.5], 
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], 
                 StyleBox[
                  TemplateBox[{
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["380", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "380", "SRString" -> "380"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"kJ\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"mol\""}], FontFamily -> "Roboto", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"kilojoules per mole\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TagBox[
                    TagBox["\"francium\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Francium"}]], Identity], 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                "\[SpanFromAbove]", 
                 StyleBox["\"distribution\"", {FontColor -> GrayLevel[0.5], 
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], 
                 GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.644], 
                    GrayLevel[0.6]]], 
                    Hue[0.67, 0.6, 0.6], 
                    Opacity[0.15]], {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.644], 
                    GrayLevel[0.6]]], 
                    Hue[0.67, 0.6, 0.6], 
                    Opacity[0.15]], {{{
                    
                    RectangleBox[{300., 0}, {400., 1.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{400., 0}, {500., 1.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{500., 0}, {600., 8.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{600., 0}, {700., 7.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{700., 0}, {800., 1.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{800., 0}, {900., 1.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{900., 0}, {1000., 1.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{1000., 0}, {1100., 1.}, "RoundingRadius" -> 
                    0]}}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}, {}, {}}}, 
                  AspectRatio -> 0.6180339887498948, Axes -> {True, False}, 
                  AxesLabel -> {None, None}, AxesOrigin -> {284., 0}, 
                  AxesStyle -> Directive[
                    GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1], BaseStyle -> {FontFamily -> "Roboto"}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1], 
                  FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                  GridLinesStyle -> Directive[{
                    AbsoluteThickness[1.01], 
                    RGBColor[1, 0.7, 0.4]}], ImageSize -> 70, LabelStyle -> 
                  Directive[FontFamily -> "Times"], 
                  PlotRange -> {{300., 1100.}, {All, All}}, 
                  PlotRangePadding -> {{0, 
                    Scaled[0.01]}, {0, 
                    Scaled[0.1]}}, Ticks -> {None, None}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Show non-metric", "input" -> 
         "Chemical:ElementData__Show non-metric"}, {}]}]}], Typeset`pod10$$ = 
   XMLElement[
   "pod", {"title" -> "Atomic properties", "scanner" -> "Data", "id" -> 
     "Atomic:ElementData", "position" -> "1000", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"ElementData"}], "\n  "}], 
       XMLElement["datasources", {}, {"\n   ", 
         XMLElement["datasource", {}, {"WebElements"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    PaneBox[
                    TagBox["\"term symbol\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox["\"all\"", {FontColor -> GrayLevel[0.5], 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{"\"\"", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], 
                    SubscriptBox["\"S\"", 
                    InterpretationBox[
                    StyleBox[
                    "0", ShowStringCharacters -> True, NumberMarks -> True], 
                    InputForm[0], Editable -> True, AutoDelete -> True]]}, 
                    "RowWithSeparators"], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{"\"\"", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], 
                    SubscriptBox["\"D\"", 
                    InterpretationBox[
                    StyleBox[
                    "3/2", ShowStringCharacters -> True, NumberMarks -> True], 
                    InputForm[
                    Rational[3, 2]], Editable -> True, AutoDelete -> True]]}, 
                    "RowWithSeparators"], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{"\"\"", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], 
                    SubscriptBox["\"F\"", 
                    InterpretationBox[
                    StyleBox[
                    "7/2", ShowStringCharacters -> True, NumberMarks -> True], 
                    InputForm[
                    Rational[7, 2]], Editable -> True, AutoDelete -> True]]}, 
                    "RowWithSeparators"], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{"\"\"", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], 
                    SubscriptBox["\"P\"", 
                    InterpretationBox[
                    StyleBox[
                    "1/2", ShowStringCharacters -> True, NumberMarks -> True], 
                    InputForm[
                    Rational[1, 2]], Editable -> True, AutoDelete -> True]]}, 
                    "RowWithSeparators"], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{"\"\"", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], 
                    SubscriptBox["\"P\"", 
                    InterpretationBox[
                    StyleBox[
                    "3/2", ShowStringCharacters -> True, NumberMarks -> True], 
                    InputForm[
                    Rational[3, 2]], Editable -> True, AutoDelete -> True]]}, 
                    "RowWithSeparators"], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{"\"\"", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], 
                    SubscriptBox["\"S\"", 
                    InterpretationBox[
                    StyleBox[
                    "1/2", ShowStringCharacters -> True, NumberMarks -> True], 
                    InputForm[
                    Rational[1, 2]], Editable -> True, AutoDelete -> True]]}, 
                    "RowWithSeparators"], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{"\"\"", "3"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], 
                    SubscriptBox["\"D\"", 
                    InterpretationBox[
                    StyleBox[
                    "3", ShowStringCharacters -> True, NumberMarks -> True], 
                    InputForm[3], Editable -> True, AutoDelete -> True]]}, 
                    "RowWithSeparators"], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{"\"\"", "3"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], 
                    SubscriptBox["\"F\"", 
                    InterpretationBox[
                    StyleBox[
                    "2", ShowStringCharacters -> True, NumberMarks -> True], 
                    InputForm[2], Editable -> True, AutoDelete -> True]]}, 
                    "RowWithSeparators"], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{"\"\"", "3"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], 
                    SubscriptBox["\"H\"", 
                    InterpretationBox[
                    StyleBox[
                    "6", ShowStringCharacters -> True, NumberMarks -> True], 
                    InputForm[6], Editable -> True, AutoDelete -> True]]}, 
                    "RowWithSeparators"], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{"\"\"", "3"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], 
                    SubscriptBox["\"P\"", 
                    InterpretationBox[
                    StyleBox[
                    "0", ShowStringCharacters -> True, NumberMarks -> True], 
                    InputForm[0], Editable -> True, AutoDelete -> True]]}, 
                    "RowWithSeparators"], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{"\"\"", "3"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], 
                    SubscriptBox["\"P\"", 
                    InterpretationBox[
                    StyleBox[
                    "2", ShowStringCharacters -> True, NumberMarks -> True], 
                    InputForm[2], Editable -> True, AutoDelete -> True]]}, 
                    "RowWithSeparators"], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{"\"\"", "4"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], 
                    SubscriptBox["\"F\"", 
                    InterpretationBox[
                    StyleBox[
                    "3/2", ShowStringCharacters -> True, NumberMarks -> True], 
                    InputForm[
                    Rational[3, 2]], Editable -> True, AutoDelete -> True]]}, 
                    "RowWithSeparators"], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    TemplateBox[{"\"\"", "4"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], 
                    SubscriptBox["\"F\"", 
                    InterpretationBox[
                    StyleBox[
                    "9/2", ShowStringCharacters -> True, NumberMarks -> True], 
                    InputForm[
                    Rational[9, 2]], Editable -> True, AutoDelete -> True]]}, 
                    "RowWithSeparators"], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{"\"\"", "4"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], 
                    SubscriptBox["\"K\"", 
                    InterpretationBox[
                    StyleBox[
                    "11/2", ShowStringCharacters -> True, NumberMarks -> 
                    True], 
                    InputForm[
                    Rational[11, 2]], Editable -> True, AutoDelete -> True]]},
                     "RowWithSeparators"], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{"\"\"", "4"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], 
                    SubscriptBox["\"S\"", 
                    InterpretationBox[
                    StyleBox[
                    "3/2", ShowStringCharacters -> True, NumberMarks -> True], 
                    InputForm[
                    Rational[3, 2]], Editable -> True, AutoDelete -> True]]}, 
                    "RowWithSeparators"], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{"\"\"", "5"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], 
                    SubscriptBox["\"D\"", 
                    InterpretationBox[
                    StyleBox[
                    "0", ShowStringCharacters -> True, NumberMarks -> True], 
                    InputForm[0], Editable -> True, AutoDelete -> True]]}, 
                    "RowWithSeparators"], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{"\"\"", "5"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], 
                    SubscriptBox["\"D\"", 
                    InterpretationBox[
                    StyleBox[
                    "4", ShowStringCharacters -> True, NumberMarks -> True], 
                    InputForm[4], Editable -> True, AutoDelete -> True]]}, 
                    "RowWithSeparators"], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{"\"\"", "5"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], 
                    SubscriptBox["\"I\"", 
                    InterpretationBox[
                    StyleBox[
                    "15/2", ShowStringCharacters -> True, NumberMarks -> 
                    True], 
                    InputForm[
                    Rational[15, 2]], Editable -> True, AutoDelete -> True]]},
                     "RowWithSeparators"], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{"\"\"", "5"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], 
                    SubscriptBox["\"I\"", 
                    InterpretationBox[
                    StyleBox[
                    "8", ShowStringCharacters -> True, NumberMarks -> True], 
                    InputForm[8], Editable -> True, AutoDelete -> True]]}, 
                    "RowWithSeparators"], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{"\"\"", "5"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], 
                    SubscriptBox["\"L\"", 
                    InterpretationBox[
                    StyleBox[
                    "6", ShowStringCharacters -> True, NumberMarks -> True], 
                    InputForm[6], Editable -> True, AutoDelete -> True]]}, 
                    "RowWithSeparators"], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{"\"\"", "6"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], 
                    SubscriptBox["\"H\"", 
                    InterpretationBox[
                    StyleBox[
                    "5/2", ShowStringCharacters -> True, NumberMarks -> True], 
                    InputForm[
                    Rational[5, 2]], Editable -> True, AutoDelete -> True]]}, 
                    "RowWithSeparators"], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{"\"\"", "6"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], 
                    SubscriptBox["\"H\"", 
                    InterpretationBox[
                    StyleBox[
                    "15/2", ShowStringCharacters -> True, NumberMarks -> 
                    True], 
                    InputForm[
                    Rational[15, 2]], Editable -> True, AutoDelete -> True]]},
                     "RowWithSeparators"], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{"\"\"", "6"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], 
                    SubscriptBox["\"L\"", 
                    InterpretationBox[
                    StyleBox[
                    "11/2", ShowStringCharacters -> True, NumberMarks -> 
                    True], 
                    InputForm[
                    Rational[11, 2]], Editable -> True, AutoDelete -> True]]},
                     "RowWithSeparators"], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{"\"\"", "6"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], 
                    SubscriptBox["\"S\"", 
                    InterpretationBox[
                    StyleBox[
                    "5/2", ShowStringCharacters -> True, NumberMarks -> True], 
                    InputForm[
                    Rational[5, 2]], Editable -> True, AutoDelete -> True]]}, 
                    "RowWithSeparators"], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{"\"\"", "7"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], 
                    SubscriptBox["\"F\"", 
                    InterpretationBox[
                    StyleBox[
                    "0", ShowStringCharacters -> True, NumberMarks -> True], 
                    InputForm[0], Editable -> True, AutoDelete -> True]]}, 
                    "RowWithSeparators"], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{"\"\"", "8"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], 
                    SubscriptBox["\"S\"", 
                    InterpretationBox[
                    StyleBox[
                    "7/2", ShowStringCharacters -> True, NumberMarks -> True], 
                    InputForm[
                    Rational[7, 2]], Editable -> True, AutoDelete -> True]]}, 
                    "RowWithSeparators"], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{"\"\"", "9"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], 
                    SubscriptBox["\"D\"", 
                    InterpretationBox[
                    StyleBox[
                    "2", ShowStringCharacters -> True, NumberMarks -> True], 
                    InputForm[2], Editable -> True, AutoDelete -> True]]}, 
                    "RowWithSeparators"]}], 
                    LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                    0]}, {
                    TagBox[
                    PaneBox[
                    TagBox["\"atomic radius\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox["\"median\"", {FontColor -> GrayLevel[0.5], 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["175", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "175", "SRString" -> "175"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"pm\"", FontFamily -> "Roboto", FontSize -> Smaller]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False]}, {
                    "\[SpanFromAbove]", 
                    StyleBox["\"highest\"", {FontColor -> GrayLevel[0.5], 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["215", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "215", "SRString" -> "215"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"pm\"", FontFamily -> "Roboto", FontSize -> Smaller]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TagBox[
                    TagBox["\"radium\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Radium"}]], Identity], 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                    "\[SpanFromAbove]", 
                    StyleBox["\"lowest\"", {FontColor -> GrayLevel[0.5], 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["120", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "120", "SRString" -> "120"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"pm\"", FontFamily -> "Roboto", FontSize -> Smaller]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TagBox[
                    TagBox["\"radon\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Radon"}]], Identity], 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                    "\[SpanFromAbove]", 
                    StyleBox["\"distribution\"", {FontColor -> GrayLevel[0.5], 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6649999999999999], 
                    GrayLevel[0.6]]], 
                    Hue[0.67, 0.6, 0.6], 
                    Opacity[0.15]], {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6649999999999999], 
                    GrayLevel[0.6]]], 
                    Hue[0.67, 0.6, 0.6], 
                    Opacity[0.15]], {{{
                    
                    RectangleBox[{120., 0}, {140., 3.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{160., 0}, {180., 4.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{180., 0}, {200., 5.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{200., 0}, {220., 1.}, "RoundingRadius" -> 
                    0]}}}}, {}, {}}}, {{}, {}, {}, {}}}, AspectRatio -> 
                    0.6180339887498948, Axes -> {True, False}, 
                    AxesLabel -> {None, None}, AxesOrigin -> {118., 0}, 
                    AxesStyle -> Directive[
                    GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1], BaseStyle -> {FontFamily -> "Roboto"}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1], 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[{
                    AbsoluteThickness[1.01], 
                    RGBColor[1, 0.7, 0.4]}], ImageSize -> 70, LabelStyle -> 
                    Directive[FontFamily -> "Times"], 
                    PlotRange -> {{120., 220.}, {All, All}}, 
                    PlotRangePadding -> {{0, 
                    Scaled[0.01]}, {0, 
                    Scaled[0.1]}}, Ticks -> {None, None}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Left, Left, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxBackground -> {"Columns" -> {None, None}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False]}, {
                PaneBox[
                 TagBox[
                  Cell[
                   TextData[{
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", 
                    "\"electronic ground state properties\"", "\[NoBreak]", 
                    "\")\""}], TraditionalForm]]], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}]], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 BaseStyle -> {LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> "Atomic:ElementData__More"}, {}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement["units", {"count" -> "1"}, {
           XMLElement["unit", {"short" -> "pm", "long" -> "picometers"}, {}], 
           XMLElement[
           "img", {"src" -> 
             "https://www6b3.wolframalpha.com/Calculate/MSP/\
MSP29091h762a2ec62e16d300002i5ia3132c1ge72g?MSPStoreType=image/gif&s=10", 
             "width" -> "117", "height" -> "27", "ImportedData" -> 
             Image[CompressedData["
1:eJztlllLG1EUx6V9KYjQF1GoCHlW8EmIIGgf+2rpB1BqQxEsaEvpN/Ar+KAm
7nFHxQUUQVEDUdxXAkkIcV8SRYPr9FcvhMGhcapeNeX+IWHuPWfOuec3Z05i
KfpW8OVVQkJC+Ru+Cgp/vi8rK/z18S2LT6XlX22lxZ8/lH4vthWXWYtes/mO
zw8+f65XlCRLe1o9fcbnksIrVQqvVCm8UqXwSpXCK1Xxgvf8/FzGSWQrLvCG
QqGOjg5Jh5GquMArW/X19ScnJzIiv0C8wWCQXu3q6qqpqRkZGbm6ujo8PGxp
aRHWxcXF2tpau90+NTUVjQYfh8MxMTGBM7e3t7d3d3eL2/HHua6uzufzCf+1
tTWW+E9PT7OsqqqqvNHe3p7RSrS2tjYCTk5OshwfHycs6XAzWakZvJ2dnVar
NT09PTk5meDstLa25uTkWCwWdioqKrKzsxMTE0tKSkwmjWGlIgrc39+no6iL
QqJ4d3Z2GhoaWGLiAJubm7u7uzhD5vT0FKTA5Hb4Hxwc4IPz8PAwc3t9fZ1Q
RGCfWjAdHx9zsb29rem612glGqg5zPX19dbWFseIRCIcg6fPziPizcvLI7vb
7U5NTeXAVJebm0vevr6+pKSk5eVligX10dHRw/ECKuo5OjoaxTs7O+tyuYTp
7Ozs4uJiZmaGjhI7fr+/v7+f23t7e8XOwMCA1+vlAmKiK+bm5ip1Wlpa0nR4
jVb9YcjodDpBQWPzNO8sU/sXvDabTVzTqIFAALyiV+mfjIwMYcrKygKymaQx
rPqKeGp6vAsLC1G8QvPz8+K11W7wAlaPd3Bw0Ih3bGzsVkY93ltW/WEQw4fa
eaBNTU2P2735+fn0Kt2bkpIiulce3r8NB3I1NjaGw2Gap6enZ2NjAzcxHHhn
2YFPbLxEYBTz1tOKq6urogmZIeyDy2jV4/V4PENDQ4TinwwTGB8zlZrEm5mZ
mZaWxutPOdrN7JWHt7m5mYzV1dXGnzYamANQHWNB7MAfPjjTeOKnLQZekR1/
ftEYy4wXdngjWFKI0arHe3l5SQpGMbOdY9xZpnav4fBwmR8O8S6FV6pe4P/e
/0kKr1QpvFKl8EqVwitVCq9UrShJ1nM/YSWl++s399Rc6A==
               "], "Byte", ColorSpace -> "RGB", ImageSize -> Automatic, 
               Interleaving -> True, Magnification -> 1]}, {}]}]}]}]}], 
   Typeset`pod11$$ = XMLElement[
   "pod", {"title" -> "Abundances", "scanner" -> "Data", "id" -> 
     "Abundance:ElementData", "position" -> "1100", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"ElementData"}], "\n  "}], 
       XMLElement["datasources", {}, {"\n   ", 
         XMLElement["datasource", {}, {"WebElements"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   TagBox["\"crust abundance\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox["\"median\"", {FontColor -> GrayLevel[0.5], 
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    RowBox[{
                    TagBox["0", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0", "SRString" -> "0"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{"\[InvisibleSpace]", "\" mass%\""}], FontFamily -> 
                    "Roboto", FontSize -> Smaller]}], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {"\[SpanFromAbove]", 
                 StyleBox["\"highest\"", {FontColor -> GrayLevel[0.5], 
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], 
                 StyleBox[
                  TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    RowBox[{"6", 
                    StyleBox["\[Times]", 
                    GrayLevel[0.5]], 
                    SuperscriptBox["10", "-4"]}], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> RowBox[{"6", "\[Times]", 
                    SuperscriptBox["10", "-4"]}], "SRString" -> 
                    "6 times 10 to the negative 4"], SyntaxForm -> CenterDot],
                     "\[NoBreak]", 
                    StyleBox[
                    RowBox[{"\[InvisibleSpace]", "\" mass%\""}], FontFamily -> 
                    "Roboto", FontSize -> Smaller]}], Identity], #& , 
                    SyntaxForm -> Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TagBox[
                    TagBox["\"thorium\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Thorium"}]], Identity], 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                "\[SpanFromAbove]", 
                 StyleBox["\"lowest\"", {FontColor -> GrayLevel[0.5], 
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], 
                 StyleBox[
                  TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0", "SRString" -> "0"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{"\[InvisibleSpace]", "\" mass%\""}], FontFamily -> 
                    "Roboto", FontSize -> Smaller]}], #& , SyntaxForm -> Dot],
                     "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    
                    TemplateBox[{
                    "\[ThinSpace]", "\" \"", "29", "\"elements\""}, 
                    "RowWithSeparators"], "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"human abundance\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox["\"median\"", {FontColor -> GrayLevel[0.5], 
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    RowBox[{
                    TagBox["0", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0", "SRString" -> "0"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{"\[InvisibleSpace]", "\" mass%\""}], FontFamily -> 
                    "Roboto", FontSize -> Smaller]}], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {"\[SpanFromAbove]", 
                 StyleBox["\"highest\"", {FontColor -> GrayLevel[0.5], 
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], 
                 StyleBox[
                  TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    RowBox[{"1", 
                    StyleBox["\[Times]", 
                    GrayLevel[0.5]], 
                    SuperscriptBox["10", "-7"]}], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> RowBox[{"1", "\[Times]", 
                    SuperscriptBox["10", "-7"]}], "SRString" -> 
                    "10 to the negative 7"], SyntaxForm -> CenterDot], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{"\[InvisibleSpace]", "\" mass%\""}], FontFamily -> 
                    "Roboto", FontSize -> Smaller]}], Identity], #& , 
                    SyntaxForm -> Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TagBox[
                    TagBox["\"uranium\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Uranium"}]], Identity], 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                "\[SpanFromAbove]", 
                 StyleBox["\"lowest\"", {FontColor -> GrayLevel[0.5], 
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], 
                 StyleBox[
                  TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0", "SRString" -> "0"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{"\[InvisibleSpace]", "\" mass%\""}], FontFamily -> 
                    "Roboto", FontSize -> Smaller]}], #& , SyntaxForm -> Dot],
                     "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    
                    TemplateBox[{
                    "\[ThinSpace]", "\" \"", "34", "\"elements\""}, 
                    "RowWithSeparators"], "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Show atomic abundances", "input" -> 
         "Abundance:ElementData__Show atomic abundances"}, {}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement["units", {"count" -> "1"}, {
           XMLElement[
           "unit", {"short" -> " mass%", "long" -> "mass percent"}, {}], 
           XMLElement[
           "img", {"src" -> 
             "https://www6b3.wolframalpha.com/Calculate/MSP/\
MSP704188ihc1fa21e5bbh000030eb8b9e73e82c4c?MSPStoreType=image/gif&s=13", 
             "width" -> "148", "height" -> "27", "ImportedData" -> 
             Image[CompressedData["
1:eJztl0lIXUkUhh/pjeBAb1y1G3GniAsRW3DTCxfiRtKIIiIktv1sRAOmIQTc
iBtRBJEgBHGe51lUFEERBxxxiIqzOM8zjq+/tuByea9zc6E7eX1J/aBUnTp1
6tT5zzl1n/vrNy9/f2Eymd468O/lq3e/JCW9ev/rj0zCEt/+YU6M/S048c9Y
c2zSz69/QPgTfx/4+3v8ScLIsBgEBnL1G0ByZ1xI7owLyZ1xIbkzLiR3xoXk
zriQ3BkX9uIuPz8/NzdXjCsqKp6envTs+h64Ky0tvbq60qNpF+4GBgZSUlKy
srI6OztXVlaSk5N1btR2dWtrq66urrm5uaCgoLe3d2ZmprCwsKSkZG1tjdXH
x0fOLS4uRjg5Oal4gjLhWlhY+JxEMV5fX9/Y2CiMYw0hOtgvKioaGxsTOrW1
tfgwODjIFAfEcaOjo8KIrX5DQ0N7ezuZTChI4Ly8vI/PODw81BMN/dzV1NQE
BAS4u7u7urqmpaX5+fk5OjrGx8ezdHl5GRkZ6eLi4uHh0d/ff3p6GhQU5ODg
4Ovru7S0ZDVtaWkhAtXV1VRcQkKCHj8VbzVWCQWxOj4+Jm/Lysp6enru7u4W
FxcJpvBwfn7+9vaWVQJ4fX29u7uLDzc3N/v7+5BC6GwlauPsOjo6YjsGYYGD
iDzTi4sLBnt7e+jACzpsxAI+nJycoEDcdnZ2/lGfODDgxMrKSnQsX63u8CEw
MBDfSBVnZ+e5uTmOg8fz83MYYVWEJSwsDAUvL6+2tjYaI1ewmqJmNpvj4uJG
RkZSU1O5FOTq9FZjlVC0traKcUdHx+rqKgPOIhpCODw8jHsisbkFPFZVVRFG
qgAqUbCVqI1T0YobfX19U1NTH1WYnZ1V61DaQ0NDYozZ+/t7bf2uri5akOVr
cieq7ODgAC6E0MfHBwaRBAcHU4YmkykkJARXMzIyINrNzY1rWk0Vg9A3Pj4O
1xEREaKzfdFbjVU1d7QgK+7W19epF3KeMZ0N7izPjXRzc5M+qby5thLFuBJn
klZwR4exckDRmZ6eVrgT0NaHu+XlZYs9uMvJyQkPD6f70d7hjs6TmZlJPWZn
Z1NiVlOxcWJiIj09vby8nEiS7TQNPd5qrGpzR2doamqimqCG9wXukHR3d6NA
1dO7qA5bidq4Vc8kCFyWjoca3RjLai5Y5WpnZ2fIeSO2t7e19RXu6Eto6vl4
+6+4I1De3t5OTk6hoaH+/v6QCIOUoaenJ5VlNRUbY2JiiAOnR0dHR0VFCc+/
6K3GqjZ3FBRCPgZo3VwEBh8eHigEXiheScoEHVuJ2jjZRTuFd+VbBX8INTZ5
W+ktai4sz6UH3eQAWar4/zl9hTuqFQUirCcadvnwJq9IcjHe2NjgFnp22fE3
ghUv/wfI3+Y6Ibn7lzCQq98AkjvjQnJnXEjujAvJnXEhuTMuPkkYGfZOHwmJ
7xF/AbMKfew=
               "], "Byte", ColorSpace -> "RGB", ImageSize -> Automatic, 
               Interleaving -> True, Magnification -> 1]}, {}]}]}]}]}], 
   Typeset`pod12$$ = XMLElement[
   "pod", {"title" -> "Nuclear properties", "scanner" -> "Data", "id" -> 
     "Nuclear:ElementData", "position" -> "1200", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"ElementData"}], "\n  "}], 
       XMLElement["datasources", {}, {"\n   ", 
         XMLElement["datasource", {}, {"NISTAtomicWeights"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   TagBox["\"half\[Hyphen]life\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox["\"median\"", {FontColor -> GrayLevel[0.5], 
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["13", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "13", "SRString" -> "13"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"h\"", FontFamily -> "Roboto", FontSize -> Smaller]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False]}, {
                "\[SpanFromAbove]", 
                 StyleBox["\"highest\"", {FontColor -> GrayLevel[0.5], 
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], 
                 StyleBox[
                  TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["14.06", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "14.06", "SRString" -> "14.06"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"Gyr\"", FontFamily -> "Roboto", FontSize -> Smaller]}],
                     Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TagBox[
                    TagBox["\"thorium\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Thorium"}]], Identity], 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                "\[SpanFromAbove]", 
                 StyleBox["\"lowest\"", {FontColor -> GrayLevel[0.5], 
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], 
                 StyleBox[
                  TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["5", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "5", "SRString" -> "5"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"ms\"", FontFamily -> "Roboto", FontSize -> Smaller]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TagBox[
                    TagBox["\"oganesson\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Oganesson"}]], Identity], 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                "\[SpanFromAbove]", 
                 StyleBox["\"distribution\"", {FontColor -> GrayLevel[0.5], 
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], 
                 GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.637], 
                    GrayLevel[0.6]]], 
                    Hue[0.67, 0.6, 0.6], 
                    Opacity[0.15]], {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.637], 
                    GrayLevel[0.6]]], 
                    Hue[0.67, 0.6, 0.6], 
                    Opacity[0.15]], {{{
                    
                    RectangleBox[{0., 0}, {5.*^16, 35.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{1.*^17, 0}, {1.5*^17, 1.}, "RoundingRadius" -> 
                    0]}}, {{
                    
                    RectangleBox[{4.*^17, 0}, {4.5*^17, 1.}, "RoundingRadius" -> 
                    0]}}}}, {}, {}}}, {{}, {}, {}}}, AspectRatio -> 
                  0.6180339887498948, Axes -> {True, False}, 
                  AxesLabel -> {None, None}, AxesOrigin -> {-9.*^15, 0}, 
                  AxesStyle -> Directive[
                    GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1], BaseStyle -> {FontFamily -> "Roboto"}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1], 
                  FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                  GridLinesStyle -> Directive[{
                    AbsoluteThickness[1.01], 
                    RGBColor[1, 0.7, 0.4]}], ImageSize -> 70, LabelStyle -> 
                  Directive[FontFamily -> "Times"], 
                  PlotRange -> {{0., 4.5*^17}, {All, All}}, 
                  PlotRangePadding -> {{0, 
                    Scaled[0.01]}, {0, 
                    Scaled[0.1]}}, Ticks -> {None, None}]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"specific radioactivity\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox["\"highest\"", {FontColor -> GrayLevel[0.5], 
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], 
                 StyleBox[
                  TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    RowBox[{"2.926", 
                    StyleBox["\[Times]", 
                    GrayLevel[0.5]], 
                    SuperscriptBox["10", "11"]}], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> RowBox[{"2.926", "\[Times]", 
                    SuperscriptBox["10", "11"]}], "SRString" -> 
                    "2.926 times 10 to the 11"], SyntaxForm -> CenterDot], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{
                    "\"TBq\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"g\""}], FontFamily -> "Roboto", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TagBox[
                    TagBox["\"oganesson\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Oganesson"}]], Identity], 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                "\[SpanFromAbove]", 
                 StyleBox["\"lowest\"", {FontColor -> GrayLevel[0.5], 
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], 
                 StyleBox[
                  TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["4.057", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "4.057", "SRString" -> "4.057"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{
                    "\"kBq\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"g\""}], FontFamily -> "Roboto", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TagBox[
                    TagBox["\"thorium\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ElementData, "Thorium"}]], Identity], 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                "\[SpanFromAbove]", 
                 StyleBox["\"median\"", {FontColor -> GrayLevel[0.5], 
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["33169", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "33169", "SRString" -> "33169"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{
                    "\"TBq\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"g\""}], FontFamily -> "Roboto", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> "Nuclear:ElementData__More"}, {}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement["units", {"count" -> "5"}, {
           XMLElement["unit", {"short" -> "Gyr", "long" -> "gigayears"}, {}], 
           XMLElement["unit", {"short" -> "h", "long" -> "hours"}, {}], 
           XMLElement[
           "unit", {
            "short" -> "kBq/g", "long" -> "kilobecquerels per gram"}, {}], 
           XMLElement[
           "unit", {"short" -> "ms", "long" -> "milliseconds"}, {}], 
           XMLElement[
           "unit", {
            "short" -> "TBq/g", "long" -> "terabecquerels per gram"}, {}], 
           XMLElement[
           "img", {"src" -> 
             "https://www6b3.wolframalpha.com/Calculate/MSP/\
MSP7251hgdde44hfbeea45000018cac9ee65ad613d?MSPStoreType=image/gif&s=12", 
             "width" -> "195", "height" -> "115", "ImportedData" -> 
             Image[CompressedData["
1:eJztnWtMFEsWx81uokQ0bIKAHzRqTEQlkQiiS9CoUTQrxpi7Lho1UW+uazZE
NvEuWdYvmPjFhPhFo9EgIAICjgrKQ1BRHj5QEUQePiIqEUXeirwUcfZ/qWxv
366maJjqGRjOL/Gmp09V1+mqf1fVzO3DmfPzP3/6+x8mTJjwqwv+89Oef68+
cGDPf/76J3z4W/iv/9gXvveXv4T/a+++vQf+/PMffyuGf8X499vxM4KQhHX0
MTq9IgaDhERIgYRESIGEREiBhERIgYRESMGZhPTt2zczPCGM4DRC+vTp0+XL
l01yhhgS40LKz8/39fWdPHny0qVLnzx5YgfHzG6CkIhBIbW0tEyfPj0vL6+7
uzs9PX3+/Pl2cExcoKysLCEhIS0tLScnp6qqqr29/cKFC7qm/v7+u3fvnjt3
7uzZs+wRyM3NffHiBQ5QKykp6cePH/iYmJiIWo8fP8Z5vsr79+8vXrx46dKl
+/fv4yOs8fHxqMuuQxgU0pUrV7Zv3658ZKMTEhJy48YNfIyMjDx+/DgE5u/v
7+npybradscE1ubmZoxyW1vbly9fML5qIfGmzs7O58+ff/36taurC2rBs1Bb
WwuNoXB5eXlJSQkKw3lYUQUHjY2NfBUICTJrbW2F6j5+/Ii2enp6mpqaMjIy
cMb2+x3rGBTS6dOnIyIicBAVFTVhAIwXhmnPnj046ePjgykLQxAYGMi6Wopj
AmtlZWVxcTE7vnPnjlpIvAkHDx48gB5ODwAPv3//DlX09vZiWwXPKyoqTquo
rq7mq0BIV69eZZeFwDDd4X4xfUFjtt+sE2BQSJjSQ0NDlY9z586FkNCfOMAT
vXnzZpxEx+7bt0+iYwIr5IHFhR1rhMSb6urq4D9mG5yB+KEKHBQVFZWWllos
FhxDSIr2GHwVtZCsA2vfu3fv0FBKSgrNSFbDQsJ3Ii8vL4wUpnoMzbRp09hw
hIeHYwcOCVntKyRMI5guIB5+aeNNr169wtKMqQNDHxcXxzxvaGiIiYnB0mYd
WA2xF8KKhkcDKxpK8lXUQoL15s2b6Ap0C3ZKqCXrrscuxr+1YeezZMmSiRMn
zpo168SJE+wkBsLd3Z39gGNPIbGmMfqpqaloF4uRerOtMWH2wNeE2NjY7Oxs
TEHQBiuGrRSbc1hzycnJKIMvp319fXwVtZCwMmIGw+KIK2AllXXLYxpbfkdC
f+Jry/79++W6xBjSK6w+mAqgBGxXML0YNDGwGKFMZmamTI/HN7YICRJasGBB
fX29XJcYYq+g4cLCQkwIyhd2IyYFbKQx/2BFk+nx+MZpftkmHAsJiZACCYmQ
AgmJkAIJiZACCYmQAh+aRBAjxtFy1mF0ekUMBgmJkAIJiZACCYmQAgmJkIJB
Icl9RcQIYq80r5kRDoeEREhh7ArJYrHk5OTExcXl5eWxl11RJSkpKSEh4d69
e/39/fX19dnZ2aw8yrx584YiQczDuJCWLVs2b948Nzc3dL75fg0tJLjR2NjY
09OTmpra0NDQ3NycmJjY0tLS3d2NyaqqqkpXSBQJYhLGhbR48WIMREFBgZ+f
n30cE1jVS9v169dfv35dXl6uvPNfV1d37do1XSFRJIhJDHdpa29v9/b2Nt+v
4Qmptrb26dOnSjwdhJSVlSUWkpUiQaTiNELCgsWWNqxWmZmZFRUVbW1t2P9g
tmFxJRohUSSIXJxGSDjAnjk5ORnb7+LiYsw2OFNYWBgbG8s22BohUSSIXOgH
SUIKJCRCCiQkQgokJEIKJCRCCiQkQgokJEIKJCRCCqKQAIIYJo6Wsw6j0yti
MEhIhBRISIQUSEiEFJxJSJSLxIEYFNIofGdb8/K/kotE/VdJh6zlKAROjlFG
JqTKykr2Z9tdXV03bdrU2dmpW6uxsbGsrGzEjgmsAkmQkBzCiIUUFBSEA0ho
y5YtZ86c0a116tQpzR9CH5ZjAqsiiZcvX2IiwqKmDI16jJ79Pq4EtdLS0lAx
Pj7+1q1b7OU3TRYS68CffGdZSEpLS9kZltwkJSUlMzOzurqaf4mXv44mYkVj
VTs5WDALroBby8jIgPX27du63mpaUdBkY1EX002zAhPrFjSE8jChlbdv3w5r
vIwLqaurKzg4GO4pQuro6Ni4cSMbym3btk2ZMmXVqlUzZ85ktXbv3t3X16eY
1q5dq5iMOCawMiHV1dXBGfbqPi8kPq4EtdBFTU1NOIMBQhN8FhJYk5OTcRGc
tFgsSnxKa2srnhrcqa6Q+OuoI1Z4q+KkIJgFV2DtoiIGGhISt6JU5LOxqIvp
pllh5XEG956fn48hwxOKRg0OlnU4Qtq1axeUgAfHqlraQEBAAJzB+XXr1sGZ
hw8fenh4oAwkBCHhgJnQdXgc3N3djTsmsOLe2d9X//DhAzvDC4mPK1EvbejM
wsJCPgsJHtKSkhJWBr2Nu8DNqnNS6AqJv466Ld6qOCkIZlFfAb1RVFQkbkWB
z8aiKcanWcnKymKm3NxcNsFCVGysDWJcSJMmTZo9ezaEalUtbeiHgwcPRkZG
RkVFnTx5khX28vKyDrwvDT9xcOjQIY3JoGMCK4trw4KF/mEPIy8kPq5EMzQF
BQV8FhLcmiIkBgYCDbFjgZA019EISWNVL22DBbOor1BTU8OEJGhF7bAmG4u6
mG6aFUVIykptnpAwvaA//fz8MDcqQurt7Y2IiAgLC8P8sH79evTPo0eP2IwE
gcFnHJw/f37Dhg34VoXqEmck1jO4cbaf54XEx5WwpY2FVbKljc9CgjNw+PPn
zzhGLcx4bGnDZXHjGAIIiY9P4a+jHjveqjgpCGbhlzZxKwp8NhZN+AyfZsWe
QmKbbUwyoaGhytLm4uKycuVKuIQlABshfIlbsWKFp6cnSu7YsYPVhWnr1q0w
rV69WrqQoGSMu3rXoX7YNXElbFeJbsQZZbP97PdZSKwDkxIGAsPKUt5Y/5fc
BDMG2yNZufgU/jqaIdZYFScFwSy4AkunAm+Vzba4FQVNNhZ1Md00K3YT0rBg
6xeUzz5i58ZST8LbRYsWGXdMrldSYEubfdqy5ceKIbOxSMc8ISlgRdi5c6eb
m5u3tzcWeuOOyfVKCmNCSEaysUjHmf4XCeFASEiEFEhIhBRISIQUSEiEFEhI
hBT0QgEIYoQ4Ws46jE6viMEgIRFSICERUiAhEVJwViEJIkoo2MQMnFJIfESJ
cqCY7AN7r8xuzTkQpxSSgu5LSvaEhORwxF6JAx94/egqig/fMBJR8oyLTElP
T9dkRWHvlaWlpWVkZDAhOX3eE4NCslgsgYGBc+bM8fDwOHLkSEBAgKura1hY
mHVgsQgODnZxcfH391deZpPimMAqDnwwIiQ+fMN4RIkmMkU3Kwp70xX+oMx4
yHtiXEjLly9vbW3Fozd16tSamhr0GETV0dGBMz4+PtnZ2TExMeh2iY4JrOLA
ByNC4sM3jESUiCNTWFYUTdQJhDQe8p4YFxKbf/C4QTbspK+vL+SE7o2OjobM
ZsyYYfwFSCOOCazi14wNLm2a8A0jESXiyBSWg0ATdcKWNqfPe2K7kDAuR48e
xdR07NgxiX8fwGwh8eEbRiJKdCNTNEKCFW6ogzjGQ94T24WEfgsJCcGWaeHC
hSOO9Nd1TGC1XUi64RvPDESU8JEpfFYUZbONFR9CGg95T8botzZitEFCIqRA
QiKkQEIipEBCIqRAQiKkQEIipEBCIqQgiAggiOHiaDnrMDq9IgaDhERIgYRE
SIGEREiBhERIYRwKiRJJmIFBIQUFBU1QsWbNGrPTkQzpVVJSUldX1wiuTEIy
g2HNSIcPH46OjmbHZqcjEXsVGxvL3qxuaWmxCjN06KbeoIwk0jOS2C4kk9KR
GJ+RxBk6dFNvUEYS6RlJbBGSqelIjAtpyAwdfOoNykii2y22ZCSxfUYyKR3J
sIQkyNChm3qDMpJIz0hiu5BMSkcypFdoDrM3+lycoUM39QZlJJGekcT2pc2k
dCRDeoUZA1tu9KpVmKFDN/UGZSSRnpHEpN+RbE9HMjp/3WKMiUQSVvtmJDFV
SAojSEdCQmKMlYwk4/CXbcIMSEiEFEhIhBRISIQUSEiEFEhIhBT0QgEIYiQ4
WssEQRD/5793ST6O
               "], "Byte", ColorSpace -> "RGB", ImageSize -> Automatic, 
               Interleaving -> True, Magnification -> 1]}, {}]}]}]}]}], 
   Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
   Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
   Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
   Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
   Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
   Typeset`pod33$$, Typeset`pod34$$, Typeset`pod35$$, Typeset`pod36$$, 
   Typeset`pod37$$, Typeset`pod38$$, Typeset`pod39$$, Typeset`pod40$$, 
   Typeset`pod41$$, Typeset`pod42$$, Typeset`aux1$$ = {
   True, False, {False}, True}, Typeset`aux2$$ = {True, False, {False}, True},
    Typeset`aux3$$ = {True, False, {False}, True}, Typeset`aux4$$ = {
   True, False, {False}, True}, Typeset`aux5$$ = {True, False, {False}, True},
    Typeset`aux6$$ = {True, False, {False}, True}, Typeset`aux7$$ = {
   True, False, {False}, True}, Typeset`aux8$$ = {True, False, {False}, True},
    Typeset`aux9$$ = {True, False, {False}, True}, Typeset`aux10$$ = {
   True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`aux14$$ = {
   True, False, {False}, True}, Typeset`aux15$$ = {
   True, False, {False}, True}, Typeset`aux16$$ = {
   True, False, {False}, True}, Typeset`aux17$$ = {
   True, False, {False}, True}, Typeset`aux18$$ = {
   True, False, {False}, True}, Typeset`aux19$$ = {
   True, False, {False}, True}, Typeset`aux20$$ = {
   True, False, {False}, True}, Typeset`aux21$$ = {
   True, False, {False}, True}, Typeset`aux22$$ = {
   True, False, {False}, True}, Typeset`aux23$$ = {
   True, False, {False}, True}, Typeset`aux24$$ = {
   True, False, {False}, True}, Typeset`aux25$$ = {
   True, False, {False}, True}, Typeset`aux26$$ = {
   True, False, {False}, True}, Typeset`aux27$$ = {
   True, False, {False}, True}, Typeset`aux28$$ = {
   True, False, {False}, True}, Typeset`aux29$$ = {
   True, False, {False}, True}, Typeset`aux30$$ = {
   True, False, {False}, True}, Typeset`aux31$$ = {
   True, False, {False}, True}, Typeset`aux32$$ = {
   True, False, {False}, True}, Typeset`aux33$$ = {
   True, False, {False}, True}, Typeset`aux34$$ = {
   True, False, {False}, True}, Typeset`aux35$$ = {
   True, False, {False}, True}, Typeset`aux36$$ = {
   True, False, {False}, True}, Typeset`aux37$$ = {
   True, False, {False}, True}, Typeset`aux38$$ = {
   True, False, {False}, True}, Typeset`aux39$$ = {
   True, False, {False}, True}, Typeset`aux40$$ = {
   True, False, {False}, True}, Typeset`aux41$$ = {
   True, False, {False}, True}, Typeset`aux42$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["sources", {"count" -> "1"}, {
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
ElementDataSourceInformationNotes.html", "text" -> "Element data"}, {}]}], 
    XMLElement["sources", {"count" -> "1"}, {
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
ElementDataSourceInformationNotes.html", "text" -> "Element data"}, {}]}]}, 
   Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True], 
   Typeset`queryinfo$$ = {{
    "success" -> "true", "error" -> 
     "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve",
      "numpods" -> "12", "datatypes" -> "Element", "timedout" -> "Data", 
     "timedoutpods" -> "", "timing" -> "3.814", "parsetiming" -> "0.136", 
     "parsetimedout" -> "false", "recalculate" -> 
     "https://www6b3.wolframalpha.com/api/v1/recalc.jsp?id=\
MSPa612323dd74869c5aee020000434dd274058g27794307842769377011871", "id" -> 
     "MSP612423dd74869c5aee020000106ei687fbhe2527", "host" -> 
     "https://www6b3.wolframalpha.com", "server" -> "14", "related" -> 
     "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa612523dd74869c5aee0200006ah9ad945f332bah4307842769377011871", "version" -> 
     "2.6", "inputstring" -> "radioactive elements"}, {
    "success" -> "true", "error" -> 
     "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve",
      "numpods" -> "0", "datatypes" -> "Element", "timedout" -> "", 
     "timedoutpods" -> "", "timing" -> "3.646", "parsetimedout" -> "false", 
     "recalculate" -> "", "id" -> "", "parseidserver" -> "13", "host" -> 
     "https://www6b3.wolframalpha.com", "server" -> "13", "related" -> "", 
     "version" -> "2.6", "inputstring" -> "radioactive elements"}}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> 3., 
    "Date" -> {2022, 11, 7, 1, 28, 37.715602`9.329095932367867}, "Line" -> 6, 
    "SessionID" -> 27634165378566798726}, Typeset`showpods$$ = {1, 2, 3, 4, 5,
    6, 7, 8, 9, 10, 11, 12}, Typeset`failedpods$$ = {13, 14, 15, 16, 17, 18, 
   19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,
    38, 39, 40, 41, 42}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = "radioactive elements"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
         Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
         Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
         Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
         Typeset`pod33$$, Typeset`pod34$$, Typeset`pod35$$, Typeset`pod36$$, 
         Typeset`pod37$$, Typeset`pod38$$, Typeset`pod39$$, Typeset`pod40$$, 
         Typeset`pod41$$, Typeset`pod42$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
         Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
         Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
         Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
         Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
         Typeset`aux33$$, Typeset`aux34$$, Typeset`aux35$$, Typeset`aux36$$, 
         Typeset`aux37$$, Typeset`aux38$$, Typeset`aux39$$, Typeset`aux40$$, 
         Typeset`aux41$$, Typeset`aux42$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{1063.5, {1570.765869140625, 1574.734130859375}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; AlphaIntegration`DoAsyncInitialization[
       Hold[{
        2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
          Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
          Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
          Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
          Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
          Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
          Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
          Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
          Typeset`pod33$$, Typeset`pod34$$, Typeset`pod35$$, Typeset`pod36$$, 
          Typeset`pod37$$, Typeset`pod38$$, Typeset`pod39$$, Typeset`pod40$$, 
          Typeset`pod41$$, Typeset`pod42$$}, {
         Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
          Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
          Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
          Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
          Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
          Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
          Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
          Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
          Typeset`aux33$$, Typeset`aux34$$, Typeset`aux35$$, Typeset`aux36$$, 
          Typeset`aux37$$, Typeset`aux38$$, Typeset`aux39$$, Typeset`aux40$$, 
          Typeset`aux41$$, Typeset`aux42$$}, Typeset`chosen$$, Typeset`open$$,
          Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
         Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
         Typeset`failedpods$$, Typeset`newq$$, 
         "https://www6b3.wolframalpha.com/api/v1/recalc.jsp?id=\
MSPa612323dd74869c5aee020000434dd274058g27794307842769377011871", 
         Typeset`asyncpods$$}]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.8767625181218567`*^9},ExpressionUUID->"9ed7eb7e-7160-43f1-8c78-\
48cd7e77d3f0"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["4) \:0412\:044b\:0446\:0435\:043f\:043b\:0435\:043d\
\:0438\:0435 \:0434\:0430\:043d\:043d\:044b\:0445 \:0441 \:043f\:043e\:043c\
\:043e\:0449\:044c\:044e WolframAlpha", "Subsubsection"]], "Subsubsection",
 CellChangeTimes->{{3.876762286581532*^9, 
  3.876762314048049*^9}},ExpressionUUID->"0f6a00c4-e8d0-432c-87e1-\
021d50caf1c8"],

Cell[CellGroupData[{

Cell["red", "WolframAlphaLong",
 CellChangeTimes->{
  3.876762317235546*^9, {3.8767634333885183`*^9, 3.8767634348881636`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"189fd3d5-f643-4ddd-855d-1b8802266aa4"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "red", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "https://api.wolframalpha.com/v1/"}, 
    PodStates -> {
     "NearestNamedBrand:ColorData__More", "NearestNamedBrand:ColorData__Less",
       "NearestNamedBrand:ColorData__More", 
      "NearestNamedHTML:ColorData__More", "NearestNamedHTML:ColorData__Less", 
      "NearestPMS:ColorData__More", "NearestPMS:ColorData__Less", 
      "NearestPMS:ColorData__More", "RelatedColors:ColorData__More"}}, 
   Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Red"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               TemplateBox[{"\"red\"", "\"  \"", 
                 StyleBox[
                  
                  RowBox[{
                   "\"(\"", "\[NoBreak]", "\"color\"", "\[NoBreak]", 
                    "\")\""}], {
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}, "RowDefault"], LineIndent -> 0], TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 1\
, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Color swatch", "scanner" -> "Data", "id" -> 
     "ColorSwatch:ColorData", "position" -> "200", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GraphicsBox[{
               EdgeForm[{
                 Thickness[Tiny], 
                 RGBColor[
                  NCache[
                   Rational[2, 3], 0.6666666666666666], 0, 0]}], 
               RGBColor[1, 0, 0], 
               RectangleBox[{0, 0}]}, ImageSize -> 35], Identity], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"computabledata,formatteddata,numberdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Nearest representations", "scanner" -> "Data", "id" -> 
     "ColorSchemaConversions:ColorData", "position" -> "300", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Dataset[EntityValue[Entity[\"Color\", {\"WolframLanguage\", \
\"Red\"}], {EntityProperty[\"Color\", \"RGBValue\"], \
EntityProperty[\"Color\", \"HexValue\"], EntityProperty[\"Color\", \
\"Value\"], EntityProperty[\"Color\", \"HSVValue\"], \
EntityProperty[\"Color\", \"HSLValue\"], EntityProperty[\"Color\", \
\"CMYKValue\"], EntityProperty[\"Color\", \"XYZValue\"], \
EntityProperty[\"Color\", \"CIE1976LabValue\"]}, \"PropertyAssociation\"]]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "\"24\[Hyphen]bit RGB\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{
                    StyleBox[
                    TemplateBox[{
                    StyleBox["\"red\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \"", "255", "\"\"", "\"\""}, "RowDefault"], 
                    LineIndent -> 0], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox["\"green\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \"", "0", "\"\"", "\"\""}, "RowDefault"], 
                    LineIndent -> 0], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox["\"blue\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \"", "0", "\"\"", "\"\""}, "RowDefault"], 
                    LineIndent -> 0]}], 
                  LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                  0]}, {
                 TagBox[
                  PaneBox[
                  "\"fractions\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{
                    StyleBox[
                    TemplateBox[{
                    StyleBox["\"red\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \"", "1", "\"\"", "\"\""}, "RowDefault"], 
                    LineIndent -> 0], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox["\"green\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \"", "0", "\"\"", "\"\""}, "RowDefault"], 
                    LineIndent -> 0], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox["\"blue\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \"", "0", "\"\"", "\"\""}, "RowDefault"], 
                    LineIndent -> 0]}], 
                  LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                  0]}, {
                 TagBox[
                  PaneBox[
                  "\"hexadecimal\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], "\"#FF0000\""}, {
                 TagBox[
                  PaneBox[
                  "\"Wolfram Language\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 RowBox[{
                   TagBox[
                    StyleBox[
                    "RGBColor", FontFamily -> "Roboto", 
                    FontSize -> -1 + Inherited], HoldForm], "[", 
                   RowBox[{"1", ",", "0", ",", "0"}], "]"}]}, {
                 TagBox[
                  PaneBox[
                  "\"HSV\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{
                    StyleBox[
                    TemplateBox[{
                    StyleBox["\"hue\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0", "SRString" -> "0"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], 
                    FontFamily -> "Roboto", FontSize -> Smaller]}], #& , 
                    SyntaxForm -> Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"\"", "\"\""}, 
                    "RowDefault"], LineIndent -> 0], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox["\"saturation\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["100", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "100", "SRString" -> "100"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> Smaller]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\"\"", 
                    "\"\""}, "RowDefault"], LineIndent -> 0], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox["\"value\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["100", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "100", "SRString" -> "100"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> Smaller]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\"\"", 
                    "\"\""}, "RowDefault"], LineIndent -> 0]}], 
                  LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                  0]}, {
                 TagBox[
                  PaneBox[
                  "\"HSL\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{
                    StyleBox[
                    TemplateBox[{
                    StyleBox["\"hue\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0", "SRString" -> "0"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], 
                    FontFamily -> "Roboto", FontSize -> Smaller]}], #& , 
                    SyntaxForm -> Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"\"", "\"\""}, 
                    "RowDefault"], LineIndent -> 0], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox["\"saturation\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["100", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "100", "SRString" -> "100"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> Smaller]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\"\"", 
                    "\"\""}, "RowDefault"], LineIndent -> 0], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox["\"lightness\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["50", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "50", "SRString" -> "50"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> Smaller]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\"\"", 
                    "\"\""}, "RowDefault"], LineIndent -> 0]}], 
                  LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                  0]}, {
                 TagBox[
                  PaneBox[
                  "\"CMYK\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{
                    StyleBox[
                    TemplateBox[{
                    StyleBox["\"cyan\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0", "SRString" -> "0"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 
                    Smaller]}], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\"\"", 
                    "\"\""}, "RowDefault"], LineIndent -> 0], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox["\"magenta\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["100", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "100", "SRString" -> "100"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> Smaller]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\"\"", 
                    "\"\""}, "RowDefault"], LineIndent -> 0], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox["\"yellow\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["100", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "100", "SRString" -> "100"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> Smaller]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\"\"", 
                    "\"\""}, "RowDefault"], LineIndent -> 0], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox["\"black\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0", "SRString" -> "0"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 
                    Smaller]}], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\"\"", 
                    "\"\""}, "RowDefault"], LineIndent -> 0]}], 
                  LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                  0]}, {
                 TagBox[
                  PaneBox[
                  "\"XYZ\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{
                    StyleBox[
                    TemplateBox[{
                    StyleBox["X", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0.4361", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.4361", "SRString" -> "0.4361"]]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\"\"", 
                    "\"\""}, "RowDefault"], LineIndent -> 0], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox["Y", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0.2225", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.2225", "SRString" -> "0.2225"]]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\"\"", 
                    "\"\""}, "RowDefault"], LineIndent -> 0], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox["Z", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0.01393", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.01393", "SRString" -> "0.01393"]]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\"\"", 
                    "\"\""}, "RowDefault"], LineIndent -> 0]}], 
                  LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                  0]}, {
                 TagBox[
                  PaneBox[
                   TemplateBox[{"\"CIE \"", "\" \"", 
                    
                    TemplateBox[{"L", "*"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], 
                    
                    TemplateBox[{"a", "*"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], 
                    
                    TemplateBox[{"b", "*"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}, "RowDefault"], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    
                    TemplateBox[{"L", "*"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["54.29", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "54.29", "SRString" -> "54.29"]]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\"\"", 
                    "\"\""}, "RowDefault"], LineIndent -> 0], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    
                    TemplateBox[{"a", "*"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["80.81", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "80.81", "SRString" -> "80.81"]]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\"\"", 
                    "\"\""}, "RowDefault"], LineIndent -> 0], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    
                    TemplateBox[{"b", "*"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["69.89", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "69.89", "SRString" -> "69.89"]]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\"\"", 
                    "\"\""}, "RowDefault"], LineIndent -> 0]}], 
                  LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                  0]}}, GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,numberdata,\
quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> 
         "ColorSchemaConversions:ColorData__More"}, {}]}], 
     XMLElement["definitions", {"count" -> "1"}, {
       XMLElement[
       "definition", {
        "word" -> "XYZ", "desc" -> "CIE 1931 XYZ color space"}, {}]}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Chromaticity diagram location", "scanner" -> "Data", 
     "id" -> "CIEChromaticityDiagram:ColorData", "position" -> "400", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 GraphicsBox[{{
                    GraphicsComplexBox[CompressedData["
1:eJxlljFrVFEQRoNNOq3UKooQq/wDLULKdGojVgHB2ipdunQpY6U2KdNI/AMv
3GbBwgcX2YCCwvN5n17DbdKple7C+cJ8PliWw+zO5jDMN7nz9PmjZ1dWVla+
/nst3v25Nd9am2+92YzciW/sXFzfuZhZvRe/WN8+XN/+IL65/PyZ+PXLxfNJ
fHv5/S/ih6u7D1Z3B+s3is8WH18r1n8SP9mbPd6b/RC/Wv7eT3H8nbeb+Ebu
xPjGei/GF8YXxhfGF8Y39hvF+Mb+kxhfGF84+ibzTeabzDeZbzLfZL7JfJP5
JvNN5pvMN5lvMt9kvkm+fw5Ofh2cvJNv5E6Mb6z3YnxhfGF8YXxhfGO/UYxv
7D+J8YXxheN8s80323yzzTfbfLPNN9t8s80323yzzTfbfLPNN9t8s80323yz
fO8u2h7O5Ru5E+Mb670YXxhfGF8YXxjf2G8U4xv7T2J8YXxhfH8v5/1RvpE7
Mb6x3ovxhfGF8YXxhfGN/UYxvrH/JMYXxhfGt3+/eD7LN3InxjfWezG+ML4w
vjC+ML6x3yjGN/afxPjC+MJ+9+L+Dra/g+3vYPs72P4Otr+D7e9g+zv89x73
d7D9HWx/B9vfwfb38q7fP96/d7w/yjdyJ8Y31nsxvjC+ML4wvjB/V+w3ivGN
/ScxvjC+cMyrYnlVLK+K5VWxvCqWV8XyqlheFcurYnlVLK+K5VWxvCqWV8Xy
6vL/smvnR1fPj77LN3InxjfWezG+ML4wvjC+ML6x3yjGN/afxPjC+MIxn6vl
c7V8rpbP1fK5Wj5Xy+dq+Vwtn6vlc7V8rpbP1fK5Wj5Xy+cq328bp+PG6bl8
I3difGO9F+ML4wvjC+ML4xv7jWJ8Y/9JjC+MLxzvUbN71OweNbtHze5Rs3vU
7B41u0fN7lGze9TsHjW7R83uUbN71Owetc2/wT9s8Q==
                    "], {{{
                    EdgeForm[], 
                    Hue[0.67, 0.6, 0.6], 
                    GraphicsGroupBox[
                    TagBox[{
                    PolygonBox[CompressedData["
1:eJwBIQPe/CFib1JiAgAAAMQAAAAEAAAAAQIREAIDEhEDBBMSCwwbGgwNHBsF
BhUUBgcWFQQFFBMJChkYCgsaGQgJGBcNDh0cFhcmJRARIB8REiEgMjNCQRUW
JSQODx4dExQjIhITIiEXGCcmFBUkIwcIFxYYGSgnGRopKCAhMC8cHSwrHR4t
LBscKyofIC8uJSY1NCEiMTAjJDMyJCU0MyYnNjUoKTg3LzA/PikqOTgqKzo5
GhsqKSwtPDsrLDs6Li8+PTAxQD8xMkFAJyg3NjM0Q0IiIzIxNDVEQ1ZXZmU5
OklINjdGRTc4R0ZAQVBPODlIRz9AT046O0pJPT5NTD4/Tk07PEtKQUJRUElK
WVhDRFNSREVUU0VGVVRCQ1JRRkdWVUhJWFdHSFdWSktaWUxNXFtNTl1cT1Bf
XtDR4N9UVWRjUVJhYFJTYmFbXGtqU1RjYllaaWhVVmVkV1hnZlhZaGdcXWxr
XV5tbGRldHNfYG9uYGFwb1BRYF9eX25tYWJxcGJjcnFlZnV0Zmd2dWNkc3I1
NkVEZ2h3dmhpeHdqa3p5b3B/fmxtfHttbn18dXaFhG5vfn10dYSDcHGAf3Jz
goFzdIOCcXKBgHZ3hoV/gI+OeXqJiHp7iol7fIuKd3iHhnx9jIt+f46NfX6N
jICBkI+BgpGQgoOSkYOEk5KEhZSTiYqZmIqLmpmGh5aViImYl4uMm5qOj56d
j5CfnoyNnJuNjp2chYaVlJCRoJ+Sk6Khl5inppOUo6KUlaSjlZalpJiZqKeR
kqGgmZqpqJqbqqmbnKuqnJ2sq2tse3qdnq2sn6CvrqOks7KgobCvoaKxsKqr
urmio7Kxqaq5uKSltLOnqLe2qKm4t6usu7qsrby7s7TDwq6vvr2vsL++np+u
ra2uvbywscC/sbLBwLW2xcS2t8bFsrPCwaantrVOT15dt7jHxrm6yci9vs3M
vr/Ozbu8y8q8vczLv8DPzsLD0tHExdTTwMHQz8HC0dC6u8rJxcbV1MfI19bL
zNvayMnY18nK2djKy9rZzM3c28bH1tXNzt3czs/e3c/Q3964ucjH0dLh4IBH
XJA=
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$2357831#1"]& ]]}, {}, {}, {}, {}}, {{
                    Directive[
                    RGBColor[0.39598880819409377`, 0.24, 0.6]], 
                    
                    LineBox[{2, 1, 16, 31, 46, 61, 76, 91, 106, 121, 136, 151,
                     166, 181, 196, 211, 212, 213, 214, 215, 216, 217, 218, 
                    219, 220, 221, 222, 223, 224, 225, 210, 195, 180, 165, 
                    150, 135, 120, 105, 90, 75, 60, 45, 30, 15, 14, 13, 12, 
                    11, 10, 9, 8, 7, 6, 5, 4, 3, 2}, VertexColors -> None]}}},
                     VertexColors -> CompressedData["
1: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
                    "]], {}}, {
                    GrayLevel[1], 
                    
                    PolygonBox[{{-1, -1}, {2, -1}, {2, 2}, {-1, 
                    2}, {-1, -1}, {0.17556023175572394`, 
                    0.005293837011448581}, {0.17536359983998115`, 
                    0.0052756835086245945`}, {0.1751832266012616, 
                    0.005258496695871006}, {0.17501613456134835`, 
                    0.005241761371297277}, {0.17485934624202448`, 
                    0.0052249623330128635`}, {0.17471437050588853`, 
                    0.0052163258794187175`}, {0.1745686949050439, 
                    0.005196758206671449}, {0.17438655342162454`, 
                    0.005118554549985008}, {0.1741952098896991, 
                    0.005010211750772774}, {0.174076658262699, 
                    0.004958307077092231}, {0.1740319916403864, 
                    0.004969697904826961}, {0.17397805595937796`, 
                    0.004970995982340718}, {0.1738828384979183, 
                    0.004938548694005485}, {0.17377499442337, 
                    0.004916451373271851}, {0.17366187093994412`, 
                    0.004924337941529843}, {0.17354925119098794`, 
                    0.004918081234377825}, {0.1734486993895146, 
                    0.00485908475496034}, {0.17333937108826114`, 
                    0.0047978877665547405`}, {0.17320523972156368`, 
                    0.004777308086019989}, {0.17304684766317197`, 
                    0.00477439049264027}, {0.17285397285329213`, 
                    0.004781308166369025}, {0.17263866621817262`, 
                    0.004794854359209058}, {0.172422288975678, 
                    0.004798191913592145}, {0.17218989201904114`, 
                    0.004814961802891915}, {0.17192576940040152`, 
                    0.0048764409814174145`}, {0.17160799184654643`, 
                    0.005002736369540446}, {0.17119682786308751`, 
                    0.0052171085166790344`}, {0.17068304004872895`, 
                    0.0055306515237927515`}, {0.17010081918061948`, 
                    0.00593472421689477}, {0.16945646115957932`, 
                    0.00643183330154858}, {0.16870349387244327`, 
                    0.007039618137338212}, {0.16781244062254633`, 
                    0.0077705757635202774`}, {0.16680771951269083`, 
                    0.008635354723008295}, {0.16571159830926377`, 
                    0.009649611775946724}, {0.16446842472034728`, 
                    0.010805265069488198`}, {0.16304535985452714`, 
                    0.012079786021384634`}, {0.16140730253026808`, 
                    0.013527119145756683`}, {0.1595032707835204, 
                    0.015194596641146224`}, {0.1573367841947519, 
                    0.017092933641790545`}, {0.15491507641595717`, 
                    0.019202854009223724`}, {0.15222038871706767`, 
                    0.021604634825459216`}, {0.14922625578990492`, 
                    0.024376548255645374`}, {0.14592217167251953`, 
                    0.02763548063723386}, {0.14235309321074113`, 
                    0.031421725349965055`}, {0.13845603390311093`, 
                    0.03599689856485891}, {0.13398682160551256`, 
                    0.04199140479943818}, {0.12880278921251914`, 
                    0.049864667435636056`}, {0.12294935746728373`, 
                    0.059876037156560105`}, {0.11641258374966156`, 
                    0.07232999394622402}, {0.10910279780366018`, 
                    0.08794688639714918}, {0.10094787984638058`, 
                    0.10733595324555739`}, {0.09190235575853702, 
                    0.1310304911413033}, {0.08167262427194437, 
                    0.15966036581555584`}, {0.07082155434608398, 
                    0.19358768351714645`}, {0.059817416957095595`, 
                    0.2335985680996362}, {0.048851369406004534`, 
                    0.27927416674104816`}, {0.03797071645875126, 
                    0.33083590189447737`}, {0.027690510611921567`, 
                    0.38679976162910523`}, {0.018669888762176158`, 
                    0.44532119245236657`}, {0.011395738571790347`, 
                    0.5046749878340863}, {0.006320691593521946, 
                    0.5628236008715106}, {0.0038610834905612426`, 
                    0.6181624727884985}, {0.0043831868952121, 
                    0.669726304100396}, {0.008220758402066552, 
                    0.7162948349158103}, {0.015377506940553749`, 
                    0.7564530641698093}, {0.026045353124646443`, 
                    0.7887586566525424}, {0.03947841456673645, 
                    0.8128086626298999}, {0.05529065855542668, 
                    0.8270334974207783}, {0.07275942793154874, 
                    0.833566714456559}, {0.09111773885318163, 
                    0.8331658706070437}, {0.1100821266945993, 
                    0.827814693322161}, {0.12925202281557857`, 
                    0.8196942165161936}, {0.14831319807154394`, 
                    0.809610085059285}, {0.16676071977899662`, 
                    0.7987285025281501}, {0.18463800929019178`, 
                    0.7872526041667259}, {0.20216210130103304`, 
                    0.7750775111100823}, {0.21942612394280397`, 
                    0.7622613087118403}, {0.23652647927799422`, 
                    0.7488150767131858}, {0.2535320038434578, 
                    0.7347860975047882}, {0.270445807373137, 
                    0.7202634536743228}, {0.2872950362902006, 
                    0.7053192150787574}, {0.304108662964538, 
                    0.6900067121662545}, {0.3209194884693519, 
                    0.674386687233604}, {0.33772095745463904`, 
                    0.658508139814946}, {0.3545253946371649, 
                    0.6424243263849768}, {0.37131640832892465`, 
                    0.6261854218697829}, {0.3880925479761988, 
                    0.6098478530853221}, {0.40482782572907294`, 
                    0.5934493060638648}, {0.421505178172087, 
                    0.5770285686473562}, {0.4380919152213715, 
                    0.5606306420948011}, {0.45455822194656975`, 
                    0.5442967791090849}, {0.47086552683183763`, 
                    0.5280791043098605}, {0.48697231906181726`, 
                    0.5120325430631746}, {0.5028371368677546, 
                    0.49621291105484616`}, {0.5184197634646172, 
                    0.4806807067266449}, {0.5336747842055273, 
                    0.46549218358877364`}, {0.5485452412186969, 
                    0.45069659351502667`}, {0.5629773585037835, 
                    0.4363457853199396}, {0.5769019536565851, 
                    0.42248595694695035`}, {0.5902667589336371, 
                    0.4091449118347121}, {0.6029327855757162, 
                    0.3964966335729774}, {0.6146726165974282, 
                    0.38479956475462057`}, {0.6256800327846108, 
                    0.37384125441861654`}, {0.6361219372576182, 
                    0.36344418550327773`}, {0.6458681359177542, 
                    0.3537462949955304}, {0.6547627048542051, 
                    0.34491844622940315`}, {0.6628584600799188, 
                    0.33689234214928726`}, {0.6702316207319516, 
                    0.3295645797072063}, {0.6769190187406181, 
                    0.3228998584173931}, {0.6829419614901258, 
                    0.3168889330927986}, {0.6883461584437284, 
                    0.311493064762896}, {0.6932005616270809, 
                    0.30665484041154656`}, {0.6975633767640905, 
                    0.30232089566421777`}, {0.7014872591587333, 
                    0.29842479534850047`}, {0.7050269267617462, 
                    0.2949046931597014}, {0.7082512222035675, 
                    0.2916948730181046}, {0.7112410674905182, 
                    0.28871383433473913`}, {0.7139761081705562, 
                    0.2859842711575483}, {0.7164637478609328, 
                    0.28350037586136473`}, {0.7187167593249135, 
                    0.28125061157720627`}, {0.7207547027301163, 
                    0.2792172735672014}, {0.722569721388469, 
                    0.2774082902394775}, {0.7241368297435044, 
                    0.27585045341214154`}, {0.7254930940127818, 
                    0.27450378547165555`}, {0.7266949625626657, 
                    0.27330619557043784`}, {0.7277603240606225, 
                    0.27224045873932134`}, {0.7286948950132419, 
                    0.2713051049867581}, {0.7295047982564321, 
                    0.2704952017435679}, {0.7301776766397369, 
                    0.269822323360263}, {0.7307192678881747, 
                    0.26928073211182535`}, {0.7311888977627051, 
                    0.2688111022372949}, {0.7316287025328848, 
                    0.26837129746711524`}, {0.7320247435006082, 
                    0.2679752564993918}, {0.732376149352635, 
                    0.26762385064736505`}, {0.7327051542604087, 
                    0.2672948457395912}, {0.7330388382846801, 
                    0.26696116171532}, {0.7333630813818561, 
                    0.266636918618144}, {0.7336829648123552, 
                    0.26631703518764493`}, {0.7339713327741839, 
                    0.2660286672258161}, {0.7341850648375982, 
                    0.26581493516240184`}, {0.7343375767131999, 
                    0.2656624232868001}, {0.734456905848058, 
                    0.265543094151942}, {0.7345507388706178, 
                    0.26544926112938216`}, {0.734620713363792, 
                    0.265379286636208}, {0.7346694785861829, 
                    0.2653305214138171}, {0.7346938888911683, 
                    0.2653061111088318}, {0.7346953465406071, 
                    0.26530465345939297`}, {0.7346921261616721, 
                    0.26530787383832777`}, {0.7346991164284454, 
                    0.26530088357155457`}, {0.7346856553828995, 
                    0.2653143446171004}, {0.7346099153920321, 
                    0.26539008460796787`}, {0.7345499018795552, 
                    0.26545009812044484`}, {0.7346004599906061, 
                    0.2653995400093939}, {0.7346766671161696, 
                    0.2653233328838303}, {0.7346990610632237, 
                    0.2653009389367762}, {0.7346934810949736, 
                    0.26530651890502643`}, {0.7346899827941388, 
                    0.26531001720586117`}, {0.7346899591162742, 
                    0.26531004088372573`}, {0.7346899587513279, 
                    0.265310041248672}, {0.734689979448047, 
                    0.26531002055195285`}, {0.7346899970449323, 
                    0.2653100029550676}, {0.7346900038402209, 
                    0.2653099961597791}, {0.7346900052677908, 
                    0.26530999473220923`}, {0.7346900023320355, 
                    0.2653099976679646}, {0.734690000880342, 
                    0.2653099991196582}, {0.734690006235616, 
                    0.2653099937643841}, {0.7346900107878785, 
                    0.2653099892121215}, {0.7346900101258405, 
                    0.2653099898741596}, {0.7346900028459842, 
                    0.2653099971540159}, {0.7346899820899148, 
                    0.2653100179100853}, {0.7346899572281275, 
                    0.26531004277187265`}, {0.7346899326769708, 
                    0.2653100673230292}, {0.7346899190526232, 
                    0.2653100809473769}, {0.7346899412375943, 
                    0.2653100587624056}, {0.7346899821666248, 
                    0.2653100178333752}, {0.7346900001958658, 
                    0.26530999980413417`}, {0.7346899924207384, 
                    0.26531000757926154`}, {0.7346899843024212, 
                    0.26531001569757884`}, {0.734689983454365, 
                    0.265310016545635}, {0.7346899845298409, 
                    0.26531001547015914`}, {0.7346899865757621, 
                    0.2653100134242378}, {0.7346899831410453, 
                    0.2653100168589546}, {0.734689967020282, 
                    0.265310032979718}, {0.7346899540024436, 
                    0.2653100459975564}, {0.734689961026772, 
                    0.2653100389732281}, {0.7346899732507743, 
                    0.26531002674922577`}, {0.7346899813168498, 
                    0.26531001868315024`}, {0.7346899870040634, 
                    0.2653100129959366}, {0.7346899894594975, 
                    0.26531001054050246`}, {0.7346899904175132, 
                    0.26531000958248674`}, {0.7346899924350723, 
                    0.2653100075649276}, {0.7346899958253966, 
                    0.26531000417460326`}, {0.7346900017758548, 
                    0.26530999822414525`}, {0.7346900080492961, 
                    0.265309991950704}, {0.7346900062647306, 
                    0.2653099937352694}, {0.7346899943092736, 
                    0.2653100056907265}, {0.7346899821325252, 
                    0.26531001786747477`}, {0.7346899749411026, 
                    0.26531002505889756`}, {0.7346899691617546, 
                    0.26531003083824545`}, {0.7346899640304887, 
                    0.26531003596951136`}, {0.734689958783312, 
                    0.26531004121668794`}, {0.17556023175572394`, 
                    0.005293837011448581}}]}, {{
                    GrayLevel[1], 
                    EdgeForm[
                    Opacity[0.5]], 
                    DiskBox[{0.17556023175572394`, 0.005293837011448581}, 
                    Offset[{2, 2}]], 
                    InsetBox[
                    FormBox[
                    StyleBox["360", 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm], 
                    
                    Offset[{-4, 0}, {0.17556023175572394`, 
                    0.005293837011448581}], {Right, Center}]}, {
                    GrayLevel[1], 
                    EdgeForm[
                    Opacity[0.5]], 
                    DiskBox[{0.10959432361561004`, 0.08684251118309425}, 
                    Offset[{2, 2}]], 
                    InsetBox[
                    FormBox[
                    StyleBox["475", 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm], 
                    
                    Offset[{-4, 0}, {0.10959432361561004`, 
                    0.08684251118309425}], {Right, Center}]}, {
                    GrayLevel[1], 
                    EdgeForm[
                    Opacity[0.5]], 
                    DiskBox[{0.008168028004667443, 0.5384230705117519}, 
                    Offset[{2, 2}]], 
                    InsetBox[
                    FormBox[
                    StyleBox["500", 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm], 
                    
                    Offset[{-4, 0}, {0.008168028004667443, 
                    0.5384230705117519}], {Right, Center}]}, {
                    GrayLevel[1], 
                    EdgeForm[
                    Opacity[0.5]], 
                    DiskBox[{0.11416071960667964`, 0.8262069597811889}, 
                    Offset[{2, 2}]], 
                    InsetBox[
                    FormBox[
                    StyleBox["525", 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm], 
                    
                    Offset[{2, 2}, {0.11416071960667964`, 
                    0.8262069597811889}], {Left, Bottom}]}, {
                    GrayLevel[1], 
                    EdgeForm[
                    Opacity[0.5]], 
                    DiskBox[{0.3016037993957512, 0.6923077623715742}, 
                    Offset[{2, 2}]], 
                    InsetBox[
                    FormBox[
                    StyleBox["550", 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm], 
                    
                    Offset[{2, 2}, {0.3016037993957512, 
                    0.6923077623715742}], {Left, Bottom}]}, {
                    GrayLevel[1], 
                    EdgeForm[
                    Opacity[0.5]], 
                    DiskBox[{0.47877479115758365`, 0.5202023072114564}, 
                    Offset[{2, 2}]], 
                    InsetBox[
                    FormBox[
                    StyleBox["575", 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm], 
                    
                    Offset[{2, 2}, {0.47877479115758365`, 
                    0.5202023072114564}], {Left, Bottom}]}, {
                    GrayLevel[1], 
                    EdgeForm[
                    Opacity[0.5]], 
                    DiskBox[{0.6270365997638725, 0.3724911452184179}, 
                    Offset[{2, 2}]], 
                    InsetBox[
                    FormBox[
                    StyleBox["600", 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm], 
                    
                    Offset[{2, 2}, {0.6270365997638725, 
                    0.3724911452184179}], {Left, Bottom}]}, {
                    GrayLevel[1], 
                    EdgeForm[
                    Opacity[0.5]], 
                    DiskBox[{0.7346900232582808, 0.26530997674171924`}, 
                    Offset[{2, 2}]], 
                    InsetBox[
                    FormBox[
                    StyleBox["700", 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm], 
                    
                    Offset[{2, 2}, {0.7346900232582808, 
                    0.26530997674171924`}], {Left, Bottom}]}}}, {Epilog -> {{
                    GrayLevel[1], 
                    PointSize[0.035], 
                    TagBox[
                    TooltipBox[
                    PointBox[{0.6484272779205885, 0.33085608497546465`}], 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    
                    TemplateBox[{
                    "0.6484272779205885`", "\", \"", "0.33085608497546465`"}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]], Annotation[#, 
                    $CellContext`GrayComment[
                    Row[{0.6484272779205885, ", ", 0.33085608497546465`}]], 
                    "Tooltip"]& ], 
                    RGBColor[1, 0, 0], 
                    PointSize[0.03], 
                    TagBox[
                    TooltipBox[
                    PointBox[{0.6484272779205885, 0.33085608497546465`}], 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    
                    TemplateBox[{
                    "0.6484272779205885`", "\", \"", "0.33085608497546465`"}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]], Annotation[#, 
                    $CellContext`GrayComment[
                    Row[{0.6484272779205885, ", ", 0.33085608497546465`}]], 
                    "Tooltip"]& ]}}, Frame -> False, Axes -> False, 
                   PlotRange -> {{0, 0.8}, {0, 0.9}}, 
                   ImagePadding -> {{30, 20}, {5, 0}}, ImageSize -> 220., 
                   DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.05], 
                    Scaled[0.05]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> False, ImagePadding -> 
                   All, DisplayFunction -> Identity, Axes -> {True, True}, 
                   AxesLabel -> {None, None}, 
                   AxesOrigin -> {Automatic, Automatic}, AxesStyle -> 
                   Directive[
                    AbsoluteThickness[0.2]], BaseStyle -> Automatic, 
                   DisplayFunction :> Identity, Frame -> True, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    AbsoluteThickness[0.2]], 
                   FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLinesStyle -> Automatic, 
                   Method -> {
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "ScalingFunctions" -> None, "TransparentPolygonMesh" -> 
                    True, "AxesInFront" -> True}, 
                   PlotRange -> {{0., 0.8}, {0., 0.9}}, PlotRangePadding -> {
                    Scaled[0.02], 
                    Scaled[0.02]}, Ticks -> {Automatic, Automatic}}]}, {
                 PaneBox[
                  TagBox[
                   PaneBox[
                    TagBox[
                    Cell[
                    TextData[{
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    
                    TemplateBox[{
                    "x", "\", \"", "y", "\" values from \"", "xyY", 
                    "\" representation projected on to CIE 1931 xy \
chromaticity diagram\""}, "RowDefault"], "\[NoBreak]", "\")\""}], 
                    TraditionalForm]]], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}]], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    BaseStyle -> {LineIndent -> 0}], 
                   $CellContext`TagBoxWrapper["Label"]], 
                  BaseStyle -> {LineIndent -> 0}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
               "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], ImageSizeMultipliers -> {1, 1}, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Nearest named HTML colors", "scanner" -> "Data", "id" -> 
     "NearestNamedHTML:ColorData", "position" -> "100", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "\"\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"HTML name\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"hexadecimal\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                   TagBox[
                    GridBox[{{"\"24\[Hyphen]bit RGB\""}, {
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    "\"red\"", {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    "\"green\"", {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    StyleBox[
                    "\"blue\"", {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], LinebreakAdjustments -> {1, 10, 0, 0, 100}, 
                    LineIndent -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]]}, {
                 TagBox[
                  PaneBox[
                   TagBox[
                    GraphicsBox[{
                    EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[0.6666666666666667, 0, 0]}], 
                    RGBColor[1., 0, 0], 
                    RectangleBox[{0, 0}]}, ImageSize -> 20], Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], "\"red\"", 
                 "\"#FF0000\"", 
                 StyleBox[
                  RowBox[{"255", 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], "0", 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], "0"}], 
                  LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                  0]}, {
                 TagBox[
                  PaneBox[
                   TagBox[
                    GraphicsBox[{
                    EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[0.6666666666666667, 0.1803921568627451, 0]}], 
                    RGBColor[1., 0.27058823529411763`, 0], 
                    RectangleBox[{0, 0}]}, ImageSize -> 20], Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], "\"orange red\"", 
                 "\"#FF4500\"", 
                 StyleBox[
                  RowBox[{"255", 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], "69", 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], "0"}], 
                  LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                  0]}}, GridBoxAlignment -> {
                "Columns" -> {Left, Left, Left, Left}, "Rows" -> {{Baseline}},
                  "ItemsIndexed" -> {{1, 1} -> {Center, Baseline}, {1, 2} -> {
                    Center, Baseline}, {1, 3} -> {Center, Baseline}, {1, 
                    4} -> {Center, Baseline}}}, AutoDelete -> False, 
               GridBoxBackground -> {
                "Columns" -> {None, None}, "Rows" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> 
         "NearestNamedHTML:ColorData__More"}, {}]}]}], Typeset`pod6$$ = 
   XMLElement[
   "pod", {"title" -> "Nearest Pantone colors", "scanner" -> "Data", "id" -> 
     "NearestPMS:ColorData", "position" -> "100", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    PaneBox[
                    GraphicsBox[{
                    EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[0.6666666666666667, 0., 0.]}], 
                    CMYKColor[0, 1, 1, 0], 
                    RectangleBox[{0, 0}]}, ImageSize -> 20], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"032\""}, "RowDefault"], 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ColorData, {"032"}}]], Identity]}, {
                    TagBox[
                    PaneBox[
                    GraphicsBox[{
                    EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[0.6666666666666667, 0., 0.]}], 
                    CMYKColor[0, 1, 1, 0], 
                    RectangleBox[{0, 0}]}, ImageSize -> 20], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"032\"", "\" \"", "\"C\""}, "RowDefault"], 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ColorData, {"032", "C"}}]], Identity]}, {
                    TagBox[
                    PaneBox[
                    GraphicsBox[{
                    EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[0.6666666666666667, 0.026666666666666693`, 0.]}], 
                    CMYKColor[0., 0.96, 1., 0.], 
                    RectangleBox[{0, 0}]}, ImageSize -> 20], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"485", "\" \"", "\"EC\"", "\" \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"Euro coated\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ColorData, {485, "EC"}}]], Identity]}, {
                    TagBox[
                    PaneBox[
                    GraphicsBox[{
                    EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[
                    0.6666666666666667, 0.046666666666666634`, 
                    0.03333333333333337]}], 
                    CMYKColor[0., 0.93, 0.95, 0.], 
                    RectangleBox[{0, 0}]}, ImageSize -> 20], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"485", "\" \"", "\"C\""}, "RowDefault"], 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ColorData, {485, "C"}}]], Identity]}, {
                    TagBox[
                    PaneBox[
                    GraphicsBox[{
                    EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[
                    0.6666666666666667, 0.046666666666666634`, 
                    0.03333333333333337]}], 
                    CMYKColor[0., 0.93, 0.95, 0.], 
                    RectangleBox[{0, 0}]}, ImageSize -> 20], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"485", "\" \"", "\"PC\"", "\" \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"coated\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ColorData, {485, "PC"}}]], Identity]}, {
                    TagBox[
                    PaneBox[
                    GraphicsBox[{
                    EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[
                    0.6533333333333333, 0.026133333333333342`, 
                    0.06533333333333333]}], 
                    CMYKColor[0., 0.96, 0.9, 0.02], 
                    RectangleBox[{0, 0}]}, ImageSize -> 20], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"1795", "\" \"", "\"C\""}, "RowDefault"], 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ColorData, {1795, "C"}}]], Identity]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Left, {Left}}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxBackground -> {"Columns" -> {None, None}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False]}, {
                StyleBox[
                 
                 RowBox[{
                  "\"(\"", "\[NoBreak]", "\"screen approximations\"", 
                   "\[NoBreak]", "\")\""}], {
                 FontFamily -> "Roboto", FontSize -> 10, 
                  GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Less", "input" -> "NearestPMS:ColorData__Less"}, {}]}]}], 
   Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Nearest brand colors", "scanner" -> "Data", "id" -> 
     "NearestNamedBrand:ColorData", "position" -> "100", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   TagBox[
                    GraphicsBox[{
                    EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[0.6666666666666667, 0., 0.]}], 
                    RGBColor[1., 0., 0.], 
                    RectangleBox[{0, 0}]}, ImageSize -> 20], Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox["\"IBMServer trademark red\"", Identity]}, {
                 TagBox[
                  PaneBox[
                   TagBox[
                    GraphicsBox[{
                    EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[0.6666666666666667, 0., 0.]}], 
                    RGBColor[1., 0., 0.], 
                    RectangleBox[{0, 0}]}, ImageSize -> 20], Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox["\"Joomla! trademark red\"", Identity]}, {
                 TagBox[
                  PaneBox[
                   TagBox[
                    GraphicsBox[{
                    EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[0.6666666666666667, 0., 0.]}], 
                    RGBColor[1., 0., 0.], 
                    RectangleBox[{0, 0}]}, ImageSize -> 20], Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox["\"Phillip Morris trademark red\"", Identity]}, {
                 TagBox[
                  PaneBox[
                   TagBox[
                    GraphicsBox[{
                    EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[
                    0.6666666666666667, 0.046666666666666634`, 
                    0.03333333333333337]}], 
                    RGBColor[1., 0.06999999999999995, 0.050000000000000044`], 
                    RectangleBox[{0, 0}]}, ImageSize -> 20], Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox["\"RSA Security trademark red\"", Identity]}, {
                 TagBox[
                  PaneBox[
                   TagBox[
                    GraphicsBox[{
                    EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[0.6000000000000001, 0., 0.06666666666666665]}], 
                    RGBColor[0.9, 0., 0.09999999999999998], 
                    RectangleBox[{0, 0}]}, ImageSize -> 20], Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                 "\"Venetian Hotel Las Vegas trademark bright red\"", 
                  Identity]}, {
                 TagBox[
                  PaneBox[
                   TagBox[
                    GraphicsBox[{
                    EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[
                    0.564706, 0.07843133333333334, 0.013071866666666668`]}], 
                    RGBColor[0.847059, 0.117647, 0.0196078], 
                    RectangleBox[{0, 0}]}, ImageSize -> 20], Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox["\"McDonald's trademark red\"", Identity]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Less", "input" -> 
         "NearestNamedBrand:ColorData__Less"}, {}]}]}], Typeset`pod8$$ = 
   XMLElement[
   "pod", {"title" -> "Related colors", "scanner" -> "Data", "id" -> 
     "RelatedColors:ColorData", "position" -> "100", "error" -> "false", 
     "numsubpods" -> "6"}, {
     XMLElement["subpod", {"title" -> "Complementary colors"}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GraphicsBox[{
                   EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]}], 
                   RGBColor[1, 0, 0], 
                   RectangleBox[{0, 0}]}, ImageSize -> 20], Identity], 
                TagBox[
                 GraphicsBox[{
                   EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]}], 
                   RGBColor[0, 1, 1], 
                   RectangleBox[{0, 0}]}, ImageSize -> 20], Identity]}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> "Color triad"}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GraphicsBox[{
                   EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]}], 
                   RGBColor[1, 0, 0], 
                   RectangleBox[{0, 0}]}, ImageSize -> 20], Identity], 
                TagBox[
                 GraphicsBox[{
                   EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[0., 0.6666666666666667, 0.]}], 
                   RGBColor[0., 1., 0.], 
                   RectangleBox[{0, 0}]}, ImageSize -> 20], Identity], 
                TagBox[
                 GraphicsBox[{
                   EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[0., 0., 0.6666666666666667]}], 
                   RGBColor[0., 0., 1.], 
                   RectangleBox[{0, 0}]}, ImageSize -> 20], Identity]}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> "Color tetrad"}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GraphicsBox[{
                   EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]}], 
                   RGBColor[1, 0, 0], 
                   RectangleBox[{0, 0}]}, ImageSize -> 20], Identity], 
                TagBox[
                 GraphicsBox[{
                   EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[0.33333333333333337`, 0.6666666666666667, 0.]}], 
                   RGBColor[0.5, 1., 0.], 
                   RectangleBox[{0, 0}]}, ImageSize -> 20], Identity], 
                TagBox[
                 GraphicsBox[{
                   EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[0., 0.6666666666666667, 0.6666666666666667]}], 
                   RGBColor[0., 1., 1.], 
                   RectangleBox[{0, 0}]}, ImageSize -> 20], Identity], 
                TagBox[
                 GraphicsBox[{
                   EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[0.33333333333333337`, 0., 0.6666666666666667]}], 
                   RGBColor[0.5, 0., 1.], 
                   RectangleBox[{0, 0}]}, ImageSize -> 20], Identity]}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> "Color split complements"}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GraphicsBox[{
                   EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]}], 
                   RGBColor[1, 0, 0], 
                   RectangleBox[{0, 0}]}, ImageSize -> 20], Identity], 
                TagBox[
                 GraphicsBox[{
                   EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[0., 0.6666666666666667, 0.26666666666666694`]}], 
                   RGBColor[0., 1., 0.40000000000000036`], 
                   RectangleBox[{0, 0}]}, ImageSize -> 20], Identity], 
                TagBox[
                 GraphicsBox[{
                   EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[0., 0.26666666666666694`, 0.6666666666666667]}], 
                   RGBColor[0., 0.40000000000000036`, 1.], 
                   RectangleBox[{0, 0}]}, ImageSize -> 20], Identity]}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> "Analogous colors"}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GraphicsBox[{
                   EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]}], 
                   RGBColor[1, 0, 0], 
                   RectangleBox[{0, 0}]}, ImageSize -> 20], Identity], 
                TagBox[
                 GraphicsBox[{
                   EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[0.6666666666666667, 0., 0.3999999999999998]}], 
                   RGBColor[1., 0., 0.5999999999999996], 
                   RectangleBox[{0, 0}]}, ImageSize -> 20], Identity], 
                TagBox[
                 GraphicsBox[{
                   EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[0.6666666666666667, 0., 0.26666666666666694`]}], 
                   RGBColor[1., 0., 0.40000000000000036`], 
                   RectangleBox[{0, 0}]}, ImageSize -> 20], Identity], 
                TagBox[
                 GraphicsBox[{
                   EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[0.6666666666666667, 0., 0.13333333333333347`]}], 
                   RGBColor[1., 0., 0.20000000000000018`], 
                   RectangleBox[{0, 0}]}, ImageSize -> 20], Identity], 
                TagBox[
                 GraphicsBox[{
                   EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[0.6666666666666667, 0., 0.]}], 
                   RGBColor[1., 0., 0.], 
                   RectangleBox[{0, 0}]}, ImageSize -> 20], Identity], 
                TagBox[
                 GraphicsBox[{
                   EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[0.6666666666666667, 0.1333333333333333, 0.]}], 
                   RGBColor[1., 0.19999999999999996`, 0.], 
                   RectangleBox[{0, 0}]}, ImageSize -> 20], Identity], 
                TagBox[
                 GraphicsBox[{
                   EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[0.6666666666666667, 0.2666666666666666, 0.]}], 
                   RGBColor[1., 0.3999999999999999, 0.], 
                   RectangleBox[{0, 0}]}, ImageSize -> 20], Identity], 
                TagBox[
                 GraphicsBox[{
                   EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[0.6666666666666667, 0.4000000000000001, 0.]}], 
                   RGBColor[1., 0.6000000000000001, 0.], 
                   RectangleBox[{0, 0}]}, ImageSize -> 20], Identity]}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> "Monochromatic colors"}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GraphicsBox[{
                   EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]}], 
                   RGBColor[1, 0, 0], 
                   RectangleBox[{0, 0}]}, ImageSize -> 20], Identity], 
                TagBox[
                 GraphicsBox[{
                   EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[0., 0., 0.]}], 
                   RGBColor[0., 0., 0.], 
                   RectangleBox[{0, 0}]}, ImageSize -> 20], Identity], 
                TagBox[
                 GraphicsBox[{
                   EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[0.1333333333333333, 0., 0.]}], 
                   RGBColor[0.19999999999999996`, 0., 0.], 
                   RectangleBox[{0, 0}]}, ImageSize -> 20], Identity], 
                TagBox[
                 GraphicsBox[{
                   EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[0.2666666666666666, 0., 0.]}], 
                   RGBColor[0.3999999999999999, 0., 0.], 
                   RectangleBox[{0, 0}]}, ImageSize -> 20], Identity], 
                TagBox[
                 GraphicsBox[{
                   EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[0.4000000000000001, 0., 0.]}], 
                   RGBColor[0.6000000000000001, 0., 0.], 
                   RectangleBox[{0, 0}]}, ImageSize -> 20], Identity], 
                TagBox[
                 GraphicsBox[{
                   EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[0.5333333333333334, 0., 0.]}], 
                   RGBColor[0.8, 0., 0.], 
                   RectangleBox[{0, 0}]}, ImageSize -> 20], Identity]}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "6"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Less", "input" -> "RelatedColors:ColorData__Less"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Details", "input" -> 
         "RelatedColors:ColorData__Details"}, {}]}]}], Typeset`pod9$$ = 
   XMLElement[
   "pod", {"title" -> "Color composition", "scanner" -> "Data", "id" -> 
     "ColorComposition:ColorData", "position" -> "900", "error" -> "false", 
     "numsubpods" -> "3"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               StyleBox[
                TemplateBox[{
                  TagBox[
                   GraphicsBox[{
                    EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[0.33333333333333337`, 0, 0.33333333333333337`]}], 
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, 0}]}, ImageSize -> 35], Identity], 
                  "\"  \"", 
                  StyleBox[
                   
                   RowBox[{
                    "\"(\"", "\[NoBreak]", "\"purple\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  StyleBox["\" + \"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], AutoSpacing -> True], 
               StyleBox[
                TemplateBox[{
                  TagBox[
                   GraphicsBox[{
                    EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0.33333333333333337`,
                     0]}], 
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, 0}]}, ImageSize -> 35], Identity], 
                  "\"  \"", 
                  StyleBox[
                   
                   RowBox[{
                    "\"(\"", "\[NoBreak]", "\"orange\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               StyleBox[
                TemplateBox[{
                  TagBox[
                   GraphicsBox[{
                    EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]}], 
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, 0}]}, ImageSize -> 35], Identity], 
                  "\"  \"", 
                  StyleBox[
                   
                   RowBox[{
                    "\"(\"", "\[NoBreak]", "\"magenta\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  StyleBox["\" + \"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], AutoSpacing -> True], 
               StyleBox[
                TemplateBox[{
                  TagBox[
                   GraphicsBox[{
                    EdgeForm[{
                    Thickness[Tiny], 
                    RGBColor[
                    NCache[
                    Rational[454, 765], 0.5934640522875817], 
                    NCache[
                    Rational[44, 255], 0.17254901960784313`], 
                    NCache[
                    Rational[104, 765], 0.13594771241830064`]]}], 
                    RGBColor[
                    NCache[
                    Rational[227, 255], 0.8901960784313725], 
                    NCache[
                    Rational[22, 85], 0.25882352941176473`], 
                    NCache[
                    Rational[52, 255], 0.20392156862745098`]], 
                    RectangleBox[{0, 0}]}, ImageSize -> 35], Identity], 
                  "\"  \"", 
                  StyleBox[
                   RowBox[{"\"(\"", "\[NoBreak]", 
                    TagBox[
                    TagBox["\"vermilion\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {ColorData, {"Miscellaneous", "Vermilion"}}]],
                     Identity], "\[NoBreak]", "\")\""}], {
                   FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             
             RowBox[{"\"(\"", "\[NoBreak]", 
               "\"decomposition based on paint (RYB) color mixing\"", 
               "\[NoBreak]", "\")\""}], {
              GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
              LineIndent -> 0}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "3"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Hide color names", "input" -> 
         "ColorComposition:ColorData__Hide color names"}, {}]}]}], 
   Typeset`pod10$$ = XMLElement[
   "pod", {"title" -> "Spectral location", "scanner" -> "Data", "id" -> 
     "SpectrumLocation:ColorData", "position" -> "1000", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["datasources", {}, {"\n   ", 
         XMLElement["datasource", {}, {"TheWikimediaFoundationIncWikipedia"}],
          "\n  "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            GraphicsBox[{
              GraphicsComplexBox[CompressedData["
1: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
xH3y6yORkwU+Ipv7xFNy7AYtJ+Z/QTb3itfk/O6hv3/ekM39IozcCM+l0x/I
5p7xmTw0Zd9nU7+SzX3jB3kVnleNfpPNvSPcsH98oUqeM+m9yOb+EZn8Cc+x
sKhkcw+JQU7S/82GXd5kcx+JS3bwfBvqQzb3kkTk1muWT6uUlGzuJynI4/Hc
80lNNveUtOQtN5v0vp+BbO4rmck38TxcmY1s7i2+5N+REjXukpts7i/5yOkW
dr9YuCDZ3GOKkCvmCynpVZxs7jMOuTOen+f9yOZeU5Y8M2BshlkVyOZ+U5m8
z/NcrUY295ya5MdT/KJnqUM295365CiZgwd8bEA2957G5ByHfobta0Y2958A
cm08h0e2Jpt7UDty33fbr1brSDb3oSByMJ7PibuSzb2oO/lEsqDdj3uRzf2o
L/kNntvrBpDNPWkwOW6lTAt7DCOb+9JIcsHHw2OXGEM296bx5CZ9Hg2NMols
7k9TyMPxnA+ZTjb3qFnkNSvntpk3l2zuUwvIl/D8bxlMNveqpeT/rtWqnGMF
2dyvVpOTBW468GUt2dyzNpBLeUFoN5PNfWsbuS30YuxOsrl37SFPzA0h3E82
969D5G3QkeRHyeYedoJ8uxmE6hTZ3MfOkv9CXzZdIJt7WQg5wyQIyVWyuZ/d
IFeG7vjdJpt72j1y1/140D8km/vaY/Js6NH1Z2Rzb3tJPhC6ZtWiULK5v70j
P/X8cZFLNve4T+RoSfCg/EI297nv5Jyb8eD7STb3uj/kuuXxIAs//B+b+11E
cn+PrkUhm3tedPKSnnjQxCKb+14c8inoXer4ZHPvS0h+twwPgsRkc/9LRo5f
FIOdkmzugWnIha+UTzUwPdncBzORm0Efy2Ulm3thDvLIcBikXGRzP8xDXgfd
vJ2fbO6JhciXffGBXpRs7oslyF+hp4GlyObeWIacogk+EMuTzf2xErn050vO
3ypkc4+sTm4/Hh8otcjmPlmXPBn6O82fbO6Vjcg79uAbsinZ3C9bkO9ClzO0
Ipt7Zlty+FeL+oe1J5v7ZiA502B8wXUmm3tnN3LVhPiC6Ek2988+5O7Q8Ur9
yeYeOog8twx+QYeSzX10OPkQ9P3+KLK5l44lP++Gn9AEsrmfTibHiI7/wjSy
uafOJOdeMty7yByyua/OJ9cv9GiI1yKyubcuJg+8VOzT+WVkc39dSV7m+ePa
NWRzj11PPvP7v5vNNpHNfXYr+f2MWpWy7CCbe+1ucoLsm/Z/3Es299sD5KLH
YuTcf5hs7rnHyC0atlsy8iTZ3HfPkEd/OB6/+nmyufdeIm8Yk2ZU4itkc/+9
Rr6aatC3xzfJ5h58h/x9550O6+6TzX34ETlVtYL3ezwlm3vxC3LZ59Orl3hN
Nvfjt+SOA9wjUd6TzT35A3lq/Kr5Ln8mm/vyV/KutWtWzvtBNvfm3+T7pSIn
aRVuxD8292cvstftgPE5IpPNPToaOUuXQ7+/xCCb+7Q3uXqU5F0OxyWbe7UP
ueeiPk/GJiKb+3VS8vz81+vUTkH2HerlXSg1+cj53KeSpyPXSdx8SPiM5Jct
JxV+kZncD19uZ7ORY/0MXbfJl7y4XJLWM3KT804rn7JvPvJJfHk2KUhukGX5
FL8i5Lc9rlTMVJw8+HA4r5glyfFi5tzv+pFXwMavlyUXWjbed28F8jms9aLK
5Kae795q5A8jEzZsV5M84nKZ+FXrkBOl6H4+d33yWny7JGxILr79Uomfjckh
nr8e2Yzc0vPXJQLIXzx/fNKaPPbJmHST2pGT++66160jeVPf5zPrB5H9TsSv
Xqwr+Xocv6hpepDbNe5yJFJv8k/Pua4veZLn23cAOY3z8+22weTt47KsnDOM
XP5G/WYDR5Lv4Ns9YAy5U6ftl8uNJ4fb82Rctknk6RHjlokzlZyxhvP783Ty
nvmddt6eRa7ycn7ng3PJD/OczbxsAbkbPk5GB5Mjnc04P3ApeU6CunVqriBn
azE8VoHV5IP4+Em6jlzz28PBfzeQn5X2LvxsM7n35GIfT28jR7/bYd2GneSF
Gee2mraHnKvbqRS995OPHfjvRqND5Hr4eCt5lPy6Tq2KGU6QByweEiH6aXLs
txv3hZ0lL8XH4dUL5PzDY/juDiGfvlj45YKr5EZJ2y0eeoMcho/PNrfJQ7cc
j1f5Htnn98dzOR+SV1VIM9LnCbnIjOolvj8jX3g48Ov9l+Tm2dZvPhpK/tTr
TvtV78ij8PE8wSUn8S54r8sn8voGrWfW/UJ2VkyvVuQ7+Qo+zlP9Ircu5h72
+kv+Njplv1fhR/7j8Ver5L0QkZwyVf+3W6KQt3RYs2JWdHKZnTeb9o9Fvhk+
cuLmccgdMBdl4pN/zwkYlyUheYrnrycnIafLdejXx2TknZ4/vkxJrngqWef9
acj34lXKvCQ9uXPTPo9HZiJHWLtyXoes5Jn/XatdPQc5cymvWPlykfd5ztV5
ydVuYb7ykx+nm1ToSSFyj877P5wsSo6yL3TtuhLkeZi7KaXIOWqVT9GzDPnw
wp43GpQn1369bHKJSuQXmMd0Vcl9h4SLELUGOeZ5331va5GDEzXpcbkuOU/L
8Tl2+pNPbNzzYl4jsv+Pl8GDm5LflE3YoFUL8iDMb8VW5Lj3u53L0Za8PPOS
EfE6kAv2uFT8ayD5LOb6bmdykxjZNx/uRnbrNWy/oid5+NIxacf1IScM23k3
qD95TeHnM2oPIhcbGb9aoaHkSyGloqQYQQ7AcyD8aPJ/bRf1fTGWPGbb+Tzn
JpCT/f3xZtNk8kY8H2ZMI5eaVb9p35nka49HJmo6h9w2x/YQv/nkH308f2BM
nng8TumYS8ip4zi/3GXkbY067bi+klxu1fygvWvItz+eyRS8nhxY4tuj4ZvI
f8dmnNduK3kanjNVd5AzpBkeM89u8u7ALScS7iNX3v1w0M8D5Ad4/jw6TO5a
vdiH48fIEed3WLvmJHn2izktJ50hZ83j+QMz8oGB/12vf4lc40y6ycWukJ96
/rrgdXIvPK8i3yJHW79xb+gd8oKv97pfuk/OWTpGju2PyEfxHJvzlFz3Ttvg
gS/IrzLM8g94Te7v+eOat2TvA3i+vScviZpmRJyP5Hx1qhf/7zP5VPDAL7e/
khu+Wbfp4A/yuwJ32i37TR4yLGraMeFG/eP4FwvcDfQir8TzsGZkcuHW06sW
iEY+v/lI5GQxyc1+vT/015v8Ec/JZ3HJI6dXyXPGh5z4Yb83GxKR12Vds3xa
UnKJXjeb9E5BvnwkUqLGqcmtYuULKZmO/NU/YGyGjORxyz0HU3IK9+DPsGzk
zUXfbb/qSy49OlnQ7tzkG3jeLsxHbp+yz6OhBcm/2q+c26YIefKOa7UqFyen
De8VM1dJ8o4quU/4lCZXmNNs0Pey5LtPJxZ8UIEchOfz0crk8P1D16yqRp5x
MnHLCTXJmeKVT961DnlvE8/BiFx1zbJJRRqSH32+XD5VE3L3kuHCR2xOjjzB
d++rAPLcm427X2hNzp5ufPat7ciHgvY8n9WRXGvvy0X9g8jPIyX0b96V3Kdm
mbhle5BjLOx2Nktv8iI8/737kXPng8APIB8fDCEfTK5/Ltum/cPIoQk9wkwe
GAABHkOOsxFCO568zPPXdSeRC5SFcE4ln5kCgZxBbnyv86Hfs8jvM0Hw5pKH
QUdOLSAnOPQjdF0weXV0CNVSctF6EKQV5IsefVlNbvFu26US68ifC0FINpJH
j4BgbCEnDSkBYSBvSAYB2Eku2RYP+j3kq1vPZJy/n9zmz9eHgw+Rv1fEA/oo
ecJMPIhPkFM9HhbD9zR5K3Qq3jly2T54gF4g3zoWq+C9EHLH2HggXiX/gX6t
uEGeuhIPuNvk9B9PJut8j7yrOB5YD8mVxnoeTOT712qWT/Gc3CU1HjSvyF6B
eKCEkmdB7869I2fxwgPCJe+vhgfBJ3L1eRj4L+Qn0MGm38k9c2OAf5GjDsSg
/iXPP516eMwIo/+xrw8GLyL5SDMMWBRynXXrNu6NTn755Xbb4Fjkfn6ewSDH
moQBiE9efLvV9KoJyXkz4AM6Cfkk9DRRcnKD/e8P/kxJfhsFH4hpyINr4wMu
PTlecL/QNZnIK0JXL5uUlVyoAD5QcpDPDcUHRC5y0wt5LxXLS/4Am01TgDwC
r9vIhcmJNh/8EVqUvBZf/ZdKkIuXxzdAKXKIJ48rQ275oPfDgeXJX6DXAZXI
Y3viC6gqOfmRCDGy1yBvionf4NpkP3/8htUlX182scAdf3K79/veH2xE/un5
4/qm5EkefW9BTnOlXLJOrcjbU+An1JZcvj3+AR3Id6D7yTqRzY8u/4//9f+u
o/2/62j/7zra/7uO9v+uo/2/62j/7zra/7uO9v+uo/2/62j/7zra/7uO9v+u
o/2/62j/7zra/7uO9v+uo/2/62j/7zra/7uO9v+uo/2/62j/7zra/7uO9v+u
o/2/62j/7zra/7uO9v+uo/2/62j/7zra/7uO9v+uo/2/62j/7zra/7uO9v+u
o/2/62j/7zra/7uO9v+uo/2/62j/7zra/7uO9v+uo/2/62j/7zra/7uO9v+u
o/2/62j/7zra/7uO9v+uo/2/62j/7zra/7uO9v+uo/2/62j/7zra/7uO9v+u
o/2/62j/7zra/7uO9v+uo/2/62j/7zra/7uO9v+uo/2/62j/7zra/7uO9v+u
o/2/62j/7zra/7uO9v+uo/2/62j/7zra/7uO9v+uo/2/62j/7zra/7uO9v+u
o/2/62j/7zra/7uO9v+uo/2/62j/7zra/7uO9v+uo/2/62j/7zra/7uO9v+u
o/2/62j/7zra/7uO9v+uo/2/62j/7zra/7uO9v+uo/2/62j/7zra/7uO9v+u
o/2/62j/7zra/7uO9v+uo/2/62j/7zra/7uO9v+uo/2/62j/7zra/7uO9v+u
o/2/62j/7zra/7uO9v+uo/2/62j/7zra/7uO9v/Yf+n/sf/S/2P/pf/H/kv/
j/2X/h/7L/0/9l/6f+y/9P/Yf+n/sf/S/2P/pf/H/kv/j/2X/h/7L/0/9l/6
f+y/9P/Yf+n/sf/S/2P/pf/H/kv/j/2X/h/7L/0/9l/6f+y/9P/Yf+n/sf/S
/2P/pf/H/kv/j/2X/h/7L/0/9l/6f+y/9P/Yf+n/sf/S/2P/pf/H/kv/j/2X
/h/7L/0/9l/6f+y/9P/Yf+n/sf/S/2P/pf/H/kv/j/2X/h/7L/0/9l/6f+y/
9P/Yf+n/sf/S/2P/pf/H/kv/j/2X/h/7L/0/9l/6f+y/9P/Yf+n/sf/S/2P/
pf/H/kv/j/2X/h/7L/0/9l/6f+y/9P/Yf+n/sf/S/2P/pf/H/kv/j/2X/h/7
L/0/9l/6f+y/9P/Yf+n/sf/S/2P/pf/H/kv/j/2X/h/7L/0/9l/6f+y/9P/Y
f+n/sf/S/2P/pf/H/kv/j/2X/h/7L/0/9l/6f+y/9P/Yf+n/sf/S/2P/pf/H
/kv/j/2X/h/7L/0/9l/6f+y/9P/Yf+n/sf/S/2P/pf/H/kv/j/2X/h/7L/0/
9l/6f+y/9P/Yf+n/sf/S/2P/pf/H/kv/j/2X/h/7L/0/9l/6f+y/9P/Yf+n/
sf/S/2P/pf/H/kv/j/2X/h/7L/0/9l/6f+y/9P/Yf+n/sf/S/2P/pf/H/kv/
j/2X/h/7L/0/9l/6f+y/9P/Yf+n/sf/S/2P/pf/H/kv/j/2X/h/7L/0/9l/6
f+y/9P/Yf+n/sf/S/2P/pf/H/kv/j/2X/h/7L/0/9l/6f+y/9P/Yf+n/sf/S
/2P/pf/H/kv/j/2X/h/7L/0/9l/6f+y/9P/Yf+n/sf/S/2P/pf/H/kv/j/2X
/h/7L/0/9l/6f+y/9P/Yf+n/sf/S/2P/pf/H/kv/j/2X/h/7L/0/9l/6f+y/
9P/Yf+n/sf/S/2P/pf/H/kv/j/2X/h/7L/0/9l/6f+y/9P/Yf+n/sf/S/2P/
pf/H/kv/j/2X/h/7L/0/9l/6f+y/9P/Yf+n/sf/S/2P/pf/H/kv/j/2X/h/7
L/0/9l/6f+y/9P/Yf+n/sf/S/2P/pf/H/kv/j/2X/h/7L/0/9l/6f+y/9P/Y
f+n/sf/S/2P/pf/H/kv/j/2X/h/7L/0/9l/6f+y/9P/Yf+n/sf/S/2P/pf/H
/kv/j/2X/h/7L/0/9l/6f+y/9P/Yf+n/sf/S/2P/pf/H/kv/j/2X/h/7L/0/
9l/6f+y/9P/Yf+n/sf/S/2P/pf/H/kv/j/2X/h/7L/0/9l/6f+y/9P/Yf+n/
sf/S/2P/pf/H/kv/7zra/9v3thdZ+3/7/o5K1v7fvse9ydr/2/e5D1n7f/te
T0rW/t++31ORtf+37/kMZO3/7fs+G1n7f/vez03W/t++/wuStf+3PlCMrP2/
9QM/svb/1hcqkLX/t/5Qjaz9v/WJOmTt/61fNCBr/299oxlZ+3/rH63J2v9b
H+lI1v7f+kkXsvb/1ld6kbX/t/4ygKz9v/WZYWTt/63fjCFr/299ZyJZ+3/r
P9PJ2v9bH5pL1v7f+lEwWft/60sryNr/W39aS9b+3/rUZrL2/9avdpK1/7e+
tZ+s/b/1ryNk7f+tj50ia/9v/ewCWft/62tXydr/W3+7Tdb+3/rcA7L2/9bv
npG1/7e+F0rW/t/6n0vW/t/64Bey9v/WD3+Stf+3vviv/3cd7f+tP0Yha/9v
fTIWWft/65fxyNr/W99MTNb+3/pnSrL2/9ZH05O1/7d+mpWs/b/11Zxk7f+t
v+Yna/9vfbYoWft/67elyNr/W98tT9b+3/pvFbL2/9aHa5G1/7d+7E/W/t/6
clOy9v/Wn1uRtf+3Pt2erP2/9evOZO3/rW/3JGv/b/27P1n7f+vjQ8ja/1s/
H0XW/t/6+gSy9v/W36eRtf+3Pj+HrP2/9fuFZO3/re8vI2v/b/1/DVn7f3sP
2ETW/t/eB3aQtf+394K9ZO3/7f3gMFn7f3tPOEnW/t/eF86Ttf+394bLZO3/
7f3hJln7f3uPuE/W/t/eJ56Stf+394rXZO3/7f0ijKz9v71nfCZr/2/vGz/I
2v/be8e//t91tP+394/IZO3/7T0kBln7f3sfiUvW/t/eSxKRtf+395MUZO3/
7T0lLVn7f3tfyUzW/t/eW3zJ2v/b+0s+svb/9h5ThKz9v73POGTt/+29pixZ
+397v6lM1v7f3nNqkrX/t/ed+mTt/+29pzFZ+397/wkga/9v70HtyNr/2/tQ
EFn7f3sv6k7W/t/ej/qStf+396TBZO3/7X1pJFn7f3tvGk/W/t/en6aQtf+3
96hZZO3/7X1qAVn7f3uvWkrW/t/er1aTtf+396wNZO3/7X1rG1n7f3vv2kPW
/t/evw6Rtf+397ATZO3/7X3sLFn7f3svCyFr/2/vZzfI2v/be9o9svb/9r72
mKz9v723vSRr/2/vb+/I2v/be9wnsvb/9j73naz9v73X/SFr/2/vdxHJ2v/b
e150svb/9r4Xh6z9v733JSRr/2/vf8nI2v/be2Aasvb/9j6Yiaz9v70X5iBr
/2/vh3nI2v/be2Ihsvb/9r5Ygqz9v703liFr/2/vj5XI2v/be2R1svb/9j5Z
l6z9v71XNiJr/2/vly3I2v/be2Zbsvb/9r4ZSNb+3947u5G1/7f3zz5k7f/t
PXQQWft/ex8dTtb+395Lx5K1/7f308lk7f/tPXUmWft/e1+dT9b+395bF5O1
/7f315Vk7f/tPXY9Wft/e5/dStb+395rd5O1/7f32wNk7f/tPfcYWft/e989
Q9b+3957L5G1/7f332tk7f/tPfgOWft/ex9+RNb+396LX5C1/7f347dk7f/t
PfkDWft/e1/+Stb+396bf5O1/7f3Zy+y9v/2Hh2NrP2/vU97k7X/t/dqH7L2
//Z+nZSs/T/8X/p/+L/0//B/6f/h/9L/w/+l/4f/S/8P/5f+H/4v/T/8X/p/
+L/0//B/6f/h/9L/w/+l/4f/S/8P/5f+H/4v/T/8X/p/+L/0//B/6f/h/9L/
w/+l/4f/S/8P/5f+H/4v/T/8X/p/+L/0//B/6f/h/9L/w/+l/4f/S/8P/5f+
H/4v/T/8X/p/+L/0//B/6f/h/9L/w/+l/4f/S/8P/5f+H/4v/T/8X/p/+L/0
//B/6f/h/9L/w/+l/4f/S/8P/5f+H/4v/T/8X/p/+L/0//B/6f/h/9L/w/+l
/4f/S/8P/5f+H/4v/T/8X/p/+L/0//B/6f/h/9L/w/+l/4f/S/8P/5f+H/4v
/T/8X/p/+L/0//B/6f/h/9L/w/+l/4f/S/8P/5f+H/4v/T/8X/p/+L/0//B/
6f/h/9L/w/+l/4f/S/8P/5f+H/4v/T/8X/p/+L/0//B/6f/h/9L/w/+l/4f/
S/8P/5f+H/4v/T/8X/p/+L/0//B/6f/h/9L/w/+l/4f/S/8P/5f+H/4v/T/8
X/p/+L/0//B/6f/h/9L/w/+l/4f/S/8P/5f+H/4v/T/8X/p/+L/0//B/6f/h
/9L/w/+l/4f/S/8P/5f+H/4v/T/8X/p/+L/0//B/6f/h/9L/w/+l/4f/S/8P
/5f+H/4v/T/8X/p/+L/0//B/6f/h/9L/w/+l/4f/S/8P/5f+H/4v/T/8X/p/
+L/0//B/6f/h/9L/w/+l/4f/S/8P/5f+H/4v/T/8X/p/+L/0//B/6f/h/9L/
w/+l/4f/S/8P/5f+H/4v/T/8X/p/+L/0//B/6f/h/9L/w/+l/4f/S/8P/5f+
H/4v/T/8X/p/+L/0//B/6f/h/9L/w/+l/4f/S/8P/5f+H/4v/T/8X/p/+L/0
//B/6f/h/9L/w/+l/4f/S/8P/5f+H/4v/T/8X/p/+L/0//B/6f/h/9L/w/+l
/4f/S/8P/5f+H/4v/T/8X/p/+L/0//B/6f/h/9L/w/+l/4f/S/8P/5f+H/4v
/T/8X/p/+L/0//B/6f/h/9L/w/+l/4f/S/8P/5f+H/4v/T/8X/p/+L/0//B/
6f/h/9L/w/+l/4f/S/8P/5f+H/4v/T/8X/p/+L/0//B/6f/h/9L/w/+l/4f/
S/8P/5f+H/4v/T/8X/p/+L/0//B/6f/h/9L/w/+l/4f/S/8P/5f+H/4v/T/8
X/p/+L/0//B/6f/h/9L/w/+l/4f/S/8P/5f+H/4v/T/8X/p/+L/0//B/6f/h
/9L/w/+l/4f/S/8P/5f+H/4v/T/8X/p/+L/0//B/6f/h/9L/w/+l/4f/S/8P
/5f+H/4v/T/8X/p/+L/0//B/6f/h/9L/w/+l/4f/S/8P/5f+H/4v/T/8X/p/
+L/0//B/6f/h/9L/w/+l/4f/S/8P/5f+H/4v/T/8X/p/+L/0//B/6f/h/9L/
w/+l/4f/S/8P/5f+H/4v/T/8X/p/+L/0//B/6f/h/9L/w/+l/4f/S/8P/5f+
H/4v/T/8X/p/+L/0//B/6f/h/9L/w/+l/4f/S/8P/5f+H/4v/T/8X/p/+L/0
//B/6f/h/9L/w/+l/4f/S/8P/5f+H/4v/T/8X/p/+L/0//B/6f/h/9L/w/+l
/4fve350If8PdkCVRA==
               "], {{{
                  EdgeForm[], 
                  Hue[0.67, 0.6, 0.6], 
                  GraphicsGroupBox[
                   TagBox[{
                    PolygonBox[CompressedData["
1:eJwl23f4LuQcx/Fzfr97NEQiGRnhREgZGUVGEkpISVQakhLJKkoqQlaDiJB1
lEKD7Aptqx1KGQ1b2Qrl+/L54315+47Pdd/39TzPdc65WGuXvbd61cKSJUtu
X1yypNV/Li3894X6L0tbfBEttVE+wVt8BbTU+pLM6PWWXbmtJYOb0VOzuyJa
Mu5Qvgp4sVL5yuDFHcvvBN6ya0ZPhl0zejLsypQl4z7l9wVv8fuhpXbn8tXA
W/wuaKndrXwN8Ba/O1pqqy/JjN7qLbt3RUuGs6+KljvYvQdaMtYsvzd4cc/y
e4G37Dqjs8mwa0ZPhl13dDcZdmXKkuEszuhszuTua6HlDR5dvgF4cf/yB4AX
a5c/CLzFH4yW2rIlmdFb1rL7QLRkcDN6anbXQUvGw8rXBS8eUv5Q8OLh5euB
t+ya0ZNh14yeDLsyZcnYuPxJ4C13d0d38waPKH8keIs/Ci21x5Q/FrzFH4eW
mrczo+cN7XpTbynD2ddHyx3sPh4tGU8ofyJ4sWH5RuAtu87obDLsmtGTYdcd
3U2GXZmyZBxY/hbwFj8ILbWnlD8VvMU3QUvt6eWbgbf4M9BS23RJZvQ2bdl9
GloyuBk9NbvPREvGFuXPBi+eVb45eLFl+XPAW3bN6Mmwa0ZPhl2ZsmTsWP4S
8BbfCS2155VvBd7iz0dL7QXl24K3+AvRUttmSWb0tmnZ3RotGc7+XLTcwe52
aMnYvnwH8OJF5S8Gb9l1RmeTYdeMngy77uhuMuzKlCXDZ//JaPkOuPvOaHmD
15W/HrzYpXxX8OJl5buDt/jL0VLbbUlm9HZr2X0pWjK4GT01u3ugJWOv8leC
F3uWvwK8eFX53uAtu2b0ZNg1oyfDrkxZMtzdZ9xn2xu4uzu6mzfYp/w14C3+
WrTU3lC+L3iL74eWmrczo+cN7XpTbynD2V+NljvYfSNaMg4ofzN48aby/cFb
dp3R2WTYNaMnw67vuO+2DLsyZcnwWfQZ9dn0mTyo/GC0/AZcXn4FeHFI+VvB
i7eXvwO8xd+JltqhSzKjd2jL7tvQksHN6KnZPQwtGe8pfy948a7yd4MX7ys/
HLxl14yeDLtm9GTYlSlLxsfLjwNv8U+gpXZk+VHgLf5+tNQ+WP4h8BY/Bi21
o5dkRu/olt0PoCXD2Y9Ayx3sfhgtGR8t/xh48ZHyY8Fbdp3R2WTYNaMnw647
upsMuzJlyXAWZ3Q2Z3L3T6LlDb5cfjp48anyT4MXny0/HrzFT0BLbfmSzOgt
b9n9DFoyuBk9NbufQ0vG58u/AF6cWH4SePHF8pPBW3bN6Mmwa0ZPhl2ZsmSc
WX4WeMvd3dHdvMGp5aeBt/iX0FL7SvlXwVv8a2ipeTszet7Qrjf1ljKc/RS0
3MHu19GS8a3yM8CLb5R/E7xl1xmdTYZdM3oy7Lqju8mwK1OWjNvKbwdv+e77
jvtu+w34Tvl3wVv8bLTUzis/H7zFL0BL7dwlmdE7t2X3HLRkcDN6anYvREvG
D8p/CF58r/z74MWPyi8Cb9k1oyfDrhk9GXZlypJxbfnPwVv8F2ipXVJ+KXiL
X4aW2pXlPwZv8Z+gpea304ye31C7flP9lspw9ovRcge7P0VLxs/KrwEvriq/
Grxl1xmdTYZdM3oy7Lqju8mwK1OWDJ/9b6PlO+Duv0TLG/yt/O/gxa/KrwMv
biz/NXiL/wYttRuWZEbvhpbd69GSwc3oqdn9LVoy/lD+R/Did+W/By/+VH4T
eMuuGT0Zds3oybArU5YMd/cZ99n2Bu7uju7mDf5c/hfwFv8rWmr/KP8neIv/
Cy01b2dGzxva9abeUoaz34yWO9i9BS0Z/yn/L3hxa/m/wVt2ndHZZNg1oyfD
ru+477YMuzJlybit/oJ/O+ov4bf1+P//kj9SW1r/fQG8xxfRUxvlE7zHV0BP
rS/NjF7v2W3oyeBm9NTsroiejDuUrwJerFS+Mnhxx/I7gffsmtGTYdeMngy7
MmXJuE/5fcF7/H7oqd25fDXwHr8Lemp3K18DvMfvjp7a6kszo7d6z+5d0ZPh
7Kui5w5274GejDXL7w1e3LP8XuA9u87obDLsmtGTYdcd3U2GXZmyZDiLMzqb
M7n7Wuh5g0eXbwBe3L/8AeDF2uUPAu/xB6OntmxpZvSW9ew+ED0Z3Iyemt11
0JPxsPJ1wYuHlD8UvHh4+XrgPbtm9GTYNaMnw65MWTI2Ln8SeM/d3dHdvMEj
yh8J3uOPQk/tMeWPBe/xx6Gn5u3M6HlDu97UW8pw9vXRcwe7j0dPxhPKnwhe
bFi+EXjPrjM6mwy7ZvRk2HVHd5NhV6YsGQeWvwW8xw9CT+0p5U8F7/FN0FN7
evlm4D3+DPTUNl2aGb1Ne3afhp4MbkZPze4z0ZOxRfmzwYtnlW8OXmxZ/hzw
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
TM2/nZrR82+odv2bqn9LleHsz8XMHexuh5mM7ct3AC9eVP5i8JldZ3Q2GXbN
6Mmw647uJsOuTFkyfPafjJnvgLvvjJk3eF3568GLXcp3BS9eVr47+Iy/HDO1
3RYzo7fbzO5LMZPBzeip2d0DMxl7lb8SvNiz/BXgxavK9waf2TWjJ8OuGT0Z
dmXKkuHuPuM+297A3d3R3bzBPuWvAZ/x12Km9obyfcFnfD/M1LydGT1vaNeb
eksZzv5qzNzB7hsxk3FA+ZvBizeV7w8+s+uMzibDrhk9GXZ9x323ZdiVKUuG
P/v///+UN/N3AN/9gzHzG3B5+RXgxSHlbwUv3l7+DvAZfydmaocuZkbv0Jnd
t2Emg5vRU7N7GGYy3lP+XvDiXeXvBi/eV344+MyuGT0Zds3oybArU5aMj5cf
Bz7jn8BM7cjyo8Bn/P2YqX2w/EPgM34MZmpHL2ZG7+iZ3Q9gJsPZj8DMHex+
GDMZHy3/GHjxkfJjwWd2ndHZZNg1oyfDrju6mwy7MmXJcBZndDZncvdPYuYN
vlx+OnjxqfJPgxefLT8efMZPwExt+WJm9JbP7H4GMxncjJ6a3c9hJuPz5V8A
L04sPwm8+GL5yeAzu2b0ZNg1oyfDrkxZMs4sPwt85u7u6G7e4NTy08Bn/EuY
qX2l/KvgM/41zNS8nRk9b2jXm3pLGc5+CmbuYPfrmMn4VvkZ4MU3yr8JPrPr
jM4mw64ZPRl23dHdZNiVKUuG774/4/uzvd8A333fcd9tvwHfKf8u+IyfjZna
eeXng8/4BZipnbuYGb1zZ3bPwUwGN6OnZvdCzGT8oPyH4MX3yr8PXvyo/CLw
mV0zejLsmtGTYVemLBnXlv8cfMZ/gZnaJeWXgs/4ZZipXVn+Y/AZ/wlman47
zej5DbXrN9VvqQxnvxgzd7D7U8xk/Kz8GvDiqvKrwWd2ndHZZNg1oyfDrju6
mwy7MmXJ8Nn/Nma+A+7+S8y8wd/K/w5e/Kr8OvDixvJfg8/4bzBTu2ExM3o3
zOxej5kMbkZPze5vMZPxh/I/ghe/K/89ePGn8pvAZ3bN6Mmwa0ZPhl2ZsmS4
u8+4z7Y3cHd3dDdv8Ofyv4DP+F8xU/tH+T/BZ/xfmKl5OzN63tCuN/WWMpz9
Zszcwe4tmMn4T/l/wYtby/8NPrPrjM4mw64ZPRl2/R3f3+1l2JUpS4a/+///
/4S/Qv4N4H94UjMx
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$1919200#1"]& ]]}, {}, {}, {}, {}}, {{
                  Directive[
                   RGBColor[0.39598880819409377`, 0.24, 0.6]], 
                  LineBox[CompressedData["
1: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
iAD/b/H/tvp/x31/R/5/135/v/1/n/7/AS49GgM=
                   "], VertexColors -> None]}}}, VertexColors -> {{
                  Opacity[0.2], 
                  RGBColor[0., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.003432003806042654, 0., 0.00723362658846554]}, {
                  Opacity[0.2], 
                  RGBColor[0.006864007612085308, 0., 0.01446725317693108]}, {
                  Opacity[0.2], 
                  RGBColor[0.010296011418127962`, 0., 0.02170087976539662]}, {
                  Opacity[0.2], 
                  RGBColor[0.013728015224170616`, 0., 0.02893450635386216]}, {
                  Opacity[0.2], 
                  RGBColor[0.01716001903021327, 0., 0.0361681329423277]}, {
                  Opacity[0.2], 
                  RGBColor[0.020592022836255924`, 0., 0.04340175953079324]}, {
                  Opacity[0.2], 
                  RGBColor[0.02402402664229858, 0., 0.05063538611925878]}, {
                  Opacity[0.2], 
                  RGBColor[0.02745603044834123, 0., 0.05786901270772432]}, {
                  Opacity[0.2], 
                  RGBColor[0.030888034254383887`, 0., 0.06510263929618987]}, {
                  Opacity[0.2], 
                  RGBColor[0.03432003806042654, 0., 0.0723362658846554]}, {
                  Opacity[0.2], 
                  RGBColor[0.037752041866469195`, 0., 0.07956989247312095]}, {
                  Opacity[0.2], 
                  RGBColor[0.04118404567251185, 0., 0.08680351906158648]}, {
                  Opacity[0.2], 
                  RGBColor[0.044616049478554506`, 0., 0.09403714565005203]}, {
                  Opacity[0.2], 
                  RGBColor[0.04804805328459716, 0., 0.10127077223851756`]}, {
                  Opacity[0.2], 
                  RGBColor[0.05148005709063981, 0., 0.10850439882698311`]}, {
                  Opacity[0.2], 
                  RGBColor[0.05491206089668246, 0., 0.11573802541544864`]}, {
                  Opacity[0.2], 
                  RGBColor[0.05834406470272512, 0., 0.12297165200391419`]}, {
                  Opacity[0.2], 
                  RGBColor[0.061776068508767774`, 0., 0.13020527859237974`]}, {
                  Opacity[0.2], 
                  RGBColor[0.06520807231481043, 0., 0.13743890518084528`]}, {
                  Opacity[0.2], 
                  RGBColor[0.06864007612085309, 0., 0.1446725317693108]}, {
                  Opacity[0.2], 
                  RGBColor[0.07207207992689574, 0., 0.15190615835777635`]}, {
                  Opacity[0.2], 
                  RGBColor[0.07550408373293839, 0., 0.1591397849462419]}, {
                  Opacity[0.2], 
                  RGBColor[0.07893608753898104, 0., 0.16637341153470744`]}, {
                  Opacity[0.2], 
                  RGBColor[0.0823680913450237, 0., 0.17360703812317296`]}, {
                  Opacity[0.2], 
                  RGBColor[0.08580009515106635, 0., 0.1808406647116385]}, {
                  Opacity[0.2], 
                  RGBColor[0.08923209895710901, 0., 0.18807429130010406`]}, {
                  Opacity[0.2], 
                  RGBColor[0.09266410276315167, 0., 0.1953079178885696]}, {
                  Opacity[0.2], 
                  RGBColor[0.09609610656919432, 0., 0.20254154447703512`]}, {
                  Opacity[0.2], 
                  RGBColor[0.09952811037523697, 0., 0.20977517106550067`]}, {
                  Opacity[0.2], 
                  RGBColor[0.10296011418127962`, 0., 0.21700879765396622`]}, {
                  Opacity[0.2], 
                  RGBColor[0.10639211798732227`, 0., 0.22424242424243176`]}, {
                  Opacity[0.2], 
                  RGBColor[0.10982412179336493`, 0., 0.23147605083089728`]}, {
                  Opacity[0.2], 
                  RGBColor[0.11325612559940759`, 0., 0.23870967741936283`]}, {
                  Opacity[0.2], 
                  RGBColor[0.11668812940545024`, 0., 0.24594330400782838`]}, {
                  Opacity[0.2], 
                  RGBColor[0.1201201332114929, 0., 0.2531769305962939]}, {
                  Opacity[0.2], 
                  RGBColor[0.12355213701753555`, 0., 0.2604105571847595]}, {
                  Opacity[0.2], 
                  RGBColor[0.1269841408235782, 0., 0.267644183773225]}, {
                  Opacity[0.2], 
                  RGBColor[0.13041614462962087`, 0., 0.27487781036169057`]}, {
                  Opacity[0.2], 
                  RGBColor[0.1338481484356635, 0., 0.28211143695015606`]}, {
                  Opacity[0.2], 
                  RGBColor[0.13728015224170617`, 0., 0.2893450635386216]}, {
                  Opacity[0.2], 
                  RGBColor[0.1407121560477488, 0., 0.29657869012708715`]}, {
                  Opacity[0.2], 
                  RGBColor[0.14414415985379148`, 0., 0.3038123167155527]}, {
                  Opacity[0.2], 
                  RGBColor[0.14757616365983411`, 0., 0.31104594330401825`]}, {
                  Opacity[0.2], 
                  RGBColor[0.15100816746587678`, 0., 0.3182795698924838]}, {
                  Opacity[0.2], 
                  RGBColor[0.15444017127191945`, 0., 0.32551319648094934`]}, {
                  Opacity[0.2], 
                  RGBColor[0.15787217507796208`, 0., 0.3327468230694149]}, {
                  Opacity[0.2], 
                  RGBColor[0.16130417888400475`, 0., 0.3399804496578804]}, {
                  Opacity[0.2], 
                  RGBColor[0.1647361826900474, 0., 0.3472140762463459]}, {
                  Opacity[0.2], 
                  RGBColor[0.16816818649609006`, 0., 0.3544477028348115]}, {
                  Opacity[0.2], 
                  RGBColor[0.1716001903021327, 0., 0.361681329423277]}, {
                  Opacity[0.2], 
                  RGBColor[0.17503219410817536`, 0., 0.36891495601174257`]}, {
                  Opacity[0.2], 
                  RGBColor[0.17846419791421803`, 0., 0.3761485826002081]}, {
                  Opacity[0.2], 
                  RGBColor[0.18189620172026066`, 0., 0.38338220918867366`]}, {
                  Opacity[0.2], 
                  RGBColor[0.18532820552630333`, 0., 0.3906158357771392]}, {
                  Opacity[0.2], 
                  RGBColor[0.18876020933234597`, 0., 0.39784946236560476`]}, {
                  Opacity[0.2], 
                  RGBColor[0.19219221313838863`, 0., 0.40508308895407025`]}, {
                  Opacity[0.2], 
                  RGBColor[0.19562421694443127`, 0., 0.4123167155425358]}, {
                  Opacity[0.2], 
                  RGBColor[0.19905622075047394`, 0., 0.41955034213100134`]}, {
                  Opacity[0.2], 
                  RGBColor[0.2024882245565166, 0., 0.4267839687194669]}, {
                  Opacity[0.2], 
                  RGBColor[0.20592022836255924`, 0., 0.43401759530793244`]}, {
                  Opacity[0.2], 
                  RGBColor[0.2093522321686019, 0., 0.441251221896398]}, {
                  Opacity[0.2], 
                  RGBColor[0.21278423597464455`, 0., 0.44848484848486353`]}, {
                  Opacity[0.2], 
                  RGBColor[0.2162162397806872, 0., 0.4557184750733291]}, {
                  Opacity[0.2], 
                  RGBColor[0.21964824358672985`, 0., 0.46295210166179457`]}, {
                  Opacity[0.2], 
                  RGBColor[0.22308024739277252`, 0., 0.4701857282502601]}, {
                  Opacity[0.2], 
                  RGBColor[0.22651225119881518`, 0., 0.47741935483872566`]}, {
                  Opacity[0.2], 
                  RGBColor[0.22994425500485782`, 0., 0.4846529814271912]}, {
                  Opacity[0.2], 
                  RGBColor[0.2333762588109005, 0., 0.49188660801565676`]}, {
                  Opacity[0.2], 
                  RGBColor[0.23680826261694313`, 0., 0.4991202346041223]}, {
                  Opacity[0.2], 
                  RGBColor[0.2402402664229858, 0., 0.5063538611925879]}, {
                  Opacity[0.2], 
                  RGBColor[0.24367227022902843`, 0., 0.5135874877810533]}, {
                  Opacity[0.2], 
                  RGBColor[0.2471042740350711, 0., 0.520821114369519]}, {
                  Opacity[0.2], 
                  RGBColor[0.25053627784111376`, 0., 0.5280547409579844]}, {
                  Opacity[0.2], 
                  RGBColor[0.2539682816471564, 0., 0.53528836754645]}, {
                  Opacity[0.2], 
                  RGBColor[0.25740028545319904`, 0., 0.5425219941349155]}, {
                  Opacity[0.2], 
                  RGBColor[0.26083228925924173`, 0., 0.5497556207233811]}, {
                  Opacity[0.2], 
                  RGBColor[0.2642642930652844, 0., 0.5569892473118466]}, {
                  Opacity[0.2], 
                  RGBColor[0.267696296871327, 0., 0.5642228739003121]}, {
                  Opacity[0.2], 
                  RGBColor[0.27112830067736965`, 0., 0.5714565004887777]}, {
                  Opacity[0.2], 
                  RGBColor[0.27456030448341234`, 0., 0.5786901270772432]}, {
                  Opacity[0.2], 
                  RGBColor[0.277992308289455, 0., 0.5859237536657088]}, {
                  Opacity[0.2], 
                  RGBColor[0.2814243120954976, 0., 0.5931573802541743]}, {
                  Opacity[0.2], 
                  RGBColor[0.2848563159015403, 0., 0.6003910068426399]}, {
                  Opacity[0.2], 
                  RGBColor[0.28828831970758295`, 0., 0.6076246334311054]}, {
                  Opacity[0.2], 
                  RGBColor[0.2917203235136256, 0., 0.614858260019571]}, {
                  Opacity[0.2], 
                  RGBColor[0.29515232731966823`, 0., 0.6220918866080365]}, {
                  Opacity[0.2], 
                  RGBColor[0.2985843311257109, 0., 0.629325513196502]}, {
                  Opacity[0.2], 
                  RGBColor[0.30201633493175356`, 0., 0.6365591397849676]}, {
                  Opacity[0.2], 
                  RGBColor[0.3054483387377962, 0., 0.6437927663734331]}, {
                  Opacity[0.2], 
                  RGBColor[0.3088803425438389, 0., 0.6510263929618987]}, {
                  Opacity[0.2], 
                  RGBColor[0.31231234634988153`, 0., 0.6582600195503642]}, {
                  Opacity[0.2], 
                  RGBColor[0.31574435015592417`, 0., 0.6654936461388298]}, {
                  Opacity[0.2], 
                  RGBColor[0.3191763539619668, 0., 0.6727272727272953]}, {
                  Opacity[0.2], 
                  RGBColor[0.3226083577680095, 0., 0.6799608993157608]}, {
                  Opacity[0.2], 
                  RGBColor[0.32604036157405214`, 0., 0.6871945259042264]}, {
                  Opacity[0.2], 
                  RGBColor[0.3294723653800948, 0., 0.6944281524926919]}, {
                  Opacity[0.2], 
                  RGBColor[0.33290436918613747`, 0., 0.7016617790811575]}, {
                  Opacity[0.2], 
                  RGBColor[0.3363363729921801, 0., 0.708895405669623]}, {
                  Opacity[0.2], 
                  RGBColor[0.33976837679822275`, 0., 0.7161290322580885]}, {
                  Opacity[0.2], 
                  RGBColor[0.3432003806042654, 0., 0.723362658846554]}, {
                  Opacity[0.2], 
                  RGBColor[0.3466323844103081, 0., 0.7305962854350196]}, {
                  Opacity[0.2], 
                  RGBColor[0.3500643882163507, 0., 0.7378299120234851]}, {
                  Opacity[0.2], 
                  RGBColor[0.35349639202239336`, 0., 0.7450635386119506]}, {
                  Opacity[0.2], 
                  RGBColor[0.35692839582843605`, 0., 0.7522971652004162]}, {
                  Opacity[0.2], 
                  RGBColor[0.3603603996344787, 0., 0.7595307917888817]}, {
                  Opacity[0.2], 
                  RGBColor[0.36379240344052133`, 0., 0.7667644183773473]}, {
                  Opacity[0.2], 
                  RGBColor[0.36722440724656397`, 0., 0.7739980449658128]}, {
                  Opacity[0.2], 
                  RGBColor[0.37065641105260666`, 0., 0.7812316715542784]}, {
                  Opacity[0.2], 
                  RGBColor[0.3740884148586493, 0., 0.7884652981427439]}, {
                  Opacity[0.2], 
                  RGBColor[0.37752041866469194`, 0., 0.7956989247312095]}, {
                  Opacity[0.2], 
                  RGBColor[0.38095242247073463`, 0., 0.802932551319675]}, {
                  Opacity[0.2], 
                  RGBColor[0.38438442627677727`, 0., 0.8101661779081405]}, {
                  Opacity[0.2], 
                  RGBColor[0.3878164300828199, 0., 0.8173998044966061]}, {
                  Opacity[0.2], 
                  RGBColor[0.39124843388886255`, 0., 0.8246334310850716]}, {
                  Opacity[0.2], 
                  RGBColor[0.39468043769490524`, 0., 0.8318670576735372]}, {
                  Opacity[0.2], 
                  RGBColor[0.3981124415009479, 0., 0.8391006842620027]}, {
                  Opacity[0.2], 
                  RGBColor[0.4015444453069905, 0., 0.8463343108504683]}, {
                  Opacity[0.2], 
                  RGBColor[0.4049764491130332, 0., 0.8535679374389338]}, {
                  Opacity[0.2], 
                  RGBColor[0.40840845291907585`, 0., 0.8608015640273994]}, {
                  Opacity[0.2], 
                  RGBColor[0.4118404567251185, 0., 0.8680351906158649]}, {
                  Opacity[0.2], 
                  RGBColor[0.4152724605311611, 0., 0.8752688172043304]}, {
                  Opacity[0.2], 
                  RGBColor[0.4187044643372038, 0., 0.882502443792796]}, {
                  Opacity[0.2], 
                  RGBColor[0.42213646814324646`, 0., 0.8897360703812615]}, {
                  Opacity[0.2], 
                  RGBColor[0.4255684719492891, 0., 0.8969696969697271]}, {
                  Opacity[0.2], 
                  RGBColor[0.4290004757553318, 0., 0.9042033235581926]}, {
                  Opacity[0.2], 
                  RGBColor[0.4324324795613744, 0., 0.9114369501466582]}, {
                  Opacity[0.2], 
                  RGBColor[0.43586448336741707`, 0., 0.9186705767351236]}, {
                  Opacity[0.2], 
                  RGBColor[0.4392964871734597, 0., 0.9259042033235891]}, {
                  Opacity[0.2], 
                  RGBColor[0.4427284909795024, 0., 0.9331378299120547]}, {
                  Opacity[0.2], 
                  RGBColor[0.44616049478554504`, 0., 0.9403714565005202]}, {
                  Opacity[0.2], 
                  RGBColor[0.4495924985915877, 0., 0.9476050830889858]}, {
                  Opacity[0.2], 
                  RGBColor[0.45302450239763037`, 0., 0.9548387096774513]}, {
                  Opacity[0.2], 
                  RGBColor[0.456456506203673, 0., 0.9620723362659169]}, {
                  Opacity[0.2], 
                  RGBColor[0.45988851000971565`, 0., 0.9693059628543824]}, {
                  Opacity[0.2], 
                  RGBColor[0.4633205138157583, 0., 0.976539589442848]}, {
                  Opacity[0.2], 
                  RGBColor[0.466752517621801, 0., 0.9837732160313135]}, {
                  Opacity[0.2], 
                  RGBColor[0.4701845214278436, 0., 0.991006842619779]}, {
                  Opacity[0.2], 
                  RGBColor[0.47361652523388625`, 0., 0.9982404692082446]}, {
                  Opacity[0.2], 
                  RGBColor[0.47463878166510826`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47488647644015736`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4751341712152065, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47538186599025567`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47562956076530477`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4758772555403539, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47612495031540303`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4763726450904522, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47662033986550134`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47686803464055044`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4771157294155996, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47736342419064876`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47761111896569786`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.477858813740747, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4781065085157961, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47835420329084527`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4786018980658944, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4788495928409435, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4790972876159927, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47934498239104184`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47959267716609094`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4798403719411401, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4800880667161892, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.48033576149123836`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4805834562662875, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4808311510413366, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.48107884581638577`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.48092405257339577`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47744873318177455`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4739734137901533, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4704980943985321, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4670227750069108, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.46354745561528954`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.46007213622366827`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.45659681683204706`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4531214974404258, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4496461780488046, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4461708586571833, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.44269553926556204`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4392202198739408, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.43574490048231956`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4322695810906983, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4287942616990771, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4253189423074558, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.42184362291583455`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4183683035242133, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.41489298413259207`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4114176647409708, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4079423453493496, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4044670259577283, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.40099170656610705`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3975163871744858, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3940410677828646, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3905657483912433, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3870904289996221, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3818412089481284, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3745050469438981, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3671688849396678, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3598327229354375, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.35249656093120724`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3451603989269769, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.33782423692274666`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.33048807491851634`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3231519129142861, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.31581575091005576`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3084795889058255, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3011434269015952, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.29380726489736486`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.2864711028931346, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.2772751690491151, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.2670108556375891, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.256746542226063, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.24648222881453705`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.23621791540301101`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.225953601991485, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.215689288579959, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.205424975168433, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.195160661756907, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.184896348345381, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.17463203493385498`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.16436772152232898`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.15410340811080295`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.14383909469927694`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.13357478128775094`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.12331046787622493`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.11304615446469893`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.10278184105317292`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.09251752764164689, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.08225321423012089, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.07198890081859488, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.061724587407068876`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.05146027399554287, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.041195960584016866`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.03093164717249086, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.020667333760964857`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.010403020349438852`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.00013870693791279143`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.012580593983232156`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.02533352487024245, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.038086455757252745`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.050839386644263046`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.06359231753127334, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.07634524841828363, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.08909817930529393, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.10185111019230422`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.11460404107931452`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.1273569719663248, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.1401099028533351, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.1528628337403454, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.1656157646273557, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.1785492364508735, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.19241550311295635`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.20628176977503918`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.22014803643712202`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.23401430309920485`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.2478805697612877, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.2617468364233705, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.27561310308545334`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.2894793697475362, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.303345636409619, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.3172119030717019, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.3310781697337847, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.3449444363958675, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.3588107030579504, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.3708394818213784, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.3792667843035846, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.38769408678579087`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.3961213892679971, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.40454869175020336`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.4129759942324096, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.42140329671461585`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.4298305991968221, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.43825790167902834`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.4466852041612346, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.45511250664344083`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.4635398091256471, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.4719671116078533, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.48039441409005956`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.4896124225460928, 0.9975760114650513]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.49957952087203966`, 0.9928556127391835]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.5095466191979865, 0.9881352140133158]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.5195137175239334, 0.9834148152874482]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.5294808158498803, 0.9786944165615805]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.539447914175827, 0.9739740178357128]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.5494150125017739, 0.9692536191098451]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.5593821108277208, 0.9645332203839774]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.5693492091536676, 0.9598128216581098]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.5793163074796145, 0.9550924229322421]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.5892834058055614, 0.9503720242063743]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.5992505041315083, 0.9456516254805066]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.609217602457455, 0.9409312267546389]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.6191847007834019, 0.9362108280287713]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.6291517991093488, 0.9314904293029036]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.6391188974352957, 0.9267700305770359]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.6490859957612425, 0.9220496318511682]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.6590530940871894, 0.9173292331253005]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.6690201924131363, 0.9126088343994329]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.678987290739083, 0.9078884356735651]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.6889543890650299, 0.9031680369476974]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.6989214873909768, 0.8984476382218297]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.7088885857169237, 0.893727239495962]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.7188556840428706, 0.8890068407700944]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.7288227823688174, 0.8842864420442267]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.7387898806947643, 0.879566043318359]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.7487569790207111, 0.8748456445924913]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.7587240773466579, 0.8701252458666235]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.7686911756726048, 0.8654048471407558]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.7786582739985517, 0.8606844484148882]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.7886253723244985, 0.8559640496890205]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.7985924706504454, 0.8512436509631528]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.8085595689763923, 0.8465232522372851]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.818526667302339, 0.8418028535114175]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.828493765628286, 0.8370824547855498]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.8384608639542328, 0.832362056059682]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.8484279622801797, 0.8276416573338143]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.8583950606061266, 0.8229212586079466]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.8683621589320734, 0.8182008598820789]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.8783292572580202, 0.8134804611562113]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.8882963555839671, 0.8087600624303436]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.8979418373278871, 0.8037987742467485]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.8999757266325897, 0.7931364355651659]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9020096159372923, 0.7824740968835833]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9040435052419951, 0.7718117582020007]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9060773945466977, 0.761149419520418]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9081112838514003, 0.7504870808388354]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9101451731561029, 0.7398247421572528]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9121790624608055, 0.7291624034756702]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9142129517655081, 0.7185000647940876]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9162468410702107, 0.707837726112505]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9182807303749134, 0.6971753874309223]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.920314619679616, 0.6865130487493397]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9223485089843186, 0.6758507100677571]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9243823982890212, 0.6651883713861745]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9264162875937239, 0.6545260327045919]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9284501768984265, 0.6438636940230092]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9304840662031291, 0.6332013553414266]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9325179555078317, 0.622539016659844]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9345518448125344, 0.6118766779782614]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.936585734117237, 0.6012143392966788]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9386196234219396, 0.5905520006150962]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9406535127266422, 0.5798896619335135]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9426874020313448, 0.5692273232519309]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9447212913360474, 0.5585649845703483]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.94675518064075, 0.5479026458887657]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9487890699454526, 0.5372403072071831]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9508229592501554, 0.5265779685256005]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.952856848554858, 0.5159156298440178]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9548907378595606, 0.5052532911624352]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9569246271642632, 0.4945909524808526]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9589585164689658, 0.48392861379927]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9609924057736684, 0.4732662751176874]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.963026295078371, 0.46260393643610476`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9650601843830737, 0.45194159775452214`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9670940736877763, 0.4412792590729395]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9691279629924789, 0.43061692039135685`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9711618522971815, 0.41995458170977423`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9731957416018842, 0.4092922430281916]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9752296309065868, 0.398629904346609]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9772635202112894, 0.3879675656650264]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9792974095159921, 0.37730522698344376`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9813312988206947, 0.36664288830186115`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9825759923333812, 0.35460040229211515`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.983219393814085, 0.3415063754609629]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9838627952947888, 0.32841234862981067`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9845061967754926, 0.31531832179865843`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9851495982561964, 0.3022242949675062]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9857929997369002, 0.28913026813635395`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.986436401217604, 0.2760362413052017]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9870798026983078, 0.2629422144740495]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9877232041790116, 0.24984818764289723`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9883666056597153, 0.23675416081174502`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9890100071404192, 0.22366013398059278`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9896534086211229, 0.21056610714944055`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9902968101018268, 0.1974720803182883]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9909402115825305, 0.18437805348713607`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9915836130632344, 0.17128402665598383`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9922270145439381, 0.1581899998248316]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.992870416024642, 0.14509597299367935`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9935138175053457, 0.1320019461625271]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9941572189860496, 0.11890791933137487`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9948006204667533, 0.1058138925002226]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9954440219474572, 0.09271986566907037]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9960874234281609, 0.07962583883791813]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9967308249088648, 0.06653181200676594]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9973742263895685, 0.053437785175613706`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9980176278702724, 0.04034375834446147]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9986610293509761, 0.027249731513309228`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9993044308316799, 0.014155704682156989`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9999478323123837, 0.0010616778510047498`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.01898328239255946, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.038493878184596576`, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.058004473976633684`, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.0775150697686708, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.09702566556070791, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.11653626135274503`, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.13604685714478215`, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.15555745293681925`, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.17506804872885637`, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.1945786445208935, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.21408924031293058`, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.2335998361049677, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.25311043189700483`, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.27262102768904195`, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.292131623481079, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.31164221927311614`, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.33115281506515326`, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3506634108571904, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3701740066492275, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3896846024412646, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4091951982333017, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4287057940253388, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.44821638981737594`, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.46772698560941306`, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4872375814014502, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5067481771934873, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5262587729855244, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5446773896842848, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5608210499388919, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.576964710193499, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.593108370448106, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6092520307027132, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6253956909573203, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6415393512119273, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6576830114665344, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6738266717211414, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6899703319757485, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.7061139922303556, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.7222576524849627, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.7384013127395698, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.7545449729941769, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.7686696191754187, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.7807752512834336, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.7928808833914485, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.8049865154994634, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.8170921476074783, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.8291977797154932, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.8413034118235081, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.8534090439315231, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.865514676039538, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.8776203081475529, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.8897259402555678, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9018315723635827, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9139372044715977, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9260428365796125, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9356736969230925, 0.9977150185790297, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9441166668196912, 0.9943332460760815, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9525596367162898, 0.9909514735731334, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9610026066128885, 0.9875697010701853, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9694455765094872, 0.9841879285672371, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9778885464060858, 0.9808061560642891, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9863315163026845, 0.977424383561341, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9947744861992831, 0.9740426110583928, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.9703610330577935, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.9661925369085634, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.9620240407593333, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.9578555446101032, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.9536870484608732, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.949518552311643, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.9453500561624129, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.9411815600131828, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.9370130638639527, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.9328445677147226, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.9286760715654925, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.9245075754162624, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.9203390792670323, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.9161705831178022, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.9120020869685721, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.907833590819342, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.9036650946701119, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.8994965985208818, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.8953281023716517, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.8910558793648536, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.8830494894882385, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.8750430996116233, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.867036709735008, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.8590303198583928, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.8510239299817776, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.8430175401051624, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.8350111502285472, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.8270047603519319, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.8189983704753168, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.8109919805987016, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.8029855907220863, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.7949792008454711, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.7869728109688559, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.7789664210922407, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.7709600312156255, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.7629536413390103, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.754947251462395, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.7469408615857799, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.7389344717091646, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.7309280818325494, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.7229216919559343, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.714915302079319, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.7069089122027038, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.6989025223260885, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.6908961324494733, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.6828897425728582, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.6748833526962429, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.6668769628196277, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.6588705729430125, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.6508641830663973, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.6428577931897821, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.6348514033131669, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.6268450134365516, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.6188386235599365, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.6108322336833212, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.602825843806706, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.5948194539300908, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.5868130640534757, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.5788066741768604, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.5708002843002451, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.5627938944236299, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.5547875045470148, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.5467811146703996, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.5387747247937843, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.5307683349171691, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.5227619450405538, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.5147555551639387, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.5067491652873235, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.49874277541070827`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.49073638553409304`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.4827299956574778, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.4747236057808626, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.4667172159042474, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.4587108260276322, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.45070443615101696`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.4395236895754036, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.4271672553336161, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.41481082109182854`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.40245438685004103`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.39009795260825353`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.37774151836646597`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.36538508412467846`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.35302864988289095`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.3406722156411034, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.3283157813993159, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.3159593471575284, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.3036029129157408, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.2912464786739533, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.2788900444321658, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.2595322190344981, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.23944290500878207`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.21935359098306606`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.19926427695735002`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.17917496293163399`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.15908564890591798`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.13899633488020194`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.1189070208544859, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.09881770682876989, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.07872839280305385, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.058639078777337816`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.03854976475162181, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.018460450725905797`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[0.9995900659673137, 0., 0.], 
                 RGBColor[0.996556554125976, 0., 0.], 
                 RGBColor[0.9935230422846382, 0., 0.], 
                 RGBColor[0.9904895304433003, 0., 0.], 
                 RGBColor[0.9874560186019625, 0., 0.], 
                 RGBColor[0.9844225067606247, 0., 0.], 
                 RGBColor[0.9813889949192869, 0., 0.], 
                 RGBColor[0.9783554830779491, 0., 0.], 
                 RGBColor[0.9753219712366112, 0., 0.], 
                 RGBColor[0.9722884593952734, 0., 0.], 
                 RGBColor[0.9692549475539357, 0., 0.], 
                 RGBColor[0.9662214357125979, 0., 0.], 
                 RGBColor[0.9631879238712601, 0., 0.], 
                 RGBColor[0.9601544120299222, 0., 0.], 
                 RGBColor[0.9559695214035038, 0., 0.], 
                 RGBColor[0.9492315734713294, 0., 0.], 
                 RGBColor[0.9424936255391549, 0., 0.], 
                 RGBColor[0.9357556776069805, 0., 0.], 
                 RGBColor[0.9290177296748062, 0., 0.], 
                 RGBColor[0.9222797817426318, 0., 0.], 
                 RGBColor[0.9155418338104574, 0., 0.], 
                 RGBColor[0.908803885878283, 0., 0.], 
                 RGBColor[0.9020659379461086, 0., 0.], 
                 RGBColor[0.8953279900139341, 0., 0.], 
                 RGBColor[0.8885900420817598, 0., 0.], 
                 RGBColor[0.8818520941495854, 0., 0.], 
                 RGBColor[0.875114146217411, 0., 0.], 
                 RGBColor[0.8683761982852366, 0., 0.], 
                 RGBColor[0.8616382503530622, 0., 0.], 
                 RGBColor[0.8549003024208878, 0., 0.], 
                 RGBColor[0.8481623544887134, 0., 0.], 
                 RGBColor[0.841424406556539, 0., 0.], 
                 RGBColor[0.8346864586243646, 0., 0.], 
                 RGBColor[0.8279485106921902, 0., 0.], 
                 RGBColor[0.8212105627600158, 0., 0.], 
                 RGBColor[0.8144726148278414, 0., 0.], 
                 RGBColor[0.807734666895667, 0., 0.], 
                 RGBColor[0.8009967189634926, 0., 0.], 
                 RGBColor[0.7942587710313183, 0., 0.], 
                 RGBColor[0.7875208230991438, 0., 0.], 
                 RGBColor[0.7807828751669694, 0., 0.], 
                 RGBColor[0.774044927234795, 0., 0.], 
                 RGBColor[0.7673069793026206, 0., 0.], 
                 RGBColor[0.7605690313704462, 0., 0.], 
                 RGBColor[0.7538310834382718, 0., 0.], 
                 RGBColor[0.7470931355060975, 0., 0.], 
                 RGBColor[0.740355187573923, 0., 0.], 
                 RGBColor[0.7336172396417486, 0., 0.], 
                 RGBColor[0.7268792917095742, 0., 0.], 
                 RGBColor[0.7201413437773998, 0., 0.], 
                 RGBColor[0.7134033958452255, 0., 0.], 
                 RGBColor[0.706665447913051, 0., 0.], 
                 RGBColor[0.6999274999808767, 0., 0.], 
                 RGBColor[0.6931895520487023, 0., 0.], 
                 RGBColor[0.6864516041165278, 0., 0.], 
                 RGBColor[0.6797136561843534, 0., 0.], 
                 RGBColor[0.6763360967335184, 0., 0.], 
                 RGBColor[0.6736089350531409, 0., 0.], 
                 RGBColor[0.6708817733727633, 0., 0.], 
                 RGBColor[0.6681546116923859, 0., 0.], 
                 RGBColor[0.6654274500120084, 0., 0.], 
                 RGBColor[0.662700288331631, 0., 0.], 
                 RGBColor[0.6599731266512535, 0., 0.], 
                 RGBColor[0.6572459649708761, 0., 0.], 
                 RGBColor[0.6545188032904986, 0., 0.], 
                 RGBColor[0.6517916416101212, 0., 0.], 
                 RGBColor[0.6490644799297436, 0., 0.], 
                 RGBColor[0.6463373182493661, 0., 0.], 
                 RGBColor[0.6436101565689887, 0., 0.], 
                 RGBColor[0.6408829948886112, 0., 0.], 
                 RGBColor[0.6381558332082338, 0., 0.], 
                 RGBColor[0.6354286715278563, 0., 0.], 
                 RGBColor[0.6327015098474789, 0., 0.], 
                 RGBColor[0.6299743481671014, 0., 0.], 
                 RGBColor[0.627247186486724, 0., 0.], 
                 RGBColor[0.6245200248063465, 0., 0.], 
                 RGBColor[0.6217928631259689, 0., 0.], 
                 RGBColor[0.6190657014455915, 0., 0.], 
                 RGBColor[0.616338539765214, 0., 0.], 
                 RGBColor[0.6136113780848366, 0., 0.], 
                 RGBColor[0.6108842164044591, 0., 0.], 
                 RGBColor[0.6081570547240817, 0., 0.], 
                 RGBColor[0.6054298930437042, 0., 0.], 
                 RGBColor[0.6027027313633267, 0., 0.], 
                 RGBColor[0.5999755696829492, 0., 0.], 
                 RGBColor[0.5972484080025717, 0., 0.], 
                 RGBColor[0.5945212463221943, 0., 0.], 
                 RGBColor[0.5917940846418168, 0., 0.], 
                 RGBColor[0.5890669229614394, 0., 0.], 
                 RGBColor[0.5863397612810619, 0., 0.], 
                 RGBColor[0.5836125996006845, 0., 0.], 
                 RGBColor[0.580885437920307, 0., 0.], 
                 RGBColor[0.5781582762399295, 0., 0.], 
                 RGBColor[0.5754311145595521, 0., 0.], 
                 RGBColor[0.5727039528791745, 0., 0.], 
                 RGBColor[0.5699767911987971, 0., 0.], 
                 RGBColor[0.5672496295184196, 0., 0.], 
                 RGBColor[0.5645224678380422, 0., 0.], 
                 RGBColor[0.5617953061576647, 0., 0.], 
                 RGBColor[0.5590681444772873, 0., 0.], 
                 RGBColor[0.5563409827969098, 0., 0.], 
                 RGBColor[0.5536138211165323, 0., 0.], 
                 RGBColor[0.5508866594361548, 0., 0.], 
                 RGBColor[0.5481594977557773, 0., 0.], 
                 RGBColor[0.5454323360753999, 0., 0.], 
                 RGBColor[0.5427051743950224, 0., 0.], 
                 RGBColor[0.539978012714645, 0., 0.], 
                 RGBColor[0.5372508510342675, 0., 0.], 
                 RGBColor[0.53452368935389, 0., 0.], 
                 RGBColor[0.5317965276735126, 0., 0.], 
                 RGBColor[0.5290693659931351, 0., 0.], 
                 RGBColor[0.5263422043127577, 0., 0.], 
                 RGBColor[0.5236150426323802, 0., 0.], 
                 RGBColor[0.5208878809520027, 0., 0.], 
                 RGBColor[0.5181607192716252, 0., 0.], 
                 RGBColor[0.5154335575912478, 0., 0.], 
                 RGBColor[0.5127063959108703, 0., 0.], 
                 RGBColor[0.5099792342304929, 0., 0.], 
                 RGBColor[0.5072520725501154, 0., 0.], 
                 RGBColor[0.5045249108697379, 0., 0.], 
                 RGBColor[0.5017977491893604, 0., 0.], 
                 RGBColor[0.499070587508983, 0., 0.], 
                 RGBColor[0.49634342582860547`, 0., 0.], 
                 RGBColor[0.493616264148228, 0., 0.], 
                 RGBColor[0.49088910246785056`, 0., 0.], 
                 RGBColor[0.4881619407874731, 0., 0.], 
                 RGBColor[0.48543477910709565`, 0., 0.], 
                 RGBColor[0.4827076174267182, 0., 0.], 
                 RGBColor[0.47998045574634074`, 0., 0.], 
                 RGBColor[0.47725329406596323`, 0., 0.], 
                 RGBColor[0.4745261323855858, 0., 0.], 
                 RGBColor[0.47179897070520826`, 0., 0.], 
                 RGBColor[0.4690718090248308, 0., 0.], 
                 RGBColor[0.46634464734445336`, 0., 0.], 
                 RGBColor[0.4636174856640759, 0., 0.], 
                 RGBColor[0.46089032398369845`, 0., 0.], 
                 RGBColor[0.458163162303321, 0., 0.], 
                 RGBColor[0.45543600062294354`, 0., 0.], 
                 RGBColor[0.452708838942566, 0., 0.], 
                 RGBColor[0.4499816772621886, 0., 0.], 
                 RGBColor[0.44725451558181106`, 0., 0.], 
                 RGBColor[0.4445273539014336, 0., 0.], 
                 RGBColor[0.44180019222105615`, 0., 0.], 
                 RGBColor[0.4390730305406787, 0., 0.], 
                 RGBColor[0.43634586886030124`, 0., 0.], 
                 RGBColor[0.4336187071799238, 0., 0.], 
                 RGBColor[0.43089154549954634`, 0., 0.], 
                 RGBColor[0.4281643838191688, 0., 0.], 
                 RGBColor[0.42543722213879137`, 0., 0.], 
                 RGBColor[0.4227100604584139, 0., 0.], 
                 RGBColor[0.4199828987780364, 0., 0.], 
                 RGBColor[0.41725573709765895`, 0., 0.], 
                 RGBColor[0.4145285754172815, 0., 0.], 
                 RGBColor[0.41180141373690404`, 0., 0.], 
                 RGBColor[0.4090742520565266, 0., 0.], 
                 RGBColor[0.4063470903761491, 0., 0.], 
                 RGBColor[0.4036199286957716, 0., 0.], 
                 RGBColor[0.40089276701539417`, 0., 0.], 
                 RGBColor[0.3981656053350167, 0., 0.], 
                 RGBColor[0.3954384436546392, 0., 0.], 
                 RGBColor[0.39271128197426175`, 0., 0.], 
                 RGBColor[0.3899841202938843, 0., 0.], 
                 RGBColor[0.38725695861350684`, 0., 0.], 
                 RGBColor[0.3845297969331294, 0., 0.], 
                 RGBColor[0.3818026352527519, 0., 0.], 
                 RGBColor[0.3790754735723744, 0., 0.], 
                 RGBColor[0.37634831189199697`, 0., 0.], 
                 RGBColor[0.3736211502116195, 0., 0.], 
                 RGBColor[0.370893988531242, 0., 0.], 
                 RGBColor[0.36816682685086455`, 0., 0.], 
                 RGBColor[0.3654396651704871, 0., 0.], 
                 RGBColor[0.36271250349010964`, 0., 0.], 
                 RGBColor[0.3599853418097322, 0., 0.], 
                 RGBColor[0.3572581801293547, 0., 0.], 
                 RGBColor[0.3545310184489772, 0., 0.], 
                 RGBColor[0.35180385676859977`, 0., 0.], 
                 RGBColor[0.3490766950882223, 0., 0.], 
                 RGBColor[0.3463495334078448, 0., 0.], 
                 RGBColor[0.34362237172746735`, 0., 0.], 
                 RGBColor[0.3408952100470899, 0., 0.], 
                 RGBColor[0.33816804836671244`, 0., 0.], 
                 RGBColor[0.335440886686335, 0., 0.], 
                 RGBColor[0.3327137250059575, 0., 0.], 
                 RGBColor[0.32998656332558, 0., 0.], 
                 RGBColor[0.32725940164520256`, 0., 0.], 
                 RGBColor[0.3245322399648251, 0., 0.], 
                 RGBColor[0.3218050782844476, 0., 0.], 
                 RGBColor[0.31907791660407014`, 0., 0.], 
                 RGBColor[0.3163507549236927, 0., 0.], 
                 RGBColor[0.31362359324331524`, 0., 0.], 
                 RGBColor[0.3108964315629378, 0., 0.], 
                 RGBColor[0.30816926988256027`, 0., 0.], 
                 RGBColor[0.3054421082021828, 0., 0.], 
                 RGBColor[0.30271494652180536`, 0., 0.], 
                 RGBColor[0.2999877848414279, 0., 0.], 
                 RGBColor[0.2972606231610504, 0., 0.], 
                 RGBColor[0.29453346148067294`, 0., 0.], 
                 RGBColor[0.2918062998002955, 0., 0.], 
                 RGBColor[0.28907913811991803`, 0., 0.], 
                 RGBColor[0.2863519764395406, 0., 0.], 
                 RGBColor[0.28362481475916307`, 0., 0.], 
                 RGBColor[0.2808976530787856, 0., 0.], 
                 RGBColor[0.27817049139840816`, 0., 0.], 
                 RGBColor[0.2754433297180307, 0., 0.], 
                 RGBColor[0.27271616803765325`, 0., 0.], 
                 RGBColor[0.26998900635727574`, 0., 0.], 
                 RGBColor[0.2672618446768983, 0., 0.], 
                 RGBColor[0.26453468299652083`, 0., 0.], 
                 RGBColor[0.2618075213161434, 0., 0.], 
                 RGBColor[0.25908035963576587`, 0., 0.], 
                 RGBColor[0.2563531979553884, 0., 0.], 
                 RGBColor[0.25362603627501096`, 0., 0.], 
                 RGBColor[0.2508988745946335, 0., 0.], 
                 RGBColor[0.24817171291425605`, 0., 0.], 
                 RGBColor[0.24544455123387854`, 0., 0.], 
                 RGBColor[0.24271738955350108`, 0., 0.], 
                 RGBColor[0.23999022787312363`, 0., 0.], 
                 RGBColor[0.23726306619274617`, 0., 0.], 
                 RGBColor[0.23453590451236866`, 0., 0.], 
                 RGBColor[0.2318087428319912, 0., 0.], 
                 RGBColor[0.22908158115161376`, 0., 0.], 
                 RGBColor[0.2263544194712363, 0., 0.], 
                 RGBColor[0.22362725779085885`, 0., 0.], 
                 RGBColor[0.22090009611048134`, 0., 0.], 
                 RGBColor[0.21817293443010388`, 0., 0.], 
                 RGBColor[0.21544577274972643`, 0., 0.], 
                 RGBColor[0.21271861106934897`, 0., 0.], 
                 RGBColor[0.20999144938897146`, 0., 0.], 
                 RGBColor[0.207264287708594, 0., 0.], 
                 RGBColor[0.20453712602821655`, 0., 0.], 
                 RGBColor[0.2018099643478391, 0., 0.], 
                 RGBColor[0.19908280266746164`, 0., 0.], 
                 RGBColor[0.19635564098708413`, 0., 0.], 
                 RGBColor[0.19362847930670668`, 0., 0.], 
                 RGBColor[0.19090131762632923`, 0., 0.], 
                 RGBColor[0.18817415594595177`, 0., 0.], 
                 RGBColor[0.18544699426557426`, 0., 0.], 
                 RGBColor[0.1827198325851968, 0., 0.], 
                 RGBColor[0.17999267090481935`, 0., 0.], 
                 RGBColor[0.17726550922444184`, 0., 0.], 
                 RGBColor[0.1745383475440644, 0., 0.], 
                 RGBColor[0.17181118586368693`, 0., 0.], 
                 RGBColor[0.16908402418330948`, 0., 0.], 
                 RGBColor[0.16635686250293202`, 0., 0.], 
                 RGBColor[0.16362970082255457`, 0., 0.], 
                 RGBColor[0.16090253914217711`, 0., 0.], 
                 RGBColor[0.15817537746179966`, 0., 0.], 
                 RGBColor[0.1554482157814222, 0., 0.], 
                 RGBColor[0.15272105410104464`, 0., 0.], 
                 RGBColor[0.14999389242066719`, 0., 0.], 
                 RGBColor[0.14726673074028973`, 0., 0.], 
                 RGBColor[0.14453956905991228`, 0., 0.], 
                 RGBColor[0.14181240737953482`, 0., 0.], 
                 RGBColor[0.13908524569915737`, 0., 0.], 
                 RGBColor[0.1363580840187799, 0., 0.], 
                 RGBColor[0.13363092233840246`, 0., 0.], 
                 RGBColor[0.130903760658025, 0., 0.], 
                 RGBColor[0.12817659897764744`, 0., 0.], 
                 RGBColor[0.12544943729726998`, 0., 0.], 
                 RGBColor[0.12272227561689253`, 0., 0.], 
                 RGBColor[0.11999511393651507`, 0., 0.], 
                 RGBColor[0.11726795225613762`, 0., 0.], 
                 RGBColor[0.11454079057576017`, 0., 0.], 
                 RGBColor[0.11181362889538271`, 0., 0.], 
                 RGBColor[0.10908646721500526`, 0., 0.], 
                 RGBColor[0.1063593055346278, 0., 0.], 
                 RGBColor[0.10363214385425024`, 0., 0.], 
                 RGBColor[0.10090498217387278`, 0., 0.], 
                 RGBColor[0.09817782049349533, 0., 0.], 
                 RGBColor[0.09545065881311787, 0., 0.], 
                 RGBColor[0.09272349713274042, 0., 0.], 
                 RGBColor[0.08999633545236296, 0., 0.], 
                 RGBColor[0.08726917377198551, 0., 0.], 
                 RGBColor[0.08454201209160805, 0., 0.], 
                 RGBColor[0.0818148504112306, 0., 0.], 
                 RGBColor[0.07908768873085303, 0., 0.], 
                 RGBColor[0.07636052705047558, 0., 0.], 
                 RGBColor[0.07363336537009812, 0., 0.], 
                 RGBColor[0.07090620368972067, 0., 0.], 
                 RGBColor[0.06817904200934322, 0., 0.], 
                 RGBColor[0.06545188032896576, 0., 0.], 
                 RGBColor[0.0627247186485883, 0., 0.], 
                 RGBColor[0.05999755696821085, 0., 0.], 
                 RGBColor[0.0572703952878334, 0., 0.], 
                 RGBColor[0.05454323360745583, 0., 0.], 
                 RGBColor[0.05181607192707838, 0., 0.], 
                 RGBColor[0.04908891024670092, 0., 0.], 
                 RGBColor[0.04636174856632347, 0., 0.], 
                 RGBColor[0.043634586885946014`, 0., 0.], 
                 RGBColor[0.04090742520556856, 0., 0.], 
                 RGBColor[0.038180263525191105`, 0., 0.], 
                 RGBColor[0.03545310184481365, 0., 0.], 
                 RGBColor[0.032725940164436196`, 0., 0.], 
                 RGBColor[0.02999877848405863, 0., 0.], 
                 RGBColor[0.027271616803681176`, 0., 0.], 
                 RGBColor[0.02454445512330372, 0., 0.], 
                 RGBColor[0.021817293442926267`, 0., 0.], 
                 RGBColor[0.019090131762548812`, 0., 0.], 
                 RGBColor[0.016362970082171358`, 0., 0.], 
                 RGBColor[0.013635808401793903`, 0., 0.], 
                 RGBColor[0.010908646721416448`, 0., 0.], 
                 RGBColor[0.008181485041038994, 0., 0.], 
                 RGBColor[0.005454323360661428, 0., 0.], 
                 RGBColor[0.0027271616802839738`, 0., 0.], 
                 RGBColor[0., 0., 0.], {
                  Opacity[0.2], 
                  RGBColor[0., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.003432003806042654, 0., 0.00723362658846554]}, {
                  Opacity[0.2], 
                  RGBColor[0.006864007612085308, 0., 0.01446725317693108]}, {
                  Opacity[0.2], 
                  RGBColor[0.010296011418127962`, 0., 0.02170087976539662]}, {
                  Opacity[0.2], 
                  RGBColor[0.013728015224170616`, 0., 0.02893450635386216]}, {
                  Opacity[0.2], 
                  RGBColor[0.01716001903021327, 0., 0.0361681329423277]}, {
                  Opacity[0.2], 
                  RGBColor[0.020592022836255924`, 0., 0.04340175953079324]}, {
                  Opacity[0.2], 
                  RGBColor[0.02402402664229858, 0., 0.05063538611925878]}, {
                  Opacity[0.2], 
                  RGBColor[0.02745603044834123, 0., 0.05786901270772432]}, {
                  Opacity[0.2], 
                  RGBColor[0.030888034254383887`, 0., 0.06510263929618987]}, {
                  Opacity[0.2], 
                  RGBColor[0.03432003806042654, 0., 0.0723362658846554]}, {
                  Opacity[0.2], 
                  RGBColor[0.037752041866469195`, 0., 0.07956989247312095]}, {
                  Opacity[0.2], 
                  RGBColor[0.04118404567251185, 0., 0.08680351906158648]}, {
                  Opacity[0.2], 
                  RGBColor[0.044616049478554506`, 0., 0.09403714565005203]}, {
                  Opacity[0.2], 
                  RGBColor[0.04804805328459716, 0., 0.10127077223851756`]}, {
                  Opacity[0.2], 
                  RGBColor[0.05148005709063981, 0., 0.10850439882698311`]}, {
                  Opacity[0.2], 
                  RGBColor[0.05491206089668246, 0., 0.11573802541544864`]}, {
                  Opacity[0.2], 
                  RGBColor[0.05834406470272512, 0., 0.12297165200391419`]}, {
                  Opacity[0.2], 
                  RGBColor[0.061776068508767774`, 0., 0.13020527859237974`]}, {
                  Opacity[0.2], 
                  RGBColor[0.06520807231481043, 0., 0.13743890518084528`]}, {
                  Opacity[0.2], 
                  RGBColor[0.06864007612085309, 0., 0.1446725317693108]}, {
                  Opacity[0.2], 
                  RGBColor[0.07207207992689574, 0., 0.15190615835777635`]}, {
                  Opacity[0.2], 
                  RGBColor[0.07550408373293839, 0., 0.1591397849462419]}, {
                  Opacity[0.2], 
                  RGBColor[0.07893608753898104, 0., 0.16637341153470744`]}, {
                  Opacity[0.2], 
                  RGBColor[0.0823680913450237, 0., 0.17360703812317296`]}, {
                  Opacity[0.2], 
                  RGBColor[0.08580009515106635, 0., 0.1808406647116385]}, {
                  Opacity[0.2], 
                  RGBColor[0.08923209895710901, 0., 0.18807429130010406`]}, {
                  Opacity[0.2], 
                  RGBColor[0.09266410276315167, 0., 0.1953079178885696]}, {
                  Opacity[0.2], 
                  RGBColor[0.09609610656919432, 0., 0.20254154447703512`]}, {
                  Opacity[0.2], 
                  RGBColor[0.09952811037523697, 0., 0.20977517106550067`]}, {
                  Opacity[0.2], 
                  RGBColor[0.10296011418127962`, 0., 0.21700879765396622`]}, {
                  Opacity[0.2], 
                  RGBColor[0.10639211798732227`, 0., 0.22424242424243176`]}, {
                  Opacity[0.2], 
                  RGBColor[0.10982412179336493`, 0., 0.23147605083089728`]}, {
                  Opacity[0.2], 
                  RGBColor[0.11325612559940759`, 0., 0.23870967741936283`]}, {
                  Opacity[0.2], 
                  RGBColor[0.11668812940545024`, 0., 0.24594330400782838`]}, {
                  Opacity[0.2], 
                  RGBColor[0.1201201332114929, 0., 0.2531769305962939]}, {
                  Opacity[0.2], 
                  RGBColor[0.12355213701753555`, 0., 0.2604105571847595]}, {
                  Opacity[0.2], 
                  RGBColor[0.1269841408235782, 0., 0.267644183773225]}, {
                  Opacity[0.2], 
                  RGBColor[0.13041614462962087`, 0., 0.27487781036169057`]}, {
                  Opacity[0.2], 
                  RGBColor[0.1338481484356635, 0., 0.28211143695015606`]}, {
                  Opacity[0.2], 
                  RGBColor[0.13728015224170617`, 0., 0.2893450635386216]}, {
                  Opacity[0.2], 
                  RGBColor[0.1407121560477488, 0., 0.29657869012708715`]}, {
                  Opacity[0.2], 
                  RGBColor[0.14414415985379148`, 0., 0.3038123167155527]}, {
                  Opacity[0.2], 
                  RGBColor[0.14757616365983411`, 0., 0.31104594330401825`]}, {
                  Opacity[0.2], 
                  RGBColor[0.15100816746587678`, 0., 0.3182795698924838]}, {
                  Opacity[0.2], 
                  RGBColor[0.15444017127191945`, 0., 0.32551319648094934`]}, {
                  Opacity[0.2], 
                  RGBColor[0.15787217507796208`, 0., 0.3327468230694149]}, {
                  Opacity[0.2], 
                  RGBColor[0.16130417888400475`, 0., 0.3399804496578804]}, {
                  Opacity[0.2], 
                  RGBColor[0.1647361826900474, 0., 0.3472140762463459]}, {
                  Opacity[0.2], 
                  RGBColor[0.16816818649609006`, 0., 0.3544477028348115]}, {
                  Opacity[0.2], 
                  RGBColor[0.1716001903021327, 0., 0.361681329423277]}, {
                  Opacity[0.2], 
                  RGBColor[0.17503219410817536`, 0., 0.36891495601174257`]}, {
                  Opacity[0.2], 
                  RGBColor[0.17846419791421803`, 0., 0.3761485826002081]}, {
                  Opacity[0.2], 
                  RGBColor[0.18189620172026066`, 0., 0.38338220918867366`]}, {
                  Opacity[0.2], 
                  RGBColor[0.18532820552630333`, 0., 0.3906158357771392]}, {
                  Opacity[0.2], 
                  RGBColor[0.18876020933234597`, 0., 0.39784946236560476`]}, {
                  Opacity[0.2], 
                  RGBColor[0.19219221313838863`, 0., 0.40508308895407025`]}, {
                  Opacity[0.2], 
                  RGBColor[0.19562421694443127`, 0., 0.4123167155425358]}, {
                  Opacity[0.2], 
                  RGBColor[0.19905622075047394`, 0., 0.41955034213100134`]}, {
                  Opacity[0.2], 
                  RGBColor[0.2024882245565166, 0., 0.4267839687194669]}, {
                  Opacity[0.2], 
                  RGBColor[0.20592022836255924`, 0., 0.43401759530793244`]}, {
                  Opacity[0.2], 
                  RGBColor[0.2093522321686019, 0., 0.441251221896398]}, {
                  Opacity[0.2], 
                  RGBColor[0.21278423597464455`, 0., 0.44848484848486353`]}, {
                  Opacity[0.2], 
                  RGBColor[0.2162162397806872, 0., 0.4557184750733291]}, {
                  Opacity[0.2], 
                  RGBColor[0.21964824358672985`, 0., 0.46295210166179457`]}, {
                  Opacity[0.2], 
                  RGBColor[0.22308024739277252`, 0., 0.4701857282502601]}, {
                  Opacity[0.2], 
                  RGBColor[0.22651225119881518`, 0., 0.47741935483872566`]}, {
                  Opacity[0.2], 
                  RGBColor[0.22994425500485782`, 0., 0.4846529814271912]}, {
                  Opacity[0.2], 
                  RGBColor[0.2333762588109005, 0., 0.49188660801565676`]}, {
                  Opacity[0.2], 
                  RGBColor[0.23680826261694313`, 0., 0.4991202346041223]}, {
                  Opacity[0.2], 
                  RGBColor[0.2402402664229858, 0., 0.5063538611925879]}, {
                  Opacity[0.2], 
                  RGBColor[0.24367227022902843`, 0., 0.5135874877810533]}, {
                  Opacity[0.2], 
                  RGBColor[0.2471042740350711, 0., 0.520821114369519]}, {
                  Opacity[0.2], 
                  RGBColor[0.25053627784111376`, 0., 0.5280547409579844]}, {
                  Opacity[0.2], 
                  RGBColor[0.2539682816471564, 0., 0.53528836754645]}, {
                  Opacity[0.2], 
                  RGBColor[0.25740028545319904`, 0., 0.5425219941349155]}, {
                  Opacity[0.2], 
                  RGBColor[0.26083228925924173`, 0., 0.5497556207233811]}, {
                  Opacity[0.2], 
                  RGBColor[0.2642642930652844, 0., 0.5569892473118466]}, {
                  Opacity[0.2], 
                  RGBColor[0.267696296871327, 0., 0.5642228739003121]}, {
                  Opacity[0.2], 
                  RGBColor[0.27112830067736965`, 0., 0.5714565004887777]}, {
                  Opacity[0.2], 
                  RGBColor[0.27456030448341234`, 0., 0.5786901270772432]}, {
                  Opacity[0.2], 
                  RGBColor[0.277992308289455, 0., 0.5859237536657088]}, {
                  Opacity[0.2], 
                  RGBColor[0.2814243120954976, 0., 0.5931573802541743]}, {
                  Opacity[0.2], 
                  RGBColor[0.2848563159015403, 0., 0.6003910068426399]}, {
                  Opacity[0.2], 
                  RGBColor[0.28828831970758295`, 0., 0.6076246334311054]}, {
                  Opacity[0.2], 
                  RGBColor[0.2917203235136256, 0., 0.614858260019571]}, {
                  Opacity[0.2], 
                  RGBColor[0.29515232731966823`, 0., 0.6220918866080365]}, {
                  Opacity[0.2], 
                  RGBColor[0.2985843311257109, 0., 0.629325513196502]}, {
                  Opacity[0.2], 
                  RGBColor[0.30201633493175356`, 0., 0.6365591397849676]}, {
                  Opacity[0.2], 
                  RGBColor[0.3054483387377962, 0., 0.6437927663734331]}, {
                  Opacity[0.2], 
                  RGBColor[0.3088803425438389, 0., 0.6510263929618987]}, {
                  Opacity[0.2], 
                  RGBColor[0.31231234634988153`, 0., 0.6582600195503642]}, {
                  Opacity[0.2], 
                  RGBColor[0.31574435015592417`, 0., 0.6654936461388298]}, {
                  Opacity[0.2], 
                  RGBColor[0.3191763539619668, 0., 0.6727272727272953]}, {
                  Opacity[0.2], 
                  RGBColor[0.3226083577680095, 0., 0.6799608993157608]}, {
                  Opacity[0.2], 
                  RGBColor[0.32604036157405214`, 0., 0.6871945259042264]}, {
                  Opacity[0.2], 
                  RGBColor[0.3294723653800948, 0., 0.6944281524926919]}, {
                  Opacity[0.2], 
                  RGBColor[0.33290436918613747`, 0., 0.7016617790811575]}, {
                  Opacity[0.2], 
                  RGBColor[0.3363363729921801, 0., 0.708895405669623]}, {
                  Opacity[0.2], 
                  RGBColor[0.33976837679822275`, 0., 0.7161290322580885]}, {
                  Opacity[0.2], 
                  RGBColor[0.3432003806042654, 0., 0.723362658846554]}, {
                  Opacity[0.2], 
                  RGBColor[0.3466323844103081, 0., 0.7305962854350196]}, {
                  Opacity[0.2], 
                  RGBColor[0.3500643882163507, 0., 0.7378299120234851]}, {
                  Opacity[0.2], 
                  RGBColor[0.35349639202239336`, 0., 0.7450635386119506]}, {
                  Opacity[0.2], 
                  RGBColor[0.35692839582843605`, 0., 0.7522971652004162]}, {
                  Opacity[0.2], 
                  RGBColor[0.3603603996344787, 0., 0.7595307917888817]}, {
                  Opacity[0.2], 
                  RGBColor[0.36379240344052133`, 0., 0.7667644183773473]}, {
                  Opacity[0.2], 
                  RGBColor[0.36722440724656397`, 0., 0.7739980449658128]}, {
                  Opacity[0.2], 
                  RGBColor[0.37065641105260666`, 0., 0.7812316715542784]}, {
                  Opacity[0.2], 
                  RGBColor[0.3740884148586493, 0., 0.7884652981427439]}, {
                  Opacity[0.2], 
                  RGBColor[0.37752041866469194`, 0., 0.7956989247312095]}, {
                  Opacity[0.2], 
                  RGBColor[0.38095242247073463`, 0., 0.802932551319675]}, {
                  Opacity[0.2], 
                  RGBColor[0.38438442627677727`, 0., 0.8101661779081405]}, {
                  Opacity[0.2], 
                  RGBColor[0.3878164300828199, 0., 0.8173998044966061]}, {
                  Opacity[0.2], 
                  RGBColor[0.39124843388886255`, 0., 0.8246334310850716]}, {
                  Opacity[0.2], 
                  RGBColor[0.39468043769490524`, 0., 0.8318670576735372]}, {
                  Opacity[0.2], 
                  RGBColor[0.3981124415009479, 0., 0.8391006842620027]}, {
                  Opacity[0.2], 
                  RGBColor[0.4015444453069905, 0., 0.8463343108504683]}, {
                  Opacity[0.2], 
                  RGBColor[0.4049764491130332, 0., 0.8535679374389338]}, {
                  Opacity[0.2], 
                  RGBColor[0.40840845291907585`, 0., 0.8608015640273994]}, {
                  Opacity[0.2], 
                  RGBColor[0.4118404567251185, 0., 0.8680351906158649]}, {
                  Opacity[0.2], 
                  RGBColor[0.4152724605311611, 0., 0.8752688172043304]}, {
                  Opacity[0.2], 
                  RGBColor[0.4187044643372038, 0., 0.882502443792796]}, {
                  Opacity[0.2], 
                  RGBColor[0.42213646814324646`, 0., 0.8897360703812615]}, {
                  Opacity[0.2], 
                  RGBColor[0.4255684719492891, 0., 0.8969696969697271]}, {
                  Opacity[0.2], 
                  RGBColor[0.4290004757553318, 0., 0.9042033235581926]}, {
                  Opacity[0.2], 
                  RGBColor[0.4324324795613744, 0., 0.9114369501466582]}, {
                  Opacity[0.2], 
                  RGBColor[0.43586448336741707`, 0., 0.9186705767351236]}, {
                  Opacity[0.2], 
                  RGBColor[0.4392964871734597, 0., 0.9259042033235891]}, {
                  Opacity[0.2], 
                  RGBColor[0.4427284909795024, 0., 0.9331378299120547]}, {
                  Opacity[0.2], 
                  RGBColor[0.44616049478554504`, 0., 0.9403714565005202]}, {
                  Opacity[0.2], 
                  RGBColor[0.4495924985915877, 0., 0.9476050830889858]}, {
                  Opacity[0.2], 
                  RGBColor[0.45302450239763037`, 0., 0.9548387096774513]}, {
                  Opacity[0.2], 
                  RGBColor[0.456456506203673, 0., 0.9620723362659169]}, {
                  Opacity[0.2], 
                  RGBColor[0.45988851000971565`, 0., 0.9693059628543824]}, {
                  Opacity[0.2], 
                  RGBColor[0.4633205138157583, 0., 0.976539589442848]}, {
                  Opacity[0.2], 
                  RGBColor[0.466752517621801, 0., 0.9837732160313135]}, {
                  Opacity[0.2], 
                  RGBColor[0.4701845214278436, 0., 0.991006842619779]}, {
                  Opacity[0.2], 
                  RGBColor[0.47361652523388625`, 0., 0.9982404692082446]}, {
                  Opacity[0.2], 
                  RGBColor[0.47463878166510826`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47488647644015736`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4751341712152065, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47538186599025567`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47562956076530477`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4758772555403539, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47612495031540303`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4763726450904522, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47662033986550134`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47686803464055044`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4771157294155996, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47736342419064876`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47761111896569786`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.477858813740747, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4781065085157961, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47835420329084527`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4786018980658944, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4788495928409435, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4790972876159927, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47934498239104184`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47959267716609094`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4798403719411401, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4800880667161892, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.48033576149123836`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4805834562662875, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4808311510413366, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.48107884581638577`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.48092405257339577`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.47744873318177455`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4739734137901533, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4704980943985321, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4670227750069108, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.46354745561528954`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.46007213622366827`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.45659681683204706`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4531214974404258, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4496461780488046, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4461708586571833, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.44269553926556204`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4392202198739408, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.43574490048231956`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4322695810906983, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4287942616990771, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4253189423074558, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.42184362291583455`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4183683035242133, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.41489298413259207`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4114176647409708, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4079423453493496, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4044670259577283, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.40099170656610705`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3975163871744858, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3940410677828646, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3905657483912433, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3870904289996221, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3818412089481284, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3745050469438981, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3671688849396678, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3598327229354375, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.35249656093120724`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3451603989269769, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.33782423692274666`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.33048807491851634`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3231519129142861, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.31581575091005576`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3084795889058255, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3011434269015952, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.29380726489736486`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.2864711028931346, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.2772751690491151, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.2670108556375891, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.256746542226063, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.24648222881453705`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.23621791540301101`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.225953601991485, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.215689288579959, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.205424975168433, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.195160661756907, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.184896348345381, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.17463203493385498`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.16436772152232898`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.15410340811080295`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.14383909469927694`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.13357478128775094`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.12331046787622493`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.11304615446469893`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.10278184105317292`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.09251752764164689, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.08225321423012089, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.07198890081859488, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.061724587407068876`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.05146027399554287, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.041195960584016866`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.03093164717249086, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.020667333760964857`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.010403020349438852`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0.00013870693791279143`, 0., 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.012580593983232156`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.02533352487024245, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.038086455757252745`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.050839386644263046`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.06359231753127334, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.07634524841828363, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.08909817930529393, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.10185111019230422`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.11460404107931452`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.1273569719663248, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.1401099028533351, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.1528628337403454, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.1656157646273557, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.1785492364508735, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.19241550311295635`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.20628176977503918`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.22014803643712202`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.23401430309920485`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.2478805697612877, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.2617468364233705, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.27561310308545334`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.2894793697475362, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.303345636409619, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.3172119030717019, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.3310781697337847, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.3449444363958675, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.3588107030579504, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.3708394818213784, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.3792667843035846, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.38769408678579087`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.3961213892679971, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.40454869175020336`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.4129759942324096, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.42140329671461585`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.4298305991968221, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.43825790167902834`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.4466852041612346, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.45511250664344083`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.4635398091256471, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.4719671116078533, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.48039441409005956`, 1.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.4896124225460928, 0.9975760114650513]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.49957952087203966`, 0.9928556127391835]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.5095466191979865, 0.9881352140133158]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.5195137175239334, 0.9834148152874482]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.5294808158498803, 0.9786944165615805]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.539447914175827, 0.9739740178357128]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.5494150125017739, 0.9692536191098451]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.5593821108277208, 0.9645332203839774]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.5693492091536676, 0.9598128216581098]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.5793163074796145, 0.9550924229322421]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.5892834058055614, 0.9503720242063743]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.5992505041315083, 0.9456516254805066]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.609217602457455, 0.9409312267546389]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.6191847007834019, 0.9362108280287713]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.6291517991093488, 0.9314904293029036]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.6391188974352957, 0.9267700305770359]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.6490859957612425, 0.9220496318511682]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.6590530940871894, 0.9173292331253005]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.6690201924131363, 0.9126088343994329]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.678987290739083, 0.9078884356735651]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.6889543890650299, 0.9031680369476974]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.6989214873909768, 0.8984476382218297]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.7088885857169237, 0.893727239495962]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.7188556840428706, 0.8890068407700944]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.7288227823688174, 0.8842864420442267]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.7387898806947643, 0.879566043318359]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.7487569790207111, 0.8748456445924913]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.7587240773466579, 0.8701252458666235]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.7686911756726048, 0.8654048471407558]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.7786582739985517, 0.8606844484148882]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.7886253723244985, 0.8559640496890205]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.7985924706504454, 0.8512436509631528]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.8085595689763923, 0.8465232522372851]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.818526667302339, 0.8418028535114175]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.828493765628286, 0.8370824547855498]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.8384608639542328, 0.832362056059682]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.8484279622801797, 0.8276416573338143]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.8583950606061266, 0.8229212586079466]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.8683621589320734, 0.8182008598820789]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.8783292572580202, 0.8134804611562113]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.8882963555839671, 0.8087600624303436]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.8979418373278871, 0.8037987742467485]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.8999757266325897, 0.7931364355651659]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9020096159372923, 0.7824740968835833]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9040435052419951, 0.7718117582020007]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9060773945466977, 0.761149419520418]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9081112838514003, 0.7504870808388354]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9101451731561029, 0.7398247421572528]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9121790624608055, 0.7291624034756702]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9142129517655081, 0.7185000647940876]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9162468410702107, 0.707837726112505]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9182807303749134, 0.6971753874309223]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.920314619679616, 0.6865130487493397]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9223485089843186, 0.6758507100677571]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9243823982890212, 0.6651883713861745]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9264162875937239, 0.6545260327045919]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9284501768984265, 0.6438636940230092]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9304840662031291, 0.6332013553414266]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9325179555078317, 0.622539016659844]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9345518448125344, 0.6118766779782614]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.936585734117237, 0.6012143392966788]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9386196234219396, 0.5905520006150962]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9406535127266422, 0.5798896619335135]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9426874020313448, 0.5692273232519309]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9447212913360474, 0.5585649845703483]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.94675518064075, 0.5479026458887657]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9487890699454526, 0.5372403072071831]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9508229592501554, 0.5265779685256005]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.952856848554858, 0.5159156298440178]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9548907378595606, 0.5052532911624352]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9569246271642632, 0.4945909524808526]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9589585164689658, 0.48392861379927]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9609924057736684, 0.4732662751176874]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.963026295078371, 0.46260393643610476`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9650601843830737, 0.45194159775452214`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9670940736877763, 0.4412792590729395]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9691279629924789, 0.43061692039135685`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9711618522971815, 0.41995458170977423`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9731957416018842, 0.4092922430281916]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9752296309065868, 0.398629904346609]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9772635202112894, 0.3879675656650264]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9792974095159921, 0.37730522698344376`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9813312988206947, 0.36664288830186115`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9825759923333812, 0.35460040229211515`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.983219393814085, 0.3415063754609629]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9838627952947888, 0.32841234862981067`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9845061967754926, 0.31531832179865843`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9851495982561964, 0.3022242949675062]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9857929997369002, 0.28913026813635395`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.986436401217604, 0.2760362413052017]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9870798026983078, 0.2629422144740495]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9877232041790116, 0.24984818764289723`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9883666056597153, 0.23675416081174502`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9890100071404192, 0.22366013398059278`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9896534086211229, 0.21056610714944055`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9902968101018268, 0.1974720803182883]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9909402115825305, 0.18437805348713607`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9915836130632344, 0.17128402665598383`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9922270145439381, 0.1581899998248316]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.992870416024642, 0.14509597299367935`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9935138175053457, 0.1320019461625271]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9941572189860496, 0.11890791933137487`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9948006204667533, 0.1058138925002226]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9954440219474572, 0.09271986566907037]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9960874234281609, 0.07962583883791813]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9967308249088648, 0.06653181200676594]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9973742263895685, 0.053437785175613706`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9980176278702724, 0.04034375834446147]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9986610293509761, 0.027249731513309228`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9993044308316799, 0.014155704682156989`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 0.9999478323123837, 0.0010616778510047498`]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0., 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.01898328239255946, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.038493878184596576`, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.058004473976633684`, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.0775150697686708, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.09702566556070791, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.11653626135274503`, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.13604685714478215`, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.15555745293681925`, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.17506804872885637`, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.1945786445208935, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.21408924031293058`, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.2335998361049677, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.25311043189700483`, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.27262102768904195`, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.292131623481079, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.31164221927311614`, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.33115281506515326`, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3506634108571904, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3701740066492275, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.3896846024412646, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4091951982333017, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4287057940253388, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.44821638981737594`, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.46772698560941306`, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.4872375814014502, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5067481771934873, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5262587729855244, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5446773896842848, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.5608210499388919, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.576964710193499, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.593108370448106, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6092520307027132, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6253956909573203, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6415393512119273, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6576830114665344, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6738266717211414, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.6899703319757485, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.7061139922303556, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.7222576524849627, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.7384013127395698, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.7545449729941769, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.7686696191754187, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.7807752512834336, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.7928808833914485, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.8049865154994634, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.8170921476074783, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.8291977797154932, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.8413034118235081, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.8534090439315231, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.865514676039538, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.8776203081475529, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.8897259402555678, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9018315723635827, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9139372044715977, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9260428365796125, 1., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9356736969230925, 0.9977150185790297, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9441166668196912, 0.9943332460760815, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9525596367162898, 0.9909514735731334, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9610026066128885, 0.9875697010701853, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9694455765094872, 0.9841879285672371, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9778885464060858, 0.9808061560642891, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9863315163026845, 0.977424383561341, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[0.9947744861992831, 0.9740426110583928, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.9703610330577935, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.9661925369085634, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.9620240407593333, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.9578555446101032, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.9536870484608732, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.949518552311643, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.9453500561624129, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.9411815600131828, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.9370130638639527, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.9328445677147226, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.9286760715654925, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.9245075754162624, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.9203390792670323, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.9161705831178022, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.9120020869685721, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.907833590819342, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.9036650946701119, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.8994965985208818, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.8953281023716517, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.8910558793648536, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.8830494894882385, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.8750430996116233, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.867036709735008, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.8590303198583928, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.8510239299817776, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.8430175401051624, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.8350111502285472, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.8270047603519319, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.8189983704753168, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.8109919805987016, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.8029855907220863, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.7949792008454711, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.7869728109688559, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.7789664210922407, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.7709600312156255, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.7629536413390103, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.754947251462395, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.7469408615857799, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.7389344717091646, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.7309280818325494, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.7229216919559343, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.714915302079319, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.7069089122027038, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.6989025223260885, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.6908961324494733, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.6828897425728582, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.6748833526962429, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.6668769628196277, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.6588705729430125, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.6508641830663973, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.6428577931897821, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.6348514033131669, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.6268450134365516, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.6188386235599365, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.6108322336833212, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.602825843806706, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.5948194539300908, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.5868130640534757, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.5788066741768604, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.5708002843002451, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.5627938944236299, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.5547875045470148, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.5467811146703996, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.5387747247937843, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.5307683349171691, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.5227619450405538, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.5147555551639387, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.5067491652873235, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.49874277541070827`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.49073638553409304`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.4827299956574778, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.4747236057808626, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.4667172159042474, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.4587108260276322, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.45070443615101696`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.4395236895754036, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.4271672553336161, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.41481082109182854`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.40245438685004103`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.39009795260825353`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.37774151836646597`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.36538508412467846`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.35302864988289095`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.3406722156411034, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.3283157813993159, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.3159593471575284, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.3036029129157408, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.2912464786739533, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.2788900444321658, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.2595322190344981, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.23944290500878207`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.21935359098306606`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.19926427695735002`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.17917496293163399`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.15908564890591798`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.13899633488020194`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.1189070208544859, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.09881770682876989, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.07872839280305385, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.058639078777337816`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.03854976475162181, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0.018460450725905797`, 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, {
                  Opacity[0.2], 
                  RGBColor[1., 0., 0.]}, 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[1., 0., 0.], 
                 RGBColor[0.9995900659673137, 0., 0.], 
                 RGBColor[0.996556554125976, 0., 0.], 
                 RGBColor[0.9935230422846382, 0., 0.], 
                 RGBColor[0.9904895304433003, 0., 0.], 
                 RGBColor[0.9874560186019625, 0., 0.], 
                 RGBColor[0.9844225067606247, 0., 0.], 
                 RGBColor[0.9813889949192869, 0., 0.], 
                 RGBColor[0.9783554830779491, 0., 0.], 
                 RGBColor[0.9753219712366112, 0., 0.], 
                 RGBColor[0.9722884593952734, 0., 0.], 
                 RGBColor[0.9692549475539357, 0., 0.], 
                 RGBColor[0.9662214357125979, 0., 0.], 
                 RGBColor[0.9631879238712601, 0., 0.], 
                 RGBColor[0.9601544120299222, 0., 0.], 
                 RGBColor[0.9559695214035038, 0., 0.], 
                 RGBColor[0.9492315734713294, 0., 0.], 
                 RGBColor[0.9424936255391549, 0., 0.], 
                 RGBColor[0.9357556776069805, 0., 0.], 
                 RGBColor[0.9290177296748062, 0., 0.], 
                 RGBColor[0.9222797817426318, 0., 0.], 
                 RGBColor[0.9155418338104574, 0., 0.], 
                 RGBColor[0.908803885878283, 0., 0.], 
                 RGBColor[0.9020659379461086, 0., 0.], 
                 RGBColor[0.8953279900139341, 0., 0.], 
                 RGBColor[0.8885900420817598, 0., 0.], 
                 RGBColor[0.8818520941495854, 0., 0.], 
                 RGBColor[0.875114146217411, 0., 0.], 
                 RGBColor[0.8683761982852366, 0., 0.], 
                 RGBColor[0.8616382503530622, 0., 0.], 
                 RGBColor[0.8549003024208878, 0., 0.], 
                 RGBColor[0.8481623544887134, 0., 0.], 
                 RGBColor[0.841424406556539, 0., 0.], 
                 RGBColor[0.8346864586243646, 0., 0.], 
                 RGBColor[0.8279485106921902, 0., 0.], 
                 RGBColor[0.8212105627600158, 0., 0.], 
                 RGBColor[0.8144726148278414, 0., 0.], 
                 RGBColor[0.807734666895667, 0., 0.], 
                 RGBColor[0.8009967189634926, 0., 0.], 
                 RGBColor[0.7942587710313183, 0., 0.], 
                 RGBColor[0.7875208230991438, 0., 0.], 
                 RGBColor[0.7807828751669694, 0., 0.], 
                 RGBColor[0.774044927234795, 0., 0.], 
                 RGBColor[0.7673069793026206, 0., 0.], 
                 RGBColor[0.7605690313704462, 0., 0.], 
                 RGBColor[0.7538310834382718, 0., 0.], 
                 RGBColor[0.7470931355060975, 0., 0.], 
                 RGBColor[0.740355187573923, 0., 0.], 
                 RGBColor[0.7336172396417486, 0., 0.], 
                 RGBColor[0.7268792917095742, 0., 0.], 
                 RGBColor[0.7201413437773998, 0., 0.], 
                 RGBColor[0.7134033958452255, 0., 0.], 
                 RGBColor[0.706665447913051, 0., 0.], 
                 RGBColor[0.6999274999808767, 0., 0.], 
                 RGBColor[0.6931895520487023, 0., 0.], 
                 RGBColor[0.6864516041165278, 0., 0.], 
                 RGBColor[0.6797136561843534, 0., 0.], 
                 RGBColor[0.6763360967335184, 0., 0.], 
                 RGBColor[0.6736089350531409, 0., 0.], 
                 RGBColor[0.6708817733727633, 0., 0.], 
                 RGBColor[0.6681546116923859, 0., 0.], 
                 RGBColor[0.6654274500120084, 0., 0.], 
                 RGBColor[0.662700288331631, 0., 0.], 
                 RGBColor[0.6599731266512535, 0., 0.], 
                 RGBColor[0.6572459649708761, 0., 0.], 
                 RGBColor[0.6545188032904986, 0., 0.], 
                 RGBColor[0.6517916416101212, 0., 0.], 
                 RGBColor[0.6490644799297436, 0., 0.], 
                 RGBColor[0.6463373182493661, 0., 0.], 
                 RGBColor[0.6436101565689887, 0., 0.], 
                 RGBColor[0.6408829948886112, 0., 0.], 
                 RGBColor[0.6381558332082338, 0., 0.], 
                 RGBColor[0.6354286715278563, 0., 0.], 
                 RGBColor[0.6327015098474789, 0., 0.], 
                 RGBColor[0.6299743481671014, 0., 0.], 
                 RGBColor[0.627247186486724, 0., 0.], 
                 RGBColor[0.6245200248063465, 0., 0.], 
                 RGBColor[0.6217928631259689, 0., 0.], 
                 RGBColor[0.6190657014455915, 0., 0.], 
                 RGBColor[0.616338539765214, 0., 0.], 
                 RGBColor[0.6136113780848366, 0., 0.], 
                 RGBColor[0.6108842164044591, 0., 0.], 
                 RGBColor[0.6081570547240817, 0., 0.], 
                 RGBColor[0.6054298930437042, 0., 0.], 
                 RGBColor[0.6027027313633267, 0., 0.], 
                 RGBColor[0.5999755696829492, 0., 0.], 
                 RGBColor[0.5972484080025717, 0., 0.], 
                 RGBColor[0.5945212463221943, 0., 0.], 
                 RGBColor[0.5917940846418168, 0., 0.], 
                 RGBColor[0.5890669229614394, 0., 0.], 
                 RGBColor[0.5863397612810619, 0., 0.], 
                 RGBColor[0.5836125996006845, 0., 0.], 
                 RGBColor[0.580885437920307, 0., 0.], 
                 RGBColor[0.5781582762399295, 0., 0.], 
                 RGBColor[0.5754311145595521, 0., 0.], 
                 RGBColor[0.5727039528791745, 0., 0.], 
                 RGBColor[0.5699767911987971, 0., 0.], 
                 RGBColor[0.5672496295184196, 0., 0.], 
                 RGBColor[0.5645224678380422, 0., 0.], 
                 RGBColor[0.5617953061576647, 0., 0.], 
                 RGBColor[0.5590681444772873, 0., 0.], 
                 RGBColor[0.5563409827969098, 0., 0.], 
                 RGBColor[0.5536138211165323, 0., 0.], 
                 RGBColor[0.5508866594361548, 0., 0.], 
                 RGBColor[0.5481594977557773, 0., 0.], 
                 RGBColor[0.5454323360753999, 0., 0.], 
                 RGBColor[0.5427051743950224, 0., 0.], 
                 RGBColor[0.539978012714645, 0., 0.], 
                 RGBColor[0.5372508510342675, 0., 0.], 
                 RGBColor[0.53452368935389, 0., 0.], 
                 RGBColor[0.5317965276735126, 0., 0.], 
                 RGBColor[0.5290693659931351, 0., 0.], 
                 RGBColor[0.5263422043127577, 0., 0.], 
                 RGBColor[0.5236150426323802, 0., 0.], 
                 RGBColor[0.5208878809520027, 0., 0.], 
                 RGBColor[0.5181607192716252, 0., 0.], 
                 RGBColor[0.5154335575912478, 0., 0.], 
                 RGBColor[0.5127063959108703, 0., 0.], 
                 RGBColor[0.5099792342304929, 0., 0.], 
                 RGBColor[0.5072520725501154, 0., 0.], 
                 RGBColor[0.5045249108697379, 0., 0.], 
                 RGBColor[0.5017977491893604, 0., 0.], 
                 RGBColor[0.499070587508983, 0., 0.], 
                 RGBColor[0.49634342582860547`, 0., 0.], 
                 RGBColor[0.493616264148228, 0., 0.], 
                 RGBColor[0.49088910246785056`, 0., 0.], 
                 RGBColor[0.4881619407874731, 0., 0.], 
                 RGBColor[0.48543477910709565`, 0., 0.], 
                 RGBColor[0.4827076174267182, 0., 0.], 
                 RGBColor[0.47998045574634074`, 0., 0.], 
                 RGBColor[0.47725329406596323`, 0., 0.], 
                 RGBColor[0.4745261323855858, 0., 0.], 
                 RGBColor[0.47179897070520826`, 0., 0.], 
                 RGBColor[0.4690718090248308, 0., 0.], 
                 RGBColor[0.46634464734445336`, 0., 0.], 
                 RGBColor[0.4636174856640759, 0., 0.], 
                 RGBColor[0.46089032398369845`, 0., 0.], 
                 RGBColor[0.458163162303321, 0., 0.], 
                 RGBColor[0.45543600062294354`, 0., 0.], 
                 RGBColor[0.452708838942566, 0., 0.], 
                 RGBColor[0.4499816772621886, 0., 0.], 
                 RGBColor[0.44725451558181106`, 0., 0.], 
                 RGBColor[0.4445273539014336, 0., 0.], 
                 RGBColor[0.44180019222105615`, 0., 0.], 
                 RGBColor[0.4390730305406787, 0., 0.], 
                 RGBColor[0.43634586886030124`, 0., 0.], 
                 RGBColor[0.4336187071799238, 0., 0.], 
                 RGBColor[0.43089154549954634`, 0., 0.], 
                 RGBColor[0.4281643838191688, 0., 0.], 
                 RGBColor[0.42543722213879137`, 0., 0.], 
                 RGBColor[0.4227100604584139, 0., 0.], 
                 RGBColor[0.4199828987780364, 0., 0.], 
                 RGBColor[0.41725573709765895`, 0., 0.], 
                 RGBColor[0.4145285754172815, 0., 0.], 
                 RGBColor[0.41180141373690404`, 0., 0.], 
                 RGBColor[0.4090742520565266, 0., 0.], 
                 RGBColor[0.4063470903761491, 0., 0.], 
                 RGBColor[0.4036199286957716, 0., 0.], 
                 RGBColor[0.40089276701539417`, 0., 0.], 
                 RGBColor[0.3981656053350167, 0., 0.], 
                 RGBColor[0.3954384436546392, 0., 0.], 
                 RGBColor[0.39271128197426175`, 0., 0.], 
                 RGBColor[0.3899841202938843, 0., 0.], 
                 RGBColor[0.38725695861350684`, 0., 0.], 
                 RGBColor[0.3845297969331294, 0., 0.], 
                 RGBColor[0.3818026352527519, 0., 0.], 
                 RGBColor[0.3790754735723744, 0., 0.], 
                 RGBColor[0.37634831189199697`, 0., 0.], 
                 RGBColor[0.3736211502116195, 0., 0.], 
                 RGBColor[0.370893988531242, 0., 0.], 
                 RGBColor[0.36816682685086455`, 0., 0.], 
                 RGBColor[0.3654396651704871, 0., 0.], 
                 RGBColor[0.36271250349010964`, 0., 0.], 
                 RGBColor[0.3599853418097322, 0., 0.], 
                 RGBColor[0.3572581801293547, 0., 0.], 
                 RGBColor[0.3545310184489772, 0., 0.], 
                 RGBColor[0.35180385676859977`, 0., 0.], 
                 RGBColor[0.3490766950882223, 0., 0.], 
                 RGBColor[0.3463495334078448, 0., 0.], 
                 RGBColor[0.34362237172746735`, 0., 0.], 
                 RGBColor[0.3408952100470899, 0., 0.], 
                 RGBColor[0.33816804836671244`, 0., 0.], 
                 RGBColor[0.335440886686335, 0., 0.], 
                 RGBColor[0.3327137250059575, 0., 0.], 
                 RGBColor[0.32998656332558, 0., 0.], 
                 RGBColor[0.32725940164520256`, 0., 0.], 
                 RGBColor[0.3245322399648251, 0., 0.], 
                 RGBColor[0.3218050782844476, 0., 0.], 
                 RGBColor[0.31907791660407014`, 0., 0.], 
                 RGBColor[0.3163507549236927, 0., 0.], 
                 RGBColor[0.31362359324331524`, 0., 0.], 
                 RGBColor[0.3108964315629378, 0., 0.], 
                 RGBColor[0.30816926988256027`, 0., 0.], 
                 RGBColor[0.3054421082021828, 0., 0.], 
                 RGBColor[0.30271494652180536`, 0., 0.], 
                 RGBColor[0.2999877848414279, 0., 0.], 
                 RGBColor[0.2972606231610504, 0., 0.], 
                 RGBColor[0.29453346148067294`, 0., 0.], 
                 RGBColor[0.2918062998002955, 0., 0.], 
                 RGBColor[0.28907913811991803`, 0., 0.], 
                 RGBColor[0.2863519764395406, 0., 0.], 
                 RGBColor[0.28362481475916307`, 0., 0.], 
                 RGBColor[0.2808976530787856, 0., 0.], 
                 RGBColor[0.27817049139840816`, 0., 0.], 
                 RGBColor[0.2754433297180307, 0., 0.], 
                 RGBColor[0.27271616803765325`, 0., 0.], 
                 RGBColor[0.26998900635727574`, 0., 0.], 
                 RGBColor[0.2672618446768983, 0., 0.], 
                 RGBColor[0.26453468299652083`, 0., 0.], 
                 RGBColor[0.2618075213161434, 0., 0.], 
                 RGBColor[0.25908035963576587`, 0., 0.], 
                 RGBColor[0.2563531979553884, 0., 0.], 
                 RGBColor[0.25362603627501096`, 0., 0.], 
                 RGBColor[0.2508988745946335, 0., 0.], 
                 RGBColor[0.24817171291425605`, 0., 0.], 
                 RGBColor[0.24544455123387854`, 0., 0.], 
                 RGBColor[0.24271738955350108`, 0., 0.], 
                 RGBColor[0.23999022787312363`, 0., 0.], 
                 RGBColor[0.23726306619274617`, 0., 0.], 
                 RGBColor[0.23453590451236866`, 0., 0.], 
                 RGBColor[0.2318087428319912, 0., 0.], 
                 RGBColor[0.22908158115161376`, 0., 0.], 
                 RGBColor[0.2263544194712363, 0., 0.], 
                 RGBColor[0.22362725779085885`, 0., 0.], 
                 RGBColor[0.22090009611048134`, 0., 0.], 
                 RGBColor[0.21817293443010388`, 0., 0.], 
                 RGBColor[0.21544577274972643`, 0., 0.], 
                 RGBColor[0.21271861106934897`, 0., 0.], 
                 RGBColor[0.20999144938897146`, 0., 0.], 
                 RGBColor[0.207264287708594, 0., 0.], 
                 RGBColor[0.20453712602821655`, 0., 0.], 
                 RGBColor[0.2018099643478391, 0., 0.], 
                 RGBColor[0.19908280266746164`, 0., 0.], 
                 RGBColor[0.19635564098708413`, 0., 0.], 
                 RGBColor[0.19362847930670668`, 0., 0.], 
                 RGBColor[0.19090131762632923`, 0., 0.], 
                 RGBColor[0.18817415594595177`, 0., 0.], 
                 RGBColor[0.18544699426557426`, 0., 0.], 
                 RGBColor[0.1827198325851968, 0., 0.], 
                 RGBColor[0.17999267090481935`, 0., 0.], 
                 RGBColor[0.17726550922444184`, 0., 0.], 
                 RGBColor[0.1745383475440644, 0., 0.], 
                 RGBColor[0.17181118586368693`, 0., 0.], 
                 RGBColor[0.16908402418330948`, 0., 0.], 
                 RGBColor[0.16635686250293202`, 0., 0.], 
                 RGBColor[0.16362970082255457`, 0., 0.], 
                 RGBColor[0.16090253914217711`, 0., 0.], 
                 RGBColor[0.15817537746179966`, 0., 0.], 
                 RGBColor[0.1554482157814222, 0., 0.], 
                 RGBColor[0.15272105410104464`, 0., 0.], 
                 RGBColor[0.14999389242066719`, 0., 0.], 
                 RGBColor[0.14726673074028973`, 0., 0.], 
                 RGBColor[0.14453956905991228`, 0., 0.], 
                 RGBColor[0.14181240737953482`, 0., 0.], 
                 RGBColor[0.13908524569915737`, 0., 0.], 
                 RGBColor[0.1363580840187799, 0., 0.], 
                 RGBColor[0.13363092233840246`, 0., 0.], 
                 RGBColor[0.130903760658025, 0., 0.], 
                 RGBColor[0.12817659897764744`, 0., 0.], 
                 RGBColor[0.12544943729726998`, 0., 0.], 
                 RGBColor[0.12272227561689253`, 0., 0.], 
                 RGBColor[0.11999511393651507`, 0., 0.], 
                 RGBColor[0.11726795225613762`, 0., 0.], 
                 RGBColor[0.11454079057576017`, 0., 0.], 
                 RGBColor[0.11181362889538271`, 0., 0.], 
                 RGBColor[0.10908646721500526`, 0., 0.], 
                 RGBColor[0.1063593055346278, 0., 0.], 
                 RGBColor[0.10363214385425024`, 0., 0.], 
                 RGBColor[0.10090498217387278`, 0., 0.], 
                 RGBColor[0.09817782049349533, 0., 0.], 
                 RGBColor[0.09545065881311787, 0., 0.], 
                 RGBColor[0.09272349713274042, 0., 0.], 
                 RGBColor[0.08999633545236296, 0., 0.], 
                 RGBColor[0.08726917377198551, 0., 0.], 
                 RGBColor[0.08454201209160805, 0., 0.], 
                 RGBColor[0.0818148504112306, 0., 0.], 
                 RGBColor[0.07908768873085303, 0., 0.], 
                 RGBColor[0.07636052705047558, 0., 0.], 
                 RGBColor[0.07363336537009812, 0., 0.], 
                 RGBColor[0.07090620368972067, 0., 0.], 
                 RGBColor[0.06817904200934322, 0., 0.], 
                 RGBColor[0.06545188032896576, 0., 0.], 
                 RGBColor[0.0627247186485883, 0., 0.], 
                 RGBColor[0.05999755696821085, 0., 0.], 
                 RGBColor[0.0572703952878334, 0., 0.], 
                 RGBColor[0.05454323360745583, 0., 0.], 
                 RGBColor[0.05181607192707838, 0., 0.], 
                 RGBColor[0.04908891024670092, 0., 0.], 
                 RGBColor[0.04636174856632347, 0., 0.], 
                 RGBColor[0.043634586885946014`, 0., 0.], 
                 RGBColor[0.04090742520556856, 0., 0.], 
                 RGBColor[0.038180263525191105`, 0., 0.], 
                 RGBColor[0.03545310184481365, 0., 0.], 
                 RGBColor[0.032725940164436196`, 0., 0.], 
                 RGBColor[0.02999877848405863, 0., 0.], 
                 RGBColor[0.027271616803681176`, 0., 0.], 
                 RGBColor[0.02454445512330372, 0., 0.], 
                 RGBColor[0.021817293442926267`, 0., 0.], 
                 RGBColor[0.019090131762548812`, 0., 0.], 
                 RGBColor[0.016362970082171358`, 0., 0.], 
                 RGBColor[0.013635808401793903`, 0., 0.], 
                 RGBColor[0.010908646721416448`, 0., 0.], 
                 RGBColor[0.008181485041038994, 0., 0.], 
                 RGBColor[0.005454323360661428, 0., 0.], 
                 RGBColor[0.0027271616802839738`, 0., 0.], 
                 RGBColor[0., 0., 0.]}], {}}, {
             DisplayFunction -> Identity, 
              PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> 
              False, ImagePadding -> All, DisplayFunction -> Identity, 
              AspectRatio -> 0.1, Axes -> {False, False}, 
              AxesLabel -> {None, None}, AxesOrigin -> {400, 0}, AxesStyle -> 
              Directive[
                AbsoluteThickness[0.2]], BaseStyle -> Automatic, 
              DisplayFunction :> Identity, Epilog -> {{{
                  InsetBox[
                   FormBox[
                    StyleBox["\"\[FilledUpTriangle]\"", 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm], {
                   620, 0}, {0, 0}]}, {
                  InsetBox[
                   FormBox[
                    StyleBox["\"\[FilledUpTriangle]\"", 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm], {
                   750, 0}, {0, 0}]}}}, Frame -> True, 
              FrameLabel -> {{None, None}, {
                 FormBox[
                  StyleBox[
                   TemplateBox[{
                    StyleBox["\"wavelength\"", 
                    GrayLevel[0], {FontSize -> 10, FontFamily -> "Roboto"}, 
                    StripOnInput -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    StyleBox[
                    "\"nanometer\"", {
                    FontFamily -> "Roboto", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], TraditionalForm], 
                 None}}, FrameStyle -> GrayLevel[0.9], 
              FrameTicks -> {{None, None}, {{{620, 
                   FormBox["620", TraditionalForm]}, {750, 
                   FormBox["750", TraditionalForm]}}, {{685, 
                   FormBox["\"red\"", TraditionalForm], 0}}}}, 
              FrameTicksStyle -> GrayLevel[0], GridLinesStyle -> Automatic, 
              Method -> {
               "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "ScalingFunctions" -> None, "TransparentPolygonMesh" -> True, 
                "AxesInFront" -> True}, PlotRange -> {{380, 750}, {0, 1}}, 
              PlotRangePadding -> 0, Ticks -> {None, None}}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`aux6$$ = {True, False, {False}, True},
    Typeset`aux7$$ = {True, False, {False}, True}, Typeset`aux8$$ = {
   True, False, {False, False, False, False, False, False}, True}, 
   Typeset`aux9$$ = {True, False, {False, False, False}, True}, 
   Typeset`aux10$$ = {True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "2"}, {
      XMLElement[
      "assumption", {
       "type" -> "Clash", "word" -> "red", "template" -> 
        "Assuming \"red\" is a color${separator}Use as ${desc} or ${desc} or \
${desc} instead", "count" -> "4", "pulldown" -> "false", "default" -> 
        "{\"C\", \"red\"} -> {\"Color\", \"dflt\"}"}, {
        XMLElement[
        "value", {
         "name" -> "Color", "desc" -> "a color", "input" -> 
          "{\"C\", \"red\"} -> {\"Color\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "ColorSet", "desc" -> " referring to a set of colors", 
          "input" -> "{\"C\", \"red\"} -> {\"ColorSet\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "LightColor", "desc" -> " referring to a color of light", 
          "input" -> "{\"C\", \"red\"} -> {\"LightColor\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Word", "desc" -> "a word", "input" -> 
          "{\"C\", \"red\"} -> {\"Word\"}"}, {}]}], 
      XMLElement[
      "assumption", {
       "type" -> "SubCategory", "word" -> "red", "template" -> 
        "Assuming red${separator}Use ${desc} instead", "count" -> "2", 
        "pulldown" -> "false", "default" -> 
        "{\"DPClash\", \"ColorE\", \"red\"} -> {{\"WolframLanguage\", \
\"Red\"}, \"dflt\"}"}, {
        XMLElement[
        "value", {
         "name" -> "{WolframLanguage, Red}", "desc" -> "red", "input" -> 
          "{\"DPClash\", \"ColorE\", \"red\"} -> {{\"WolframLanguage\", \"Red\
\"}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "{HTML, Red}", "desc" -> "HTML red", "input" -> 
          "{\"DPClash\", \"ColorE\", \"red\"} -> {{\"HTML\", \"Red\"}}"}, \
{}]}]}]}, Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True], 
   Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "10", "datatypes" -> "", "timedout" -> "", "timedoutpods" -> 
    "", "timing" -> "2.023", "parsetiming" -> "0.138", "parsetimedout" -> 
    "false", "recalculate" -> "", "id" -> 
    "MSP27311h4ag7fc9d7e50ie000054083eih7299a038", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "9", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa27321h4ag7fc9d7e50ie000054ie2290i65gie6f1494138648170584556", "version" -> 
    "2.6", "inputstring" -> "red"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 3., 
    "Date" -> {2022, 11, 7, 1, 43, 59.2162986`9.525016085935505}, "Line" -> 
    23, "SessionID" -> 27634165378566798726}, Typeset`showpods$$ = {1, 2, 3, 
   4, 5, 6, 7, 8, 9, 10}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, 
   Typeset`open$$ = False, Typeset`newq$$ = "red"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{1070.5, {775.765869140625, 779.734130859375}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.8767634393256645`*^9},ExpressionUUID->"dbf7963a-be2c-463a-9a29-\
9090cbfbb599"]
}, Closed]]
}, Closed]]
}, Open  ]]
},
WindowToolbars->"EditBar",
WindowSize->{1141.2, 574.8},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules->Association["TryRealOnly" -> False],
Magnification:>0.75 Inherited,
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (May 11, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"86a7c93e-09dd-495e-8d43-94c686565ae7"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 1142, 21, 100, "Chapter",ExpressionUUID->"5d342c17-883f-4e07-a683-b26a12d08241",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1703, 43, 498, 8, 50, "Section",ExpressionUUID->"ff0df9ba-4677-4cd5-a86e-7166b9da77cb",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[CellGroupData[{
Cell[2226, 55, 518, 9, 34, "Subsubsection",ExpressionUUID->"77ae37d3-a95c-462b-875a-f38ca4c9840c",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[2747, 66, 1580, 26, 32, "Input",ExpressionUUID->"ef7a1368-3969-4902-9c6c-ee96804cd05d",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[4330, 94, 22494, 399, 50, "Output",ExpressionUUID->"0872398e-376a-41f6-9efa-9ee596218b78",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Closed]],
Cell[CellGroupData[{
Cell[26861, 498, 451, 7, 29, "Subsubsection",ExpressionUUID->"a0ea78f4-46f1-4642-84d2-5a2f8deb981a",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[27315, 507, 400, 6, 32, "Input",ExpressionUUID->"99f9617f-cdbb-4659-b295-fa518650fb92",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[27718, 515, 4148, 89, 50, "Output",ExpressionUUID->"a49fea42-5907-478c-93f9-411d39880419",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Closed]],
Cell[CellGroupData[{
Cell[31903, 609, 435, 7, 29, "Subsubsection",ExpressionUUID->"87f0e3c3-c92a-4cd3-aeb9-44d392c74b62",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[32341, 618, 351, 5, 21, "Input",ExpressionUUID->"067f454a-4ad9-418a-bcc6-8047124fc4b6",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[32695, 625, 275, 4, 24, "Output",ExpressionUUID->"04cd501a-535a-43fb-ab5b-5bc40ae1ef78",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Closed]],
Cell[CellGroupData[{
Cell[33007, 634, 500, 8, 29, "Subsubsection",ExpressionUUID->"c7b96faf-cefc-4b54-89b5-6c878bcd5d9a",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[33510, 644, 399, 9, 21, "Input",ExpressionUUID->"88ac0490-099c-48ab-bd58-75434c6a1280",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[33912, 655, 450, 9, 24, "Output",ExpressionUUID->"013846a8-9c74-42e5-a900-489c65e18e79",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Closed]],
Cell[CellGroupData[{
Cell[34399, 669, 623, 9, 29, "Subsubsection",ExpressionUUID->"f4522f8a-d082-434b-966e-e2ceb80c0122",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[35025, 680, 504, 8, 32, "Input",ExpressionUUID->"f3a809e2-24b6-4eab-a120-4bcc01c0bf6f",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[35532, 690, 170519, 3062, 50, "Output",ExpressionUUID->"8029d662-8a4e-4304-9329-ec2ad75c05ff",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Closed]],
Cell[CellGroupData[{
Cell[206088, 3757, 633, 9, 29, "Subsubsection",ExpressionUUID->"a09ce22f-a1ba-4a0e-8a3f-2593f758da02",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[206724, 3768, 476, 8, 32, "Input",ExpressionUUID->"97051ca9-cbe5-4d5c-bf50-8e26797ad342",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[207203, 3778, 456371, 8166, 55, "Output",ExpressionUUID->"034e2a82-9f6e-424c-b468-6e3a00b23a8c",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Closed]],
Cell[CellGroupData[{
Cell[663611, 11949, 726, 12, 29, "Subsubsection",ExpressionUUID->"63fc6abb-991c-4cfc-bacb-c8f54cf3b63c",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[664340, 11963, 417, 6, 32, "Input",ExpressionUUID->"6da47c4f-de79-400b-aa30-3c37ceff54cc",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[664760, 11971, 407242, 5831, 47, "Message",ExpressionUUID->"122584d5-9775-445c-b328-c36746e136eb",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1072005, 17804, 510, 9, 24, "Output",ExpressionUUID->"0908bcb1-a718-4e6f-bf99-e9227f3af951",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Closed]],
Cell[CellGroupData[{
Cell[1072552, 17818, 633, 11, 29, "Subsubsection",ExpressionUUID->"5df0ad00-75c4-4726-ae82-c2866f20360e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1073188, 17831, 563, 10, 92, "Input",ExpressionUUID->"6b85d621-5f72-4195-92c5-2bb7bc6bdc74",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1073754, 17843, 34486, 640, 90, "Output",ExpressionUUID->"e65b6066-e3bf-4bfd-b663-e6bdf4c0abc6",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Closed]],
Cell[CellGroupData[{
Cell[1108277, 18488, 445, 7, 29, "Subsubsection",ExpressionUUID->"2c345c0c-eb2a-48be-b704-e3c3f2fec394",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[1108725, 18497, 437, 8, 32, "Input",ExpressionUUID->"1405752b-c60a-46e8-8e2a-761346ed9ba5",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[1109165, 18507, 46975, 868, 90, "Output",ExpressionUUID->"5fe8292c-5003-4dcd-b47e-25d19e81788f",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Closed]],
Cell[CellGroupData[{
Cell[1156177, 19380, 327, 5, 29, "Subsubsection",ExpressionUUID->"edb8d026-3c05-4260-b73c-1dc9ec8906c8",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1156507, 19387, 306, 5, 32, "Input",ExpressionUUID->"34b2376b-d14b-4f45-a6e2-4d54f4f730aa",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1156816, 19394, 4129, 88, 50, "Output",ExpressionUUID->"aa811f17-349a-468c-b46c-227becd29515",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Closed]],
Cell[CellGroupData[{
Cell[1160982, 19487, 208, 4, 40, "Section",ExpressionUUID->"30397d36-9196-40d9-97d3-cfd7f800516e"],
Cell[CellGroupData[{
Cell[1161215, 19495, 378, 5, 34, "Subsubsection",ExpressionUUID->"9ffd4d28-245f-4e64-9a2b-d4fc915472ce"],
Cell[CellGroupData[{
Cell[1161618, 19504, 14609, 356, 53, "WolframAlphaShortInput",ExpressionUUID->"2cc9ea44-4077-498c-b00e-57716f2f5435"],
Cell[1176230, 19862, 14815, 262, 204, "Output",ExpressionUUID->"6ee03506-1d7b-43d3-8e37-781d6107196d"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1191094, 20130, 340, 5, 29, "Subsubsection",ExpressionUUID->"98b62f1b-66f2-4c3d-9fee-7860feb5f3e1"],
Cell[CellGroupData[{
Cell[1191459, 20139, 529, 13, 32, "Input",ExpressionUUID->"1e0aa295-a21a-43b3-972e-6fe361fb0198"],
Cell[1191991, 20154, 3688, 80, 203, "Output",ExpressionUUID->"e5ec9bfc-1ba8-4c6f-9f2f-514b697795e7"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1195728, 20240, 377, 6, 30, "Subsubsection",ExpressionUUID->"f96fc6f1-36f8-499e-8498-35e61ae2c337"],
Cell[CellGroupData[{
Cell[1196130, 20250, 226, 4, 23, "Subsubsubsubsection",ExpressionUUID->"a601469c-7077-4d84-bbd9-d9e9de9346b1"],
Cell[CellGroupData[{
Cell[1196381, 20258, 233, 3, 31, "WolframAlphaLong",ExpressionUUID->"126ef1ab-2c52-4653-9877-0ce16964a42a"],
Cell[1196617, 20263, 112093, 2163, 609, "Print",ExpressionUUID->"1a4f5158-ba3b-4fa7-bdb9-da160b600340"]
}, Closed]],
Cell[CellGroupData[{
Cell[1308747, 22431, 186, 2, 27, "WolframAlphaLong",ExpressionUUID->"6bffd9eb-54de-4562-a444-20a09fb96078"],
Cell[1308936, 22435, 134639, 2395, 1445, "Print",ExpressionUUID->"4c3081ef-afce-4845-af06-264710ae6a56"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1443624, 24836, 202, 3, 19, "Subsubsubsubsection",ExpressionUUID->"e679063e-4e86-4caf-b61e-1ba92f2dfd4d"],
Cell[CellGroupData[{
Cell[1443851, 24843, 224, 3, 31, "WolframAlphaLong",ExpressionUUID->"c72786be-da8d-43ed-a705-c336264b3341"],
Cell[1444078, 24848, 42483, 873, 769, "Print",ExpressionUUID->"7fac5bac-c583-4565-9fa6-9e7a2634dc0e"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1486610, 25727, 196, 3, 19, "Subsubsubsubsection",ExpressionUUID->"407a6cee-5724-48a4-b5fa-66d8009a3913"],
Cell[CellGroupData[{
Cell[1486831, 25734, 221, 3, 31, "WolframAlphaLong",ExpressionUUID->"2f1e689e-289b-4bbe-9581-ba5b634d1389"],
Cell[1487055, 25739, 745793, 14485, 3153, "Print",ExpressionUUID->"9ed7eb7e-7160-43f1-8c78-48cd7e77d3f0"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[2232909, 40231, 355, 5, 29, "Subsubsection",ExpressionUUID->"0f6a00c4-e8d0-432c-87e1-021d50caf1c8"],
Cell[CellGroupData[{
Cell[2233289, 40240, 205, 3, 31, "WolframAlphaLong",ExpressionUUID->"189fd3d5-f643-4ddd-855d-1b8802266aa4"],
Cell[2233497, 40245, 324773, 6443, 1563, "Print",ExpressionUUID->"dbf7963a-be2c-463a-9a29-9090cbfbb599"]
}, Closed]]
}, Closed]]
}, Open  ]]
}
]
*)

